# 1 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
# 1 "/doner/libxml2/libxml2-4ea74a44/libxml2//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
# 34 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
# 1 "/doner/libxml2/libxml2-4ea74a44/libxml2/libxml.h" 1
# 37 "/doner/libxml2/libxml2-4ea74a44/libxml2/libxml.h"
# 1 "/doner/libxml2/libxml2-4ea74a44/libxml2/config.h" 1
# 38 "/doner/libxml2/libxml2-4ea74a44/libxml2/libxml.h" 2
# 1 "./include/libxml/xmlversion.h" 1
# 13 "./include/libxml/xmlversion.h"
# 1 "./include/libxml/xmlexports.h" 1
# 14 "./include/libxml/xmlversion.h" 2
# 24 "./include/libxml/xmlversion.h"
 void xmlCheckVersion(int version);
# 39 "/doner/libxml2/libxml2-4ea74a44/libxml2/libxml.h" 2
# 49 "/doner/libxml2/libxml2-4ea74a44/libxml2/libxml.h"
# 1 "/usr/include/stdio.h" 1 3 4
# 27 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 33 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 461 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 1 3 4
# 452 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 453 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/long-double.h" 1 3 4
# 454 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
# 462 "/usr/include/features.h" 2 3 4
# 485 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 1 3 4
# 10 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs-64.h" 1 3 4
# 11 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 2 3 4
# 486 "/usr/include/features.h" 2 3 4
# 34 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 2 3 4
# 28 "/usr/include/stdio.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 1 3 4
# 209 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 3 4

# 209 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 3 4
typedef long unsigned int size_t;
# 34 "/usr/include/stdio.h" 2 3 4


# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 37 "/usr/include/stdio.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/types.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 1 3 4
# 29 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;

typedef signed long int __int64_t;
typedef unsigned long int __uint64_t;






typedef __int8_t __int_least8_t;
typedef __uint8_t __uint_least8_t;
typedef __int16_t __int_least16_t;
typedef __uint16_t __uint_least16_t;
typedef __int32_t __int_least32_t;
typedef __uint32_t __uint_least32_t;
typedef __int64_t __int_least64_t;
typedef __uint64_t __uint_least64_t;



typedef long int __quad_t;
typedef unsigned long int __u_quad_t;







typedef long int __intmax_t;
typedef unsigned long int __uintmax_t;
# 141 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/typesizes.h" 1 3 4
# 142 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/time64.h" 1 3 4
# 143 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned long int __dev_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long int __ino_t;
typedef unsigned long int __ino64_t;
typedef unsigned int __mode_t;
typedef unsigned long int __nlink_t;
typedef long int __off_t;
typedef long int __off64_t;
typedef int __pid_t;
typedef struct { int __val[2]; } __fsid_t;
typedef long int __clock_t;
typedef unsigned long int __rlim_t;
typedef unsigned long int __rlim64_t;
typedef unsigned int __id_t;
typedef long int __time_t;
typedef unsigned int __useconds_t;
typedef long int __suseconds_t;

typedef int __daddr_t;
typedef int __key_t;


typedef int __clockid_t;


typedef void * __timer_t;


typedef long int __blksize_t;




typedef long int __blkcnt_t;
typedef long int __blkcnt64_t;


typedef unsigned long int __fsblkcnt_t;
typedef unsigned long int __fsblkcnt64_t;


typedef unsigned long int __fsfilcnt_t;
typedef unsigned long int __fsfilcnt64_t;


typedef long int __fsword_t;

typedef long int __ssize_t;


typedef long int __syscall_slong_t;

typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef char *__caddr_t;


typedef long int __intptr_t;


typedef unsigned int __socklen_t;




typedef int __sig_atomic_t;
# 39 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h" 1 3 4




# 1 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 1 3 4
# 13 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3 4
typedef struct
{
  int __count;
  union
  {
    unsigned int __wch;
    char __wchb[4];
  } __value;
} __mbstate_t;
# 6 "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h" 2 3 4




typedef struct _G_fpos_t
{
  __off_t __pos;
  __mbstate_t __state;
} __fpos_t;
# 40 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h" 1 3 4
# 10 "/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h" 3 4
typedef struct _G_fpos64_t
{
  __off64_t __pos;
  __mbstate_t __state;
} __fpos64_t;
# 41 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h" 1 3 4



struct _IO_FILE;
typedef struct _IO_FILE __FILE;
# 42 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h" 1 3 4



struct _IO_FILE;


typedef struct _IO_FILE FILE;
# 43 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 1 3 4
# 35 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3 4
struct _IO_FILE;
struct _IO_marker;
struct _IO_codecvt;
struct _IO_wide_data;




typedef void _IO_lock_t;





struct _IO_FILE
{
  int _flags;


  char *_IO_read_ptr;
  char *_IO_read_end;
  char *_IO_read_base;
  char *_IO_write_base;
  char *_IO_write_ptr;
  char *_IO_write_end;
  char *_IO_buf_base;
  char *_IO_buf_end;


  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;
  int _flags2;
  __off_t _old_offset;


  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];

  _IO_lock_t *_lock;







  __off64_t _offset;

  struct _IO_codecvt *_codecvt;
  struct _IO_wide_data *_wide_data;
  struct _IO_FILE *_freeres_list;
  void *_freeres_buf;
  size_t __pad5;
  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];
};
# 44 "/usr/include/stdio.h" 2 3 4
# 52 "/usr/include/stdio.h" 3 4
typedef __gnuc_va_list va_list;
# 65 "/usr/include/stdio.h" 3 4
typedef __off64_t off_t;
# 77 "/usr/include/stdio.h" 3 4
typedef __ssize_t ssize_t;
# 86 "/usr/include/stdio.h" 3 4
typedef __fpos64_t fpos_t;
# 133 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/stdio_lim.h" 1 3 4
# 134 "/usr/include/stdio.h" 2 3 4



extern FILE *stdin;
extern FILE *stdout;
extern FILE *stderr;






extern int remove (const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__ , __leaf__));



extern int renameat (int __oldfd, const char *__old, int __newfd,
       const char *__new) __attribute__ ((__nothrow__ , __leaf__));
# 176 "/usr/include/stdio.h" 3 4
extern FILE *tmpfile (void) __asm__ ("" "tmpfile64") __attribute__ ((__warn_unused_result__));
# 187 "/usr/include/stdio.h" 3 4
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern char *tmpnam_r (char *__s) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
# 204 "/usr/include/stdio.h" 3 4
extern char *tempnam (const char *__dir, const char *__pfx)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__warn_unused_result__));







extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);
# 227 "/usr/include/stdio.h" 3 4
extern int fflush_unlocked (FILE *__stream);
# 257 "/usr/include/stdio.h" 3 4
extern FILE *fopen (const char *__restrict __filename, const char *__restrict __modes) __asm__ ("" "fopen64")

  __attribute__ ((__warn_unused_result__));
extern FILE *freopen (const char *__restrict __filename, const char *__restrict __modes, FILE *__restrict __stream) __asm__ ("" "freopen64")


  __attribute__ ((__warn_unused_result__));
# 279 "/usr/include/stdio.h" 3 4
extern FILE *fdopen (int __fd, const char *__modes) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
# 292 "/usr/include/stdio.h" 3 4
extern FILE *fmemopen (void *__s, size_t __len, const char *__modes)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));





extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));




extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
         size_t __size) __attribute__ ((__nothrow__ , __leaf__));


extern void setlinebuf (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));







extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));



extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));
# 379 "/usr/include/stdio.h" 3 4
extern int vdprintf (int __fd, const char *__restrict __fmt,
       __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));







extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) __attribute__ ((__warn_unused_result__));




extern int scanf (const char *__restrict __format, ...) __attribute__ ((__warn_unused_result__));

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));






extern int fscanf (FILE *__restrict __stream, const char *__restrict __format, ...) __asm__ ("" "__isoc99_fscanf")

                          __attribute__ ((__warn_unused_result__));
extern int scanf (const char *__restrict __format, ...) __asm__ ("" "__isoc99_scanf")
                         __attribute__ ((__warn_unused_result__));
extern int sscanf (const char *__restrict __s, const char *__restrict __format, ...) __asm__ ("" "__isoc99_sscanf") __attribute__ ((__nothrow__ , __leaf__))

                      ;
# 432 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) __attribute__ ((__warn_unused_result__));





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) __attribute__ ((__warn_unused_result__));


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));




extern int vfscanf (FILE *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vfscanf")



     __attribute__ ((__format__ (__scanf__, 2, 0))) __attribute__ ((__warn_unused_result__));
extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vscanf")

     __attribute__ ((__format__ (__scanf__, 1, 0))) __attribute__ ((__warn_unused_result__));
extern int vsscanf (const char *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vsscanf") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__ ((__format__ (__scanf__, 2, 0)));
# 485 "/usr/include/stdio.h" 3 4
extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);






extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);
# 510 "/usr/include/stdio.h" 3 4
extern int fgetc_unlocked (FILE *__stream);
# 521 "/usr/include/stdio.h" 3 4
extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);
# 537 "/usr/include/stdio.h" 3 4
extern int fputc_unlocked (int __c, FILE *__stream);







extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);






extern int getw (FILE *__stream);


extern int putw (int __w, FILE *__stream);







extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     __attribute__ ((__warn_unused_result__));
# 603 "/usr/include/stdio.h" 3 4
extern __ssize_t __getdelim (char **__restrict __lineptr,
                             size_t *__restrict __n, int __delimiter,
                             FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern __ssize_t getdelim (char **__restrict __lineptr,
                           size_t *__restrict __n, int __delimiter,
                           FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));







extern __ssize_t getline (char **__restrict __lineptr,
                          size_t *__restrict __n,
                          FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));







extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);
# 673 "/usr/include/stdio.h" 3 4
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
         size_t __n, FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern size_t fwrite_unlocked (const void *__restrict __ptr, size_t __size,
          size_t __n, FILE *__restrict __stream);







extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) __attribute__ ((__warn_unused_result__));




extern void rewind (FILE *__stream);
# 715 "/usr/include/stdio.h" 3 4
extern int fseeko (FILE *__stream, __off64_t __off, int __whence) __asm__ ("" "fseeko64")

                  ;
extern __off64_t ftello (FILE *__stream) __asm__ ("" "ftello64");
# 739 "/usr/include/stdio.h" 3 4
extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos) __asm__ ("" "fgetpos64")
                                          ;
extern int fsetpos (FILE *__stream, const fpos_t *__pos) __asm__ ("" "fsetpos64")
                                                          ;
# 757 "/usr/include/stdio.h" 3 4
extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));



extern void clearerr_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
extern int feof_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
extern int ferror_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));







extern void perror (const char *__s);





# 1 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 1 3 4
# 26 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3 4
extern int sys_nerr;
extern const char *const sys_errlist[];
# 782 "/usr/include/stdio.h" 2 3 4




extern int fileno (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern int fileno_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
# 800 "/usr/include/stdio.h" 3 4
extern FILE *popen (const char *__command, const char *__modes) __attribute__ ((__warn_unused_result__));





extern int pclose (FILE *__stream);





extern char *ctermid (char *__s) __attribute__ ((__nothrow__ , __leaf__));
# 840 "/usr/include/stdio.h" 3 4
extern void flockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));



extern int ftrylockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));


extern void funlockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
# 858 "/usr/include/stdio.h" 3 4
extern int __uflow (FILE *);
extern int __overflow (FILE *, int);




# 1 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 1 3 4
# 46 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
getchar (void)
{
  return getc (stdin);
}




extern __inline __attribute__ ((__gnu_inline__)) int
fgetc_unlocked (FILE *__fp)
{
  return (__builtin_expect (((__fp)->_IO_read_ptr >= (__fp)->_IO_read_end), 0) ? __uflow (__fp) : *(unsigned char *) (__fp)->_IO_read_ptr++);
}





extern __inline __attribute__ ((__gnu_inline__)) int
getc_unlocked (FILE *__fp)
{
  return (__builtin_expect (((__fp)->_IO_read_ptr >= (__fp)->_IO_read_end), 0) ? __uflow (__fp) : *(unsigned char *) (__fp)->_IO_read_ptr++);
}


extern __inline __attribute__ ((__gnu_inline__)) int
getchar_unlocked (void)
{
  return (__builtin_expect (((stdin)->_IO_read_ptr >= (stdin)->_IO_read_end), 0) ? __uflow (stdin) : *(unsigned char *) (stdin)->_IO_read_ptr++);
}




extern __inline __attribute__ ((__gnu_inline__)) int
putchar (int __c)
{
  return putc (__c, stdout);
}




extern __inline __attribute__ ((__gnu_inline__)) int
fputc_unlocked (int __c, FILE *__stream)
{
  return (__builtin_expect (((__stream)->_IO_write_ptr >= (__stream)->_IO_write_end), 0) ? __overflow (__stream, (unsigned char) (__c)) : (unsigned char) (*(__stream)->_IO_write_ptr++ = (__c)));
}





extern __inline __attribute__ ((__gnu_inline__)) int
putc_unlocked (int __c, FILE *__stream)
{
  return (__builtin_expect (((__stream)->_IO_write_ptr >= (__stream)->_IO_write_end), 0) ? __overflow (__stream, (unsigned char) (__c)) : (unsigned char) (*(__stream)->_IO_write_ptr++ = (__c)));
}


extern __inline __attribute__ ((__gnu_inline__)) int
putchar_unlocked (int __c)
{
  return (__builtin_expect (((stdout)->_IO_write_ptr >= (stdout)->_IO_write_end), 0) ? __overflow (stdout, (unsigned char) (__c)) : (unsigned char) (*(stdout)->_IO_write_ptr++ = (__c)));
}
# 127 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) feof_unlocked (FILE *__stream)
{
  return (((__stream)->_flags & 0x0010) != 0);
}


extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) ferror_unlocked (FILE *__stream)
{
  return (((__stream)->_flags & 0x0020) != 0);
}
# 865 "/usr/include/stdio.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 1 3 4
# 26 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3 4
extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
      const char *__restrict __format,
      __gnuc_va_list __ap) __attribute__ ((__nothrow__ , __leaf__));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) sprintf (char *__restrict __s, const char *__restrict __fmt, ...)
{
  return __builtin___sprintf_chk (__s, 2 - 1,
      __builtin_object_size (__s, 2 > 1), __fmt, __builtin_va_arg_pack ());
}






extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) vsprintf (char *__restrict __s, const char *__restrict __fmt, __gnuc_va_list __ap)

{
  return __builtin___vsprintf_chk (__s, 2 - 1,
       __builtin_object_size (__s, 2 > 1), __fmt, __ap);
}



extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
      size_t __slen, const char *__restrict __format,
      ...) __attribute__ ((__nothrow__ , __leaf__));
extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
       size_t __slen, const char *__restrict __format,
       __gnuc_va_list __ap) __attribute__ ((__nothrow__ , __leaf__));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) snprintf (char *__restrict __s, size_t __n, const char *__restrict __fmt, ...)

{
  return __builtin___snprintf_chk (__s, __n, 2 - 1,
       __builtin_object_size (__s, 2 > 1), __fmt, __builtin_va_arg_pack ());
}






extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) vsnprintf (char *__restrict __s, size_t __n, const char *__restrict __fmt, __gnuc_va_list __ap)

{
  return __builtin___vsnprintf_chk (__s, __n, 2 - 1,
        __builtin_object_size (__s, 2 > 1), __fmt, __ap);
}





extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
     const char *__restrict __format, ...);
extern int __printf_chk (int __flag, const char *__restrict __format, ...);
extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
      const char *__restrict __format, __gnuc_va_list __ap);
extern int __vprintf_chk (int __flag, const char *__restrict __format,
     __gnuc_va_list __ap);


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
{
  return __fprintf_chk (__stream, 2 - 1, __fmt,
   __builtin_va_arg_pack ());
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
printf (const char *__restrict __fmt, ...)
{
  return __printf_chk (2 - 1, __fmt, __builtin_va_arg_pack ());
}







extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
vprintf (const char *__restrict __fmt, __gnuc_va_list __ap)
{

  return __vfprintf_chk (stdout, 2 - 1, __fmt, __ap);



}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
vfprintf (FILE *__restrict __stream,
   const char *__restrict __fmt, __gnuc_va_list __ap)
{
  return __vfprintf_chk (__stream, 2 - 1, __fmt, __ap);
}


extern int __dprintf_chk (int __fd, int __flag, const char *__restrict __fmt,
     ...) __attribute__ ((__format__ (__printf__, 3, 4)));
extern int __vdprintf_chk (int __fd, int __flag,
      const char *__restrict __fmt, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 3, 0)));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
dprintf (int __fd, const char *__restrict __fmt, ...)
{
  return __dprintf_chk (__fd, 2 - 1, __fmt,
   __builtin_va_arg_pack ());
}





extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
vdprintf (int __fd, const char *__restrict __fmt, __gnuc_va_list __ap)
{
  return __vdprintf_chk (__fd, 2 - 1, __fmt, __ap);
}
# 243 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3 4
extern char *__fgets_chk (char *__restrict __s, size_t __size, int __n,
     FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern char *__fgets_alias (char *__restrict __s, int __n, FILE *__restrict __stream) __asm__ ("" "fgets")

                                        __attribute__ ((__warn_unused_result__));
extern char *__fgets_chk_warn (char *__restrict __s, size_t __size, int __n, FILE *__restrict __stream) __asm__ ("" "__fgets_chk")


     __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("fgets called with bigger size than length " "of destination buffer")))
                                 ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) char *
fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
{
  if (__builtin_object_size (__s, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__n) || __n <= 0)
 return __fgets_chk (__s, __builtin_object_size (__s, 2 > 1), __n, __stream);

      if ((size_t) __n > __builtin_object_size (__s, 2 > 1))
 return __fgets_chk_warn (__s, __builtin_object_size (__s, 2 > 1), __n, __stream);
    }
  return __fgets_alias (__s, __n, __stream);
}

extern size_t __fread_chk (void *__restrict __ptr, size_t __ptrlen,
      size_t __size, size_t __n,
      FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern size_t __fread_alias (void *__restrict __ptr, size_t __size, size_t __n, FILE *__restrict __stream) __asm__ ("" "fread")


            __attribute__ ((__warn_unused_result__));
extern size_t __fread_chk_warn (void *__restrict __ptr, size_t __ptrlen, size_t __size, size_t __n, FILE *__restrict __stream) __asm__ ("" "__fread_chk")




     __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("fread called with bigger size * nmemb than length " "of destination buffer")))
                                 ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) size_t
fread (void *__restrict __ptr, size_t __size, size_t __n,
       FILE *__restrict __stream)
{
  if (__builtin_object_size (__ptr, 0) != (size_t) -1)
    {
      if (!__builtin_constant_p (__size)
   || !__builtin_constant_p (__n)
   || (__size | __n) >= (((size_t) 1) << (8 * sizeof (size_t) / 2)))
 return __fread_chk (__ptr, __builtin_object_size (__ptr, 0), __size, __n, __stream);

      if (__size * __n > __builtin_object_size (__ptr, 0))
 return __fread_chk_warn (__ptr, __builtin_object_size (__ptr, 0), __size, __n, __stream);
    }
  return __fread_alias (__ptr, __size, __n, __stream);
}
# 329 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3 4
extern size_t __fread_unlocked_chk (void *__restrict __ptr, size_t __ptrlen,
        size_t __size, size_t __n,
        FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern size_t __fread_unlocked_alias (void *__restrict __ptr, size_t __size, size_t __n, FILE *__restrict __stream) __asm__ ("" "fread_unlocked")


                     __attribute__ ((__warn_unused_result__));
extern size_t __fread_unlocked_chk_warn (void *__restrict __ptr, size_t __ptrlen, size_t __size, size_t __n, FILE *__restrict __stream) __asm__ ("" "__fread_unlocked_chk")




     __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("fread_unlocked called with bigger size * nmemb than " "length of destination buffer")))
                                        ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) size_t
fread_unlocked (void *__restrict __ptr, size_t __size, size_t __n,
  FILE *__restrict __stream)
{
  if (__builtin_object_size (__ptr, 0) != (size_t) -1)
    {
      if (!__builtin_constant_p (__size)
   || !__builtin_constant_p (__n)
   || (__size | __n) >= (((size_t) 1) << (8 * sizeof (size_t) / 2)))
 return __fread_unlocked_chk (__ptr, __builtin_object_size (__ptr, 0), __size, __n,
         __stream);

      if (__size * __n > __builtin_object_size (__ptr, 0))
 return __fread_unlocked_chk_warn (__ptr, __builtin_object_size (__ptr, 0), __size, __n,
       __stream);
    }


  if (__builtin_constant_p (__size)
      && __builtin_constant_p (__n)
      && (__size | __n) < (((size_t) 1) << (8 * sizeof (size_t) / 2))
      && __size * __n <= 8)
    {
      size_t __cnt = __size * __n;
      char *__cptr = (char *) __ptr;
      if (__cnt == 0)
 return 0;

      for (; __cnt > 0; --__cnt)
 {
   int __c = getc_unlocked (__stream);
   if (__c == (-1))
     break;
   *__cptr++ = __c;
 }
      return (__cptr - (char *) __ptr) / __size;
    }

  return __fread_unlocked_alias (__ptr, __size, __n, __stream);
}
# 868 "/usr/include/stdio.h" 2 3 4






# 50 "/doner/libxml2/libxml2-4ea74a44/libxml2/libxml.h" 2
# 66 "/doner/libxml2/libxml2-4ea74a44/libxml2/libxml.h"

# 66 "/doner/libxml2/libxml2-4ea74a44/libxml2/libxml.h"
extern int __xmlRegisterCallbacks;



void __xmlIOErr(int domain, int code, const char *extra);
void __xmlLoaderErr(void *ctx, const char *msg, const char *filename);





void __htmlParseContent(void *ctx);





void __xmlGlobalInitMutexLock(void);
void __xmlGlobalInitMutexUnlock(void);
void __xmlGlobalInitMutexDestroy(void);





int __xmlRandom(void);


int xmlNop(void);






# 1 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 1
# 17 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
# 1 "./include/libxml/c14n.h" 1
# 27 "./include/libxml/c14n.h"
# 1 "./include/libxml/tree.h" 1
# 16 "./include/libxml/tree.h"
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-linux-gnu/9/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/limits.h" 1 3 4
# 194 "/usr/lib/gcc/x86_64-linux-gnu/9/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 26 "/usr/include/limits.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 27 "/usr/include/limits.h" 2 3 4
# 183 "/usr/include/limits.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 2 3 4
# 161 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/local_lim.h" 1 3 4
# 38 "/usr/include/x86_64-linux-gnu/bits/local_lim.h" 3 4
# 1 "/usr/include/linux/limits.h" 1 3 4
# 39 "/usr/include/x86_64-linux-gnu/bits/local_lim.h" 2 3 4
# 162 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 2 3 4
# 184 "/usr/include/limits.h" 2 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/posix2_lim.h" 1 3 4
# 188 "/usr/include/limits.h" 2 3 4
# 195 "/usr/lib/gcc/x86_64-linux-gnu/9/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-linux-gnu/9/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-linux-gnu/9/include/limits.h" 2 3 4
# 17 "./include/libxml/tree.h" 2

# 1 "./include/libxml/xmlstring.h" 1
# 14 "./include/libxml/xmlstring.h"
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h" 1 3 4
# 15 "./include/libxml/xmlstring.h" 2
# 28 "./include/libxml/xmlstring.h"
typedef unsigned char xmlChar;
# 40 "./include/libxml/xmlstring.h"
 xmlChar *
                xmlStrdup (const xmlChar *cur);
 xmlChar *
                xmlStrndup (const xmlChar *cur,
                                         int len);
 xmlChar *
                xmlCharStrndup (const char *cur,
                                         int len);
 xmlChar *
                xmlCharStrdup (const char *cur);
 xmlChar *
                xmlStrsub (const xmlChar *str,
                                         int start,
                                         int len);
 const xmlChar *
                xmlStrchr (const xmlChar *str,
                                         xmlChar val);
 const xmlChar *
                xmlStrstr (const xmlChar *str,
                                         const xmlChar *val);
 const xmlChar *
                xmlStrcasestr (const xmlChar *str,
                                         const xmlChar *val);
 int
                xmlStrcmp (const xmlChar *str1,
                                         const xmlChar *str2);
 int
                xmlStrncmp (const xmlChar *str1,
                                         const xmlChar *str2,
                                         int len);
 int
                xmlStrcasecmp (const xmlChar *str1,
                                         const xmlChar *str2);
 int
                xmlStrncasecmp (const xmlChar *str1,
                                         const xmlChar *str2,
                                         int len);
 int
                xmlStrEqual (const xmlChar *str1,
                                         const xmlChar *str2);
 int
                xmlStrQEqual (const xmlChar *pref,
                                         const xmlChar *name,
                                         const xmlChar *str);
 int
                xmlStrlen (const xmlChar *str);
 xmlChar *
                xmlStrcat (xmlChar *cur,
                                         const xmlChar *add);
 xmlChar *
                xmlStrncat (xmlChar *cur,
                                         const xmlChar *add,
                                         int len);
 xmlChar *
                xmlStrncatNew (const xmlChar *str1,
                                         const xmlChar *str2,
                                         int len);
 int
                xmlStrPrintf (xmlChar *buf,
                                         int len,
                                         const xmlChar *msg,
                                         ...);
 int
                xmlStrVPrintf (xmlChar *buf,
                                         int len,
                                         const xmlChar *msg,
                                         va_list ap);

 int
        xmlGetUTF8Char (const unsigned char *utf,
                                         int *len);
 int
        xmlCheckUTF8 (const unsigned char *utf);
 int
        xmlUTF8Strsize (const xmlChar *utf,
                                         int len);
 xmlChar *
        xmlUTF8Strndup (const xmlChar *utf,
                                         int len);
 const xmlChar *
        xmlUTF8Strpos (const xmlChar *utf,
                                         int pos);
 int
        xmlUTF8Strloc (const xmlChar *utf,
                                         const xmlChar *utfchar);
 xmlChar *
        xmlUTF8Strsub (const xmlChar *utf,
                                         int start,
                                         int len);
 int
        xmlUTF8Strlen (const xmlChar *utf);
 int
        xmlUTF8Size (const xmlChar *utf);
 int
        xmlUTF8Charcmp (const xmlChar *utf1,
                                         const xmlChar *utf2);
# 19 "./include/libxml/tree.h" 2
# 28 "./include/libxml/tree.h"
typedef struct _xmlParserInputBuffer xmlParserInputBuffer;
typedef xmlParserInputBuffer *xmlParserInputBufferPtr;

typedef struct _xmlOutputBuffer xmlOutputBuffer;
typedef xmlOutputBuffer *xmlOutputBufferPtr;


typedef struct _xmlParserInput xmlParserInput;
typedef xmlParserInput *xmlParserInputPtr;

typedef struct _xmlParserCtxt xmlParserCtxt;
typedef xmlParserCtxt *xmlParserCtxtPtr;

typedef struct _xmlSAXLocator xmlSAXLocator;
typedef xmlSAXLocator *xmlSAXLocatorPtr;

typedef struct _xmlSAXHandler xmlSAXHandler;
typedef xmlSAXHandler *xmlSAXHandlerPtr;


typedef struct _xmlEntity xmlEntity;
typedef xmlEntity *xmlEntityPtr;
# 74 "./include/libxml/tree.h"
typedef enum {
    XML_BUFFER_ALLOC_DOUBLEIT,
    XML_BUFFER_ALLOC_EXACT,
    XML_BUFFER_ALLOC_IMMUTABLE,
    XML_BUFFER_ALLOC_IO,
    XML_BUFFER_ALLOC_HYBRID
} xmlBufferAllocationScheme;







typedef struct _xmlBuffer xmlBuffer;
typedef xmlBuffer *xmlBufferPtr;
struct _xmlBuffer {
    xmlChar *content;
    unsigned int use;
    unsigned int size;
    xmlBufferAllocationScheme alloc;
    xmlChar *contentIO;
};







typedef struct _xmlBuf xmlBuf;
# 113 "./include/libxml/tree.h"
typedef xmlBuf *xmlBufPtr;





 xmlChar* xmlBufContent (const xmlBufPtr buf);
 xmlChar* xmlBufEnd (const xmlBufPtr buf);
 size_t xmlBufUse (const xmlBufPtr buf);
 size_t xmlBufShrink (xmlBufPtr buf, size_t len);
# 158 "./include/libxml/tree.h"
typedef enum {
    XML_ELEMENT_NODE= 1,
    XML_ATTRIBUTE_NODE= 2,
    XML_TEXT_NODE= 3,
    XML_CDATA_SECTION_NODE= 4,
    XML_ENTITY_REF_NODE= 5,
    XML_ENTITY_NODE= 6,
    XML_PI_NODE= 7,
    XML_COMMENT_NODE= 8,
    XML_DOCUMENT_NODE= 9,
    XML_DOCUMENT_TYPE_NODE= 10,
    XML_DOCUMENT_FRAG_NODE= 11,
    XML_NOTATION_NODE= 12,
    XML_HTML_DOCUMENT_NODE= 13,
    XML_DTD_NODE= 14,
    XML_ELEMENT_DECL= 15,
    XML_ATTRIBUTE_DECL= 16,
    XML_ENTITY_DECL= 17,
    XML_NAMESPACE_DECL= 18,
    XML_XINCLUDE_START= 19,
    XML_XINCLUDE_END= 20

   ,XML_DOCB_DOCUMENT_NODE= 21

} xmlElementType;
# 191 "./include/libxml/tree.h"
typedef struct _xmlNotation xmlNotation;
typedef xmlNotation *xmlNotationPtr;
struct _xmlNotation {
    const xmlChar *name;
    const xmlChar *PublicID;
    const xmlChar *SystemID;
};







typedef enum {
    XML_ATTRIBUTE_CDATA = 1,
    XML_ATTRIBUTE_ID,
    XML_ATTRIBUTE_IDREF ,
    XML_ATTRIBUTE_IDREFS,
    XML_ATTRIBUTE_ENTITY,
    XML_ATTRIBUTE_ENTITIES,
    XML_ATTRIBUTE_NMTOKEN,
    XML_ATTRIBUTE_NMTOKENS,
    XML_ATTRIBUTE_ENUMERATION,
    XML_ATTRIBUTE_NOTATION
} xmlAttributeType;







typedef enum {
    XML_ATTRIBUTE_NONE = 1,
    XML_ATTRIBUTE_REQUIRED,
    XML_ATTRIBUTE_IMPLIED,
    XML_ATTRIBUTE_FIXED
} xmlAttributeDefault;







typedef struct _xmlEnumeration xmlEnumeration;
typedef xmlEnumeration *xmlEnumerationPtr;
struct _xmlEnumeration {
    struct _xmlEnumeration *next;
    const xmlChar *name;
};







typedef struct _xmlAttribute xmlAttribute;
typedef xmlAttribute *xmlAttributePtr;
struct _xmlAttribute {
    void *_private;
    xmlElementType type;
    const xmlChar *name;
    struct _xmlNode *children;
    struct _xmlNode *last;
    struct _xmlDtd *parent;
    struct _xmlNode *next;
    struct _xmlNode *prev;
    struct _xmlDoc *doc;

    struct _xmlAttribute *nexth;
    xmlAttributeType atype;
    xmlAttributeDefault def;
    const xmlChar *defaultValue;
    xmlEnumerationPtr tree;
    const xmlChar *prefix;
    const xmlChar *elem;
};






typedef enum {
    XML_ELEMENT_CONTENT_PCDATA = 1,
    XML_ELEMENT_CONTENT_ELEMENT,
    XML_ELEMENT_CONTENT_SEQ,
    XML_ELEMENT_CONTENT_OR
} xmlElementContentType;






typedef enum {
    XML_ELEMENT_CONTENT_ONCE = 1,
    XML_ELEMENT_CONTENT_OPT,
    XML_ELEMENT_CONTENT_MULT,
    XML_ELEMENT_CONTENT_PLUS
} xmlElementContentOccur;
# 303 "./include/libxml/tree.h"
typedef struct _xmlElementContent xmlElementContent;
typedef xmlElementContent *xmlElementContentPtr;
struct _xmlElementContent {
    xmlElementContentType type;
    xmlElementContentOccur ocur;
    const xmlChar *name;
    struct _xmlElementContent *c1;
    struct _xmlElementContent *c2;
    struct _xmlElementContent *parent;
    const xmlChar *prefix;
};







typedef enum {
    XML_ELEMENT_TYPE_UNDEFINED = 0,
    XML_ELEMENT_TYPE_EMPTY = 1,
    XML_ELEMENT_TYPE_ANY,
    XML_ELEMENT_TYPE_MIXED,
    XML_ELEMENT_TYPE_ELEMENT
} xmlElementTypeVal;




# 1 "./include/libxml/xmlregexp.h" 1
# 28 "./include/libxml/xmlregexp.h"
typedef struct _xmlRegexp xmlRegexp;
typedef xmlRegexp *xmlRegexpPtr;






typedef struct _xmlRegExecCtxt xmlRegExecCtxt;
typedef xmlRegExecCtxt *xmlRegExecCtxtPtr;




# 1 "./include/libxml/tree.h" 1
# 43 "./include/libxml/xmlregexp.h" 2
# 1 "./include/libxml/dict.h" 1
# 14 "./include/libxml/dict.h"
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/limits.h" 1 3 4
# 15 "./include/libxml/dict.h" 2
# 25 "./include/libxml/dict.h"
typedef struct _xmlDict xmlDict;
typedef xmlDict *xmlDictPtr;




 int xmlInitializeDict(void);




 xmlDictPtr
   xmlDictCreate (void);
 size_t
   xmlDictSetLimit (xmlDictPtr dict,
                                         size_t limit);
 size_t
   xmlDictGetUsage (xmlDictPtr dict);
 xmlDictPtr
   xmlDictCreateSub(xmlDictPtr sub);
 int
   xmlDictReference(xmlDictPtr dict);
 void
   xmlDictFree (xmlDictPtr dict);




 const xmlChar *
   xmlDictLookup (xmlDictPtr dict,
                           const xmlChar *name,
                           int len);
 const xmlChar *
   xmlDictExists (xmlDictPtr dict,
                           const xmlChar *name,
                           int len);
 const xmlChar *
   xmlDictQLookup (xmlDictPtr dict,
                           const xmlChar *prefix,
                           const xmlChar *name);
 int
   xmlDictOwns (xmlDictPtr dict,
      const xmlChar *str);
 int
   xmlDictSize (xmlDictPtr dict);




 void
                        xmlDictCleanup (void);
# 44 "./include/libxml/xmlregexp.h" 2







 xmlRegexpPtr
      xmlRegexpCompile (const xmlChar *regexp);
 void xmlRegFreeRegexp(xmlRegexpPtr regexp);
 int
      xmlRegexpExec (xmlRegexpPtr comp,
      const xmlChar *value);
 void
      xmlRegexpPrint (FILE *output,
      xmlRegexpPtr regexp);
 int
      xmlRegexpIsDeterminist(xmlRegexpPtr comp);
# 72 "./include/libxml/xmlregexp.h"
typedef void (*xmlRegExecCallbacks) (xmlRegExecCtxtPtr exec,
                              const xmlChar *token,
         void *transdata,
         void *inputdata);




 xmlRegExecCtxtPtr
      xmlRegNewExecCtxt (xmlRegexpPtr comp,
      xmlRegExecCallbacks callback,
      void *data);
 void
      xmlRegFreeExecCtxt (xmlRegExecCtxtPtr exec);
 int
      xmlRegExecPushString(xmlRegExecCtxtPtr exec,
      const xmlChar *value,
      void *data);
 int
      xmlRegExecPushString2(xmlRegExecCtxtPtr exec,
      const xmlChar *value,
      const xmlChar *value2,
      void *data);

 int
      xmlRegExecNextValues(xmlRegExecCtxtPtr exec,
      int *nbval,
      int *nbneg,
      xmlChar **values,
      int *terminal);
 int
      xmlRegExecErrInfo (xmlRegExecCtxtPtr exec,
      const xmlChar **string,
      int *nbval,
      int *nbneg,
      xmlChar **values,
      int *terminal);







typedef struct _xmlExpCtxt xmlExpCtxt;
typedef xmlExpCtxt *xmlExpCtxtPtr;

 void
   xmlExpFreeCtxt (xmlExpCtxtPtr ctxt);
 xmlExpCtxtPtr
   xmlExpNewCtxt (int maxNodes,
      xmlDictPtr dict);

 int
   xmlExpCtxtNbNodes(xmlExpCtxtPtr ctxt);
 int
   xmlExpCtxtNbCons(xmlExpCtxtPtr ctxt);


typedef struct _xmlExpNode xmlExpNode;
typedef xmlExpNode *xmlExpNodePtr;

typedef enum {
    XML_EXP_EMPTY = 0,
    XML_EXP_FORBID = 1,
    XML_EXP_ATOM = 2,
    XML_EXP_SEQ = 3,
    XML_EXP_OR = 4,
    XML_EXP_COUNT = 5
} xmlExpNodeType;





extern xmlExpNodePtr forbiddenExp;
extern xmlExpNodePtr emptyExp;




 void
   xmlExpFree (xmlExpCtxtPtr ctxt,
      xmlExpNodePtr expr);
 void
   xmlExpRef (xmlExpNodePtr expr);




 xmlExpNodePtr
   xmlExpParse (xmlExpCtxtPtr ctxt,
      const char *expr);
 xmlExpNodePtr
   xmlExpNewAtom (xmlExpCtxtPtr ctxt,
      const xmlChar *name,
      int len);
 xmlExpNodePtr
   xmlExpNewOr (xmlExpCtxtPtr ctxt,
      xmlExpNodePtr left,
      xmlExpNodePtr right);
 xmlExpNodePtr
   xmlExpNewSeq (xmlExpCtxtPtr ctxt,
      xmlExpNodePtr left,
      xmlExpNodePtr right);
 xmlExpNodePtr
   xmlExpNewRange (xmlExpCtxtPtr ctxt,
      xmlExpNodePtr subset,
      int min,
      int max);



 int
   xmlExpIsNillable(xmlExpNodePtr expr);
 int
   xmlExpMaxToken (xmlExpNodePtr expr);
 int
   xmlExpGetLanguage(xmlExpCtxtPtr ctxt,
      xmlExpNodePtr expr,
      const xmlChar**langList,
      int len);
 int
   xmlExpGetStart (xmlExpCtxtPtr ctxt,
      xmlExpNodePtr expr,
      const xmlChar**tokList,
      int len);
 xmlExpNodePtr
   xmlExpStringDerive(xmlExpCtxtPtr ctxt,
      xmlExpNodePtr expr,
      const xmlChar *str,
      int len);
 xmlExpNodePtr
   xmlExpExpDerive (xmlExpCtxtPtr ctxt,
      xmlExpNodePtr expr,
      xmlExpNodePtr sub);
 int
   xmlExpSubsume (xmlExpCtxtPtr ctxt,
      xmlExpNodePtr expr,
      xmlExpNodePtr sub);
 void
   xmlExpDump (xmlBufferPtr buf,
      xmlExpNodePtr expr);
# 333 "./include/libxml/tree.h" 2
# 343 "./include/libxml/tree.h"
typedef struct _xmlElement xmlElement;
typedef xmlElement *xmlElementPtr;
struct _xmlElement {
    void *_private;
    xmlElementType type;
    const xmlChar *name;
    struct _xmlNode *children;
    struct _xmlNode *last;
    struct _xmlDtd *parent;
    struct _xmlNode *next;
    struct _xmlNode *prev;
    struct _xmlDoc *doc;

    xmlElementTypeVal etype;
    xmlElementContentPtr content;
    xmlAttributePtr attributes;
    const xmlChar *prefix;

    xmlRegexpPtr contModel;



};
# 374 "./include/libxml/tree.h"
typedef xmlElementType xmlNsType;
# 386 "./include/libxml/tree.h"
typedef struct _xmlNs xmlNs;
typedef xmlNs *xmlNsPtr;
struct _xmlNs {
    struct _xmlNs *next;
    xmlNsType type;
    const xmlChar *href;
    const xmlChar *prefix;
    void *_private;
    struct _xmlDoc *context;
};







typedef struct _xmlDtd xmlDtd;
typedef xmlDtd *xmlDtdPtr;
struct _xmlDtd {
    void *_private;
    xmlElementType type;
    const xmlChar *name;
    struct _xmlNode *children;
    struct _xmlNode *last;
    struct _xmlDoc *parent;
    struct _xmlNode *next;
    struct _xmlNode *prev;
    struct _xmlDoc *doc;


    void *notations;
    void *elements;
    void *attributes;
    void *entities;
    const xmlChar *ExternalID;
    const xmlChar *SystemID;
    void *pentities;
};






typedef struct _xmlAttr xmlAttr;
typedef xmlAttr *xmlAttrPtr;
struct _xmlAttr {
    void *_private;
    xmlElementType type;
    const xmlChar *name;
    struct _xmlNode *children;
    struct _xmlNode *last;
    struct _xmlNode *parent;
    struct _xmlAttr *next;
    struct _xmlAttr *prev;
    struct _xmlDoc *doc;
    xmlNs *ns;
    xmlAttributeType atype;
    void *psvi;
};







typedef struct _xmlID xmlID;
typedef xmlID *xmlIDPtr;
struct _xmlID {
    struct _xmlID *next;
    const xmlChar *value;
    xmlAttrPtr attr;
    const xmlChar *name;
    int lineno;
    struct _xmlDoc *doc;
};







typedef struct _xmlRef xmlRef;
typedef xmlRef *xmlRefPtr;
struct _xmlRef {
    struct _xmlRef *next;
    const xmlChar *value;
    xmlAttrPtr attr;
    const xmlChar *name;
    int lineno;
};






typedef struct _xmlNode xmlNode;
typedef xmlNode *xmlNodePtr;
struct _xmlNode {
    void *_private;
    xmlElementType type;
    const xmlChar *name;
    struct _xmlNode *children;
    struct _xmlNode *last;
    struct _xmlNode *parent;
    struct _xmlNode *next;
    struct _xmlNode *prev;
    struct _xmlDoc *doc;


    xmlNs *ns;
    xmlChar *content;
    struct _xmlAttr *properties;
    xmlNs *nsDef;
    void *psvi;
    unsigned short line;
    unsigned short extra;
};
# 531 "./include/libxml/tree.h"
typedef enum {
    XML_DOC_WELLFORMED = 1<<0,
    XML_DOC_NSVALID = 1<<1,
    XML_DOC_OLD10 = 1<<2,
    XML_DOC_DTDVALID = 1<<3,
    XML_DOC_XINCLUDE = 1<<4,
    XML_DOC_USERBUILT = 1<<5,

    XML_DOC_INTERNAL = 1<<6,
    XML_DOC_HTML = 1<<7
} xmlDocProperties;






typedef struct _xmlDoc xmlDoc;
typedef xmlDoc *xmlDocPtr;
struct _xmlDoc {
    void *_private;
    xmlElementType type;
    char *name;
    struct _xmlNode *children;
    struct _xmlNode *last;
    struct _xmlNode *parent;
    struct _xmlNode *next;
    struct _xmlNode *prev;
    struct _xmlDoc *doc;


    int compression;
    int standalone;





    struct _xmlDtd *intSubset;
    struct _xmlDtd *extSubset;
    struct _xmlNs *oldNs;
    const xmlChar *version;
    const xmlChar *encoding;
    void *ids;
    void *refs;
    const xmlChar *URL;
    int charset;

    struct _xmlDict *dict;
    void *psvi;
    int parseFlags;

    int properties;

};


typedef struct _xmlDOMWrapCtxt xmlDOMWrapCtxt;
typedef xmlDOMWrapCtxt *xmlDOMWrapCtxtPtr;
# 602 "./include/libxml/tree.h"
typedef xmlNsPtr (*xmlDOMWrapAcquireNsFunction) (xmlDOMWrapCtxtPtr ctxt,
       xmlNodePtr node,
       const xmlChar *nsName,
       const xmlChar *nsPrefix);






struct _xmlDOMWrapCtxt {
    void * _private;




    int type;



    void * namespaceMap;




    xmlDOMWrapAcquireNsFunction getNsForNodeFunc;
};
# 658 "./include/libxml/tree.h"
 int
  xmlValidateNCName (const xmlChar *value,
      int space);



 int
  xmlValidateQName (const xmlChar *value,
      int space);
 int
  xmlValidateName (const xmlChar *value,
      int space);
 int
  xmlValidateNMToken (const xmlChar *value,
      int space);


 xmlChar *
  xmlBuildQName (const xmlChar *ncname,
      const xmlChar *prefix,
      xmlChar *memory,
      int len);
 xmlChar *
  xmlSplitQName2 (const xmlChar *name,
      xmlChar **prefix);
 const xmlChar *
  xmlSplitQName3 (const xmlChar *name,
      int *len);





 void
  xmlSetBufferAllocationScheme(xmlBufferAllocationScheme scheme);
 xmlBufferAllocationScheme
  xmlGetBufferAllocationScheme(void);

 xmlBufferPtr
  xmlBufferCreate (void);
 xmlBufferPtr
  xmlBufferCreateSize (size_t size);
 xmlBufferPtr
  xmlBufferCreateStatic (void *mem,
      size_t size);
 int
  xmlBufferResize (xmlBufferPtr buf,
      unsigned int size);
 void
  xmlBufferFree (xmlBufferPtr buf);
 int
  xmlBufferDump (FILE *file,
      xmlBufferPtr buf);
 int
  xmlBufferAdd (xmlBufferPtr buf,
      const xmlChar *str,
      int len);
 int
  xmlBufferAddHead (xmlBufferPtr buf,
      const xmlChar *str,
      int len);
 int
  xmlBufferCat (xmlBufferPtr buf,
      const xmlChar *str);
 int
  xmlBufferCCat (xmlBufferPtr buf,
      const char *str);
 int
  xmlBufferShrink (xmlBufferPtr buf,
      unsigned int len);
 int
  xmlBufferGrow (xmlBufferPtr buf,
      unsigned int len);
 void
  xmlBufferEmpty (xmlBufferPtr buf);
 const xmlChar*
  xmlBufferContent (const xmlBufferPtr buf);
 xmlChar*
  xmlBufferDetach (xmlBufferPtr buf);
 void
  xmlBufferSetAllocationScheme(xmlBufferPtr buf,
      xmlBufferAllocationScheme scheme);
 int
  xmlBufferLength (const xmlBufferPtr buf);




 xmlDtdPtr
  xmlCreateIntSubset (xmlDocPtr doc,
      const xmlChar *name,
      const xmlChar *ExternalID,
      const xmlChar *SystemID);
 xmlDtdPtr
  xmlNewDtd (xmlDocPtr doc,
      const xmlChar *name,
      const xmlChar *ExternalID,
      const xmlChar *SystemID);
 xmlDtdPtr
  xmlGetIntSubset (xmlDocPtr doc);
 void
  xmlFreeDtd (xmlDtdPtr cur);

 xmlNsPtr
  xmlNewGlobalNs (xmlDocPtr doc,
      const xmlChar *href,
      const xmlChar *prefix);

 xmlNsPtr
  xmlNewNs (xmlNodePtr node,
      const xmlChar *href,
      const xmlChar *prefix);
 void
  xmlFreeNs (xmlNsPtr cur);
 void
  xmlFreeNsList (xmlNsPtr cur);
 xmlDocPtr
  xmlNewDoc (const xmlChar *version);
 void
  xmlFreeDoc (xmlDocPtr cur);
 xmlAttrPtr
  xmlNewDocProp (xmlDocPtr doc,
      const xmlChar *name,
      const xmlChar *value);


 xmlAttrPtr
  xmlNewProp (xmlNodePtr node,
      const xmlChar *name,
      const xmlChar *value);

 xmlAttrPtr
  xmlNewNsProp (xmlNodePtr node,
      xmlNsPtr ns,
      const xmlChar *name,
      const xmlChar *value);
 xmlAttrPtr
  xmlNewNsPropEatName (xmlNodePtr node,
      xmlNsPtr ns,
      xmlChar *name,
      const xmlChar *value);
 void
  xmlFreePropList (xmlAttrPtr cur);
 void
  xmlFreeProp (xmlAttrPtr cur);
 xmlAttrPtr
  xmlCopyProp (xmlNodePtr target,
      xmlAttrPtr cur);
 xmlAttrPtr
  xmlCopyPropList (xmlNodePtr target,
      xmlAttrPtr cur);

 xmlDtdPtr
  xmlCopyDtd (xmlDtdPtr dtd);


 xmlDocPtr
  xmlCopyDoc (xmlDocPtr doc,
      int recursive);




 xmlNodePtr
  xmlNewDocNode (xmlDocPtr doc,
      xmlNsPtr ns,
      const xmlChar *name,
      const xmlChar *content);
 xmlNodePtr
  xmlNewDocNodeEatName (xmlDocPtr doc,
      xmlNsPtr ns,
      xmlChar *name,
      const xmlChar *content);
 xmlNodePtr
  xmlNewNode (xmlNsPtr ns,
      const xmlChar *name);
 xmlNodePtr
  xmlNewNodeEatName (xmlNsPtr ns,
      xmlChar *name);

 xmlNodePtr
  xmlNewChild (xmlNodePtr parent,
      xmlNsPtr ns,
      const xmlChar *name,
      const xmlChar *content);

 xmlNodePtr
  xmlNewDocText (xmlDocPtr doc,
      const xmlChar *content);
 xmlNodePtr
  xmlNewText (const xmlChar *content);
 xmlNodePtr
  xmlNewDocPI (xmlDocPtr doc,
      const xmlChar *name,
      const xmlChar *content);
 xmlNodePtr
  xmlNewPI (const xmlChar *name,
      const xmlChar *content);
 xmlNodePtr
  xmlNewDocTextLen (xmlDocPtr doc,
      const xmlChar *content,
      int len);
 xmlNodePtr
  xmlNewTextLen (const xmlChar *content,
      int len);
 xmlNodePtr
  xmlNewDocComment (xmlDocPtr doc,
      const xmlChar *content);
 xmlNodePtr
  xmlNewComment (const xmlChar *content);
 xmlNodePtr
  xmlNewCDataBlock (xmlDocPtr doc,
      const xmlChar *content,
      int len);
 xmlNodePtr
  xmlNewCharRef (xmlDocPtr doc,
      const xmlChar *name);
 xmlNodePtr
  xmlNewReference (xmlDocPtr doc,
      const xmlChar *name);
 xmlNodePtr
  xmlCopyNode (const xmlNodePtr node,
      int recursive);
 xmlNodePtr
  xmlDocCopyNode (const xmlNodePtr node,
      xmlDocPtr doc,
      int recursive);
 xmlNodePtr
  xmlDocCopyNodeList (xmlDocPtr doc,
      const xmlNodePtr node);
 xmlNodePtr
  xmlCopyNodeList (const xmlNodePtr node);

 xmlNodePtr
  xmlNewTextChild (xmlNodePtr parent,
      xmlNsPtr ns,
      const xmlChar *name,
      const xmlChar *content);
 xmlNodePtr
  xmlNewDocRawNode (xmlDocPtr doc,
      xmlNsPtr ns,
      const xmlChar *name,
      const xmlChar *content);
 xmlNodePtr
  xmlNewDocFragment (xmlDocPtr doc);





 long
  xmlGetLineNo (xmlNodePtr node);

 xmlChar *
  xmlGetNodePath (xmlNodePtr node);

 xmlNodePtr
  xmlDocGetRootElement (xmlDocPtr doc);
 xmlNodePtr
  xmlGetLastChild (xmlNodePtr parent);
 int
  xmlNodeIsText (xmlNodePtr node);
 int
  xmlIsBlankNode (xmlNodePtr node);





 xmlNodePtr
  xmlDocSetRootElement (xmlDocPtr doc,
      xmlNodePtr root);


 void
  xmlNodeSetName (xmlNodePtr cur,
      const xmlChar *name);

 xmlNodePtr
  xmlAddChild (xmlNodePtr parent,
      xmlNodePtr cur);
 xmlNodePtr
  xmlAddChildList (xmlNodePtr parent,
      xmlNodePtr cur);

 xmlNodePtr
  xmlReplaceNode (xmlNodePtr old,
      xmlNodePtr cur);



 xmlNodePtr
  xmlAddPrevSibling (xmlNodePtr cur,
      xmlNodePtr elem);

 xmlNodePtr
  xmlAddSibling (xmlNodePtr cur,
      xmlNodePtr elem);
 xmlNodePtr
  xmlAddNextSibling (xmlNodePtr cur,
      xmlNodePtr elem);
 void
  xmlUnlinkNode (xmlNodePtr cur);
 xmlNodePtr
  xmlTextMerge (xmlNodePtr first,
      xmlNodePtr second);
 int
  xmlTextConcat (xmlNodePtr node,
      const xmlChar *content,
      int len);
 void
  xmlFreeNodeList (xmlNodePtr cur);
 void
  xmlFreeNode (xmlNodePtr cur);
 void
  xmlSetTreeDoc (xmlNodePtr tree,
      xmlDocPtr doc);
 void
  xmlSetListDoc (xmlNodePtr list,
      xmlDocPtr doc);



 xmlNsPtr
  xmlSearchNs (xmlDocPtr doc,
      xmlNodePtr node,
      const xmlChar *nameSpace);
 xmlNsPtr
  xmlSearchNsByHref (xmlDocPtr doc,
      xmlNodePtr node,
      const xmlChar *href);

 xmlNsPtr *
  xmlGetNsList (xmlDocPtr doc,
      xmlNodePtr node);


 void
  xmlSetNs (xmlNodePtr node,
      xmlNsPtr ns);
 xmlNsPtr
  xmlCopyNamespace (xmlNsPtr cur);
 xmlNsPtr
  xmlCopyNamespaceList (xmlNsPtr cur);





 xmlAttrPtr
  xmlSetProp (xmlNodePtr node,
      const xmlChar *name,
      const xmlChar *value);
 xmlAttrPtr
  xmlSetNsProp (xmlNodePtr node,
      xmlNsPtr ns,
      const xmlChar *name,
      const xmlChar *value);

 xmlChar *
  xmlGetNoNsProp (xmlNodePtr node,
      const xmlChar *name);
 xmlChar *
  xmlGetProp (xmlNodePtr node,
      const xmlChar *name);
 xmlAttrPtr
  xmlHasProp (xmlNodePtr node,
      const xmlChar *name);
 xmlAttrPtr
  xmlHasNsProp (xmlNodePtr node,
      const xmlChar *name,
      const xmlChar *nameSpace);
 xmlChar *
  xmlGetNsProp (xmlNodePtr node,
      const xmlChar *name,
      const xmlChar *nameSpace);
 xmlNodePtr
  xmlStringGetNodeList (xmlDocPtr doc,
      const xmlChar *value);
 xmlNodePtr
  xmlStringLenGetNodeList (xmlDocPtr doc,
      const xmlChar *value,
      int len);
 xmlChar *
  xmlNodeListGetString (xmlDocPtr doc,
      xmlNodePtr list,
      int inLine);

 xmlChar *
  xmlNodeListGetRawString (xmlDocPtr doc,
      xmlNodePtr list,
      int inLine);

 void
  xmlNodeSetContent (xmlNodePtr cur,
      const xmlChar *content);

 void
  xmlNodeSetContentLen (xmlNodePtr cur,
      const xmlChar *content,
      int len);

 void
  xmlNodeAddContent (xmlNodePtr cur,
      const xmlChar *content);
 void
  xmlNodeAddContentLen (xmlNodePtr cur,
      const xmlChar *content,
      int len);
 xmlChar *
  xmlNodeGetContent (xmlNodePtr cur);

 int
  xmlNodeBufGetContent (xmlBufferPtr buffer,
      xmlNodePtr cur);
 int
  xmlBufGetNodeContent (xmlBufPtr buf,
      xmlNodePtr cur);

 xmlChar *
  xmlNodeGetLang (xmlNodePtr cur);
 int
  xmlNodeGetSpacePreserve (xmlNodePtr cur);

 void
  xmlNodeSetLang (xmlNodePtr cur,
      const xmlChar *lang);
 void
  xmlNodeSetSpacePreserve (xmlNodePtr cur,
      int val);

 xmlChar *
  xmlNodeGetBase (xmlDocPtr doc,
      xmlNodePtr cur);

 void
  xmlNodeSetBase (xmlNodePtr cur,
      const xmlChar *uri);





 int
  xmlRemoveProp (xmlAttrPtr cur);

 int
  xmlUnsetNsProp (xmlNodePtr node,
      xmlNsPtr ns,
      const xmlChar *name);
 int
  xmlUnsetProp (xmlNodePtr node,
      const xmlChar *name);





 void
  xmlBufferWriteCHAR (xmlBufferPtr buf,
      const xmlChar *string);
 void
  xmlBufferWriteChar (xmlBufferPtr buf,
      const char *string);
 void
  xmlBufferWriteQuotedString(xmlBufferPtr buf,
      const xmlChar *string);


 void xmlAttrSerializeTxtContent(xmlBufferPtr buf,
      xmlDocPtr doc,
      xmlAttrPtr attr,
      const xmlChar *string);






 int
  xmlReconciliateNs (xmlDocPtr doc,
      xmlNodePtr tree);






 void
  xmlDocDumpFormatMemory (xmlDocPtr cur,
      xmlChar **mem,
      int *size,
      int format);
 void
  xmlDocDumpMemory (xmlDocPtr cur,
      xmlChar **mem,
      int *size);
 void
  xmlDocDumpMemoryEnc (xmlDocPtr out_doc,
      xmlChar **doc_txt_ptr,
      int * doc_txt_len,
      const char *txt_encoding);
 void
  xmlDocDumpFormatMemoryEnc(xmlDocPtr out_doc,
      xmlChar **doc_txt_ptr,
      int * doc_txt_len,
      const char *txt_encoding,
      int format);
 int
  xmlDocFormatDump (FILE *f,
      xmlDocPtr cur,
      int format);
 int
  xmlDocDump (FILE *f,
      xmlDocPtr cur);
 void
  xmlElemDump (FILE *f,
      xmlDocPtr doc,
      xmlNodePtr cur);
 int
  xmlSaveFile (const char *filename,
      xmlDocPtr cur);
 int
  xmlSaveFormatFile (const char *filename,
      xmlDocPtr cur,
      int format);
 size_t
  xmlBufNodeDump (xmlBufPtr buf,
      xmlDocPtr doc,
      xmlNodePtr cur,
      int level,
      int format);
 int
  xmlNodeDump (xmlBufferPtr buf,
      xmlDocPtr doc,
      xmlNodePtr cur,
      int level,
      int format);

 int
  xmlSaveFileTo (xmlOutputBufferPtr buf,
      xmlDocPtr cur,
      const char *encoding);
 int
  xmlSaveFormatFileTo (xmlOutputBufferPtr buf,
      xmlDocPtr cur,
             const char *encoding,
             int format);
 void
  xmlNodeDumpOutput (xmlOutputBufferPtr buf,
      xmlDocPtr doc,
      xmlNodePtr cur,
      int level,
      int format,
      const char *encoding);

 int
  xmlSaveFormatFileEnc (const char *filename,
      xmlDocPtr cur,
      const char *encoding,
      int format);

 int
  xmlSaveFileEnc (const char *filename,
      xmlDocPtr cur,
      const char *encoding);





 int
  xmlIsXHTML (const xmlChar *systemID,
      const xmlChar *publicID);




 int
  xmlGetDocCompressMode (xmlDocPtr doc);
 void
  xmlSetDocCompressMode (xmlDocPtr doc,
      int mode);
 int
  xmlGetCompressMode (void);
 void
  xmlSetCompressMode (int mode);




 xmlDOMWrapCtxtPtr
  xmlDOMWrapNewCtxt (void);
 void
  xmlDOMWrapFreeCtxt (xmlDOMWrapCtxtPtr ctxt);
 int
     xmlDOMWrapReconcileNamespaces(xmlDOMWrapCtxtPtr ctxt,
      xmlNodePtr elem,
      int options);
 int
     xmlDOMWrapAdoptNode (xmlDOMWrapCtxtPtr ctxt,
      xmlDocPtr sourceDoc,
      xmlNodePtr node,
      xmlDocPtr destDoc,
      xmlNodePtr destParent,
      int options);
 int
     xmlDOMWrapRemoveNode (xmlDOMWrapCtxtPtr ctxt,
      xmlDocPtr doc,
      xmlNodePtr node,
      int options);
 int
     xmlDOMWrapCloneNode (xmlDOMWrapCtxtPtr ctxt,
      xmlDocPtr sourceDoc,
      xmlNodePtr node,
      xmlNodePtr *clonedNode,
      xmlDocPtr destDoc,
      xmlNodePtr destParent,
      int deep,
      int options);






 unsigned long
            xmlChildElementCount (xmlNodePtr parent);
 xmlNodePtr
            xmlNextElementSibling (xmlNodePtr node);
 xmlNodePtr
            xmlFirstElementChild (xmlNodePtr parent);
 xmlNodePtr
            xmlLastElementChild (xmlNodePtr parent);
 xmlNodePtr
            xmlPreviousElementSibling (xmlNodePtr node);





# 1 "./include/libxml/xmlmemory.h" 1
# 57 "./include/libxml/xmlmemory.h"
typedef void ( *xmlFreeFunc)(void *mem);
# 66 "./include/libxml/xmlmemory.h"
typedef void *(__attribute__((alloc_size(1))) *xmlMallocFunc)(size_t size);
# 77 "./include/libxml/xmlmemory.h"
typedef void *( *xmlReallocFunc)(void *mem, size_t size);
# 87 "./include/libxml/xmlmemory.h"
typedef char *( *xmlStrdupFunc)(const char *str);
# 103 "./include/libxml/xmlmemory.h"
 int
 xmlMemSetup (xmlFreeFunc freeFunc,
    xmlMallocFunc mallocFunc,
    xmlReallocFunc reallocFunc,
    xmlStrdupFunc strdupFunc);
 int
 xmlMemGet (xmlFreeFunc *freeFunc,
    xmlMallocFunc *mallocFunc,
    xmlReallocFunc *reallocFunc,
    xmlStrdupFunc *strdupFunc);
 int
 xmlGcMemSetup (xmlFreeFunc freeFunc,
    xmlMallocFunc mallocFunc,
    xmlMallocFunc mallocAtomicFunc,
    xmlReallocFunc reallocFunc,
    xmlStrdupFunc strdupFunc);
 int
 xmlGcMemGet (xmlFreeFunc *freeFunc,
    xmlMallocFunc *mallocFunc,
    xmlMallocFunc *mallocAtomicFunc,
    xmlReallocFunc *reallocFunc,
    xmlStrdupFunc *strdupFunc);




 int
 xmlInitMemory (void);




 void
                xmlCleanupMemory (void);



 int
 xmlMemUsed (void);
 int
 xmlMemBlocks (void);
 void
 xmlMemDisplay (FILE *fp);
 void
 xmlMemDisplayLast(FILE *fp, long nbBytes);
 void
 xmlMemShow (FILE *fp, int nr);
 void
 xmlMemoryDump (void);
 void *
 xmlMemMalloc (size_t size) __attribute__((alloc_size(1)));
 void *
 xmlMemRealloc (void *ptr,size_t size);
 void
 xmlMemFree (void *ptr);
 char *
 xmlMemoryStrdup (const char *str);
 void *
 xmlMallocLoc (size_t size, const char *file, int line) __attribute__((alloc_size(1)));
 void *
 xmlReallocLoc (void *ptr, size_t size, const char *file, int line);
 void *
 xmlMallocAtomicLoc (size_t size, const char *file, int line) __attribute__((alloc_size(1)));
 char *
 xmlMemStrdupLoc (const char *str, const char *file, int line);
# 218 "./include/libxml/xmlmemory.h"
# 1 "./include/libxml/threads.h" 1
# 23 "./include/libxml/threads.h"
typedef struct _xmlMutex xmlMutex;
typedef xmlMutex *xmlMutexPtr;




typedef struct _xmlRMutex xmlRMutex;
typedef xmlRMutex *xmlRMutexPtr;




# 1 "./include/libxml/globals.h" 1
# 18 "./include/libxml/globals.h"
# 1 "./include/libxml/parser.h" 1
# 18 "./include/libxml/parser.h"
# 1 "./include/libxml/hash.h" 1
# 21 "./include/libxml/hash.h"
typedef struct _xmlHashTable xmlHashTable;
typedef xmlHashTable *xmlHashTablePtr;






# 1 "./include/libxml/parser.h" 1
# 30 "./include/libxml/hash.h" 2
# 69 "./include/libxml/hash.h"
typedef void (*xmlHashDeallocator)(void *payload, xmlChar *name);
# 79 "./include/libxml/hash.h"
typedef void *(*xmlHashCopier)(void *payload, xmlChar *name);
# 88 "./include/libxml/hash.h"
typedef void (*xmlHashScanner)(void *payload, void *data, xmlChar *name);
# 99 "./include/libxml/hash.h"
typedef void (*xmlHashScannerFull)(void *payload, void *data,
       const xmlChar *name, const xmlChar *name2,
       const xmlChar *name3);




 xmlHashTablePtr
   xmlHashCreate (int size);
 xmlHashTablePtr
   xmlHashCreateDict(int size,
      xmlDictPtr dict);
 void
   xmlHashFree (xmlHashTablePtr table,
      xmlHashDeallocator f);




 int
   xmlHashAddEntry (xmlHashTablePtr table,
                           const xmlChar *name,
                           void *userdata);
 int
   xmlHashUpdateEntry(xmlHashTablePtr table,
                           const xmlChar *name,
                           void *userdata,
      xmlHashDeallocator f);
 int
   xmlHashAddEntry2(xmlHashTablePtr table,
                           const xmlChar *name,
                           const xmlChar *name2,
                           void *userdata);
 int
   xmlHashUpdateEntry2(xmlHashTablePtr table,
                           const xmlChar *name,
                           const xmlChar *name2,
                           void *userdata,
      xmlHashDeallocator f);
 int
   xmlHashAddEntry3(xmlHashTablePtr table,
                           const xmlChar *name,
                           const xmlChar *name2,
                           const xmlChar *name3,
                           void *userdata);
 int
   xmlHashUpdateEntry3(xmlHashTablePtr table,
                           const xmlChar *name,
                           const xmlChar *name2,
                           const xmlChar *name3,
                           void *userdata,
      xmlHashDeallocator f);




 int
   xmlHashRemoveEntry(xmlHashTablePtr table, const xmlChar *name,
                           xmlHashDeallocator f);
 int
   xmlHashRemoveEntry2(xmlHashTablePtr table, const xmlChar *name,
                            const xmlChar *name2, xmlHashDeallocator f);
 int
   xmlHashRemoveEntry3(xmlHashTablePtr table, const xmlChar *name,
                            const xmlChar *name2, const xmlChar *name3,
                            xmlHashDeallocator f);




 void *
   xmlHashLookup (xmlHashTablePtr table,
      const xmlChar *name);
 void *
   xmlHashLookup2 (xmlHashTablePtr table,
      const xmlChar *name,
      const xmlChar *name2);
 void *
   xmlHashLookup3 (xmlHashTablePtr table,
      const xmlChar *name,
      const xmlChar *name2,
      const xmlChar *name3);
 void *
   xmlHashQLookup (xmlHashTablePtr table,
      const xmlChar *name,
      const xmlChar *prefix);
 void *
   xmlHashQLookup2 (xmlHashTablePtr table,
      const xmlChar *name,
      const xmlChar *prefix,
      const xmlChar *name2,
      const xmlChar *prefix2);
 void *
   xmlHashQLookup3 (xmlHashTablePtr table,
      const xmlChar *name,
      const xmlChar *prefix,
      const xmlChar *name2,
      const xmlChar *prefix2,
      const xmlChar *name3,
      const xmlChar *prefix3);




 xmlHashTablePtr
   xmlHashCopy (xmlHashTablePtr table,
      xmlHashCopier f);
 int
   xmlHashSize (xmlHashTablePtr table);
 void
   xmlHashScan (xmlHashTablePtr table,
      xmlHashScanner f,
      void *data);
 void
   xmlHashScan3 (xmlHashTablePtr table,
      const xmlChar *name,
      const xmlChar *name2,
      const xmlChar *name3,
      xmlHashScanner f,
      void *data);
 void
   xmlHashScanFull (xmlHashTablePtr table,
      xmlHashScannerFull f,
      void *data);
 void
   xmlHashScanFull3(xmlHashTablePtr table,
      const xmlChar *name,
      const xmlChar *name2,
      const xmlChar *name3,
      xmlHashScannerFull f,
      void *data);
# 19 "./include/libxml/parser.h" 2
# 1 "./include/libxml/valid.h" 1
# 15 "./include/libxml/valid.h"
# 1 "./include/libxml/xmlerror.h" 1
# 24 "./include/libxml/xmlerror.h"
typedef enum {
    XML_ERR_NONE = 0,
    XML_ERR_WARNING = 1,
    XML_ERR_ERROR = 2,
    XML_ERR_FATAL = 3
} xmlErrorLevel;






typedef enum {
    XML_FROM_NONE = 0,
    XML_FROM_PARSER,
    XML_FROM_TREE,
    XML_FROM_NAMESPACE,
    XML_FROM_DTD,
    XML_FROM_HTML,
    XML_FROM_MEMORY,
    XML_FROM_OUTPUT,
    XML_FROM_IO,
    XML_FROM_FTP,
    XML_FROM_HTTP,
    XML_FROM_XINCLUDE,
    XML_FROM_XPATH,
    XML_FROM_XPOINTER,
    XML_FROM_REGEXP,
    XML_FROM_DATATYPE,
    XML_FROM_SCHEMASP,
    XML_FROM_SCHEMASV,
    XML_FROM_RELAXNGP,
    XML_FROM_RELAXNGV,
    XML_FROM_CATALOG,
    XML_FROM_C14N,
    XML_FROM_XSLT,
    XML_FROM_VALID,
    XML_FROM_CHECK,
    XML_FROM_WRITER,
    XML_FROM_MODULE,
    XML_FROM_I18N,
    XML_FROM_SCHEMATRONV,
    XML_FROM_BUFFER,
    XML_FROM_URI
} xmlErrorDomain;







typedef struct _xmlError xmlError;
typedef xmlError *xmlErrorPtr;
struct _xmlError {
    int domain;
    int code;
    char *message;
    xmlErrorLevel level;
    char *file;
    int line;
    char *str1;
    char *str2;
    char *str3;
    int int1;
    int int2;
    void *ctxt;
    void *node;
};






typedef enum {
    XML_ERR_OK = 0,
    XML_ERR_INTERNAL_ERROR,
    XML_ERR_NO_MEMORY,
    XML_ERR_DOCUMENT_START,
    XML_ERR_DOCUMENT_EMPTY,
    XML_ERR_DOCUMENT_END,
    XML_ERR_INVALID_HEX_CHARREF,
    XML_ERR_INVALID_DEC_CHARREF,
    XML_ERR_INVALID_CHARREF,
    XML_ERR_INVALID_CHAR,
    XML_ERR_CHARREF_AT_EOF,
    XML_ERR_CHARREF_IN_PROLOG,
    XML_ERR_CHARREF_IN_EPILOG,
    XML_ERR_CHARREF_IN_DTD,
    XML_ERR_ENTITYREF_AT_EOF,
    XML_ERR_ENTITYREF_IN_PROLOG,
    XML_ERR_ENTITYREF_IN_EPILOG,
    XML_ERR_ENTITYREF_IN_DTD,
    XML_ERR_PEREF_AT_EOF,
    XML_ERR_PEREF_IN_PROLOG,
    XML_ERR_PEREF_IN_EPILOG,
    XML_ERR_PEREF_IN_INT_SUBSET,
    XML_ERR_ENTITYREF_NO_NAME,
    XML_ERR_ENTITYREF_SEMICOL_MISSING,
    XML_ERR_PEREF_NO_NAME,
    XML_ERR_PEREF_SEMICOL_MISSING,
    XML_ERR_UNDECLARED_ENTITY,
    XML_WAR_UNDECLARED_ENTITY,
    XML_ERR_UNPARSED_ENTITY,
    XML_ERR_ENTITY_IS_EXTERNAL,
    XML_ERR_ENTITY_IS_PARAMETER,
    XML_ERR_UNKNOWN_ENCODING,
    XML_ERR_UNSUPPORTED_ENCODING,
    XML_ERR_STRING_NOT_STARTED,
    XML_ERR_STRING_NOT_CLOSED,
    XML_ERR_NS_DECL_ERROR,
    XML_ERR_ENTITY_NOT_STARTED,
    XML_ERR_ENTITY_NOT_FINISHED,
    XML_ERR_LT_IN_ATTRIBUTE,
    XML_ERR_ATTRIBUTE_NOT_STARTED,
    XML_ERR_ATTRIBUTE_NOT_FINISHED,
    XML_ERR_ATTRIBUTE_WITHOUT_VALUE,
    XML_ERR_ATTRIBUTE_REDEFINED,
    XML_ERR_LITERAL_NOT_STARTED,
    XML_ERR_LITERAL_NOT_FINISHED,
    XML_ERR_COMMENT_NOT_FINISHED,
    XML_ERR_PI_NOT_STARTED,
    XML_ERR_PI_NOT_FINISHED,
    XML_ERR_NOTATION_NOT_STARTED,
    XML_ERR_NOTATION_NOT_FINISHED,
    XML_ERR_ATTLIST_NOT_STARTED,
    XML_ERR_ATTLIST_NOT_FINISHED,
    XML_ERR_MIXED_NOT_STARTED,
    XML_ERR_MIXED_NOT_FINISHED,
    XML_ERR_ELEMCONTENT_NOT_STARTED,
    XML_ERR_ELEMCONTENT_NOT_FINISHED,
    XML_ERR_XMLDECL_NOT_STARTED,
    XML_ERR_XMLDECL_NOT_FINISHED,
    XML_ERR_CONDSEC_NOT_STARTED,
    XML_ERR_CONDSEC_NOT_FINISHED,
    XML_ERR_EXT_SUBSET_NOT_FINISHED,
    XML_ERR_DOCTYPE_NOT_FINISHED,
    XML_ERR_MISPLACED_CDATA_END,
    XML_ERR_CDATA_NOT_FINISHED,
    XML_ERR_RESERVED_XML_NAME,
    XML_ERR_SPACE_REQUIRED,
    XML_ERR_SEPARATOR_REQUIRED,
    XML_ERR_NMTOKEN_REQUIRED,
    XML_ERR_NAME_REQUIRED,
    XML_ERR_PCDATA_REQUIRED,
    XML_ERR_URI_REQUIRED,
    XML_ERR_PUBID_REQUIRED,
    XML_ERR_LT_REQUIRED,
    XML_ERR_GT_REQUIRED,
    XML_ERR_LTSLASH_REQUIRED,
    XML_ERR_EQUAL_REQUIRED,
    XML_ERR_TAG_NAME_MISMATCH,
    XML_ERR_TAG_NOT_FINISHED,
    XML_ERR_STANDALONE_VALUE,
    XML_ERR_ENCODING_NAME,
    XML_ERR_HYPHEN_IN_COMMENT,
    XML_ERR_INVALID_ENCODING,
    XML_ERR_EXT_ENTITY_STANDALONE,
    XML_ERR_CONDSEC_INVALID,
    XML_ERR_VALUE_REQUIRED,
    XML_ERR_NOT_WELL_BALANCED,
    XML_ERR_EXTRA_CONTENT,
    XML_ERR_ENTITY_CHAR_ERROR,
    XML_ERR_ENTITY_PE_INTERNAL,
    XML_ERR_ENTITY_LOOP,
    XML_ERR_ENTITY_BOUNDARY,
    XML_ERR_INVALID_URI,
    XML_ERR_URI_FRAGMENT,
    XML_WAR_CATALOG_PI,
    XML_ERR_NO_DTD,
    XML_ERR_CONDSEC_INVALID_KEYWORD,
    XML_ERR_VERSION_MISSING,
    XML_WAR_UNKNOWN_VERSION,
    XML_WAR_LANG_VALUE,
    XML_WAR_NS_URI,
    XML_WAR_NS_URI_RELATIVE,
    XML_ERR_MISSING_ENCODING,
    XML_WAR_SPACE_VALUE,
    XML_ERR_NOT_STANDALONE,
    XML_ERR_ENTITY_PROCESSING,
    XML_ERR_NOTATION_PROCESSING,
    XML_WAR_NS_COLUMN,
    XML_WAR_ENTITY_REDEFINED,
    XML_ERR_UNKNOWN_VERSION,
    XML_ERR_VERSION_MISMATCH,
    XML_ERR_NAME_TOO_LONG,
    XML_NS_ERR_XML_NAMESPACE = 200,
    XML_NS_ERR_UNDEFINED_NAMESPACE,
    XML_NS_ERR_QNAME,
    XML_NS_ERR_ATTRIBUTE_REDEFINED,
    XML_NS_ERR_EMPTY,
    XML_NS_ERR_COLON,
    XML_DTD_ATTRIBUTE_DEFAULT = 500,
    XML_DTD_ATTRIBUTE_REDEFINED,
    XML_DTD_ATTRIBUTE_VALUE,
    XML_DTD_CONTENT_ERROR,
    XML_DTD_CONTENT_MODEL,
    XML_DTD_CONTENT_NOT_DETERMINIST,
    XML_DTD_DIFFERENT_PREFIX,
    XML_DTD_ELEM_DEFAULT_NAMESPACE,
    XML_DTD_ELEM_NAMESPACE,
    XML_DTD_ELEM_REDEFINED,
    XML_DTD_EMPTY_NOTATION,
    XML_DTD_ENTITY_TYPE,
    XML_DTD_ID_FIXED,
    XML_DTD_ID_REDEFINED,
    XML_DTD_ID_SUBSET,
    XML_DTD_INVALID_CHILD,
    XML_DTD_INVALID_DEFAULT,
    XML_DTD_LOAD_ERROR,
    XML_DTD_MISSING_ATTRIBUTE,
    XML_DTD_MIXED_CORRUPT,
    XML_DTD_MULTIPLE_ID,
    XML_DTD_NO_DOC,
    XML_DTD_NO_DTD,
    XML_DTD_NO_ELEM_NAME,
    XML_DTD_NO_PREFIX,
    XML_DTD_NO_ROOT,
    XML_DTD_NOTATION_REDEFINED,
    XML_DTD_NOTATION_VALUE,
    XML_DTD_NOT_EMPTY,
    XML_DTD_NOT_PCDATA,
    XML_DTD_NOT_STANDALONE,
    XML_DTD_ROOT_NAME,
    XML_DTD_STANDALONE_WHITE_SPACE,
    XML_DTD_UNKNOWN_ATTRIBUTE,
    XML_DTD_UNKNOWN_ELEM,
    XML_DTD_UNKNOWN_ENTITY,
    XML_DTD_UNKNOWN_ID,
    XML_DTD_UNKNOWN_NOTATION,
    XML_DTD_STANDALONE_DEFAULTED,
    XML_DTD_XMLID_VALUE,
    XML_DTD_XMLID_TYPE,
    XML_DTD_DUP_TOKEN,
    XML_HTML_STRUCURE_ERROR = 800,
    XML_HTML_UNKNOWN_TAG,
    XML_RNGP_ANYNAME_ATTR_ANCESTOR = 1000,
    XML_RNGP_ATTR_CONFLICT,
    XML_RNGP_ATTRIBUTE_CHILDREN,
    XML_RNGP_ATTRIBUTE_CONTENT,
    XML_RNGP_ATTRIBUTE_EMPTY,
    XML_RNGP_ATTRIBUTE_NOOP,
    XML_RNGP_CHOICE_CONTENT,
    XML_RNGP_CHOICE_EMPTY,
    XML_RNGP_CREATE_FAILURE,
    XML_RNGP_DATA_CONTENT,
    XML_RNGP_DEF_CHOICE_AND_INTERLEAVE,
    XML_RNGP_DEFINE_CREATE_FAILED,
    XML_RNGP_DEFINE_EMPTY,
    XML_RNGP_DEFINE_MISSING,
    XML_RNGP_DEFINE_NAME_MISSING,
    XML_RNGP_ELEM_CONTENT_EMPTY,
    XML_RNGP_ELEM_CONTENT_ERROR,
    XML_RNGP_ELEMENT_EMPTY,
    XML_RNGP_ELEMENT_CONTENT,
    XML_RNGP_ELEMENT_NAME,
    XML_RNGP_ELEMENT_NO_CONTENT,
    XML_RNGP_ELEM_TEXT_CONFLICT,
    XML_RNGP_EMPTY,
    XML_RNGP_EMPTY_CONSTRUCT,
    XML_RNGP_EMPTY_CONTENT,
    XML_RNGP_EMPTY_NOT_EMPTY,
    XML_RNGP_ERROR_TYPE_LIB,
    XML_RNGP_EXCEPT_EMPTY,
    XML_RNGP_EXCEPT_MISSING,
    XML_RNGP_EXCEPT_MULTIPLE,
    XML_RNGP_EXCEPT_NO_CONTENT,
    XML_RNGP_EXTERNALREF_EMTPY,
    XML_RNGP_EXTERNAL_REF_FAILURE,
    XML_RNGP_EXTERNALREF_RECURSE,
    XML_RNGP_FORBIDDEN_ATTRIBUTE,
    XML_RNGP_FOREIGN_ELEMENT,
    XML_RNGP_GRAMMAR_CONTENT,
    XML_RNGP_GRAMMAR_EMPTY,
    XML_RNGP_GRAMMAR_MISSING,
    XML_RNGP_GRAMMAR_NO_START,
    XML_RNGP_GROUP_ATTR_CONFLICT,
    XML_RNGP_HREF_ERROR,
    XML_RNGP_INCLUDE_EMPTY,
    XML_RNGP_INCLUDE_FAILURE,
    XML_RNGP_INCLUDE_RECURSE,
    XML_RNGP_INTERLEAVE_ADD,
    XML_RNGP_INTERLEAVE_CREATE_FAILED,
    XML_RNGP_INTERLEAVE_EMPTY,
    XML_RNGP_INTERLEAVE_NO_CONTENT,
    XML_RNGP_INVALID_DEFINE_NAME,
    XML_RNGP_INVALID_URI,
    XML_RNGP_INVALID_VALUE,
    XML_RNGP_MISSING_HREF,
    XML_RNGP_NAME_MISSING,
    XML_RNGP_NEED_COMBINE,
    XML_RNGP_NOTALLOWED_NOT_EMPTY,
    XML_RNGP_NSNAME_ATTR_ANCESTOR,
    XML_RNGP_NSNAME_NO_NS,
    XML_RNGP_PARAM_FORBIDDEN,
    XML_RNGP_PARAM_NAME_MISSING,
    XML_RNGP_PARENTREF_CREATE_FAILED,
    XML_RNGP_PARENTREF_NAME_INVALID,
    XML_RNGP_PARENTREF_NO_NAME,
    XML_RNGP_PARENTREF_NO_PARENT,
    XML_RNGP_PARENTREF_NOT_EMPTY,
    XML_RNGP_PARSE_ERROR,
    XML_RNGP_PAT_ANYNAME_EXCEPT_ANYNAME,
    XML_RNGP_PAT_ATTR_ATTR,
    XML_RNGP_PAT_ATTR_ELEM,
    XML_RNGP_PAT_DATA_EXCEPT_ATTR,
    XML_RNGP_PAT_DATA_EXCEPT_ELEM,
    XML_RNGP_PAT_DATA_EXCEPT_EMPTY,
    XML_RNGP_PAT_DATA_EXCEPT_GROUP,
    XML_RNGP_PAT_DATA_EXCEPT_INTERLEAVE,
    XML_RNGP_PAT_DATA_EXCEPT_LIST,
    XML_RNGP_PAT_DATA_EXCEPT_ONEMORE,
    XML_RNGP_PAT_DATA_EXCEPT_REF,
    XML_RNGP_PAT_DATA_EXCEPT_TEXT,
    XML_RNGP_PAT_LIST_ATTR,
    XML_RNGP_PAT_LIST_ELEM,
    XML_RNGP_PAT_LIST_INTERLEAVE,
    XML_RNGP_PAT_LIST_LIST,
    XML_RNGP_PAT_LIST_REF,
    XML_RNGP_PAT_LIST_TEXT,
    XML_RNGP_PAT_NSNAME_EXCEPT_ANYNAME,
    XML_RNGP_PAT_NSNAME_EXCEPT_NSNAME,
    XML_RNGP_PAT_ONEMORE_GROUP_ATTR,
    XML_RNGP_PAT_ONEMORE_INTERLEAVE_ATTR,
    XML_RNGP_PAT_START_ATTR,
    XML_RNGP_PAT_START_DATA,
    XML_RNGP_PAT_START_EMPTY,
    XML_RNGP_PAT_START_GROUP,
    XML_RNGP_PAT_START_INTERLEAVE,
    XML_RNGP_PAT_START_LIST,
    XML_RNGP_PAT_START_ONEMORE,
    XML_RNGP_PAT_START_TEXT,
    XML_RNGP_PAT_START_VALUE,
    XML_RNGP_PREFIX_UNDEFINED,
    XML_RNGP_REF_CREATE_FAILED,
    XML_RNGP_REF_CYCLE,
    XML_RNGP_REF_NAME_INVALID,
    XML_RNGP_REF_NO_DEF,
    XML_RNGP_REF_NO_NAME,
    XML_RNGP_REF_NOT_EMPTY,
    XML_RNGP_START_CHOICE_AND_INTERLEAVE,
    XML_RNGP_START_CONTENT,
    XML_RNGP_START_EMPTY,
    XML_RNGP_START_MISSING,
    XML_RNGP_TEXT_EXPECTED,
    XML_RNGP_TEXT_HAS_CHILD,
    XML_RNGP_TYPE_MISSING,
    XML_RNGP_TYPE_NOT_FOUND,
    XML_RNGP_TYPE_VALUE,
    XML_RNGP_UNKNOWN_ATTRIBUTE,
    XML_RNGP_UNKNOWN_COMBINE,
    XML_RNGP_UNKNOWN_CONSTRUCT,
    XML_RNGP_UNKNOWN_TYPE_LIB,
    XML_RNGP_URI_FRAGMENT,
    XML_RNGP_URI_NOT_ABSOLUTE,
    XML_RNGP_VALUE_EMPTY,
    XML_RNGP_VALUE_NO_CONTENT,
    XML_RNGP_XMLNS_NAME,
    XML_RNGP_XML_NS,
    XML_XPATH_EXPRESSION_OK = 1200,
    XML_XPATH_NUMBER_ERROR,
    XML_XPATH_UNFINISHED_LITERAL_ERROR,
    XML_XPATH_START_LITERAL_ERROR,
    XML_XPATH_VARIABLE_REF_ERROR,
    XML_XPATH_UNDEF_VARIABLE_ERROR,
    XML_XPATH_INVALID_PREDICATE_ERROR,
    XML_XPATH_EXPR_ERROR,
    XML_XPATH_UNCLOSED_ERROR,
    XML_XPATH_UNKNOWN_FUNC_ERROR,
    XML_XPATH_INVALID_OPERAND,
    XML_XPATH_INVALID_TYPE,
    XML_XPATH_INVALID_ARITY,
    XML_XPATH_INVALID_CTXT_SIZE,
    XML_XPATH_INVALID_CTXT_POSITION,
    XML_XPATH_MEMORY_ERROR,
    XML_XPTR_SYNTAX_ERROR,
    XML_XPTR_RESOURCE_ERROR,
    XML_XPTR_SUB_RESOURCE_ERROR,
    XML_XPATH_UNDEF_PREFIX_ERROR,
    XML_XPATH_ENCODING_ERROR,
    XML_XPATH_INVALID_CHAR_ERROR,
    XML_TREE_INVALID_HEX = 1300,
    XML_TREE_INVALID_DEC,
    XML_TREE_UNTERMINATED_ENTITY,
    XML_TREE_NOT_UTF8,
    XML_SAVE_NOT_UTF8 = 1400,
    XML_SAVE_CHAR_INVALID,
    XML_SAVE_NO_DOCTYPE,
    XML_SAVE_UNKNOWN_ENCODING,
    XML_REGEXP_COMPILE_ERROR = 1450,
    XML_IO_UNKNOWN = 1500,
    XML_IO_EACCES,
    XML_IO_EAGAIN,
    XML_IO_EBADF,
    XML_IO_EBADMSG,
    XML_IO_EBUSY,
    XML_IO_ECANCELED,
    XML_IO_ECHILD,
    XML_IO_EDEADLK,
    XML_IO_EDOM,
    XML_IO_EEXIST,
    XML_IO_EFAULT,
    XML_IO_EFBIG,
    XML_IO_EINPROGRESS,
    XML_IO_EINTR,
    XML_IO_EINVAL,
    XML_IO_EIO,
    XML_IO_EISDIR,
    XML_IO_EMFILE,
    XML_IO_EMLINK,
    XML_IO_EMSGSIZE,
    XML_IO_ENAMETOOLONG,
    XML_IO_ENFILE,
    XML_IO_ENODEV,
    XML_IO_ENOENT,
    XML_IO_ENOEXEC,
    XML_IO_ENOLCK,
    XML_IO_ENOMEM,
    XML_IO_ENOSPC,
    XML_IO_ENOSYS,
    XML_IO_ENOTDIR,
    XML_IO_ENOTEMPTY,
    XML_IO_ENOTSUP,
    XML_IO_ENOTTY,
    XML_IO_ENXIO,
    XML_IO_EPERM,
    XML_IO_EPIPE,
    XML_IO_ERANGE,
    XML_IO_EROFS,
    XML_IO_ESPIPE,
    XML_IO_ESRCH,
    XML_IO_ETIMEDOUT,
    XML_IO_EXDEV,
    XML_IO_NETWORK_ATTEMPT,
    XML_IO_ENCODER,
    XML_IO_FLUSH,
    XML_IO_WRITE,
    XML_IO_NO_INPUT,
    XML_IO_BUFFER_FULL,
    XML_IO_LOAD_ERROR,
    XML_IO_ENOTSOCK,
    XML_IO_EISCONN,
    XML_IO_ECONNREFUSED,
    XML_IO_ENETUNREACH,
    XML_IO_EADDRINUSE,
    XML_IO_EALREADY,
    XML_IO_EAFNOSUPPORT,
    XML_XINCLUDE_RECURSION=1600,
    XML_XINCLUDE_PARSE_VALUE,
    XML_XINCLUDE_ENTITY_DEF_MISMATCH,
    XML_XINCLUDE_NO_HREF,
    XML_XINCLUDE_NO_FALLBACK,
    XML_XINCLUDE_HREF_URI,
    XML_XINCLUDE_TEXT_FRAGMENT,
    XML_XINCLUDE_TEXT_DOCUMENT,
    XML_XINCLUDE_INVALID_CHAR,
    XML_XINCLUDE_BUILD_FAILED,
    XML_XINCLUDE_UNKNOWN_ENCODING,
    XML_XINCLUDE_MULTIPLE_ROOT,
    XML_XINCLUDE_XPTR_FAILED,
    XML_XINCLUDE_XPTR_RESULT,
    XML_XINCLUDE_INCLUDE_IN_INCLUDE,
    XML_XINCLUDE_FALLBACKS_IN_INCLUDE,
    XML_XINCLUDE_FALLBACK_NOT_IN_INCLUDE,
    XML_XINCLUDE_DEPRECATED_NS,
    XML_XINCLUDE_FRAGMENT_ID,
    XML_CATALOG_MISSING_ATTR = 1650,
    XML_CATALOG_ENTRY_BROKEN,
    XML_CATALOG_PREFER_VALUE,
    XML_CATALOG_NOT_CATALOG,
    XML_CATALOG_RECURSION,
    XML_SCHEMAP_PREFIX_UNDEFINED = 1700,
    XML_SCHEMAP_ATTRFORMDEFAULT_VALUE,
    XML_SCHEMAP_ATTRGRP_NONAME_NOREF,
    XML_SCHEMAP_ATTR_NONAME_NOREF,
    XML_SCHEMAP_COMPLEXTYPE_NONAME_NOREF,
    XML_SCHEMAP_ELEMFORMDEFAULT_VALUE,
    XML_SCHEMAP_ELEM_NONAME_NOREF,
    XML_SCHEMAP_EXTENSION_NO_BASE,
    XML_SCHEMAP_FACET_NO_VALUE,
    XML_SCHEMAP_FAILED_BUILD_IMPORT,
    XML_SCHEMAP_GROUP_NONAME_NOREF,
    XML_SCHEMAP_IMPORT_NAMESPACE_NOT_URI,
    XML_SCHEMAP_IMPORT_REDEFINE_NSNAME,
    XML_SCHEMAP_IMPORT_SCHEMA_NOT_URI,
    XML_SCHEMAP_INVALID_BOOLEAN,
    XML_SCHEMAP_INVALID_ENUM,
    XML_SCHEMAP_INVALID_FACET,
    XML_SCHEMAP_INVALID_FACET_VALUE,
    XML_SCHEMAP_INVALID_MAXOCCURS,
    XML_SCHEMAP_INVALID_MINOCCURS,
    XML_SCHEMAP_INVALID_REF_AND_SUBTYPE,
    XML_SCHEMAP_INVALID_WHITE_SPACE,
    XML_SCHEMAP_NOATTR_NOREF,
    XML_SCHEMAP_NOTATION_NO_NAME,
    XML_SCHEMAP_NOTYPE_NOREF,
    XML_SCHEMAP_REF_AND_SUBTYPE,
    XML_SCHEMAP_RESTRICTION_NONAME_NOREF,
    XML_SCHEMAP_SIMPLETYPE_NONAME,
    XML_SCHEMAP_TYPE_AND_SUBTYPE,
    XML_SCHEMAP_UNKNOWN_ALL_CHILD,
    XML_SCHEMAP_UNKNOWN_ANYATTRIBUTE_CHILD,
    XML_SCHEMAP_UNKNOWN_ATTR_CHILD,
    XML_SCHEMAP_UNKNOWN_ATTRGRP_CHILD,
    XML_SCHEMAP_UNKNOWN_ATTRIBUTE_GROUP,
    XML_SCHEMAP_UNKNOWN_BASE_TYPE,
    XML_SCHEMAP_UNKNOWN_CHOICE_CHILD,
    XML_SCHEMAP_UNKNOWN_COMPLEXCONTENT_CHILD,
    XML_SCHEMAP_UNKNOWN_COMPLEXTYPE_CHILD,
    XML_SCHEMAP_UNKNOWN_ELEM_CHILD,
    XML_SCHEMAP_UNKNOWN_EXTENSION_CHILD,
    XML_SCHEMAP_UNKNOWN_FACET_CHILD,
    XML_SCHEMAP_UNKNOWN_FACET_TYPE,
    XML_SCHEMAP_UNKNOWN_GROUP_CHILD,
    XML_SCHEMAP_UNKNOWN_IMPORT_CHILD,
    XML_SCHEMAP_UNKNOWN_LIST_CHILD,
    XML_SCHEMAP_UNKNOWN_NOTATION_CHILD,
    XML_SCHEMAP_UNKNOWN_PROCESSCONTENT_CHILD,
    XML_SCHEMAP_UNKNOWN_REF,
    XML_SCHEMAP_UNKNOWN_RESTRICTION_CHILD,
    XML_SCHEMAP_UNKNOWN_SCHEMAS_CHILD,
    XML_SCHEMAP_UNKNOWN_SEQUENCE_CHILD,
    XML_SCHEMAP_UNKNOWN_SIMPLECONTENT_CHILD,
    XML_SCHEMAP_UNKNOWN_SIMPLETYPE_CHILD,
    XML_SCHEMAP_UNKNOWN_TYPE,
    XML_SCHEMAP_UNKNOWN_UNION_CHILD,
    XML_SCHEMAP_ELEM_DEFAULT_FIXED,
    XML_SCHEMAP_REGEXP_INVALID,
    XML_SCHEMAP_FAILED_LOAD,
    XML_SCHEMAP_NOTHING_TO_PARSE,
    XML_SCHEMAP_NOROOT,
    XML_SCHEMAP_REDEFINED_GROUP,
    XML_SCHEMAP_REDEFINED_TYPE,
    XML_SCHEMAP_REDEFINED_ELEMENT,
    XML_SCHEMAP_REDEFINED_ATTRGROUP,
    XML_SCHEMAP_REDEFINED_ATTR,
    XML_SCHEMAP_REDEFINED_NOTATION,
    XML_SCHEMAP_FAILED_PARSE,
    XML_SCHEMAP_UNKNOWN_PREFIX,
    XML_SCHEMAP_DEF_AND_PREFIX,
    XML_SCHEMAP_UNKNOWN_INCLUDE_CHILD,
    XML_SCHEMAP_INCLUDE_SCHEMA_NOT_URI,
    XML_SCHEMAP_INCLUDE_SCHEMA_NO_URI,
    XML_SCHEMAP_NOT_SCHEMA,
    XML_SCHEMAP_UNKNOWN_MEMBER_TYPE,
    XML_SCHEMAP_INVALID_ATTR_USE,
    XML_SCHEMAP_RECURSIVE,
    XML_SCHEMAP_SUPERNUMEROUS_LIST_ITEM_TYPE,
    XML_SCHEMAP_INVALID_ATTR_COMBINATION,
    XML_SCHEMAP_INVALID_ATTR_INLINE_COMBINATION,
    XML_SCHEMAP_MISSING_SIMPLETYPE_CHILD,
    XML_SCHEMAP_INVALID_ATTR_NAME,
    XML_SCHEMAP_REF_AND_CONTENT,
    XML_SCHEMAP_CT_PROPS_CORRECT_1,
    XML_SCHEMAP_CT_PROPS_CORRECT_2,
    XML_SCHEMAP_CT_PROPS_CORRECT_3,
    XML_SCHEMAP_CT_PROPS_CORRECT_4,
    XML_SCHEMAP_CT_PROPS_CORRECT_5,
    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_1,
    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_1,
    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_2,
    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_2,
    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_3,
    XML_SCHEMAP_WILDCARD_INVALID_NS_MEMBER,
    XML_SCHEMAP_INTERSECTION_NOT_EXPRESSIBLE,
    XML_SCHEMAP_UNION_NOT_EXPRESSIBLE,
    XML_SCHEMAP_SRC_IMPORT_3_1,
    XML_SCHEMAP_SRC_IMPORT_3_2,
    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_1,
    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_2,
    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_3,
    XML_SCHEMAP_COS_CT_EXTENDS_1_3,
    XML_SCHEMAV_NOROOT = 1801,
    XML_SCHEMAV_UNDECLAREDELEM,
    XML_SCHEMAV_NOTTOPLEVEL,
    XML_SCHEMAV_MISSING,
    XML_SCHEMAV_WRONGELEM,
    XML_SCHEMAV_NOTYPE,
    XML_SCHEMAV_NOROLLBACK,
    XML_SCHEMAV_ISABSTRACT,
    XML_SCHEMAV_NOTEMPTY,
    XML_SCHEMAV_ELEMCONT,
    XML_SCHEMAV_HAVEDEFAULT,
    XML_SCHEMAV_NOTNILLABLE,
    XML_SCHEMAV_EXTRACONTENT,
    XML_SCHEMAV_INVALIDATTR,
    XML_SCHEMAV_INVALIDELEM,
    XML_SCHEMAV_NOTDETERMINIST,
    XML_SCHEMAV_CONSTRUCT,
    XML_SCHEMAV_INTERNAL,
    XML_SCHEMAV_NOTSIMPLE,
    XML_SCHEMAV_ATTRUNKNOWN,
    XML_SCHEMAV_ATTRINVALID,
    XML_SCHEMAV_VALUE,
    XML_SCHEMAV_FACET,
    XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_1,
    XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_2,
    XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_3,
    XML_SCHEMAV_CVC_TYPE_3_1_1,
    XML_SCHEMAV_CVC_TYPE_3_1_2,
    XML_SCHEMAV_CVC_FACET_VALID,
    XML_SCHEMAV_CVC_LENGTH_VALID,
    XML_SCHEMAV_CVC_MINLENGTH_VALID,
    XML_SCHEMAV_CVC_MAXLENGTH_VALID,
    XML_SCHEMAV_CVC_MININCLUSIVE_VALID,
    XML_SCHEMAV_CVC_MAXINCLUSIVE_VALID,
    XML_SCHEMAV_CVC_MINEXCLUSIVE_VALID,
    XML_SCHEMAV_CVC_MAXEXCLUSIVE_VALID,
    XML_SCHEMAV_CVC_TOTALDIGITS_VALID,
    XML_SCHEMAV_CVC_FRACTIONDIGITS_VALID,
    XML_SCHEMAV_CVC_PATTERN_VALID,
    XML_SCHEMAV_CVC_ENUMERATION_VALID,
    XML_SCHEMAV_CVC_COMPLEX_TYPE_2_1,
    XML_SCHEMAV_CVC_COMPLEX_TYPE_2_2,
    XML_SCHEMAV_CVC_COMPLEX_TYPE_2_3,
    XML_SCHEMAV_CVC_COMPLEX_TYPE_2_4,
    XML_SCHEMAV_CVC_ELT_1,
    XML_SCHEMAV_CVC_ELT_2,
    XML_SCHEMAV_CVC_ELT_3_1,
    XML_SCHEMAV_CVC_ELT_3_2_1,
    XML_SCHEMAV_CVC_ELT_3_2_2,
    XML_SCHEMAV_CVC_ELT_4_1,
    XML_SCHEMAV_CVC_ELT_4_2,
    XML_SCHEMAV_CVC_ELT_4_3,
    XML_SCHEMAV_CVC_ELT_5_1_1,
    XML_SCHEMAV_CVC_ELT_5_1_2,
    XML_SCHEMAV_CVC_ELT_5_2_1,
    XML_SCHEMAV_CVC_ELT_5_2_2_1,
    XML_SCHEMAV_CVC_ELT_5_2_2_2_1,
    XML_SCHEMAV_CVC_ELT_5_2_2_2_2,
    XML_SCHEMAV_CVC_ELT_6,
    XML_SCHEMAV_CVC_ELT_7,
    XML_SCHEMAV_CVC_ATTRIBUTE_1,
    XML_SCHEMAV_CVC_ATTRIBUTE_2,
    XML_SCHEMAV_CVC_ATTRIBUTE_3,
    XML_SCHEMAV_CVC_ATTRIBUTE_4,
    XML_SCHEMAV_CVC_COMPLEX_TYPE_3_1,
    XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_1,
    XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_2,
    XML_SCHEMAV_CVC_COMPLEX_TYPE_4,
    XML_SCHEMAV_CVC_COMPLEX_TYPE_5_1,
    XML_SCHEMAV_CVC_COMPLEX_TYPE_5_2,
    XML_SCHEMAV_ELEMENT_CONTENT,
    XML_SCHEMAV_DOCUMENT_ELEMENT_MISSING,
    XML_SCHEMAV_CVC_COMPLEX_TYPE_1,
    XML_SCHEMAV_CVC_AU,
    XML_SCHEMAV_CVC_TYPE_1,
    XML_SCHEMAV_CVC_TYPE_2,
    XML_SCHEMAV_CVC_IDC,
    XML_SCHEMAV_CVC_WILDCARD,
    XML_SCHEMAV_MISC,
    XML_XPTR_UNKNOWN_SCHEME = 1900,
    XML_XPTR_CHILDSEQ_START,
    XML_XPTR_EVAL_FAILED,
    XML_XPTR_EXTRA_OBJECTS,
    XML_C14N_CREATE_CTXT = 1950,
    XML_C14N_REQUIRES_UTF8,
    XML_C14N_CREATE_STACK,
    XML_C14N_INVALID_NODE,
    XML_C14N_UNKNOW_NODE,
    XML_C14N_RELATIVE_NAMESPACE,
    XML_FTP_PASV_ANSWER = 2000,
    XML_FTP_EPSV_ANSWER,
    XML_FTP_ACCNT,
    XML_FTP_URL_SYNTAX,
    XML_HTTP_URL_SYNTAX = 2020,
    XML_HTTP_USE_IP,
    XML_HTTP_UNKNOWN_HOST,
    XML_SCHEMAP_SRC_SIMPLE_TYPE_1 = 3000,
    XML_SCHEMAP_SRC_SIMPLE_TYPE_2,
    XML_SCHEMAP_SRC_SIMPLE_TYPE_3,
    XML_SCHEMAP_SRC_SIMPLE_TYPE_4,
    XML_SCHEMAP_SRC_RESOLVE,
    XML_SCHEMAP_SRC_RESTRICTION_BASE_OR_SIMPLETYPE,
    XML_SCHEMAP_SRC_LIST_ITEMTYPE_OR_SIMPLETYPE,
    XML_SCHEMAP_SRC_UNION_MEMBERTYPES_OR_SIMPLETYPES,
    XML_SCHEMAP_ST_PROPS_CORRECT_1,
    XML_SCHEMAP_ST_PROPS_CORRECT_2,
    XML_SCHEMAP_ST_PROPS_CORRECT_3,
    XML_SCHEMAP_COS_ST_RESTRICTS_1_1,
    XML_SCHEMAP_COS_ST_RESTRICTS_1_2,
    XML_SCHEMAP_COS_ST_RESTRICTS_1_3_1,
    XML_SCHEMAP_COS_ST_RESTRICTS_1_3_2,
    XML_SCHEMAP_COS_ST_RESTRICTS_2_1,
    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_1,
    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_2,
    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_1,
    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_2,
    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_3,
    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_4,
    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_5,
    XML_SCHEMAP_COS_ST_RESTRICTS_3_1,
    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1,
    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1_2,
    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_2,
    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_1,
    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_3,
    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_4,
    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_5,
    XML_SCHEMAP_COS_ST_DERIVED_OK_2_1,
    XML_SCHEMAP_COS_ST_DERIVED_OK_2_2,
    XML_SCHEMAP_S4S_ELEM_NOT_ALLOWED,
    XML_SCHEMAP_S4S_ELEM_MISSING,
    XML_SCHEMAP_S4S_ATTR_NOT_ALLOWED,
    XML_SCHEMAP_S4S_ATTR_MISSING,
    XML_SCHEMAP_S4S_ATTR_INVALID_VALUE,
    XML_SCHEMAP_SRC_ELEMENT_1,
    XML_SCHEMAP_SRC_ELEMENT_2_1,
    XML_SCHEMAP_SRC_ELEMENT_2_2,
    XML_SCHEMAP_SRC_ELEMENT_3,
    XML_SCHEMAP_P_PROPS_CORRECT_1,
    XML_SCHEMAP_P_PROPS_CORRECT_2_1,
    XML_SCHEMAP_P_PROPS_CORRECT_2_2,
    XML_SCHEMAP_E_PROPS_CORRECT_2,
    XML_SCHEMAP_E_PROPS_CORRECT_3,
    XML_SCHEMAP_E_PROPS_CORRECT_4,
    XML_SCHEMAP_E_PROPS_CORRECT_5,
    XML_SCHEMAP_E_PROPS_CORRECT_6,
    XML_SCHEMAP_SRC_INCLUDE,
    XML_SCHEMAP_SRC_ATTRIBUTE_1,
    XML_SCHEMAP_SRC_ATTRIBUTE_2,
    XML_SCHEMAP_SRC_ATTRIBUTE_3_1,
    XML_SCHEMAP_SRC_ATTRIBUTE_3_2,
    XML_SCHEMAP_SRC_ATTRIBUTE_4,
    XML_SCHEMAP_NO_XMLNS,
    XML_SCHEMAP_NO_XSI,
    XML_SCHEMAP_COS_VALID_DEFAULT_1,
    XML_SCHEMAP_COS_VALID_DEFAULT_2_1,
    XML_SCHEMAP_COS_VALID_DEFAULT_2_2_1,
    XML_SCHEMAP_COS_VALID_DEFAULT_2_2_2,
    XML_SCHEMAP_CVC_SIMPLE_TYPE,
    XML_SCHEMAP_COS_CT_EXTENDS_1_1,
    XML_SCHEMAP_SRC_IMPORT_1_1,
    XML_SCHEMAP_SRC_IMPORT_1_2,
    XML_SCHEMAP_SRC_IMPORT_2,
    XML_SCHEMAP_SRC_IMPORT_2_1,
    XML_SCHEMAP_SRC_IMPORT_2_2,
    XML_SCHEMAP_INTERNAL,
    XML_SCHEMAP_NOT_DETERMINISTIC,
    XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_1,
    XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_2,
    XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_3,
    XML_SCHEMAP_MG_PROPS_CORRECT_1,
    XML_SCHEMAP_MG_PROPS_CORRECT_2,
    XML_SCHEMAP_SRC_CT_1,
    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_3,
    XML_SCHEMAP_AU_PROPS_CORRECT_2,
    XML_SCHEMAP_A_PROPS_CORRECT_2,
    XML_SCHEMAP_C_PROPS_CORRECT,
    XML_SCHEMAP_SRC_REDEFINE,
    XML_SCHEMAP_SRC_IMPORT,
    XML_SCHEMAP_WARN_SKIP_SCHEMA,
    XML_SCHEMAP_WARN_UNLOCATED_SCHEMA,
    XML_SCHEMAP_WARN_ATTR_REDECL_PROH,
    XML_SCHEMAP_WARN_ATTR_POINTLESS_PROH,
    XML_SCHEMAP_AG_PROPS_CORRECT,
    XML_SCHEMAP_COS_CT_EXTENDS_1_2,
    XML_SCHEMAP_AU_PROPS_CORRECT,
    XML_SCHEMAP_A_PROPS_CORRECT_3,
    XML_SCHEMAP_COS_ALL_LIMITED,
    XML_SCHEMATRONV_ASSERT = 4000,
    XML_SCHEMATRONV_REPORT,
    XML_MODULE_OPEN = 4900,
    XML_MODULE_CLOSE,
    XML_CHECK_FOUND_ELEMENT = 5000,
    XML_CHECK_FOUND_ATTRIBUTE,
    XML_CHECK_FOUND_TEXT,
    XML_CHECK_FOUND_CDATA,
    XML_CHECK_FOUND_ENTITYREF,
    XML_CHECK_FOUND_ENTITY,
    XML_CHECK_FOUND_PI,
    XML_CHECK_FOUND_COMMENT,
    XML_CHECK_FOUND_DOCTYPE,
    XML_CHECK_FOUND_FRAGMENT,
    XML_CHECK_FOUND_NOTATION,
    XML_CHECK_UNKNOWN_NODE,
    XML_CHECK_ENTITY_TYPE,
    XML_CHECK_NO_PARENT,
    XML_CHECK_NO_DOC,
    XML_CHECK_NO_NAME,
    XML_CHECK_NO_ELEM,
    XML_CHECK_WRONG_DOC,
    XML_CHECK_NO_PREV,
    XML_CHECK_WRONG_PREV,
    XML_CHECK_NO_NEXT,
    XML_CHECK_WRONG_NEXT,
    XML_CHECK_NOT_DTD,
    XML_CHECK_NOT_ATTR,
    XML_CHECK_NOT_ATTR_DECL,
    XML_CHECK_NOT_ELEM_DECL,
    XML_CHECK_NOT_ENTITY_DECL,
    XML_CHECK_NOT_NS_DECL,
    XML_CHECK_NO_HREF,
    XML_CHECK_WRONG_PARENT,
    XML_CHECK_NS_SCOPE,
    XML_CHECK_NS_ANCESTOR,
    XML_CHECK_NOT_UTF8,
    XML_CHECK_NO_DICT,
    XML_CHECK_NOT_NCNAME,
    XML_CHECK_OUTSIDE_DICT,
    XML_CHECK_WRONG_NAME,
    XML_CHECK_NAME_NOT_NULL,
    XML_I18N_NO_NAME = 6000,
    XML_I18N_NO_HANDLER,
    XML_I18N_EXCESS_HANDLER,
    XML_I18N_CONV_FAILED,
    XML_I18N_NO_OUTPUT,
    XML_BUF_OVERFLOW = 7000
} xmlParserErrors;
# 844 "./include/libxml/xmlerror.h"
typedef void ( *xmlGenericErrorFunc) (void *ctx,
     const char *msg,
     ...) __attribute__((__format__(__printf__,2,3)));
# 855 "./include/libxml/xmlerror.h"
typedef void ( *xmlStructuredErrorFunc) (void *userData, xmlErrorPtr error);





 void
    xmlSetGenericErrorFunc (void *ctx,
     xmlGenericErrorFunc handler);
 void
    initGenericErrorDefaultFunc (xmlGenericErrorFunc *handler);

 void
    xmlSetStructuredErrorFunc (void *ctx,
     xmlStructuredErrorFunc handler);




 void
    xmlParserError (void *ctx,
     const char *msg,
     ...) __attribute__((__format__(__printf__,2,3)));
 void
    xmlParserWarning (void *ctx,
     const char *msg,
     ...) __attribute__((__format__(__printf__,2,3)));
 void
    xmlParserValidityError (void *ctx,
     const char *msg,
     ...) __attribute__((__format__(__printf__,2,3)));
 void
    xmlParserValidityWarning (void *ctx,
     const char *msg,
     ...) __attribute__((__format__(__printf__,2,3)));
 void
    xmlParserPrintFileInfo (xmlParserInputPtr input);
 void
    xmlParserPrintFileContext (xmlParserInputPtr input);




 xmlErrorPtr
    xmlGetLastError (void);
 void
    xmlResetLastError (void);
 xmlErrorPtr
    xmlCtxtGetLastError (void *ctx);
 void
    xmlCtxtResetLastError (void *ctx);
 void
    xmlResetError (xmlErrorPtr err);
 int
    xmlCopyError (xmlErrorPtr from,
     xmlErrorPtr to);





 void
    __xmlRaiseError (xmlStructuredErrorFunc schannel,
     xmlGenericErrorFunc channel,
     void *data,
                                 void *ctx,
     void *node,
     int domain,
     int code,
     xmlErrorLevel level,
     const char *file,
     int line,
     const char *str1,
     const char *str2,
     const char *str3,
     int int1,
     int col,
     const char *msg,
     ...) __attribute__((__format__(__printf__,16,17)));
 void
    __xmlSimpleError (int domain,
     int code,
     xmlNodePtr node,
     const char *msg,
     const char *extra);
# 16 "./include/libxml/valid.h" 2

# 1 "./include/libxml/list.h" 1
# 20 "./include/libxml/list.h"
typedef struct _xmlLink xmlLink;
typedef xmlLink *xmlLinkPtr;

typedef struct _xmlList xmlList;
typedef xmlList *xmlListPtr;







typedef void (*xmlListDeallocator) (xmlLinkPtr lk);
# 42 "./include/libxml/list.h"
typedef int (*xmlListDataCompare) (const void *data0, const void *data1);
# 52 "./include/libxml/list.h"
typedef int (*xmlListWalker) (const void *data, const void *user);


 xmlListPtr
  xmlListCreate (xmlListDeallocator deallocator,
                                  xmlListDataCompare compare);
 void
  xmlListDelete (xmlListPtr l);


 void *
  xmlListSearch (xmlListPtr l,
      void *data);
 void *
  xmlListReverseSearch (xmlListPtr l,
      void *data);
 int
  xmlListInsert (xmlListPtr l,
      void *data) ;
 int
  xmlListAppend (xmlListPtr l,
      void *data) ;
 int
  xmlListRemoveFirst (xmlListPtr l,
      void *data);
 int
  xmlListRemoveLast (xmlListPtr l,
      void *data);
 int
  xmlListRemoveAll (xmlListPtr l,
      void *data);
 void
  xmlListClear (xmlListPtr l);
 int
  xmlListEmpty (xmlListPtr l);
 xmlLinkPtr
  xmlListFront (xmlListPtr l);
 xmlLinkPtr
  xmlListEnd (xmlListPtr l);
 int
  xmlListSize (xmlListPtr l);

 void
  xmlListPopFront (xmlListPtr l);
 void
  xmlListPopBack (xmlListPtr l);
 int
  xmlListPushFront (xmlListPtr l,
      void *data);
 int
  xmlListPushBack (xmlListPtr l,
      void *data);


 void
  xmlListReverse (xmlListPtr l);
 void
  xmlListSort (xmlListPtr l);
 void
  xmlListWalk (xmlListPtr l,
      xmlListWalker walker,
      const void *user);
 void
  xmlListReverseWalk (xmlListPtr l,
      xmlListWalker walker,
      const void *user);
 void
  xmlListMerge (xmlListPtr l1,
      xmlListPtr l2);
 xmlListPtr
  xmlListDup (const xmlListPtr old);
 int
  xmlListCopy (xmlListPtr cur,
      const xmlListPtr old);

 void *
  xmlLinkGetData (xmlLinkPtr lk);
# 18 "./include/libxml/valid.h" 2
# 1 "./include/libxml/xmlautomata.h" 1
# 29 "./include/libxml/xmlautomata.h"
typedef struct _xmlAutomata xmlAutomata;
typedef xmlAutomata *xmlAutomataPtr;






typedef struct _xmlAutomataState xmlAutomataState;
typedef xmlAutomataState *xmlAutomataStatePtr;




 xmlAutomataPtr
      xmlNewAutomata (void);
 void
      xmlFreeAutomata (xmlAutomataPtr am);

 xmlAutomataStatePtr
      xmlAutomataGetInitState (xmlAutomataPtr am);
 int
      xmlAutomataSetFinalState (xmlAutomataPtr am,
       xmlAutomataStatePtr state);
 xmlAutomataStatePtr
      xmlAutomataNewState (xmlAutomataPtr am);
 xmlAutomataStatePtr
      xmlAutomataNewTransition (xmlAutomataPtr am,
       xmlAutomataStatePtr from,
       xmlAutomataStatePtr to,
       const xmlChar *token,
       void *data);
 xmlAutomataStatePtr
      xmlAutomataNewTransition2 (xmlAutomataPtr am,
       xmlAutomataStatePtr from,
       xmlAutomataStatePtr to,
       const xmlChar *token,
       const xmlChar *token2,
       void *data);
 xmlAutomataStatePtr
                    xmlAutomataNewNegTrans (xmlAutomataPtr am,
       xmlAutomataStatePtr from,
       xmlAutomataStatePtr to,
       const xmlChar *token,
       const xmlChar *token2,
       void *data);

 xmlAutomataStatePtr
      xmlAutomataNewCountTrans (xmlAutomataPtr am,
       xmlAutomataStatePtr from,
       xmlAutomataStatePtr to,
       const xmlChar *token,
       int min,
       int max,
       void *data);
 xmlAutomataStatePtr
      xmlAutomataNewCountTrans2 (xmlAutomataPtr am,
       xmlAutomataStatePtr from,
       xmlAutomataStatePtr to,
       const xmlChar *token,
       const xmlChar *token2,
       int min,
       int max,
       void *data);
 xmlAutomataStatePtr
      xmlAutomataNewOnceTrans (xmlAutomataPtr am,
       xmlAutomataStatePtr from,
       xmlAutomataStatePtr to,
       const xmlChar *token,
       int min,
       int max,
       void *data);
 xmlAutomataStatePtr
      xmlAutomataNewOnceTrans2 (xmlAutomataPtr am,
       xmlAutomataStatePtr from,
       xmlAutomataStatePtr to,
       const xmlChar *token,
       const xmlChar *token2,
       int min,
       int max,
       void *data);
 xmlAutomataStatePtr
      xmlAutomataNewAllTrans (xmlAutomataPtr am,
       xmlAutomataStatePtr from,
       xmlAutomataStatePtr to,
       int lax);
 xmlAutomataStatePtr
      xmlAutomataNewEpsilon (xmlAutomataPtr am,
       xmlAutomataStatePtr from,
       xmlAutomataStatePtr to);
 xmlAutomataStatePtr
      xmlAutomataNewCountedTrans (xmlAutomataPtr am,
       xmlAutomataStatePtr from,
       xmlAutomataStatePtr to,
       int counter);
 xmlAutomataStatePtr
      xmlAutomataNewCounterTrans (xmlAutomataPtr am,
       xmlAutomataStatePtr from,
       xmlAutomataStatePtr to,
       int counter);
 int
      xmlAutomataNewCounter (xmlAutomataPtr am,
       int min,
       int max);

 xmlRegexpPtr
      xmlAutomataCompile (xmlAutomataPtr am);
 int
      xmlAutomataIsDeterminist (xmlAutomataPtr am);
# 19 "./include/libxml/valid.h" 2
# 28 "./include/libxml/valid.h"
typedef struct _xmlValidState xmlValidState;
typedef xmlValidState *xmlValidStatePtr;
# 42 "./include/libxml/valid.h"
typedef void ( *xmlValidityErrorFunc) (void *ctx,
        const char *msg,
        ...) __attribute__((__format__(__printf__,2,3)));
# 57 "./include/libxml/valid.h"
typedef void ( *xmlValidityWarningFunc) (void *ctx,
          const char *msg,
          ...) __attribute__((__format__(__printf__,2,3)));
# 80 "./include/libxml/valid.h"
typedef struct _xmlValidCtxt xmlValidCtxt;
typedef xmlValidCtxt *xmlValidCtxtPtr;
struct _xmlValidCtxt {
    void *userData;
    xmlValidityErrorFunc error;
    xmlValidityWarningFunc warning;


    xmlNodePtr node;
    int nodeNr;
    int nodeMax;
    xmlNodePtr *nodeTab;

    unsigned int finishDtd;
    xmlDocPtr doc;
    int valid;


    xmlValidState *vstate;
    int vstateNr;
    int vstateMax;
    xmlValidState *vstateTab;


    xmlAutomataPtr am;
    xmlAutomataStatePtr state;




};






typedef struct _xmlHashTable xmlNotationTable;
typedef xmlNotationTable *xmlNotationTablePtr;






typedef struct _xmlHashTable xmlElementTable;
typedef xmlElementTable *xmlElementTablePtr;






typedef struct _xmlHashTable xmlAttributeTable;
typedef xmlAttributeTable *xmlAttributeTablePtr;






typedef struct _xmlHashTable xmlIDTable;
typedef xmlIDTable *xmlIDTablePtr;






typedef struct _xmlHashTable xmlRefTable;
typedef xmlRefTable *xmlRefTablePtr;


 xmlNotationPtr
  xmlAddNotationDecl (xmlValidCtxtPtr ctxt,
      xmlDtdPtr dtd,
      const xmlChar *name,
      const xmlChar *PublicID,
      const xmlChar *SystemID);

 xmlNotationTablePtr
  xmlCopyNotationTable (xmlNotationTablePtr table);

 void
  xmlFreeNotationTable (xmlNotationTablePtr table);

 void
  xmlDumpNotationDecl (xmlBufferPtr buf,
      xmlNotationPtr nota);
 void
  xmlDumpNotationTable (xmlBufferPtr buf,
      xmlNotationTablePtr table);




 xmlElementContentPtr
  xmlNewElementContent (const xmlChar *name,
      xmlElementContentType type);
 xmlElementContentPtr
  xmlCopyElementContent (xmlElementContentPtr content);
 void
  xmlFreeElementContent (xmlElementContentPtr cur);

 xmlElementContentPtr
  xmlNewDocElementContent (xmlDocPtr doc,
      const xmlChar *name,
      xmlElementContentType type);
 xmlElementContentPtr
  xmlCopyDocElementContent(xmlDocPtr doc,
      xmlElementContentPtr content);
 void
  xmlFreeDocElementContent(xmlDocPtr doc,
      xmlElementContentPtr cur);
 void
  xmlSnprintfElementContent(char *buf,
      int size,
                                  xmlElementContentPtr content,
      int englob);


 void
  xmlSprintfElementContent(char *buf,
                                  xmlElementContentPtr content,
      int englob);




 xmlElementPtr
  xmlAddElementDecl (xmlValidCtxtPtr ctxt,
      xmlDtdPtr dtd,
      const xmlChar *name,
      xmlElementTypeVal type,
      xmlElementContentPtr content);

 xmlElementTablePtr
  xmlCopyElementTable (xmlElementTablePtr table);

 void
  xmlFreeElementTable (xmlElementTablePtr table);

 void
  xmlDumpElementTable (xmlBufferPtr buf,
      xmlElementTablePtr table);
 void
  xmlDumpElementDecl (xmlBufferPtr buf,
      xmlElementPtr elem);



 xmlEnumerationPtr
  xmlCreateEnumeration (const xmlChar *name);
 void
  xmlFreeEnumeration (xmlEnumerationPtr cur);

 xmlEnumerationPtr
  xmlCopyEnumeration (xmlEnumerationPtr cur);



 xmlAttributePtr
  xmlAddAttributeDecl (xmlValidCtxtPtr ctxt,
      xmlDtdPtr dtd,
      const xmlChar *elem,
      const xmlChar *name,
      const xmlChar *ns,
      xmlAttributeType type,
      xmlAttributeDefault def,
      const xmlChar *defaultValue,
      xmlEnumerationPtr tree);

 xmlAttributeTablePtr
  xmlCopyAttributeTable (xmlAttributeTablePtr table);

 void
  xmlFreeAttributeTable (xmlAttributeTablePtr table);

 void
  xmlDumpAttributeTable (xmlBufferPtr buf,
     xmlAttributeTablePtr table);
 void
  xmlDumpAttributeDecl (xmlBufferPtr buf,
     xmlAttributePtr attr);



 xmlIDPtr
  xmlAddID (xmlValidCtxtPtr ctxt,
     xmlDocPtr doc,
     const xmlChar *value,
     xmlAttrPtr attr);
 void
  xmlFreeIDTable (xmlIDTablePtr table);
 xmlAttrPtr
  xmlGetID (xmlDocPtr doc,
     const xmlChar *ID);
 int
  xmlIsID (xmlDocPtr doc,
     xmlNodePtr elem,
     xmlAttrPtr attr);
 int
  xmlRemoveID (xmlDocPtr doc,
     xmlAttrPtr attr);


 xmlRefPtr
  xmlAddRef (xmlValidCtxtPtr ctxt,
     xmlDocPtr doc,
     const xmlChar *value,
     xmlAttrPtr attr);
 void
  xmlFreeRefTable (xmlRefTablePtr table);
 int
  xmlIsRef (xmlDocPtr doc,
     xmlNodePtr elem,
     xmlAttrPtr attr);
 int
  xmlRemoveRef (xmlDocPtr doc,
     xmlAttrPtr attr);
 xmlListPtr
  xmlGetRefs (xmlDocPtr doc,
     const xmlChar *ID);






 xmlValidCtxtPtr
  xmlNewValidCtxt(void);
 void
  xmlFreeValidCtxt(xmlValidCtxtPtr);

 int
  xmlValidateRoot (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc);
 int
  xmlValidateElementDecl (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc,
                           xmlElementPtr elem);
 xmlChar *
  xmlValidNormalizeAttributeValue(xmlDocPtr doc,
      xmlNodePtr elem,
      const xmlChar *name,
      const xmlChar *value);
 xmlChar *
  xmlValidCtxtNormalizeAttributeValue(xmlValidCtxtPtr ctxt,
      xmlDocPtr doc,
      xmlNodePtr elem,
      const xmlChar *name,
      const xmlChar *value);
 int
  xmlValidateAttributeDecl(xmlValidCtxtPtr ctxt,
      xmlDocPtr doc,
                           xmlAttributePtr attr);
 int
  xmlValidateAttributeValue(xmlAttributeType type,
      const xmlChar *value);
 int
  xmlValidateNotationDecl (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc,
                           xmlNotationPtr nota);
 int
  xmlValidateDtd (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc,
      xmlDtdPtr dtd);
 int
  xmlValidateDtdFinal (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc);
 int
  xmlValidateDocument (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc);
 int
  xmlValidateElement (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc,
      xmlNodePtr elem);
 int
  xmlValidateOneElement (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc,
                           xmlNodePtr elem);
 int
  xmlValidateOneAttribute (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc,
      xmlNodePtr elem,
      xmlAttrPtr attr,
      const xmlChar *value);
 int
  xmlValidateOneNamespace (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc,
      xmlNodePtr elem,
      const xmlChar *prefix,
      xmlNsPtr ns,
      const xmlChar *value);
 int
  xmlValidateDocumentFinal(xmlValidCtxtPtr ctxt,
      xmlDocPtr doc);



 int
  xmlValidateNotationUse (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc,
      const xmlChar *notationName);


 int
  xmlIsMixedElement (xmlDocPtr doc,
      const xmlChar *name);
 xmlAttributePtr
  xmlGetDtdAttrDesc (xmlDtdPtr dtd,
      const xmlChar *elem,
      const xmlChar *name);
 xmlAttributePtr
  xmlGetDtdQAttrDesc (xmlDtdPtr dtd,
      const xmlChar *elem,
      const xmlChar *name,
      const xmlChar *prefix);
 xmlNotationPtr
  xmlGetDtdNotationDesc (xmlDtdPtr dtd,
      const xmlChar *name);
 xmlElementPtr
  xmlGetDtdQElementDesc (xmlDtdPtr dtd,
      const xmlChar *name,
      const xmlChar *prefix);
 xmlElementPtr
  xmlGetDtdElementDesc (xmlDtdPtr dtd,
      const xmlChar *name);



 int
  xmlValidGetPotentialChildren(xmlElementContent *ctree,
      const xmlChar **names,
      int *len,
      int max);

 int
  xmlValidGetValidElements(xmlNode *prev,
      xmlNode *next,
      const xmlChar **names,
      int max);
 int
  xmlValidateNameValue (const xmlChar *value);
 int
  xmlValidateNamesValue (const xmlChar *value);
 int
  xmlValidateNmtokenValue (const xmlChar *value);
 int
  xmlValidateNmtokensValue(const xmlChar *value);





 int
  xmlValidBuildContentModel(xmlValidCtxtPtr ctxt,
      xmlElementPtr elem);

 int
  xmlValidatePushElement (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc,
      xmlNodePtr elem,
      const xmlChar *qname);
 int
  xmlValidatePushCData (xmlValidCtxtPtr ctxt,
      const xmlChar *data,
      int len);
 int
  xmlValidatePopElement (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc,
      xmlNodePtr elem,
      const xmlChar *qname);
# 20 "./include/libxml/parser.h" 2
# 1 "./include/libxml/entities.h" 1
# 24 "./include/libxml/entities.h"
typedef enum {
    XML_INTERNAL_GENERAL_ENTITY = 1,
    XML_EXTERNAL_GENERAL_PARSED_ENTITY = 2,
    XML_EXTERNAL_GENERAL_UNPARSED_ENTITY = 3,
    XML_INTERNAL_PARAMETER_ENTITY = 4,
    XML_EXTERNAL_PARAMETER_ENTITY = 5,
    XML_INTERNAL_PREDEFINED_ENTITY = 6
} xmlEntityType;






struct _xmlEntity {
    void *_private;
    xmlElementType type;
    const xmlChar *name;
    struct _xmlNode *children;
    struct _xmlNode *last;
    struct _xmlDtd *parent;
    struct _xmlNode *next;
    struct _xmlNode *prev;
    struct _xmlDoc *doc;

    xmlChar *orig;
    xmlChar *content;
    int length;
    xmlEntityType etype;
    const xmlChar *ExternalID;
    const xmlChar *SystemID;

    struct _xmlEntity *nexte;
    const xmlChar *URI;
    int owner;
    int checked;


};






typedef struct _xmlHashTable xmlEntitiesTable;
typedef xmlEntitiesTable *xmlEntitiesTablePtr;






 void
  xmlInitializePredefinedEntities (void);


 xmlEntityPtr
   xmlNewEntity (xmlDocPtr doc,
       const xmlChar *name,
       int type,
       const xmlChar *ExternalID,
       const xmlChar *SystemID,
       const xmlChar *content);
 xmlEntityPtr
   xmlAddDocEntity (xmlDocPtr doc,
       const xmlChar *name,
       int type,
       const xmlChar *ExternalID,
       const xmlChar *SystemID,
       const xmlChar *content);
 xmlEntityPtr
   xmlAddDtdEntity (xmlDocPtr doc,
       const xmlChar *name,
       int type,
       const xmlChar *ExternalID,
       const xmlChar *SystemID,
       const xmlChar *content);
 xmlEntityPtr
   xmlGetPredefinedEntity (const xmlChar *name);
 xmlEntityPtr
   xmlGetDocEntity (xmlDocPtr doc,
       const xmlChar *name);
 xmlEntityPtr
   xmlGetDtdEntity (xmlDocPtr doc,
       const xmlChar *name);
 xmlEntityPtr
   xmlGetParameterEntity (xmlDocPtr doc,
       const xmlChar *name);

 const xmlChar *
   xmlEncodeEntities (xmlDocPtr doc,
       const xmlChar *input);

 xmlChar *
   xmlEncodeEntitiesReentrant(xmlDocPtr doc,
       const xmlChar *input);
 xmlChar *
   xmlEncodeSpecialChars (xmlDocPtr doc,
       const xmlChar *input);
 xmlEntitiesTablePtr
   xmlCreateEntitiesTable (void);

 xmlEntitiesTablePtr
   xmlCopyEntitiesTable (xmlEntitiesTablePtr table);

 void
   xmlFreeEntitiesTable (xmlEntitiesTablePtr table);

 void
   xmlDumpEntitiesTable (xmlBufferPtr buf,
       xmlEntitiesTablePtr table);
 void
   xmlDumpEntityDecl (xmlBufferPtr buf,
       xmlEntityPtr ent);


 void
   xmlCleanupPredefinedEntities(void);
# 21 "./include/libxml/parser.h" 2
# 1 "./include/libxml/xmlerror.h" 1
# 22 "./include/libxml/parser.h" 2
# 52 "./include/libxml/parser.h"
typedef void (* xmlParserInputDeallocate)(xmlChar *str);

struct _xmlParserInput {

    xmlParserInputBufferPtr buf;

    const char *filename;
    const char *directory;
    const xmlChar *base;
    const xmlChar *cur;
    const xmlChar *end;
    int length;
    int line;
    int col;





    unsigned long consumed;
    xmlParserInputDeallocate free;
    const xmlChar *encoding;
    const xmlChar *version;
    int standalone;
    int id;
};
# 86 "./include/libxml/parser.h"
typedef struct _xmlParserNodeInfo xmlParserNodeInfo;
typedef xmlParserNodeInfo *xmlParserNodeInfoPtr;

struct _xmlParserNodeInfo {
  const struct _xmlNode* node;

  unsigned long begin_pos;
  unsigned long begin_line;
  unsigned long end_pos;
  unsigned long end_line;
};

typedef struct _xmlParserNodeInfoSeq xmlParserNodeInfoSeq;
typedef xmlParserNodeInfoSeq *xmlParserNodeInfoSeqPtr;
struct _xmlParserNodeInfoSeq {
  unsigned long maximum;
  unsigned long length;
  xmlParserNodeInfo* buffer;
};







typedef enum {
    XML_PARSER_EOF = -1,
    XML_PARSER_START = 0,
    XML_PARSER_MISC,
    XML_PARSER_PI,
    XML_PARSER_DTD,
    XML_PARSER_PROLOG,
    XML_PARSER_COMMENT,
    XML_PARSER_START_TAG,
    XML_PARSER_CONTENT,
    XML_PARSER_CDATA_SECTION,
    XML_PARSER_END_TAG,
    XML_PARSER_ENTITY_DECL,
    XML_PARSER_ENTITY_VALUE,
    XML_PARSER_ATTRIBUTE_VALUE,
    XML_PARSER_SYSTEM_LITERAL,
    XML_PARSER_EPILOG,
    XML_PARSER_IGNORE,
    XML_PARSER_PUBLIC_LITERAL
} xmlParserInputState;
# 163 "./include/libxml/parser.h"
typedef enum {
    XML_PARSE_UNKNOWN = 0,
    XML_PARSE_DOM = 1,
    XML_PARSE_SAX = 2,
    XML_PARSE_PUSH_DOM = 3,
    XML_PARSE_PUSH_SAX = 4,
    XML_PARSE_READER = 5
} xmlParserMode;
# 184 "./include/libxml/parser.h"
struct _xmlParserCtxt {
    struct _xmlSAXHandler *sax;
    void *userData;
    xmlDocPtr myDoc;
    int wellFormed;
    int replaceEntities;
    const xmlChar *version;
    const xmlChar *encoding;
    int standalone;
    int html;





    xmlParserInputPtr input;
    int inputNr;
    int inputMax;
    xmlParserInputPtr *inputTab;


    xmlNodePtr node;
    int nodeNr;
    int nodeMax;
    xmlNodePtr *nodeTab;

    int record_info;
    xmlParserNodeInfoSeq node_seq;

    int errNo;

    int hasExternalSubset;
    int hasPErefs;
    int external;

    int valid;
    int validate;
    xmlValidCtxt vctxt;

    xmlParserInputState instate;
    int token;

    char *directory;


    const xmlChar *name;
    int nameNr;
    int nameMax;
    const xmlChar * *nameTab;

    long nbChars;
    long checkIndex;
    int keepBlanks;
    int disableSAX;
    int inSubset;
    const xmlChar * intSubName;
    xmlChar * extSubURI;
    xmlChar * extSubSystem;


    int * space;
    int spaceNr;
    int spaceMax;
    int * spaceTab;

    int depth;
    xmlParserInputPtr entity;
    int charset;

    int nodelen;
    int nodemem;
    int pedantic;
    void *_private;

    int loadsubset;
    int linenumbers;
    void *catalogs;
    int recovery;
    int progressive;
    xmlDictPtr dict;
    const xmlChar * *atts;
    int maxatts;
    int docdict;




    const xmlChar *str_xml;
    const xmlChar *str_xmlns;
    const xmlChar *str_xml_ns;




    int sax2;
    int nsNr;
    int nsMax;
    const xmlChar * *nsTab;
    int *attallocs;
    void * *pushTab;
    xmlHashTablePtr attsDefault;
    xmlHashTablePtr attsSpecial;
    int nsWellFormed;
    int options;




    int dictNames;
    int freeElemsNr;
    xmlNodePtr freeElems;
    int freeAttrsNr;
    xmlAttrPtr freeAttrs;




    xmlError lastError;
    xmlParserMode parseMode;
    unsigned long nbentities;
    unsigned long sizeentities;


    xmlParserNodeInfo *nodeInfo;
    int nodeInfoNr;
    int nodeInfoMax;
    xmlParserNodeInfo *nodeInfoTab;

    int input_id;
};






struct _xmlSAXLocator {
    const xmlChar *(*getPublicId)(void *ctx);
    const xmlChar *(*getSystemId)(void *ctx);
    int (*getLineNumber)(void *ctx);
    int (*getColumnNumber)(void *ctx);
};
# 349 "./include/libxml/parser.h"
typedef xmlParserInputPtr (*resolveEntitySAXFunc) (void *ctx,
    const xmlChar *publicId,
    const xmlChar *systemId);
# 361 "./include/libxml/parser.h"
typedef void (*internalSubsetSAXFunc) (void *ctx,
    const xmlChar *name,
    const xmlChar *ExternalID,
    const xmlChar *SystemID);
# 374 "./include/libxml/parser.h"
typedef void (*externalSubsetSAXFunc) (void *ctx,
    const xmlChar *name,
    const xmlChar *ExternalID,
    const xmlChar *SystemID);
# 387 "./include/libxml/parser.h"
typedef xmlEntityPtr (*getEntitySAXFunc) (void *ctx,
    const xmlChar *name);
# 398 "./include/libxml/parser.h"
typedef xmlEntityPtr (*getParameterEntitySAXFunc) (void *ctx,
    const xmlChar *name);
# 411 "./include/libxml/parser.h"
typedef void (*entityDeclSAXFunc) (void *ctx,
    const xmlChar *name,
    int type,
    const xmlChar *publicId,
    const xmlChar *systemId,
    xmlChar *content);
# 426 "./include/libxml/parser.h"
typedef void (*notationDeclSAXFunc)(void *ctx,
    const xmlChar *name,
    const xmlChar *publicId,
    const xmlChar *systemId);
# 442 "./include/libxml/parser.h"
typedef void (*attributeDeclSAXFunc)(void *ctx,
    const xmlChar *elem,
    const xmlChar *fullname,
    int type,
    int def,
    const xmlChar *defaultValue,
    xmlEnumerationPtr tree);
# 458 "./include/libxml/parser.h"
typedef void (*elementDeclSAXFunc)(void *ctx,
    const xmlChar *name,
    int type,
    xmlElementContentPtr content);
# 472 "./include/libxml/parser.h"
typedef void (*unparsedEntityDeclSAXFunc)(void *ctx,
    const xmlChar *name,
    const xmlChar *publicId,
    const xmlChar *systemId,
    const xmlChar *notationName);
# 485 "./include/libxml/parser.h"
typedef void (*setDocumentLocatorSAXFunc) (void *ctx,
    xmlSAXLocatorPtr loc);






typedef void (*startDocumentSAXFunc) (void *ctx);






typedef void (*endDocumentSAXFunc) (void *ctx);
# 509 "./include/libxml/parser.h"
typedef void (*startElementSAXFunc) (void *ctx,
    const xmlChar *name,
    const xmlChar **atts);







typedef void (*endElementSAXFunc) (void *ctx,
    const xmlChar *name);
# 532 "./include/libxml/parser.h"
typedef void (*attributeSAXFunc) (void *ctx,
    const xmlChar *name,
    const xmlChar *value);







typedef void (*referenceSAXFunc) (void *ctx,
    const xmlChar *name);
# 552 "./include/libxml/parser.h"
typedef void (*charactersSAXFunc) (void *ctx,
    const xmlChar *ch,
    int len);
# 564 "./include/libxml/parser.h"
typedef void (*ignorableWhitespaceSAXFunc) (void *ctx,
    const xmlChar *ch,
    int len);
# 575 "./include/libxml/parser.h"
typedef void (*processingInstructionSAXFunc) (void *ctx,
    const xmlChar *target,
    const xmlChar *data);







typedef void (*commentSAXFunc) (void *ctx,
    const xmlChar *value);
# 595 "./include/libxml/parser.h"
typedef void (*cdataBlockSAXFunc) (
                         void *ctx,
    const xmlChar *value,
    int len);
# 607 "./include/libxml/parser.h"
typedef void ( *warningSAXFunc) (void *ctx,
    const char *msg, ...) __attribute__((__format__(__printf__,2,3)));
# 617 "./include/libxml/parser.h"
typedef void ( *errorSAXFunc) (void *ctx,
    const char *msg, ...) __attribute__((__format__(__printf__,2,3)));
# 629 "./include/libxml/parser.h"
typedef void ( *fatalErrorSAXFunc) (void *ctx,
    const char *msg, ...) __attribute__((__format__(__printf__,2,3)));
# 639 "./include/libxml/parser.h"
typedef int (*isStandaloneSAXFunc) (void *ctx);
# 648 "./include/libxml/parser.h"
typedef int (*hasInternalSubsetSAXFunc) (void *ctx);
# 658 "./include/libxml/parser.h"
typedef int (*hasExternalSubsetSAXFunc) (void *ctx);
# 691 "./include/libxml/parser.h"
typedef void (*startElementNsSAX2Func) (void *ctx,
     const xmlChar *localname,
     const xmlChar *prefix,
     const xmlChar *URI,
     int nb_namespaces,
     const xmlChar **namespaces,
     int nb_attributes,
     int nb_defaulted,
     const xmlChar **attributes);
# 712 "./include/libxml/parser.h"
typedef void (*endElementNsSAX2Func) (void *ctx,
     const xmlChar *localname,
     const xmlChar *prefix,
     const xmlChar *URI);


struct _xmlSAXHandler {
    internalSubsetSAXFunc internalSubset;
    isStandaloneSAXFunc isStandalone;
    hasInternalSubsetSAXFunc hasInternalSubset;
    hasExternalSubsetSAXFunc hasExternalSubset;
    resolveEntitySAXFunc resolveEntity;
    getEntitySAXFunc getEntity;
    entityDeclSAXFunc entityDecl;
    notationDeclSAXFunc notationDecl;
    attributeDeclSAXFunc attributeDecl;
    elementDeclSAXFunc elementDecl;
    unparsedEntityDeclSAXFunc unparsedEntityDecl;
    setDocumentLocatorSAXFunc setDocumentLocator;
    startDocumentSAXFunc startDocument;
    endDocumentSAXFunc endDocument;
    startElementSAXFunc startElement;
    endElementSAXFunc endElement;
    referenceSAXFunc reference;
    charactersSAXFunc characters;
    ignorableWhitespaceSAXFunc ignorableWhitespace;
    processingInstructionSAXFunc processingInstruction;
    commentSAXFunc comment;
    warningSAXFunc warning;
    errorSAXFunc error;
    fatalErrorSAXFunc fatalError;
    getParameterEntitySAXFunc getParameterEntity;
    cdataBlockSAXFunc cdataBlock;
    externalSubsetSAXFunc externalSubset;
    unsigned int initialized;

    void *_private;
    startElementNsSAX2Func startElementNs;
    endElementNsSAX2Func endElementNs;
    xmlStructuredErrorFunc serror;
};




typedef struct _xmlSAXHandlerV1 xmlSAXHandlerV1;
typedef xmlSAXHandlerV1 *xmlSAXHandlerV1Ptr;
struct _xmlSAXHandlerV1 {
    internalSubsetSAXFunc internalSubset;
    isStandaloneSAXFunc isStandalone;
    hasInternalSubsetSAXFunc hasInternalSubset;
    hasExternalSubsetSAXFunc hasExternalSubset;
    resolveEntitySAXFunc resolveEntity;
    getEntitySAXFunc getEntity;
    entityDeclSAXFunc entityDecl;
    notationDeclSAXFunc notationDecl;
    attributeDeclSAXFunc attributeDecl;
    elementDeclSAXFunc elementDecl;
    unparsedEntityDeclSAXFunc unparsedEntityDecl;
    setDocumentLocatorSAXFunc setDocumentLocator;
    startDocumentSAXFunc startDocument;
    endDocumentSAXFunc endDocument;
    startElementSAXFunc startElement;
    endElementSAXFunc endElement;
    referenceSAXFunc reference;
    charactersSAXFunc characters;
    ignorableWhitespaceSAXFunc ignorableWhitespace;
    processingInstructionSAXFunc processingInstruction;
    commentSAXFunc comment;
    warningSAXFunc warning;
    errorSAXFunc error;
    fatalErrorSAXFunc fatalError;
    getParameterEntitySAXFunc getParameterEntity;
    cdataBlockSAXFunc cdataBlock;
    externalSubsetSAXFunc externalSubset;
    unsigned int initialized;
};
# 801 "./include/libxml/parser.h"
typedef xmlParserInputPtr (*xmlExternalEntityLoader) (const char *URL,
      const char *ID,
      xmlParserCtxtPtr context);





# 1 "./include/libxml/encoding.h" 1
# 28 "./include/libxml/encoding.h"
# 1 "/usr/include/iconv.h" 1 3 4
# 23 "/usr/include/iconv.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 1 3 4
# 24 "/usr/include/iconv.h" 2 3 4






# 29 "/usr/include/iconv.h" 3 4
typedef void *iconv_t;







extern iconv_t iconv_open (const char *__tocode, const char *__fromcode);




extern size_t iconv (iconv_t __cd, char **__restrict __inbuf,
       size_t *__restrict __inbytesleft,
       char **__restrict __outbuf,
       size_t *__restrict __outbytesleft);





extern int iconv_close (iconv_t __cd);


# 29 "./include/libxml/encoding.h" 2
# 58 "./include/libxml/encoding.h"

# 58 "./include/libxml/encoding.h"
typedef enum {
    XML_CHAR_ENCODING_ERROR= -1,
    XML_CHAR_ENCODING_NONE= 0,
    XML_CHAR_ENCODING_UTF8= 1,
    XML_CHAR_ENCODING_UTF16LE= 2,
    XML_CHAR_ENCODING_UTF16BE= 3,
    XML_CHAR_ENCODING_UCS4LE= 4,
    XML_CHAR_ENCODING_UCS4BE= 5,
    XML_CHAR_ENCODING_EBCDIC= 6,
    XML_CHAR_ENCODING_UCS4_2143=7,
    XML_CHAR_ENCODING_UCS4_3412=8,
    XML_CHAR_ENCODING_UCS2= 9,
    XML_CHAR_ENCODING_8859_1= 10,
    XML_CHAR_ENCODING_8859_2= 11,
    XML_CHAR_ENCODING_8859_3= 12,
    XML_CHAR_ENCODING_8859_4= 13,
    XML_CHAR_ENCODING_8859_5= 14,
    XML_CHAR_ENCODING_8859_6= 15,
    XML_CHAR_ENCODING_8859_7= 16,
    XML_CHAR_ENCODING_8859_8= 17,
    XML_CHAR_ENCODING_8859_9= 18,
    XML_CHAR_ENCODING_2022_JP= 19,
    XML_CHAR_ENCODING_SHIFT_JIS=20,
    XML_CHAR_ENCODING_EUC_JP= 21,
    XML_CHAR_ENCODING_ASCII= 22
} xmlCharEncoding;
# 101 "./include/libxml/encoding.h"
typedef int (* xmlCharEncodingInputFunc)(unsigned char *out, int *outlen,
                                         const unsigned char *in, int *inlen);
# 123 "./include/libxml/encoding.h"
typedef int (* xmlCharEncodingOutputFunc)(unsigned char *out, int *outlen,
                                          const unsigned char *in, int *inlen);
# 139 "./include/libxml/encoding.h"
typedef struct _xmlCharEncodingHandler xmlCharEncodingHandler;
typedef xmlCharEncodingHandler *xmlCharEncodingHandlerPtr;
struct _xmlCharEncodingHandler {
    char *name;
    xmlCharEncodingInputFunc input;
    xmlCharEncodingOutputFunc output;

    iconv_t iconv_in;
    iconv_t iconv_out;





};
# 166 "./include/libxml/encoding.h"
 void
 xmlInitCharEncodingHandlers (void);
 void
 xmlCleanupCharEncodingHandlers (void);
 void
 xmlRegisterCharEncodingHandler (xmlCharEncodingHandlerPtr handler);
 xmlCharEncodingHandlerPtr
 xmlGetCharEncodingHandler (xmlCharEncoding enc);
 xmlCharEncodingHandlerPtr
 xmlFindCharEncodingHandler (const char *name);
 xmlCharEncodingHandlerPtr
 xmlNewCharEncodingHandler (const char *name,
      xmlCharEncodingInputFunc input,
      xmlCharEncodingOutputFunc output);




 int
 xmlAddEncodingAlias (const char *name,
      const char *alias);
 int
 xmlDelEncodingAlias (const char *alias);
 const char *
 xmlGetEncodingAlias (const char *alias);
 void
 xmlCleanupEncodingAliases (void);
 xmlCharEncoding
 xmlParseCharEncoding (const char *name);
 const char *
 xmlGetCharEncodingName (xmlCharEncoding enc);




 xmlCharEncoding
 xmlDetectCharEncoding (const unsigned char *in,
      int len);

 int
 xmlCharEncOutFunc (xmlCharEncodingHandler *handler,
      xmlBufferPtr out,
      xmlBufferPtr in);

 int
 xmlCharEncInFunc (xmlCharEncodingHandler *handler,
      xmlBufferPtr out,
      xmlBufferPtr in);
 int
 xmlCharEncFirstLine (xmlCharEncodingHandler *handler,
      xmlBufferPtr out,
      xmlBufferPtr in);
 int
 xmlCharEncCloseFunc (xmlCharEncodingHandler *handler);





 int
 UTF8Toisolat1 (unsigned char *out,
      int *outlen,
      const unsigned char *in,
      int *inlen);

 int
 isolat1ToUTF8 (unsigned char *out,
      int *outlen,
      const unsigned char *in,
      int *inlen);
# 810 "./include/libxml/parser.h" 2
# 1 "./include/libxml/xmlIO.h" 1
# 34 "./include/libxml/xmlIO.h"
typedef int ( *xmlInputMatchCallback) (char const *filename);
# 43 "./include/libxml/xmlIO.h"
typedef void * ( *xmlInputOpenCallback) (char const *filename);
# 54 "./include/libxml/xmlIO.h"
typedef int ( *xmlInputReadCallback) (void * context, char * buffer, int len);
# 63 "./include/libxml/xmlIO.h"
typedef int ( *xmlInputCloseCallback) (void * context);
# 80 "./include/libxml/xmlIO.h"
typedef int ( *xmlOutputMatchCallback) (char const *filename);
# 89 "./include/libxml/xmlIO.h"
typedef void * ( *xmlOutputOpenCallback) (char const *filename);
# 100 "./include/libxml/xmlIO.h"
typedef int ( *xmlOutputWriteCallback) (void * context, const char * buffer,
                                       int len);
# 110 "./include/libxml/xmlIO.h"
typedef int ( *xmlOutputCloseCallback) (void * context);






# 1 "./include/libxml/globals.h" 1
# 118 "./include/libxml/xmlIO.h" 2







struct _xmlParserInputBuffer {
    void* context;
    xmlInputReadCallback readcallback;
    xmlInputCloseCallback closecallback;

    xmlCharEncodingHandlerPtr encoder;

    xmlBufPtr buffer;
    xmlBufPtr raw;
    int compressed;
    int error;
    unsigned long rawconsumed;
};



struct _xmlOutputBuffer {
    void* context;
    xmlOutputWriteCallback writecallback;
    xmlOutputCloseCallback closecallback;

    xmlCharEncodingHandlerPtr encoder;

    xmlBufPtr buffer;
    xmlBufPtr conv;
    int written;
    int error;
};





 void
 xmlCleanupInputCallbacks (void);

 int
 xmlPopInputCallbacks (void);

 void
 xmlRegisterDefaultInputCallbacks (void);
 xmlParserInputBufferPtr
 xmlAllocParserInputBuffer (xmlCharEncoding enc);

 xmlParserInputBufferPtr
 xmlParserInputBufferCreateFilename (const char *URI,
                                                 xmlCharEncoding enc);
 xmlParserInputBufferPtr
 xmlParserInputBufferCreateFile (FILE *file,
                                                 xmlCharEncoding enc);
 xmlParserInputBufferPtr
 xmlParserInputBufferCreateFd (int fd,
                                          xmlCharEncoding enc);
 xmlParserInputBufferPtr
 xmlParserInputBufferCreateMem (const char *mem, int size,
                                          xmlCharEncoding enc);
 xmlParserInputBufferPtr
 xmlParserInputBufferCreateStatic (const char *mem, int size,
                                          xmlCharEncoding enc);
 xmlParserInputBufferPtr
 xmlParserInputBufferCreateIO (xmlInputReadCallback ioread,
       xmlInputCloseCallback ioclose,
       void *ioctx,
                                          xmlCharEncoding enc);
 int
 xmlParserInputBufferRead (xmlParserInputBufferPtr in,
       int len);
 int
 xmlParserInputBufferGrow (xmlParserInputBufferPtr in,
       int len);
 int
 xmlParserInputBufferPush (xmlParserInputBufferPtr in,
       int len,
       const char *buf);
 void
 xmlFreeParserInputBuffer (xmlParserInputBufferPtr in);
 char *
 xmlParserGetDirectory (const char *filename);

 int
 xmlRegisterInputCallbacks (xmlInputMatchCallback matchFunc,
       xmlInputOpenCallback openFunc,
       xmlInputReadCallback readFunc,
       xmlInputCloseCallback closeFunc);

xmlParserInputBufferPtr
 __xmlParserInputBufferCreateFilename(const char *URI,
          xmlCharEncoding enc);





 void
 xmlCleanupOutputCallbacks (void);
 void
 xmlRegisterDefaultOutputCallbacks(void);
 xmlOutputBufferPtr
 xmlAllocOutputBuffer (xmlCharEncodingHandlerPtr encoder);

 xmlOutputBufferPtr
 xmlOutputBufferCreateFilename (const char *URI,
      xmlCharEncodingHandlerPtr encoder,
      int compression);

 xmlOutputBufferPtr
 xmlOutputBufferCreateFile (FILE *file,
      xmlCharEncodingHandlerPtr encoder);

 xmlOutputBufferPtr
 xmlOutputBufferCreateBuffer (xmlBufferPtr buffer,
      xmlCharEncodingHandlerPtr encoder);

 xmlOutputBufferPtr
 xmlOutputBufferCreateFd (int fd,
      xmlCharEncodingHandlerPtr encoder);

 xmlOutputBufferPtr
 xmlOutputBufferCreateIO (xmlOutputWriteCallback iowrite,
      xmlOutputCloseCallback ioclose,
      void *ioctx,
      xmlCharEncodingHandlerPtr encoder);


 const xmlChar *
        xmlOutputBufferGetContent (xmlOutputBufferPtr out);
 size_t
        xmlOutputBufferGetSize (xmlOutputBufferPtr out);

 int
 xmlOutputBufferWrite (xmlOutputBufferPtr out,
      int len,
      const char *buf);
 int
 xmlOutputBufferWriteString (xmlOutputBufferPtr out,
      const char *str);
 int
 xmlOutputBufferWriteEscape (xmlOutputBufferPtr out,
      const xmlChar *str,
      xmlCharEncodingOutputFunc escaping);

 int
 xmlOutputBufferFlush (xmlOutputBufferPtr out);
 int
 xmlOutputBufferClose (xmlOutputBufferPtr out);

 int
 xmlRegisterOutputCallbacks (xmlOutputMatchCallback matchFunc,
      xmlOutputOpenCallback openFunc,
      xmlOutputWriteCallback writeFunc,
      xmlOutputCloseCallback closeFunc);

xmlOutputBufferPtr
 __xmlOutputBufferCreateFilename(const char *URI,
                              xmlCharEncodingHandlerPtr encoder,
                              int compression);



 void
 xmlRegisterHTTPPostCallbacks (void );




 xmlParserInputPtr
 xmlCheckHTTPInput (xmlParserCtxtPtr ctxt,
      xmlParserInputPtr ret);




 xmlParserInputPtr
 xmlNoNetExternalEntityLoader (const char *URL,
      const char *ID,
      xmlParserCtxtPtr ctxt);





 xmlChar *
 xmlNormalizeWindowsPath (const xmlChar *path);

 int
 xmlCheckFilename (const char *path);



 int
 xmlFileMatch (const char *filename);
 void *
 xmlFileOpen (const char *filename);
 int
 xmlFileRead (void * context,
      char * buffer,
      int len);
 int
 xmlFileClose (void * context);





 int
 xmlIOHTTPMatch (const char *filename);
 void *
 xmlIOHTTPOpen (const char *filename);

 void *
 xmlIOHTTPOpenW (const char * post_uri,
      int compression );

 int
 xmlIOHTTPRead (void * context,
      char * buffer,
      int len);
 int
 xmlIOHTTPClose (void * context);






 int
 xmlIOFTPMatch (const char *filename);
 void *
 xmlIOFTPOpen (const char *filename);
 int
 xmlIOFTPRead (void * context,
      char * buffer,
      int len);
 int
 xmlIOFTPClose (void * context);
# 811 "./include/libxml/parser.h" 2
# 821 "./include/libxml/parser.h"
 void
  xmlInitParser (void);
 void
  xmlCleanupParser (void);




 int
  xmlParserInputRead (xmlParserInputPtr in,
      int len);
 int
  xmlParserInputGrow (xmlParserInputPtr in,
      int len);





 xmlDocPtr
  xmlParseDoc (const xmlChar *cur);
 xmlDocPtr
  xmlParseFile (const char *filename);
 xmlDocPtr
  xmlParseMemory (const char *buffer,
      int size);

 int
  xmlSubstituteEntitiesDefault(int val);
 int
  xmlKeepBlanksDefault (int val);
 void
  xmlStopParser (xmlParserCtxtPtr ctxt);
 int
  xmlPedanticParserDefault(int val);
 int
  xmlLineNumbersDefault (int val);





 xmlDocPtr
  xmlRecoverDoc (const xmlChar *cur);
 xmlDocPtr
  xmlRecoverMemory (const char *buffer,
      int size);
 xmlDocPtr
  xmlRecoverFile (const char *filename);





 int
  xmlParseDocument (xmlParserCtxtPtr ctxt);
 int
  xmlParseExtParsedEnt (xmlParserCtxtPtr ctxt);

 int
  xmlSAXUserParseFile (xmlSAXHandlerPtr sax,
      void *user_data,
      const char *filename);
 int
  xmlSAXUserParseMemory (xmlSAXHandlerPtr sax,
      void *user_data,
      const char *buffer,
      int size);
 xmlDocPtr
  xmlSAXParseDoc (xmlSAXHandlerPtr sax,
      const xmlChar *cur,
      int recovery);
 xmlDocPtr
  xmlSAXParseMemory (xmlSAXHandlerPtr sax,
      const char *buffer,
      int size,
      int recovery);
 xmlDocPtr
  xmlSAXParseMemoryWithData (xmlSAXHandlerPtr sax,
      const char *buffer,
      int size,
      int recovery,
      void *data);
 xmlDocPtr
  xmlSAXParseFile (xmlSAXHandlerPtr sax,
      const char *filename,
      int recovery);
 xmlDocPtr
  xmlSAXParseFileWithData (xmlSAXHandlerPtr sax,
      const char *filename,
      int recovery,
      void *data);
 xmlDocPtr
  xmlSAXParseEntity (xmlSAXHandlerPtr sax,
      const char *filename);
 xmlDocPtr
  xmlParseEntity (const char *filename);



 xmlDtdPtr
  xmlSAXParseDTD (xmlSAXHandlerPtr sax,
      const xmlChar *ExternalID,
      const xmlChar *SystemID);
 xmlDtdPtr
  xmlParseDTD (const xmlChar *ExternalID,
      const xmlChar *SystemID);
 xmlDtdPtr
  xmlIOParseDTD (xmlSAXHandlerPtr sax,
      xmlParserInputBufferPtr input,
      xmlCharEncoding enc);


 int
  xmlParseBalancedChunkMemory(xmlDocPtr doc,
      xmlSAXHandlerPtr sax,
      void *user_data,
      int depth,
      const xmlChar *string,
      xmlNodePtr *lst);

 xmlParserErrors
  xmlParseInNodeContext (xmlNodePtr node,
      const char *data,
      int datalen,
      int options,
      xmlNodePtr *lst);

 int
  xmlParseBalancedChunkMemoryRecover(xmlDocPtr doc,
                     xmlSAXHandlerPtr sax,
                     void *user_data,
                     int depth,
                     const xmlChar *string,
                     xmlNodePtr *lst,
                     int recover);
 int
  xmlParseExternalEntity (xmlDocPtr doc,
      xmlSAXHandlerPtr sax,
      void *user_data,
      int depth,
      const xmlChar *URL,
      const xmlChar *ID,
      xmlNodePtr *lst);

 int
  xmlParseCtxtExternalEntity(xmlParserCtxtPtr ctx,
      const xmlChar *URL,
      const xmlChar *ID,
      xmlNodePtr *lst);




 xmlParserCtxtPtr
  xmlNewParserCtxt (void);
 int
  xmlInitParserCtxt (xmlParserCtxtPtr ctxt);
 void
  xmlClearParserCtxt (xmlParserCtxtPtr ctxt);
 void
  xmlFreeParserCtxt (xmlParserCtxtPtr ctxt);

 void
  xmlSetupParserForBuffer (xmlParserCtxtPtr ctxt,
      const xmlChar* buffer,
      const char *filename);

 xmlParserCtxtPtr
  xmlCreateDocParserCtxt (const xmlChar *cur);





 int
  xmlGetFeaturesList (int *len,
      const char **result);
 int
  xmlGetFeature (xmlParserCtxtPtr ctxt,
      const char *name,
      void *result);
 int
  xmlSetFeature (xmlParserCtxtPtr ctxt,
      const char *name,
      void *value);






 xmlParserCtxtPtr
  xmlCreatePushParserCtxt(xmlSAXHandlerPtr sax,
      void *user_data,
      const char *chunk,
      int size,
      const char *filename);
 int
  xmlParseChunk (xmlParserCtxtPtr ctxt,
      const char *chunk,
      int size,
      int terminate);






 xmlParserCtxtPtr
  xmlCreateIOParserCtxt (xmlSAXHandlerPtr sax,
      void *user_data,
      xmlInputReadCallback ioread,
      xmlInputCloseCallback ioclose,
      void *ioctx,
      xmlCharEncoding enc);

 xmlParserInputPtr
  xmlNewIOInputStream (xmlParserCtxtPtr ctxt,
      xmlParserInputBufferPtr input,
      xmlCharEncoding enc);




 const xmlParserNodeInfo*
  xmlParserFindNodeInfo (const xmlParserCtxtPtr ctxt,
             const xmlNodePtr node);
 void
  xmlInitNodeInfoSeq (xmlParserNodeInfoSeqPtr seq);
 void
  xmlClearNodeInfoSeq (xmlParserNodeInfoSeqPtr seq);
 unsigned long
  xmlParserFindNodeInfoIndex(const xmlParserNodeInfoSeqPtr seq,
                                         const xmlNodePtr node);
 void
  xmlParserAddNodeInfo (xmlParserCtxtPtr ctxt,
      const xmlParserNodeInfoPtr info);





 void
  xmlSetExternalEntityLoader(xmlExternalEntityLoader f);
 xmlExternalEntityLoader
  xmlGetExternalEntityLoader(void);
 xmlParserInputPtr
  xmlLoadExternalEntity (const char *URL,
      const char *ID,
      xmlParserCtxtPtr ctxt);




 long
  xmlByteConsumed (xmlParserCtxtPtr ctxt);
# 1088 "./include/libxml/parser.h"
typedef enum {
    XML_PARSE_RECOVER = 1<<0,
    XML_PARSE_NOENT = 1<<1,
    XML_PARSE_DTDLOAD = 1<<2,
    XML_PARSE_DTDATTR = 1<<3,
    XML_PARSE_DTDVALID = 1<<4,
    XML_PARSE_NOERROR = 1<<5,
    XML_PARSE_NOWARNING = 1<<6,
    XML_PARSE_PEDANTIC = 1<<7,
    XML_PARSE_NOBLANKS = 1<<8,
    XML_PARSE_SAX1 = 1<<9,
    XML_PARSE_XINCLUDE = 1<<10,
    XML_PARSE_NONET = 1<<11,
    XML_PARSE_NODICT = 1<<12,
    XML_PARSE_NSCLEAN = 1<<13,
    XML_PARSE_NOCDATA = 1<<14,
    XML_PARSE_NOXINCNODE= 1<<15,
    XML_PARSE_COMPACT = 1<<16,


    XML_PARSE_OLD10 = 1<<17,
    XML_PARSE_NOBASEFIX = 1<<18,
    XML_PARSE_HUGE = 1<<19,
    XML_PARSE_OLDSAX = 1<<20,
    XML_PARSE_IGNORE_ENC= 1<<21,
    XML_PARSE_BIG_LINES = 1<<22
} xmlParserOption;

 void
  xmlCtxtReset (xmlParserCtxtPtr ctxt);
 int
  xmlCtxtResetPush (xmlParserCtxtPtr ctxt,
      const char *chunk,
      int size,
      const char *filename,
      const char *encoding);
 int
  xmlCtxtUseOptions (xmlParserCtxtPtr ctxt,
      int options);
 xmlDocPtr
  xmlReadDoc (const xmlChar *cur,
      const char *URL,
      const char *encoding,
      int options);
 xmlDocPtr
  xmlReadFile (const char *URL,
      const char *encoding,
      int options);
 xmlDocPtr
  xmlReadMemory (const char *buffer,
      int size,
      const char *URL,
      const char *encoding,
      int options);
 xmlDocPtr
  xmlReadFd (int fd,
      const char *URL,
      const char *encoding,
      int options);
 xmlDocPtr
  xmlReadIO (xmlInputReadCallback ioread,
      xmlInputCloseCallback ioclose,
      void *ioctx,
      const char *URL,
      const char *encoding,
      int options);
 xmlDocPtr
  xmlCtxtReadDoc (xmlParserCtxtPtr ctxt,
      const xmlChar *cur,
      const char *URL,
      const char *encoding,
      int options);
 xmlDocPtr
  xmlCtxtReadFile (xmlParserCtxtPtr ctxt,
      const char *filename,
      const char *encoding,
      int options);
 xmlDocPtr
  xmlCtxtReadMemory (xmlParserCtxtPtr ctxt,
      const char *buffer,
      int size,
      const char *URL,
      const char *encoding,
      int options);
 xmlDocPtr
  xmlCtxtReadFd (xmlParserCtxtPtr ctxt,
      int fd,
      const char *URL,
      const char *encoding,
      int options);
 xmlDocPtr
  xmlCtxtReadIO (xmlParserCtxtPtr ctxt,
      xmlInputReadCallback ioread,
      xmlInputCloseCallback ioclose,
      void *ioctx,
      const char *URL,
      const char *encoding,
      int options);
# 1197 "./include/libxml/parser.h"
typedef enum {
    XML_WITH_THREAD = 1,
    XML_WITH_TREE = 2,
    XML_WITH_OUTPUT = 3,
    XML_WITH_PUSH = 4,
    XML_WITH_READER = 5,
    XML_WITH_PATTERN = 6,
    XML_WITH_WRITER = 7,
    XML_WITH_SAX1 = 8,
    XML_WITH_FTP = 9,
    XML_WITH_HTTP = 10,
    XML_WITH_VALID = 11,
    XML_WITH_HTML = 12,
    XML_WITH_LEGACY = 13,
    XML_WITH_C14N = 14,
    XML_WITH_CATALOG = 15,
    XML_WITH_XPATH = 16,
    XML_WITH_XPTR = 17,
    XML_WITH_XINCLUDE = 18,
    XML_WITH_ICONV = 19,
    XML_WITH_ISO8859X = 20,
    XML_WITH_UNICODE = 21,
    XML_WITH_REGEXP = 22,
    XML_WITH_AUTOMATA = 23,
    XML_WITH_EXPR = 24,
    XML_WITH_SCHEMAS = 25,
    XML_WITH_SCHEMATRON = 26,
    XML_WITH_MODULES = 27,
    XML_WITH_DEBUG = 28,
    XML_WITH_DEBUG_MEM = 29,
    XML_WITH_DEBUG_RUN = 30,
    XML_WITH_ZLIB = 31,
    XML_WITH_ICU = 32,
    XML_WITH_LZMA = 33,
    XML_WITH_NONE = 99999
} xmlFeature;

 int
  xmlHasFeature (xmlFeature feature);
# 19 "./include/libxml/globals.h" 2
# 1 "./include/libxml/xmlerror.h" 1
# 20 "./include/libxml/globals.h" 2
# 1 "./include/libxml/SAX.h" 1
# 16 "./include/libxml/SAX.h"
# 1 "/usr/include/stdlib.h" 1 3 4
# 25 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 26 "/usr/include/stdlib.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 1 3 4
# 321 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 3 4

# 321 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 3 4
typedef int wchar_t;
# 32 "/usr/include/stdlib.h" 2 3 4







# 1 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 1 3 4
# 52 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3 4
typedef enum
{
  P_ALL,
  P_PID,
  P_PGID
} idtype_t;
# 40 "/usr/include/stdlib.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 1 3 4
# 41 "/usr/include/stdlib.h" 2 3 4
# 55 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 1 3 4
# 120 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/long-double.h" 1 3 4
# 25 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 2 3 4
# 121 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 2 3 4
# 56 "/usr/include/stdlib.h" 2 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;





__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;
# 97 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));



extern double atof (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));

extern int atoi (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));

extern long int atol (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));



__extension__ extern long long int atoll (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));



extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 176 "/usr/include/stdlib.h" 3 4
extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



__extension__
extern long long int strtoq (const char *__restrict __nptr,
        char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtouq (const char *__restrict __nptr,
           char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));




__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 360 "/usr/include/stdlib.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) atoi (const char *__nptr)
{
  return (int) strtol (__nptr, (char **) ((void *)0), 10);
}
extern __inline __attribute__ ((__gnu_inline__)) long int
__attribute__ ((__nothrow__ , __leaf__)) atol (const char *__nptr)
{
  return strtol (__nptr, (char **) ((void *)0), 10);
}


__extension__ extern __inline __attribute__ ((__gnu_inline__)) long long int
__attribute__ ((__nothrow__ , __leaf__)) atoll (const char *__nptr)
{
  return strtoll (__nptr, (char **) ((void *)0), 10);
}
# 385 "/usr/include/stdlib.h" 3 4
extern char *l64a (long int __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));


extern long int a64l (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));




# 1 "/usr/include/x86_64-linux-gnu/sys/types.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4






typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;


typedef __loff_t loff_t;






typedef __ino64_t ino_t;
# 59 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef __dev_t dev_t;




typedef __gid_t gid_t;




typedef __mode_t mode_t;




typedef __nlink_t nlink_t;




typedef __uid_t uid_t;
# 97 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef __pid_t pid_t;





typedef __id_t id_t;
# 114 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;





typedef __key_t key_t;




# 1 "/usr/include/x86_64-linux-gnu/bits/types/clock_t.h" 1 3 4






typedef __clock_t clock_t;
# 127 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h" 1 3 4






typedef __clockid_t clockid_t;
# 129 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/time_t.h" 1 3 4






typedef __time_t time_t;
# 130 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/timer_t.h" 1 3 4






typedef __timer_t timer_t;
# 131 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
# 144 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 1 3 4
# 145 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;




# 1 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3 4
typedef __int8_t int8_t;
typedef __int16_t int16_t;
typedef __int32_t int32_t;
typedef __int64_t int64_t;
# 156 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4


typedef __uint8_t u_int8_t;
typedef __uint16_t u_int16_t;
typedef __uint32_t u_int32_t;
typedef __uint64_t u_int64_t;


typedef int register_t __attribute__ ((__mode__ (__word__)));
# 176 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/include/endian.h" 1 3 4
# 24 "/usr/include/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/endian.h" 1 3 4
# 35 "/usr/include/x86_64-linux-gnu/bits/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/endianness.h" 1 3 4
# 36 "/usr/include/x86_64-linux-gnu/bits/endian.h" 2 3 4
# 25 "/usr/include/endian.h" 2 3 4
# 35 "/usr/include/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 1 3 4
# 33 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
static __inline __uint16_t
__bswap_16 (__uint16_t __bsx)
{

  return __builtin_bswap16 (__bsx);



}






static __inline __uint32_t
__bswap_32 (__uint32_t __bsx)
{

  return __builtin_bswap32 (__bsx);



}
# 69 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
__extension__ static __inline __uint64_t
__bswap_64 (__uint64_t __bsx)
{

  return __builtin_bswap64 (__bsx);



}
# 36 "/usr/include/endian.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 1 3 4
# 32 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3 4
static __inline __uint16_t
__uint16_identity (__uint16_t __x)
{
  return __x;
}

static __inline __uint32_t
__uint32_identity (__uint32_t __x)
{
  return __x;
}

static __inline __uint64_t
__uint64_identity (__uint64_t __x)
{
  return __x;
}
# 37 "/usr/include/endian.h" 2 3 4
# 177 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/sys/select.h" 1 3 4
# 30 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/select.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/select.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/select.h" 2 3 4
# 31 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h" 1 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 1 3 4




typedef struct
{
  unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
} __sigset_t;
# 5 "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h" 2 3 4


typedef __sigset_t sigset_t;
# 34 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 1 3 4







struct timeval
{
  __time_t tv_sec;
  __suseconds_t tv_usec;
};
# 38 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 1 3 4
# 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3 4
struct timespec
{
  __time_t tv_sec;



  __syscall_slong_t tv_nsec;
# 26 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3 4
};
# 40 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4



typedef __suseconds_t suseconds_t;





typedef long int __fd_mask;
# 59 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
typedef struct
  {






    __fd_mask __fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];


  } fd_set;






typedef __fd_mask fd_mask;
# 91 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4

# 101 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
# 113 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask);





# 1 "/usr/include/x86_64-linux-gnu/bits/select2.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/select2.h" 3 4
extern long int __fdelt_chk (long int __d);
extern long int __fdelt_warn (long int __d)
  __attribute__((__warning__ ("bit outside of fd_set selected")));
# 124 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4



# 180 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4





typedef __blksize_t blksize_t;
# 205 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef __blkcnt64_t blkcnt_t;



typedef __fsblkcnt64_t fsblkcnt_t;



typedef __fsfilcnt64_t fsfilcnt_t;
# 227 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 1 3 4
# 44 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 1 3 4
# 21 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 2 3 4
# 45 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4




typedef struct __pthread_internal_list
{
  struct __pthread_internal_list *__prev;
  struct __pthread_internal_list *__next;
} __pthread_list_t;

typedef struct __pthread_internal_slist
{
  struct __pthread_internal_slist *__next;
} __pthread_slist_t;
# 74 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3 4
struct __pthread_mutex_s
{
  int __lock;
  unsigned int __count;
  int __owner;

  unsigned int __nusers;



  int __kind;

  short __spins;
  short __elision;
  __pthread_list_t __list;
# 53 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3 4
};
# 75 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4
# 87 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3 4
struct __pthread_rwlock_arch_t
{
  unsigned int __readers;
  unsigned int __writers;
  unsigned int __wrphase_futex;
  unsigned int __writers_futex;
  unsigned int __pad3;
  unsigned int __pad4;

  int __cur_writer;
  int __shared;
  signed char __rwelision;




  unsigned char __pad1[7];


  unsigned long int __pad2;


  unsigned int __flags;
# 55 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3 4
};
# 88 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4




struct __pthread_cond_s
{
  __extension__ union
  {
    __extension__ unsigned long long int __wseq;
    struct
    {
      unsigned int __low;
      unsigned int __high;
    } __wseq32;
  };
  __extension__ union
  {
    __extension__ unsigned long long int __g1_start;
    struct
    {
      unsigned int __low;
      unsigned int __high;
    } __g1_start32;
  };
  unsigned int __g_refs[2] ;
  unsigned int __g_size[2];
  unsigned int __g1_orig_size;
  unsigned int __wrefs;
  unsigned int __g_signals[2];
};
# 24 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 2 3 4



typedef unsigned long int pthread_t;




typedef union
{
  char __size[4];
  int __align;
} pthread_mutexattr_t;




typedef union
{
  char __size[4];
  int __align;
} pthread_condattr_t;



typedef unsigned int pthread_key_t;



typedef int pthread_once_t;


union pthread_attr_t
{
  char __size[56];
  long int __align;
};

typedef union pthread_attr_t pthread_attr_t;




typedef union
{
  struct __pthread_mutex_s __data;
  char __size[40];
  long int __align;
} pthread_mutex_t;


typedef union
{
  struct __pthread_cond_s __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;





typedef union
{
  struct __pthread_rwlock_arch_t __data;
  char __size[56];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;





typedef volatile int pthread_spinlock_t;




typedef union
{
  char __size[32];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;
# 228 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4



# 395 "/usr/include/stdlib.h" 2 3 4






extern long int random (void) __attribute__ ((__nothrow__ , __leaf__));


extern void srandom (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));





extern char *initstate (unsigned int __seed, char *__statebuf,
   size_t __statelen) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));



extern char *setstate (char *__statebuf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







struct random_data
  {
    int32_t *fptr;
    int32_t *rptr;
    int32_t *state;
    int rand_type;
    int rand_deg;
    int rand_sep;
    int32_t *end_ptr;
  };

extern int random_r (struct random_data *__restrict __buf,
       int32_t *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int srandom_r (unsigned int __seed, struct random_data *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

extern int initstate_r (unsigned int __seed, char *__restrict __statebuf,
   size_t __statelen,
   struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4)));

extern int setstate_r (char *__restrict __statebuf,
         struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));





extern int rand (void) __attribute__ ((__nothrow__ , __leaf__));

extern void srand (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));



extern int rand_r (unsigned int *__seed) __attribute__ ((__nothrow__ , __leaf__));







extern double drand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern double erand48 (unsigned short int __xsubi[3]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int lrand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern long int nrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int mrand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern long int jrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern void srand48 (long int __seedval) __attribute__ ((__nothrow__ , __leaf__));
extern unsigned short int *seed48 (unsigned short int __seed16v[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
extern void lcong48 (unsigned short int __param[7]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





struct drand48_data
  {
    unsigned short int __x[3];
    unsigned short int __old_x[3];
    unsigned short int __c;
    unsigned short int __init;
    __extension__ unsigned long long int __a;

  };


extern int drand48_r (struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int erand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int lrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int nrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int mrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int jrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int srand48_r (long int __seedval, struct drand48_data *__buffer)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

extern int seed48_r (unsigned short int __seed16v[3],
       struct drand48_data *__buffer) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int lcong48_r (unsigned short int __param[7],
        struct drand48_data *__buffer)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__))
     __attribute__ ((__alloc_size__ (1))) __attribute__ ((__warn_unused_result__));

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__alloc_size__ (1, 2))) __attribute__ ((__warn_unused_result__));






extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__)) __attribute__ ((__alloc_size__ (2)));







extern void *reallocarray (void *__ptr, size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__))
     __attribute__ ((__alloc_size__ (2, 3)));



extern void free (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));


# 1 "/usr/include/alloca.h" 1 3 4
# 24 "/usr/include/alloca.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 1 3 4
# 25 "/usr/include/alloca.h" 2 3 4







extern void *alloca (size_t __size) __attribute__ ((__nothrow__ , __leaf__));






# 569 "/usr/include/stdlib.h" 2 3 4





extern void *valloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__))
     __attribute__ ((__alloc_size__ (1))) __attribute__ ((__warn_unused_result__));




extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));




extern void *aligned_alloc (size_t __alignment, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__alloc_size__ (2))) __attribute__ ((__warn_unused_result__));



extern void abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







extern int at_quick_exit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern void exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));





extern void quick_exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));





extern void _Exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));




extern char *getenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 647 "/usr/include/stdlib.h" 3 4
extern int putenv (char *__string) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int setenv (const char *__name, const char *__value, int __replace)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));


extern int unsetenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern int clearenv (void) __attribute__ ((__nothrow__ , __leaf__));
# 675 "/usr/include/stdlib.h" 3 4
extern char *mktemp (char *__template) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 691 "/usr/include/stdlib.h" 3 4
extern int mkstemp (char *__template) __asm__ ("" "mkstemp64")
     __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 713 "/usr/include/stdlib.h" 3 4
extern int mkstemps (char *__template, int __suffixlen) __asm__ ("" "mkstemps64")
                     __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 731 "/usr/include/stdlib.h" 3 4
extern char *mkdtemp (char *__template) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 784 "/usr/include/stdlib.h" 3 4
extern int system (const char *__command) __attribute__ ((__warn_unused_result__));
# 800 "/usr/include/stdlib.h" 3 4
extern char *realpath (const char *__restrict __name,
         char *__restrict __resolved) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));






typedef int (*__compar_fn_t) (const void *, const void *);
# 820 "/usr/include/stdlib.h" 3 4
extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) __attribute__ ((__warn_unused_result__));


# 1 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 1 3 4
# 19 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) void *
bsearch (const void *__key, const void *__base, size_t __nmemb, size_t __size,
  __compar_fn_t __compar)
{
  size_t __l, __u, __idx;
  const void *__p;
  int __comparison;

  __l = 0;
  __u = __nmemb;
  while (__l < __u)
    {
      __idx = (__l + __u) / 2;
      __p = (void *) (((const char *) __base) + (__idx * __size));
      __comparison = (*__compar) (__key, __p);
      if (__comparison < 0)
 __u = __idx;
      else if (__comparison > 0)
 __l = __idx + 1;
      else
 return (void *) __p;
    }

  return ((void *)0);
}
# 826 "/usr/include/stdlib.h" 2 3 4




extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
# 840 "/usr/include/stdlib.h" 3 4
extern int abs (int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));
extern long int labs (long int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));


__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));






extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));


__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));
# 872 "/usr/include/stdlib.h" 3 4
extern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));




extern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));




extern char *gcvt (double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3))) __attribute__ ((__warn_unused_result__));




extern char *qecvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));
extern char *qfcvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));
extern char *qgcvt (long double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3))) __attribute__ ((__warn_unused_result__));




extern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));

extern int qecvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int qfcvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));





extern int mblen (const char *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));


extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__ , __leaf__));



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__));







extern int rpmatch (const char *__response) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 957 "/usr/include/stdlib.h" 3 4
extern int getsubopt (char **__restrict __optionp,
        char *const *__restrict __tokens,
        char **__restrict __valuep)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2, 3))) __attribute__ ((__warn_unused_result__));
# 1003 "/usr/include/stdlib.h" 3 4
extern int getloadavg (double __loadavg[], int __nelem)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 1013 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) double
__attribute__ ((__nothrow__ , __leaf__)) atof (const char *__nptr)
{
  return strtod (__nptr, (char **) ((void *)0));
}
# 1014 "/usr/include/stdlib.h" 2 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3 4
extern char *__realpath_chk (const char *__restrict __name,
        char *__restrict __resolved,
        size_t __resolvedlen) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
extern char *__realpath_alias (const char *__restrict __name, char *__restrict __resolved) __asm__ ("" "realpath") __attribute__ ((__nothrow__ , __leaf__))

                                                 __attribute__ ((__warn_unused_result__));
extern char *__realpath_chk_warn (const char *__restrict __name, char *__restrict __resolved, size_t __resolvedlen) __asm__ ("" "__realpath_chk") __attribute__ ((__nothrow__ , __leaf__))


                                                __attribute__ ((__warn_unused_result__))
     __attribute__((__warning__ ("second argument of realpath must be either NULL or at " "least PATH_MAX bytes long buffer")))
                                      ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) char *
__attribute__ ((__nothrow__ , __leaf__)) realpath (const char *__restrict __name, char *__restrict __resolved)
{
  if (__builtin_object_size (__resolved, 2 > 1) != (size_t) -1)
    {

      if (__builtin_object_size (__resolved, 2 > 1) < 4096)
 return __realpath_chk_warn (__name, __resolved, __builtin_object_size (__resolved, 2 > 1));

      return __realpath_chk (__name, __resolved, __builtin_object_size (__resolved, 2 > 1));
    }

  return __realpath_alias (__name, __resolved);
}


extern int __ptsname_r_chk (int __fd, char *__buf, size_t __buflen,
       size_t __nreal) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
extern int __ptsname_r_alias (int __fd, char *__buf, size_t __buflen) __asm__ ("" "ptsname_r") __attribute__ ((__nothrow__ , __leaf__))

     __attribute__ ((__nonnull__ (2)));
extern int __ptsname_r_chk_warn (int __fd, char *__buf, size_t __buflen, size_t __nreal) __asm__ ("" "__ptsname_r_chk") __attribute__ ((__nothrow__ , __leaf__))


     __attribute__ ((__nonnull__ (2))) __attribute__((__warning__ ("ptsname_r called with buflen bigger than " "size of buf")))
                   ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) ptsname_r (int __fd, char *__buf, size_t __buflen)
{
  if (__builtin_object_size (__buf, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__buflen))
 return __ptsname_r_chk (__fd, __buf, __buflen, __builtin_object_size (__buf, 2 > 1));
      if (__buflen > __builtin_object_size (__buf, 2 > 1))
 return __ptsname_r_chk_warn (__fd, __buf, __buflen, __builtin_object_size (__buf, 2 > 1));
    }
  return __ptsname_r_alias (__fd, __buf, __buflen);
}


extern int __wctomb_chk (char *__s, wchar_t __wchar, size_t __buflen)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
extern int __wctomb_alias (char *__s, wchar_t __wchar) __asm__ ("" "wctomb") __attribute__ ((__nothrow__ , __leaf__))
              __attribute__ ((__warn_unused_result__));

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) int
__attribute__ ((__nothrow__ , __leaf__)) wctomb (char *__s, wchar_t __wchar)
{







  if (__builtin_object_size (__s, 2 > 1) != (size_t) -1 && 16 > __builtin_object_size (__s, 2 > 1))
    return __wctomb_chk (__s, __wchar, __builtin_object_size (__s, 2 > 1));
  return __wctomb_alias (__s, __wchar);
}


extern size_t __mbstowcs_chk (wchar_t *__restrict __dst,
         const char *__restrict __src,
         size_t __len, size_t __dstlen) __attribute__ ((__nothrow__ , __leaf__));
extern size_t __mbstowcs_alias (wchar_t *__restrict __dst, const char *__restrict __src, size_t __len) __asm__ ("" "mbstowcs") __attribute__ ((__nothrow__ , __leaf__))


                                  ;
extern size_t __mbstowcs_chk_warn (wchar_t *__restrict __dst, const char *__restrict __src, size_t __len, size_t __dstlen) __asm__ ("" "__mbstowcs_chk") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__((__warning__ ("mbstowcs called with dst buffer smaller than len " "* sizeof (wchar_t)")))
                        ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) size_t
__attribute__ ((__nothrow__ , __leaf__)) mbstowcs (wchar_t *__restrict __dst, const char *__restrict __src, size_t __len)

{
  if (__builtin_object_size (__dst, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__len))
 return __mbstowcs_chk (__dst, __src, __len,
          __builtin_object_size (__dst, 2 > 1) / sizeof (wchar_t));

      if (__len > __builtin_object_size (__dst, 2 > 1) / sizeof (wchar_t))
 return __mbstowcs_chk_warn (__dst, __src, __len,
         __builtin_object_size (__dst, 2 > 1) / sizeof (wchar_t));
    }
  return __mbstowcs_alias (__dst, __src, __len);
}


extern size_t __wcstombs_chk (char *__restrict __dst,
         const wchar_t *__restrict __src,
         size_t __len, size_t __dstlen) __attribute__ ((__nothrow__ , __leaf__));
extern size_t __wcstombs_alias (char *__restrict __dst, const wchar_t *__restrict __src, size_t __len) __asm__ ("" "wcstombs") __attribute__ ((__nothrow__ , __leaf__))


                                  ;
extern size_t __wcstombs_chk_warn (char *__restrict __dst, const wchar_t *__restrict __src, size_t __len, size_t __dstlen) __asm__ ("" "__wcstombs_chk") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__((__warning__ ("wcstombs called with dst buffer smaller than len")));

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) size_t
__attribute__ ((__nothrow__ , __leaf__)) wcstombs (char *__restrict __dst, const wchar_t *__restrict __src, size_t __len)

{
  if (__builtin_object_size (__dst, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__len))
 return __wcstombs_chk (__dst, __src, __len, __builtin_object_size (__dst, 2 > 1));
      if (__len > __builtin_object_size (__dst, 2 > 1))
 return __wcstombs_chk_warn (__dst, __src, __len, __builtin_object_size (__dst, 2 > 1));
    }
  return __wcstombs_alias (__dst, __src, __len);
}
# 1018 "/usr/include/stdlib.h" 2 3 4






# 17 "./include/libxml/SAX.h" 2


# 1 "./include/libxml/xlink.h" 1
# 32 "./include/libxml/xlink.h"

# 32 "./include/libxml/xlink.h"
typedef xmlChar *xlinkHRef;
typedef xmlChar *xlinkRole;
typedef xmlChar *xlinkTitle;

typedef enum {
    XLINK_TYPE_NONE = 0,
    XLINK_TYPE_SIMPLE,
    XLINK_TYPE_EXTENDED,
    XLINK_TYPE_EXTENDED_SET
} xlinkType;

typedef enum {
    XLINK_SHOW_NONE = 0,
    XLINK_SHOW_NEW,
    XLINK_SHOW_EMBED,
    XLINK_SHOW_REPLACE
} xlinkShow;

typedef enum {
    XLINK_ACTUATE_NONE = 0,
    XLINK_ACTUATE_AUTO,
    XLINK_ACTUATE_ONREQUEST
} xlinkActuate;
# 64 "./include/libxml/xlink.h"
typedef void (*xlinkNodeDetectFunc) (void *ctx, xmlNodePtr node);
# 81 "./include/libxml/xlink.h"
typedef void
(*xlinkSimpleLinkFunk) (void *ctx,
    xmlNodePtr node,
    const xlinkHRef href,
    const xlinkRole role,
    const xlinkTitle title);
# 106 "./include/libxml/xlink.h"
typedef void
(*xlinkExtendedLinkFunk)(void *ctx,
    xmlNodePtr node,
    int nbLocators,
    const xlinkHRef *hrefs,
    const xlinkRole *roles,
    int nbArcs,
    const xlinkRole *from,
    const xlinkRole *to,
    xlinkShow *show,
    xlinkActuate *actuate,
    int nbTitles,
    const xlinkTitle *titles,
    const xmlChar **langs);
# 134 "./include/libxml/xlink.h"
typedef void
(*xlinkExtendedLinkSetFunk) (void *ctx,
     xmlNodePtr node,
     int nbLocators,
     const xlinkHRef *hrefs,
     const xlinkRole *roles,
     int nbTitles,
     const xlinkTitle *titles,
     const xmlChar **langs);







typedef struct _xlinkHandler xlinkHandler;
typedef xlinkHandler *xlinkHandlerPtr;
struct _xlinkHandler {
    xlinkSimpleLinkFunk simple;
    xlinkExtendedLinkFunk extended;
    xlinkExtendedLinkSetFunk set;
};






 xlinkNodeDetectFunc
  xlinkGetDefaultDetect (void);
 void
  xlinkSetDefaultDetect (xlinkNodeDetectFunc func);




 xlinkHandlerPtr
  xlinkGetDefaultHandler (void);
 void
  xlinkSetDefaultHandler (xlinkHandlerPtr handler);




 xlinkType
  xlinkIsLink (xmlDocPtr doc,
      xmlNodePtr node);
# 20 "./include/libxml/SAX.h" 2






 const xmlChar *
  getPublicId (void *ctx);
 const xmlChar *
  getSystemId (void *ctx);
 void
  setDocumentLocator (void *ctx,
       xmlSAXLocatorPtr loc);

 int
  getLineNumber (void *ctx);
 int
  getColumnNumber (void *ctx);

 int
  isStandalone (void *ctx);
 int
  hasInternalSubset (void *ctx);
 int
  hasExternalSubset (void *ctx);

 void
  internalSubset (void *ctx,
       const xmlChar *name,
       const xmlChar *ExternalID,
       const xmlChar *SystemID);
 void
  externalSubset (void *ctx,
       const xmlChar *name,
       const xmlChar *ExternalID,
       const xmlChar *SystemID);
 xmlEntityPtr
  getEntity (void *ctx,
       const xmlChar *name);
 xmlEntityPtr
  getParameterEntity (void *ctx,
       const xmlChar *name);
 xmlParserInputPtr
  resolveEntity (void *ctx,
       const xmlChar *publicId,
       const xmlChar *systemId);

 void
  entityDecl (void *ctx,
       const xmlChar *name,
       int type,
       const xmlChar *publicId,
       const xmlChar *systemId,
       xmlChar *content);
 void
  attributeDecl (void *ctx,
       const xmlChar *elem,
       const xmlChar *fullname,
       int type,
       int def,
       const xmlChar *defaultValue,
       xmlEnumerationPtr tree);
 void
  elementDecl (void *ctx,
       const xmlChar *name,
       int type,
       xmlElementContentPtr content);
 void
  notationDecl (void *ctx,
       const xmlChar *name,
       const xmlChar *publicId,
       const xmlChar *systemId);
 void
  unparsedEntityDecl (void *ctx,
       const xmlChar *name,
       const xmlChar *publicId,
       const xmlChar *systemId,
       const xmlChar *notationName);

 void
  startDocument (void *ctx);
 void
  endDocument (void *ctx);
 void
  attribute (void *ctx,
       const xmlChar *fullname,
       const xmlChar *value);
 void
  startElement (void *ctx,
       const xmlChar *fullname,
       const xmlChar **atts);
 void
  endElement (void *ctx,
       const xmlChar *name);
 void
  reference (void *ctx,
       const xmlChar *name);
 void
  characters (void *ctx,
       const xmlChar *ch,
       int len);
 void
  ignorableWhitespace (void *ctx,
       const xmlChar *ch,
       int len);
 void
  processingInstruction (void *ctx,
       const xmlChar *target,
       const xmlChar *data);
 void
  globalNamespace (void *ctx,
       const xmlChar *href,
       const xmlChar *prefix);
 void
  setNamespace (void *ctx,
       const xmlChar *name);
 xmlNsPtr
  getNamespace (void *ctx);
 int
  checkNamespace (void *ctx,
       xmlChar *nameSpace);
 void
  namespaceDecl (void *ctx,
       const xmlChar *href,
       const xmlChar *prefix);
 void
  comment (void *ctx,
       const xmlChar *value);
 void
  cdataBlock (void *ctx,
       const xmlChar *value,
       int len);


 void
  initxmlDefaultSAXHandler (xmlSAXHandlerV1 *hdlr,
       int warning);

 void
  inithtmlDefaultSAXHandler (xmlSAXHandlerV1 *hdlr);


 void
  initdocbDefaultSAXHandler (xmlSAXHandlerV1 *hdlr);
# 21 "./include/libxml/globals.h" 2
# 1 "./include/libxml/SAX2.h" 1
# 24 "./include/libxml/SAX2.h"
 const xmlChar *
  xmlSAX2GetPublicId (void *ctx);
 const xmlChar *
  xmlSAX2GetSystemId (void *ctx);
 void
  xmlSAX2SetDocumentLocator (void *ctx,
       xmlSAXLocatorPtr loc);

 int
  xmlSAX2GetLineNumber (void *ctx);
 int
  xmlSAX2GetColumnNumber (void *ctx);

 int
  xmlSAX2IsStandalone (void *ctx);
 int
  xmlSAX2HasInternalSubset (void *ctx);
 int
  xmlSAX2HasExternalSubset (void *ctx);

 void
  xmlSAX2InternalSubset (void *ctx,
       const xmlChar *name,
       const xmlChar *ExternalID,
       const xmlChar *SystemID);
 void
  xmlSAX2ExternalSubset (void *ctx,
       const xmlChar *name,
       const xmlChar *ExternalID,
       const xmlChar *SystemID);
 xmlEntityPtr
  xmlSAX2GetEntity (void *ctx,
       const xmlChar *name);
 xmlEntityPtr
  xmlSAX2GetParameterEntity (void *ctx,
       const xmlChar *name);
 xmlParserInputPtr
  xmlSAX2ResolveEntity (void *ctx,
       const xmlChar *publicId,
       const xmlChar *systemId);

 void
  xmlSAX2EntityDecl (void *ctx,
       const xmlChar *name,
       int type,
       const xmlChar *publicId,
       const xmlChar *systemId,
       xmlChar *content);
 void
  xmlSAX2AttributeDecl (void *ctx,
       const xmlChar *elem,
       const xmlChar *fullname,
       int type,
       int def,
       const xmlChar *defaultValue,
       xmlEnumerationPtr tree);
 void
  xmlSAX2ElementDecl (void *ctx,
       const xmlChar *name,
       int type,
       xmlElementContentPtr content);
 void
  xmlSAX2NotationDecl (void *ctx,
       const xmlChar *name,
       const xmlChar *publicId,
       const xmlChar *systemId);
 void
  xmlSAX2UnparsedEntityDecl (void *ctx,
       const xmlChar *name,
       const xmlChar *publicId,
       const xmlChar *systemId,
       const xmlChar *notationName);

 void
  xmlSAX2StartDocument (void *ctx);
 void
  xmlSAX2EndDocument (void *ctx);

 void
  xmlSAX2StartElement (void *ctx,
       const xmlChar *fullname,
       const xmlChar **atts);
 void
  xmlSAX2EndElement (void *ctx,
       const xmlChar *name);

 void
  xmlSAX2StartElementNs (void *ctx,
       const xmlChar *localname,
       const xmlChar *prefix,
       const xmlChar *URI,
       int nb_namespaces,
       const xmlChar **namespaces,
       int nb_attributes,
       int nb_defaulted,
       const xmlChar **attributes);
 void
  xmlSAX2EndElementNs (void *ctx,
       const xmlChar *localname,
       const xmlChar *prefix,
       const xmlChar *URI);
 void
  xmlSAX2Reference (void *ctx,
       const xmlChar *name);
 void
  xmlSAX2Characters (void *ctx,
       const xmlChar *ch,
       int len);
 void
  xmlSAX2IgnorableWhitespace (void *ctx,
       const xmlChar *ch,
       int len);
 void
  xmlSAX2ProcessingInstruction (void *ctx,
       const xmlChar *target,
       const xmlChar *data);
 void
  xmlSAX2Comment (void *ctx,
       const xmlChar *value);
 void
  xmlSAX2CDataBlock (void *ctx,
       const xmlChar *value,
       int len);


 int
  xmlSAXDefaultVersion (int version);


 int
  xmlSAXVersion (xmlSAXHandler *hdlr,
       int version);
 void
  xmlSAX2InitDefaultSAXHandler (xmlSAXHandler *hdlr,
       int warning);

 void
  xmlSAX2InitHtmlDefaultSAXHandler(xmlSAXHandler *hdlr);
 void
  htmlDefaultSAXHandlerInit (void);


 void
  xmlSAX2InitDocbDefaultSAXHandler(xmlSAXHandler *hdlr);
 void
  docbDefaultSAXHandlerInit (void);

 void
  xmlDefaultSAXHandlerInit (void);
# 22 "./include/libxml/globals.h" 2
# 1 "./include/libxml/xmlmemory.h" 1
# 23 "./include/libxml/globals.h" 2





 void xmlInitGlobals(void);
 void xmlCleanupGlobals(void);
# 42 "./include/libxml/globals.h"
typedef xmlParserInputBufferPtr (*xmlParserInputBufferCreateFilenameFunc) (const char *URI, xmlCharEncoding enc);
# 55 "./include/libxml/globals.h"
typedef xmlOutputBufferPtr (*xmlOutputBufferCreateFilenameFunc) (const char *URI, xmlCharEncodingHandlerPtr encoder, int compression);

 xmlParserInputBufferCreateFilenameFunc
 xmlParserInputBufferCreateFilenameDefault (xmlParserInputBufferCreateFilenameFunc func);
 xmlOutputBufferCreateFilenameFunc
 xmlOutputBufferCreateFilenameDefault (xmlOutputBufferCreateFilenameFunc func);
# 107 "./include/libxml/globals.h"
typedef void (*xmlRegisterNodeFunc) (xmlNodePtr node);






typedef void (*xmlDeregisterNodeFunc) (xmlNodePtr node);

typedef struct _xmlGlobalState xmlGlobalState;
typedef xmlGlobalState *xmlGlobalStatePtr;
struct _xmlGlobalState
{
 const char *xmlParserVersion;

 xmlSAXLocator xmlDefaultSAXLocator;
 xmlSAXHandlerV1 xmlDefaultSAXHandler;
 xmlSAXHandlerV1 docbDefaultSAXHandler;
 xmlSAXHandlerV1 htmlDefaultSAXHandler;

 xmlFreeFunc xmlFree;
 xmlMallocFunc xmlMalloc;
 xmlStrdupFunc xmlMemStrdup;
 xmlReallocFunc xmlRealloc;

 xmlGenericErrorFunc xmlGenericError;
 xmlStructuredErrorFunc xmlStructuredError;
 void *xmlGenericErrorContext;

 int oldXMLWDcompatibility;

 xmlBufferAllocationScheme xmlBufferAllocScheme;
 int xmlDefaultBufferSize;

 int xmlSubstituteEntitiesDefaultValue;
 int xmlDoValidityCheckingDefaultValue;
 int xmlGetWarningsDefaultValue;
 int xmlKeepBlanksDefaultValue;
 int xmlLineNumbersDefaultValue;
 int xmlLoadExtDtdDefaultValue;
 int xmlParserDebugEntities;
 int xmlPedanticParserDefaultValue;

 int xmlSaveNoEmptyTags;
 int xmlIndentTreeOutput;
 const char *xmlTreeIndentString;

 xmlRegisterNodeFunc xmlRegisterNodeDefaultValue;
 xmlDeregisterNodeFunc xmlDeregisterNodeDefaultValue;

 xmlMallocFunc xmlMallocAtomic;
 xmlError xmlLastError;

 xmlParserInputBufferCreateFilenameFunc xmlParserInputBufferCreateFilenameValue;
 xmlOutputBufferCreateFilenameFunc xmlOutputBufferCreateFilenameValue;

 void *xmlStructuredErrorContext;
};




# 1 "./include/libxml/threads.h" 1
# 170 "./include/libxml/globals.h" 2




 void xmlInitializeGlobalState(xmlGlobalStatePtr gs);

 void xmlThrDefSetGenericErrorFunc(void *ctx, xmlGenericErrorFunc handler);

 void xmlThrDefSetStructuredErrorFunc(void *ctx, xmlStructuredErrorFunc handler);

 xmlRegisterNodeFunc xmlRegisterNodeDefault(xmlRegisterNodeFunc func);
 xmlRegisterNodeFunc xmlThrDefRegisterNodeDefault(xmlRegisterNodeFunc func);
 xmlDeregisterNodeFunc xmlDeregisterNodeDefault(xmlDeregisterNodeFunc func);
 xmlDeregisterNodeFunc xmlThrDefDeregisterNodeDefault(xmlDeregisterNodeFunc func);

 xmlOutputBufferCreateFilenameFunc
 xmlThrDefOutputBufferCreateFilenameDefault(xmlOutputBufferCreateFilenameFunc func);
 xmlParserInputBufferCreateFilenameFunc
 xmlThrDefParserInputBufferCreateFilenameDefault(xmlParserInputBufferCreateFilenameFunc func);
# 243 "./include/libxml/globals.h"
extern xmlMallocFunc xmlMalloc;
extern xmlMallocFunc xmlMallocAtomic;
extern xmlReallocFunc xmlRealloc;
extern xmlFreeFunc xmlFree;
extern xmlStrdupFunc xmlMemStrdup;



 xmlSAXHandlerV1 * __docbDefaultSAXHandler(void);
# 261 "./include/libxml/globals.h"
 xmlSAXHandlerV1 * __htmlDefaultSAXHandler(void);
# 270 "./include/libxml/globals.h"
 xmlError * __xmlLastError(void);
# 285 "./include/libxml/globals.h"
 int * __oldXMLWDcompatibility(void);







 xmlBufferAllocationScheme * __xmlBufferAllocScheme(void);






 xmlBufferAllocationScheme xmlThrDefBufferAllocScheme(xmlBufferAllocationScheme v);

 int * __xmlDefaultBufferSize(void);






 int xmlThrDefDefaultBufferSize(int v);

 xmlSAXHandlerV1 * __xmlDefaultSAXHandler(void);







 xmlSAXLocator * __xmlDefaultSAXLocator(void);







 int * __xmlDoValidityCheckingDefaultValue(void);






 int xmlThrDefDoValidityCheckingDefaultValue(int v);

 xmlGenericErrorFunc * __xmlGenericError(void);







 xmlStructuredErrorFunc * __xmlStructuredError(void);







 void * * __xmlGenericErrorContext(void);







 void * * __xmlStructuredErrorContext(void);







 int * __xmlGetWarningsDefaultValue(void);






 int xmlThrDefGetWarningsDefaultValue(int v);

 int * __xmlIndentTreeOutput(void);






 int xmlThrDefIndentTreeOutput(int v);

 const char * * __xmlTreeIndentString(void);






 const char * xmlThrDefTreeIndentString(const char * v);

 int * __xmlKeepBlanksDefaultValue(void);






 int xmlThrDefKeepBlanksDefaultValue(int v);

 int * __xmlLineNumbersDefaultValue(void);






 int xmlThrDefLineNumbersDefaultValue(int v);

 int * __xmlLoadExtDtdDefaultValue(void);






 int xmlThrDefLoadExtDtdDefaultValue(int v);

 int * __xmlParserDebugEntities(void);






 int xmlThrDefParserDebugEntities(int v);

 const char * * __xmlParserVersion(void);







 int * __xmlPedanticParserDefaultValue(void);






 int xmlThrDefPedanticParserDefaultValue(int v);

 int * __xmlSaveNoEmptyTags(void);






 int xmlThrDefSaveNoEmptyTags(int v);

 int * __xmlSubstituteEntitiesDefaultValue(void);






 int xmlThrDefSubstituteEntitiesDefaultValue(int v);

 xmlRegisterNodeFunc * __xmlRegisterNodeDefaultValue(void);







 xmlDeregisterNodeFunc * __xmlDeregisterNodeDefaultValue(void);







 xmlParserInputBufferCreateFilenameFunc * __xmlParserInputBufferCreateFilenameValue(void);







 xmlOutputBufferCreateFilenameFunc * __xmlOutputBufferCreateFilenameValue(void);
# 36 "./include/libxml/threads.h" 2



 xmlMutexPtr
   xmlNewMutex (void);
 void
   xmlMutexLock (xmlMutexPtr tok);
 void
   xmlMutexUnlock (xmlMutexPtr tok);
 void
   xmlFreeMutex (xmlMutexPtr tok);

 xmlRMutexPtr
   xmlNewRMutex (void);
 void
   xmlRMutexLock (xmlRMutexPtr tok);
 void
   xmlRMutexUnlock (xmlRMutexPtr tok);
 void
   xmlFreeRMutex (xmlRMutexPtr tok);




 void
   xmlInitThreads (void);
 void
   xmlLockLibrary (void);
 void
   xmlUnlockLibrary(void);
 int
   xmlGetThreadId (void);
 int
   xmlIsMainThread (void);
 void
   xmlCleanupThreads(void);
 xmlGlobalStatePtr
   xmlGetGlobalState(void);
# 219 "./include/libxml/xmlmemory.h" 2
# 1300 "./include/libxml/tree.h" 2
# 28 "./include/libxml/c14n.h" 2
# 1 "./include/libxml/xpath.h" 1
# 26 "./include/libxml/xpath.h"
# 1 "./include/libxml/xmlerror.h" 1
# 27 "./include/libxml/xpath.h" 2
# 39 "./include/libxml/xpath.h"
typedef struct _xmlXPathContext xmlXPathContext;
typedef xmlXPathContext *xmlXPathContextPtr;
typedef struct _xmlXPathParserContext xmlXPathParserContext;
typedef xmlXPathParserContext *xmlXPathParserContextPtr;





typedef enum {
    XPATH_EXPRESSION_OK = 0,
    XPATH_NUMBER_ERROR,
    XPATH_UNFINISHED_LITERAL_ERROR,
    XPATH_START_LITERAL_ERROR,
    XPATH_VARIABLE_REF_ERROR,
    XPATH_UNDEF_VARIABLE_ERROR,
    XPATH_INVALID_PREDICATE_ERROR,
    XPATH_EXPR_ERROR,
    XPATH_UNCLOSED_ERROR,
    XPATH_UNKNOWN_FUNC_ERROR,
    XPATH_INVALID_OPERAND,
    XPATH_INVALID_TYPE,
    XPATH_INVALID_ARITY,
    XPATH_INVALID_CTXT_SIZE,
    XPATH_INVALID_CTXT_POSITION,
    XPATH_MEMORY_ERROR,
    XPTR_SYNTAX_ERROR,
    XPTR_RESOURCE_ERROR,
    XPTR_SUB_RESOURCE_ERROR,
    XPATH_UNDEF_PREFIX_ERROR,
    XPATH_ENCODING_ERROR,
    XPATH_INVALID_CHAR_ERROR,
    XPATH_INVALID_CTXT,
    XPATH_STACK_ERROR,
    XPATH_FORBID_VARIABLE_ERROR
} xmlXPathError;




typedef struct _xmlNodeSet xmlNodeSet;
typedef xmlNodeSet *xmlNodeSetPtr;
struct _xmlNodeSet {
    int nodeNr;
    int nodeMax;
    xmlNodePtr *nodeTab;

};
# 99 "./include/libxml/xpath.h"
typedef enum {
    XPATH_UNDEFINED = 0,
    XPATH_NODESET = 1,
    XPATH_BOOLEAN = 2,
    XPATH_NUMBER = 3,
    XPATH_STRING = 4,
    XPATH_POINT = 5,
    XPATH_RANGE = 6,
    XPATH_LOCATIONSET = 7,
    XPATH_USERS = 8,
    XPATH_XSLT_TREE = 9
} xmlXPathObjectType;

typedef struct _xmlXPathObject xmlXPathObject;
typedef xmlXPathObject *xmlXPathObjectPtr;
struct _xmlXPathObject {
    xmlXPathObjectType type;
    xmlNodeSetPtr nodesetval;
    int boolval;
    double floatval;
    xmlChar *stringval;
    void *user;
    int index;
    void *user2;
    int index2;
};
# 136 "./include/libxml/xpath.h"
typedef int (*xmlXPathConvertFunc) (xmlXPathObjectPtr obj, int type);





typedef struct _xmlXPathType xmlXPathType;
typedef xmlXPathType *xmlXPathTypePtr;
struct _xmlXPathType {
    const xmlChar *name;
    xmlXPathConvertFunc func;
};





typedef struct _xmlXPathVariable xmlXPathVariable;
typedef xmlXPathVariable *xmlXPathVariablePtr;
struct _xmlXPathVariable {
    const xmlChar *name;
    xmlXPathObjectPtr value;
};
# 168 "./include/libxml/xpath.h"
typedef void (*xmlXPathEvalFunc)(xmlXPathParserContextPtr ctxt,
                          int nargs);





typedef struct _xmlXPathFunct xmlXPathFunct;
typedef xmlXPathFunct *xmlXPathFuncPtr;
struct _xmlXPathFunct {
    const xmlChar *name;
    xmlXPathEvalFunc func;
};
# 194 "./include/libxml/xpath.h"
typedef xmlXPathObjectPtr (*xmlXPathAxisFunc) (xmlXPathParserContextPtr ctxt,
     xmlXPathObjectPtr cur);





typedef struct _xmlXPathAxis xmlXPathAxis;
typedef xmlXPathAxis *xmlXPathAxisPtr;
struct _xmlXPathAxis {
    const xmlChar *name;
    xmlXPathAxisFunc func;
};
# 218 "./include/libxml/xpath.h"
typedef void (*xmlXPathFunction) (xmlXPathParserContextPtr ctxt, int nargs);
# 235 "./include/libxml/xpath.h"
typedef xmlXPathObjectPtr (*xmlXPathVariableLookupFunc) (void *ctxt,
                                         const xmlChar *name,
                                         const xmlChar *ns_uri);
# 250 "./include/libxml/xpath.h"
typedef xmlXPathFunction (*xmlXPathFuncLookupFunc) (void *ctxt,
      const xmlChar *name,
      const xmlChar *ns_uri);
# 288 "./include/libxml/xpath.h"
struct _xmlXPathContext {
    xmlDocPtr doc;
    xmlNodePtr node;

    int nb_variables_unused;
    int max_variables_unused;
    xmlHashTablePtr varHash;

    int nb_types;
    int max_types;
    xmlXPathTypePtr types;

    int nb_funcs_unused;
    int max_funcs_unused;
    xmlHashTablePtr funcHash;

    int nb_axis;
    int max_axis;
    xmlXPathAxisPtr axis;


    xmlNsPtr *namespaces;
    int nsNr;
    void *user;


    int contextSize;
    int proximityPosition;


    int xptr;
    xmlNodePtr here;
    xmlNodePtr origin;


    xmlHashTablePtr nsHash;
    xmlXPathVariableLookupFunc varLookupFunc;
    void *varLookupData;


    void *extra;


    const xmlChar *function;
    const xmlChar *functionURI;


    xmlXPathFuncLookupFunc funcLookupFunc;
    void *funcLookupData;


    xmlNsPtr *tmpNsList;
    int tmpNsNr;


    void *userData;
    xmlStructuredErrorFunc error;
    xmlError lastError;
    xmlNodePtr debugNode;


    xmlDictPtr dict;

    int flags;


    void *cache;
};





typedef struct _xmlXPathCompExpr xmlXPathCompExpr;
typedef xmlXPathCompExpr *xmlXPathCompExprPtr;







struct _xmlXPathParserContext {
    const xmlChar *cur;
    const xmlChar *base;

    int error;

    xmlXPathContextPtr context;
    xmlXPathObjectPtr value;
    int valueNr;
    int valueMax;
    xmlXPathObjectPtr *valueTab;

    xmlXPathCompExprPtr comp;
    int xptr;
    xmlNodePtr ancestor;

    int valueFrame;
};
# 399 "./include/libxml/xpath.h"
extern double xmlXPathNAN;
extern double xmlXPathPINF;
extern double xmlXPathNINF;
# 440 "./include/libxml/xpath.h"
 void
      xmlXPathFreeObject (xmlXPathObjectPtr obj);
 xmlNodeSetPtr
      xmlXPathNodeSetCreate (xmlNodePtr val);
 void
      xmlXPathFreeNodeSetList (xmlXPathObjectPtr obj);
 void
      xmlXPathFreeNodeSet (xmlNodeSetPtr obj);
 xmlXPathObjectPtr
      xmlXPathObjectCopy (xmlXPathObjectPtr val);
 int
      xmlXPathCmpNodes (xmlNodePtr node1,
       xmlNodePtr node2);



 int
      xmlXPathCastNumberToBoolean (double val);
 int
      xmlXPathCastStringToBoolean (const xmlChar * val);
 int
      xmlXPathCastNodeSetToBoolean(xmlNodeSetPtr ns);
 int
      xmlXPathCastToBoolean (xmlXPathObjectPtr val);

 double
      xmlXPathCastBooleanToNumber (int val);
 double
      xmlXPathCastStringToNumber (const xmlChar * val);
 double
      xmlXPathCastNodeToNumber (xmlNodePtr node);
 double
      xmlXPathCastNodeSetToNumber (xmlNodeSetPtr ns);
 double
      xmlXPathCastToNumber (xmlXPathObjectPtr val);

 xmlChar *
      xmlXPathCastBooleanToString (int val);
 xmlChar *
      xmlXPathCastNumberToString (double val);
 xmlChar *
      xmlXPathCastNodeToString (xmlNodePtr node);
 xmlChar *
      xmlXPathCastNodeSetToString (xmlNodeSetPtr ns);
 xmlChar *
      xmlXPathCastToString (xmlXPathObjectPtr val);

 xmlXPathObjectPtr
      xmlXPathConvertBoolean (xmlXPathObjectPtr val);
 xmlXPathObjectPtr
      xmlXPathConvertNumber (xmlXPathObjectPtr val);
 xmlXPathObjectPtr
      xmlXPathConvertString (xmlXPathObjectPtr val);




 xmlXPathContextPtr
      xmlXPathNewContext (xmlDocPtr doc);
 void
      xmlXPathFreeContext (xmlXPathContextPtr ctxt);
 int
      xmlXPathContextSetCache(xmlXPathContextPtr ctxt,
                int active,
         int value,
         int options);



 long
      xmlXPathOrderDocElems (xmlDocPtr doc);
 xmlXPathObjectPtr
      xmlXPathEval (const xmlChar *str,
       xmlXPathContextPtr ctx);
 xmlXPathObjectPtr
      xmlXPathEvalExpression (const xmlChar *str,
       xmlXPathContextPtr ctxt);
 int
      xmlXPathEvalPredicate (xmlXPathContextPtr ctxt,
       xmlXPathObjectPtr res);



 xmlXPathCompExprPtr
      xmlXPathCompile (const xmlChar *str);
 xmlXPathCompExprPtr
      xmlXPathCtxtCompile (xmlXPathContextPtr ctxt,
       const xmlChar *str);
 xmlXPathObjectPtr
      xmlXPathCompiledEval (xmlXPathCompExprPtr comp,
       xmlXPathContextPtr ctx);
 int
      xmlXPathCompiledEvalToBoolean(xmlXPathCompExprPtr comp,
       xmlXPathContextPtr ctxt);
 void
      xmlXPathFreeCompExpr (xmlXPathCompExprPtr comp);


 void
      xmlXPathInit (void);
 int
  xmlXPathIsNaN (double val);
 int
  xmlXPathIsInf (double val);
# 29 "./include/libxml/c14n.h" 2
# 61 "./include/libxml/c14n.h"
typedef enum {
    XML_C14N_1_0 = 0,
    XML_C14N_EXCLUSIVE_1_0 = 1,
    XML_C14N_1_1 = 2
} xmlC14NMode;

 int
  xmlC14NDocSaveTo (xmlDocPtr doc,
      xmlNodeSetPtr nodes,
      int mode,
      xmlChar **inclusive_ns_prefixes,
      int with_comments,
      xmlOutputBufferPtr buf);

 int
  xmlC14NDocDumpMemory (xmlDocPtr doc,
      xmlNodeSetPtr nodes,
      int mode,
      xmlChar **inclusive_ns_prefixes,
      int with_comments,
      xmlChar **doc_txt_ptr);

 int
  xmlC14NDocSave (xmlDocPtr doc,
      xmlNodeSetPtr nodes,
      int mode,
      xmlChar **inclusive_ns_prefixes,
      int with_comments,
      const char* filename,
      int compression);
# 106 "./include/libxml/c14n.h"
typedef int (*xmlC14NIsVisibleCallback) (void* user_data,
      xmlNodePtr node,
      xmlNodePtr parent);

 int
  xmlC14NExecute (xmlDocPtr doc,
      xmlC14NIsVisibleCallback is_visible_callback,
      void* user_data,
      int mode,
      xmlChar **inclusive_ns_prefixes,
      int with_comments,
      xmlOutputBufferPtr buf);
# 18 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2
# 1 "./include/libxml/catalog.h" 1
# 50 "./include/libxml/catalog.h"
typedef enum {
    XML_CATA_PREFER_NONE = 0,
    XML_CATA_PREFER_PUBLIC = 1,
    XML_CATA_PREFER_SYSTEM
} xmlCatalogPrefer;

typedef enum {
    XML_CATA_ALLOW_NONE = 0,
    XML_CATA_ALLOW_GLOBAL = 1,
    XML_CATA_ALLOW_DOCUMENT = 2,
    XML_CATA_ALLOW_ALL = 3
} xmlCatalogAllow;

typedef struct _xmlCatalog xmlCatalog;
typedef xmlCatalog *xmlCatalogPtr;




 xmlCatalogPtr
  xmlNewCatalog (int sgml);
 xmlCatalogPtr
  xmlLoadACatalog (const char *filename);
 xmlCatalogPtr
  xmlLoadSGMLSuperCatalog (const char *filename);
 int
  xmlConvertSGMLCatalog (xmlCatalogPtr catal);
 int
  xmlACatalogAdd (xmlCatalogPtr catal,
      const xmlChar *type,
      const xmlChar *orig,
      const xmlChar *replace);
 int
  xmlACatalogRemove (xmlCatalogPtr catal,
      const xmlChar *value);
 xmlChar *
  xmlACatalogResolve (xmlCatalogPtr catal,
      const xmlChar *pubID,
                                  const xmlChar *sysID);
 xmlChar *
  xmlACatalogResolveSystem(xmlCatalogPtr catal,
      const xmlChar *sysID);
 xmlChar *
  xmlACatalogResolvePublic(xmlCatalogPtr catal,
      const xmlChar *pubID);
 xmlChar *
  xmlACatalogResolveURI (xmlCatalogPtr catal,
      const xmlChar *URI);

 void
  xmlACatalogDump (xmlCatalogPtr catal,
      FILE *out);

 void
  xmlFreeCatalog (xmlCatalogPtr catal);
 int
  xmlCatalogIsEmpty (xmlCatalogPtr catal);




 void
  xmlInitializeCatalog (void);
 int
  xmlLoadCatalog (const char *filename);
 void
  xmlLoadCatalogs (const char *paths);
 void
  xmlCatalogCleanup (void);

 void
  xmlCatalogDump (FILE *out);

 xmlChar *
  xmlCatalogResolve (const xmlChar *pubID,
                                  const xmlChar *sysID);
 xmlChar *
  xmlCatalogResolveSystem (const xmlChar *sysID);
 xmlChar *
  xmlCatalogResolvePublic (const xmlChar *pubID);
 xmlChar *
  xmlCatalogResolveURI (const xmlChar *URI);
 int
  xmlCatalogAdd (const xmlChar *type,
      const xmlChar *orig,
      const xmlChar *replace);
 int
  xmlCatalogRemove (const xmlChar *value);
 xmlDocPtr
  xmlParseCatalogFile (const char *filename);
 int
  xmlCatalogConvert (void);





 void
  xmlCatalogFreeLocal (void *catalogs);
 void *
  xmlCatalogAddLocal (void *catalogs,
      const xmlChar *URL);
 xmlChar *
  xmlCatalogLocalResolve (void *catalogs,
      const xmlChar *pubID,
                                  const xmlChar *sysID);
 xmlChar *
  xmlCatalogLocalResolveURI(void *catalogs,
      const xmlChar *URI);



 int
  xmlCatalogSetDebug (int level);
 xmlCatalogPrefer
  xmlCatalogSetDefaultPrefer(xmlCatalogPrefer prefer);
 void
  xmlCatalogSetDefaults (xmlCatalogAllow allow);
 xmlCatalogAllow
  xmlCatalogGetDefaults (void);



 const xmlChar *
  xmlCatalogGetSystem (const xmlChar *sysID);
 const xmlChar *
  xmlCatalogGetPublic (const xmlChar *pubID);
# 19 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2
# 1 "./include/libxml/chvalid.h" 1
# 28 "./include/libxml/chvalid.h"
typedef struct _xmlChSRange xmlChSRange;
typedef xmlChSRange *xmlChSRangePtr;
struct _xmlChSRange {
    unsigned short low;
    unsigned short high;
};

typedef struct _xmlChLRange xmlChLRange;
typedef xmlChLRange *xmlChLRangePtr;
struct _xmlChLRange {
    unsigned int low;
    unsigned int high;
};

typedef struct _xmlChRangeGroup xmlChRangeGroup;
typedef xmlChRangeGroup *xmlChRangeGroupPtr;
struct _xmlChRangeGroup {
    int nbShortRange;
    int nbLongRange;
    const xmlChSRange *shortRange;
    const xmlChLRange *longRange;
};




 int
  xmlCharInRange(unsigned int val, const xmlChRangeGroup *group);
# 80 "./include/libxml/chvalid.h"
extern const xmlChRangeGroup xmlIsBaseCharGroup;
# 124 "./include/libxml/chvalid.h"
extern const xmlChRangeGroup xmlIsCharGroup;
# 136 "./include/libxml/chvalid.h"
extern const xmlChRangeGroup xmlIsCombiningGroup;
# 156 "./include/libxml/chvalid.h"
extern const xmlChRangeGroup xmlIsDigitGroup;
# 176 "./include/libxml/chvalid.h"
extern const xmlChRangeGroup xmlIsExtenderGroup;
# 190 "./include/libxml/chvalid.h"
extern const xmlChRangeGroup xmlIsIdeographicGroup;
extern const unsigned char xmlIsPubidChar_tab[256];
# 210 "./include/libxml/chvalid.h"
 int
  xmlIsBaseChar(unsigned int ch);
 int
  xmlIsBlank(unsigned int ch);
 int
  xmlIsChar(unsigned int ch);
 int
  xmlIsCombining(unsigned int ch);
 int
  xmlIsDigit(unsigned int ch);
 int
  xmlIsExtender(unsigned int ch);
 int
  xmlIsIdeographic(unsigned int ch);
 int
  xmlIsPubidChar(unsigned int ch);
# 20 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2
# 1 "./include/libxml/debugXML.h" 1
# 28 "./include/libxml/debugXML.h"
 void
 xmlDebugDumpString (FILE *output,
     const xmlChar *str);
 void
 xmlDebugDumpAttr (FILE *output,
     xmlAttrPtr attr,
     int depth);
 void
 xmlDebugDumpAttrList (FILE *output,
     xmlAttrPtr attr,
     int depth);
 void
 xmlDebugDumpOneNode (FILE *output,
     xmlNodePtr node,
     int depth);
 void
 xmlDebugDumpNode (FILE *output,
     xmlNodePtr node,
     int depth);
 void
 xmlDebugDumpNodeList (FILE *output,
     xmlNodePtr node,
     int depth);
 void
 xmlDebugDumpDocumentHead(FILE *output,
     xmlDocPtr doc);
 void
 xmlDebugDumpDocument (FILE *output,
     xmlDocPtr doc);
 void
 xmlDebugDumpDTD (FILE *output,
     xmlDtdPtr dtd);
 void
 xmlDebugDumpEntities (FILE *output,
     xmlDocPtr doc);







 int
 xmlDebugCheckDocument (FILE * output,
     xmlDocPtr doc);







 void
 xmlLsOneNode (FILE *output, xmlNodePtr node);
 int
 xmlLsCountNode (xmlNodePtr node);

 const char *
 xmlBoolToText (int boolval);
# 103 "./include/libxml/debugXML.h"
typedef char * (* xmlShellReadlineFunc)(char *prompt);







typedef struct _xmlShellCtxt xmlShellCtxt;
typedef xmlShellCtxt *xmlShellCtxtPtr;
struct _xmlShellCtxt {
    char *filename;
    xmlDocPtr doc;
    xmlNodePtr node;
    xmlXPathContextPtr pctxt;
    int loaded;
    FILE *output;
    xmlShellReadlineFunc input;
};
# 134 "./include/libxml/debugXML.h"
typedef int (* xmlShellCmd) (xmlShellCtxtPtr ctxt,
                             char *arg,
        xmlNodePtr node,
        xmlNodePtr node2);

 void
 xmlShellPrintXPathError (int errorType,
     const char *arg);
 void
 xmlShellPrintXPathResult(xmlXPathObjectPtr list);
 int
 xmlShellList (xmlShellCtxtPtr ctxt,
     char *arg,
     xmlNodePtr node,
     xmlNodePtr node2);
 int
 xmlShellBase (xmlShellCtxtPtr ctxt,
     char *arg,
     xmlNodePtr node,
     xmlNodePtr node2);
 int
 xmlShellDir (xmlShellCtxtPtr ctxt,
     char *arg,
     xmlNodePtr node,
     xmlNodePtr node2);
 int
 xmlShellLoad (xmlShellCtxtPtr ctxt,
     char *filename,
     xmlNodePtr node,
     xmlNodePtr node2);

 void
 xmlShellPrintNode (xmlNodePtr node);
 int
 xmlShellCat (xmlShellCtxtPtr ctxt,
     char *arg,
     xmlNodePtr node,
     xmlNodePtr node2);
 int
 xmlShellWrite (xmlShellCtxtPtr ctxt,
     char *filename,
     xmlNodePtr node,
     xmlNodePtr node2);
 int
 xmlShellSave (xmlShellCtxtPtr ctxt,
     char *filename,
     xmlNodePtr node,
     xmlNodePtr node2);


 int
 xmlShellValidate (xmlShellCtxtPtr ctxt,
     char *dtd,
     xmlNodePtr node,
     xmlNodePtr node2);

 int
 xmlShellDu (xmlShellCtxtPtr ctxt,
     char *arg,
     xmlNodePtr tree,
     xmlNodePtr node2);
 int
 xmlShellPwd (xmlShellCtxtPtr ctxt,
     char *buffer,
     xmlNodePtr node,
     xmlNodePtr node2);




 void
 xmlShell (xmlDocPtr doc,
     char *filename,
     xmlShellReadlineFunc input,
     FILE *output);
# 21 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2

# 1 "./include/libxml/DOCBparser.h" 1
# 18 "./include/libxml/DOCBparser.h"
# 1 "./include/libxml/parserInternals.h" 1
# 17 "./include/libxml/parserInternals.h"
# 1 "./include/libxml/HTMLparser.h" 1
# 27 "./include/libxml/HTMLparser.h"
typedef xmlParserCtxt htmlParserCtxt;
typedef xmlParserCtxtPtr htmlParserCtxtPtr;
typedef xmlParserNodeInfo htmlParserNodeInfo;
typedef xmlSAXHandler htmlSAXHandler;
typedef xmlSAXHandlerPtr htmlSAXHandlerPtr;
typedef xmlParserInput htmlParserInput;
typedef xmlParserInputPtr htmlParserInputPtr;
typedef xmlDocPtr htmlDocPtr;
typedef xmlNodePtr htmlNodePtr;





typedef struct _htmlElemDesc htmlElemDesc;
typedef htmlElemDesc *htmlElemDescPtr;
struct _htmlElemDesc {
    const char *name;
    char startTag;
    char endTag;
    char saveEndTag;
    char empty;
    char depr;
    char dtd;
    char isinline;
    const char *desc;
# 64 "./include/libxml/HTMLparser.h"
    const char** subelts;
    const char* defaultsubelt;

    const char** attrs_opt;
    const char** attrs_depr;
    const char** attrs_req;
};




typedef struct _htmlEntityDesc htmlEntityDesc;
typedef htmlEntityDesc *htmlEntityDescPtr;
struct _htmlEntityDesc {
    unsigned int value;
    const char *name;
    const char *desc;
};




 const htmlElemDesc *
   htmlTagLookup (const xmlChar *tag);
 const htmlEntityDesc *
   htmlEntityLookup(const xmlChar *name);
 const htmlEntityDesc *
   htmlEntityValueLookup(unsigned int value);

 int
   htmlIsAutoClosed(htmlDocPtr doc,
      htmlNodePtr elem);
 int
   htmlAutoCloseTag(htmlDocPtr doc,
      const xmlChar *name,
      htmlNodePtr elem);
 const htmlEntityDesc *
   htmlParseEntityRef(htmlParserCtxtPtr ctxt,
      const xmlChar **str);
 int
   htmlParseCharRef(htmlParserCtxtPtr ctxt);
 void
   htmlParseElement(htmlParserCtxtPtr ctxt);

 htmlParserCtxtPtr
   htmlNewParserCtxt(void);

 htmlParserCtxtPtr
   htmlCreateMemoryParserCtxt(const char *buffer,
         int size);

 int
   htmlParseDocument(htmlParserCtxtPtr ctxt);
 htmlDocPtr
   htmlSAXParseDoc (xmlChar *cur,
      const char *encoding,
      htmlSAXHandlerPtr sax,
      void *userData);
 htmlDocPtr
   htmlParseDoc (xmlChar *cur,
      const char *encoding);
 htmlDocPtr
   htmlSAXParseFile(const char *filename,
      const char *encoding,
      htmlSAXHandlerPtr sax,
      void *userData);
 htmlDocPtr
   htmlParseFile (const char *filename,
      const char *encoding);
 int
   UTF8ToHtml (unsigned char *out,
      int *outlen,
      const unsigned char *in,
      int *inlen);
 int
   htmlEncodeEntities(unsigned char *out,
      int *outlen,
      const unsigned char *in,
      int *inlen, int quoteChar);
 int
   htmlIsScriptAttribute(const xmlChar *name);
 int
   htmlHandleOmittedElem(int val);





 htmlParserCtxtPtr
   htmlCreatePushParserCtxt(htmlSAXHandlerPtr sax,
       void *user_data,
       const char *chunk,
       int size,
       const char *filename,
       xmlCharEncoding enc);
 int
   htmlParseChunk (htmlParserCtxtPtr ctxt,
       const char *chunk,
       int size,
       int terminate);


 void
   htmlFreeParserCtxt (htmlParserCtxtPtr ctxt);
# 178 "./include/libxml/HTMLparser.h"
typedef enum {
    HTML_PARSE_RECOVER = 1<<0,
    HTML_PARSE_NODEFDTD = 1<<2,
    HTML_PARSE_NOERROR = 1<<5,
    HTML_PARSE_NOWARNING= 1<<6,
    HTML_PARSE_PEDANTIC = 1<<7,
    HTML_PARSE_NOBLANKS = 1<<8,
    HTML_PARSE_NONET = 1<<11,
    HTML_PARSE_NOIMPLIED= 1<<13,
    HTML_PARSE_COMPACT = 1<<16,
    HTML_PARSE_IGNORE_ENC=1<<21
} htmlParserOption;

 void
  htmlCtxtReset (htmlParserCtxtPtr ctxt);
 int
  htmlCtxtUseOptions (htmlParserCtxtPtr ctxt,
      int options);
 htmlDocPtr
  htmlReadDoc (const xmlChar *cur,
      const char *URL,
      const char *encoding,
      int options);
 htmlDocPtr
  htmlReadFile (const char *URL,
      const char *encoding,
      int options);
 htmlDocPtr
  htmlReadMemory (const char *buffer,
      int size,
      const char *URL,
      const char *encoding,
      int options);
 htmlDocPtr
  htmlReadFd (int fd,
      const char *URL,
      const char *encoding,
      int options);
 htmlDocPtr
  htmlReadIO (xmlInputReadCallback ioread,
      xmlInputCloseCallback ioclose,
      void *ioctx,
      const char *URL,
      const char *encoding,
      int options);
 htmlDocPtr
  htmlCtxtReadDoc (xmlParserCtxtPtr ctxt,
      const xmlChar *cur,
      const char *URL,
      const char *encoding,
      int options);
 htmlDocPtr
  htmlCtxtReadFile (xmlParserCtxtPtr ctxt,
      const char *filename,
      const char *encoding,
      int options);
 htmlDocPtr
  htmlCtxtReadMemory (xmlParserCtxtPtr ctxt,
      const char *buffer,
      int size,
      const char *URL,
      const char *encoding,
      int options);
 htmlDocPtr
  htmlCtxtReadFd (xmlParserCtxtPtr ctxt,
      int fd,
      const char *URL,
      const char *encoding,
      int options);
 htmlDocPtr
  htmlCtxtReadIO (xmlParserCtxtPtr ctxt,
      xmlInputReadCallback ioread,
      xmlInputCloseCallback ioclose,
      void *ioctx,
      const char *URL,
      const char *encoding,
      int options);



typedef enum {
  HTML_NA = 0 ,
  HTML_INVALID = 0x1 ,
  HTML_DEPRECATED = 0x2 ,
  HTML_VALID = 0x4 ,
  HTML_REQUIRED = 0xc
} htmlStatus ;




 htmlStatus htmlAttrAllowed(const htmlElemDesc*, const xmlChar*, int) ;
 int htmlElementAllowedHere(const htmlElemDesc*, const xmlChar*) ;
 htmlStatus htmlElementStatusHere(const htmlElemDesc*, const htmlElemDesc*) ;
 htmlStatus htmlNodeStatus(const htmlNodePtr, int) ;
# 18 "./include/libxml/parserInternals.h" 2
# 31 "./include/libxml/parserInternals.h"
extern unsigned int xmlParserMaxDepth;
# 312 "./include/libxml/parserInternals.h"
extern const xmlChar xmlStringText[];
extern const xmlChar xmlStringTextNoenc[];
extern const xmlChar xmlStringComment[];




 int xmlIsLetter (int c);




 xmlParserCtxtPtr
   xmlCreateFileParserCtxt (const char *filename);
 xmlParserCtxtPtr
   xmlCreateURLParserCtxt (const char *filename,
       int options);
 xmlParserCtxtPtr
   xmlCreateMemoryParserCtxt(const char *buffer,
       int size);
 xmlParserCtxtPtr
   xmlCreateEntityParserCtxt(const xmlChar *URL,
       const xmlChar *ID,
       const xmlChar *base);
 int
   xmlSwitchEncoding (xmlParserCtxtPtr ctxt,
       xmlCharEncoding enc);
 int
   xmlSwitchToEncoding (xmlParserCtxtPtr ctxt,
      xmlCharEncodingHandlerPtr handler);
 int
   xmlSwitchInputEncoding (xmlParserCtxtPtr ctxt,
       xmlParserInputPtr input,
      xmlCharEncodingHandlerPtr handler);



 void
   __xmlErrEncoding (xmlParserCtxtPtr ctxt,
       xmlParserErrors xmlerr,
       const char *msg,
       const xmlChar * str1,
       const xmlChar * str2);





 xmlParserInputPtr
   xmlNewStringInputStream (xmlParserCtxtPtr ctxt,
       const xmlChar *buffer);
 xmlParserInputPtr
   xmlNewEntityInputStream (xmlParserCtxtPtr ctxt,
       xmlEntityPtr entity);
 int
   xmlPushInput (xmlParserCtxtPtr ctxt,
       xmlParserInputPtr input);
 xmlChar
   xmlPopInput (xmlParserCtxtPtr ctxt);
 void
   xmlFreeInputStream (xmlParserInputPtr input);
 xmlParserInputPtr
   xmlNewInputFromFile (xmlParserCtxtPtr ctxt,
       const char *filename);
 xmlParserInputPtr
   xmlNewInputStream (xmlParserCtxtPtr ctxt);




 xmlChar *
   xmlSplitQName (xmlParserCtxtPtr ctxt,
       const xmlChar *name,
       xmlChar **prefix);




 const xmlChar *
   xmlParseName (xmlParserCtxtPtr ctxt);
 xmlChar *
   xmlParseNmtoken (xmlParserCtxtPtr ctxt);
 xmlChar *
   xmlParseEntityValue (xmlParserCtxtPtr ctxt,
       xmlChar **orig);
 xmlChar *
   xmlParseAttValue (xmlParserCtxtPtr ctxt);
 xmlChar *
   xmlParseSystemLiteral (xmlParserCtxtPtr ctxt);
 xmlChar *
   xmlParsePubidLiteral (xmlParserCtxtPtr ctxt);
 void
   xmlParseCharData (xmlParserCtxtPtr ctxt,
       int cdata);
 xmlChar *
   xmlParseExternalID (xmlParserCtxtPtr ctxt,
       xmlChar **publicID,
       int strict);
 void
   xmlParseComment (xmlParserCtxtPtr ctxt);
 const xmlChar *
   xmlParsePITarget (xmlParserCtxtPtr ctxt);
 void
   xmlParsePI (xmlParserCtxtPtr ctxt);
 void
   xmlParseNotationDecl (xmlParserCtxtPtr ctxt);
 void
   xmlParseEntityDecl (xmlParserCtxtPtr ctxt);
 int
   xmlParseDefaultDecl (xmlParserCtxtPtr ctxt,
       xmlChar **value);
 xmlEnumerationPtr
   xmlParseNotationType (xmlParserCtxtPtr ctxt);
 xmlEnumerationPtr
   xmlParseEnumerationType (xmlParserCtxtPtr ctxt);
 int
   xmlParseEnumeratedType (xmlParserCtxtPtr ctxt,
       xmlEnumerationPtr *tree);
 int
   xmlParseAttributeType (xmlParserCtxtPtr ctxt,
       xmlEnumerationPtr *tree);
 void
   xmlParseAttributeListDecl(xmlParserCtxtPtr ctxt);
 xmlElementContentPtr
   xmlParseElementMixedContentDecl
      (xmlParserCtxtPtr ctxt,
       int inputchk);
 xmlElementContentPtr
   xmlParseElementChildrenContentDecl
      (xmlParserCtxtPtr ctxt,
       int inputchk);
 int
   xmlParseElementContentDecl(xmlParserCtxtPtr ctxt,
       const xmlChar *name,
       xmlElementContentPtr *result);
 int
   xmlParseElementDecl (xmlParserCtxtPtr ctxt);
 void
   xmlParseMarkupDecl (xmlParserCtxtPtr ctxt);
 int
   xmlParseCharRef (xmlParserCtxtPtr ctxt);
 xmlEntityPtr
   xmlParseEntityRef (xmlParserCtxtPtr ctxt);
 void
   xmlParseReference (xmlParserCtxtPtr ctxt);
 void
   xmlParsePEReference (xmlParserCtxtPtr ctxt);
 void
   xmlParseDocTypeDecl (xmlParserCtxtPtr ctxt);

 const xmlChar *
   xmlParseAttribute (xmlParserCtxtPtr ctxt,
       xmlChar **value);
 const xmlChar *
   xmlParseStartTag (xmlParserCtxtPtr ctxt);
 void
   xmlParseEndTag (xmlParserCtxtPtr ctxt);

 void
   xmlParseCDSect (xmlParserCtxtPtr ctxt);
 void
   xmlParseContent (xmlParserCtxtPtr ctxt);
 void
   xmlParseElement (xmlParserCtxtPtr ctxt);
 xmlChar *
   xmlParseVersionNum (xmlParserCtxtPtr ctxt);
 xmlChar *
   xmlParseVersionInfo (xmlParserCtxtPtr ctxt);
 xmlChar *
   xmlParseEncName (xmlParserCtxtPtr ctxt);
 const xmlChar *
   xmlParseEncodingDecl (xmlParserCtxtPtr ctxt);
 int
   xmlParseSDDecl (xmlParserCtxtPtr ctxt);
 void
   xmlParseXMLDecl (xmlParserCtxtPtr ctxt);
 void
   xmlParseTextDecl (xmlParserCtxtPtr ctxt);
 void
   xmlParseMisc (xmlParserCtxtPtr ctxt);
 void
   xmlParseExternalSubset (xmlParserCtxtPtr ctxt,
       const xmlChar *ExternalID,
       const xmlChar *SystemID);
# 521 "./include/libxml/parserInternals.h"
 xmlChar *
  xmlStringDecodeEntities (xmlParserCtxtPtr ctxt,
       const xmlChar *str,
       int what,
       xmlChar end,
       xmlChar end2,
       xmlChar end3);
 xmlChar *
  xmlStringLenDecodeEntities (xmlParserCtxtPtr ctxt,
       const xmlChar *str,
       int len,
       int what,
       xmlChar end,
       xmlChar end2,
       xmlChar end3);




 int nodePush (xmlParserCtxtPtr ctxt,
       xmlNodePtr value);
 xmlNodePtr nodePop (xmlParserCtxtPtr ctxt);
 int inputPush (xmlParserCtxtPtr ctxt,
       xmlParserInputPtr value);
 xmlParserInputPtr inputPop (xmlParserCtxtPtr ctxt);
 const xmlChar * namePop (xmlParserCtxtPtr ctxt);
 int namePush (xmlParserCtxtPtr ctxt,
       const xmlChar *value);




 int xmlSkipBlankChars (xmlParserCtxtPtr ctxt);
 int xmlStringCurrentChar (xmlParserCtxtPtr ctxt,
       const xmlChar *cur,
       int *len);
 void xmlParserHandlePEReference(xmlParserCtxtPtr ctxt);
 int xmlCheckLanguageID (const xmlChar *lang);




 int xmlCurrentChar (xmlParserCtxtPtr ctxt,
       int *len);
 int xmlCopyCharMultiByte (xmlChar *out,
       int val);
 int xmlCopyChar (int len,
       xmlChar *out,
       int val);
 void xmlNextChar (xmlParserCtxtPtr ctxt);
 void xmlParserInputShrink (xmlParserInputPtr in);





 void htmlInitAutoClose (void);
 htmlParserCtxtPtr htmlCreateFileParserCtxt(const char *filename,
                                          const char *encoding);
# 596 "./include/libxml/parserInternals.h"
typedef void (*xmlEntityReferenceFunc) (xmlEntityPtr ent,
       xmlNodePtr firstNode,
       xmlNodePtr lastNode);

 void xmlSetEntityReferenceFunc (xmlEntityReferenceFunc func);

 xmlChar *
   xmlParseQuotedString (xmlParserCtxtPtr ctxt);
 void
                        xmlParseNamespace (xmlParserCtxtPtr ctxt);
 xmlChar *
   xmlNamespaceParseNSDef (xmlParserCtxtPtr ctxt);
 xmlChar *
   xmlScanName (xmlParserCtxtPtr ctxt);
 xmlChar *
   xmlNamespaceParseNCName (xmlParserCtxtPtr ctxt);
 void xmlParserHandleReference(xmlParserCtxtPtr ctxt);
 xmlChar *
   xmlNamespaceParseQName (xmlParserCtxtPtr ctxt,
       xmlChar **prefix);



 xmlChar *
  xmlDecodeEntities (xmlParserCtxtPtr ctxt,
       int len,
       int what,
       xmlChar end,
       xmlChar end2,
       xmlChar end3);
 void
   xmlHandleEntity (xmlParserCtxtPtr ctxt,
       xmlEntityPtr entity);







 void
 xmlErrMemory (xmlParserCtxtPtr ctxt,
     const char *extra);
# 19 "./include/libxml/DOCBparser.h" 2
# 33 "./include/libxml/DOCBparser.h"
typedef xmlParserCtxt docbParserCtxt;
typedef xmlParserCtxtPtr docbParserCtxtPtr;
typedef xmlSAXHandler docbSAXHandler;
typedef xmlSAXHandlerPtr docbSAXHandlerPtr;
typedef xmlParserInput docbParserInput;
typedef xmlParserInputPtr docbParserInputPtr;
typedef xmlDocPtr docbDocPtr;




 int
       docbEncodeEntities(unsigned char *out,
                                        int *outlen,
                                        const unsigned char *in,
                                        int *inlen, int quoteChar);

 docbDocPtr
       docbSAXParseDoc (xmlChar *cur,
                                        const char *encoding,
                                        docbSAXHandlerPtr sax,
                                        void *userData);
 docbDocPtr
       docbParseDoc (xmlChar *cur,
                                        const char *encoding);
 docbDocPtr
       docbSAXParseFile (const char *filename,
                                        const char *encoding,
                                        docbSAXHandlerPtr sax,
                                        void *userData);
 docbDocPtr
       docbParseFile (const char *filename,
                                        const char *encoding);




 void
       docbFreeParserCtxt (docbParserCtxtPtr ctxt);
 docbParserCtxtPtr
       docbCreatePushParserCtxt(docbSAXHandlerPtr sax,
                                              void *user_data,
                                              const char *chunk,
                                              int size,
                                              const char *filename,
                                              xmlCharEncoding enc);
 int
       docbParseChunk (docbParserCtxtPtr ctxt,
                                              const char *chunk,
                                              int size,
                                              int terminate);
 docbParserCtxtPtr
       docbCreateFileParserCtxt(const char *filename,
                                              const char *encoding);
 int
       docbParseDocument (docbParserCtxtPtr ctxt);
# 23 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2





# 1 "./include/libxml/HTMLtree.h" 1
# 62 "./include/libxml/HTMLtree.h"
 htmlDocPtr
  htmlNewDoc (const xmlChar *URI,
      const xmlChar *ExternalID);
 htmlDocPtr
  htmlNewDocNoDtD (const xmlChar *URI,
      const xmlChar *ExternalID);
 const xmlChar *
  htmlGetMetaEncoding (htmlDocPtr doc);
 int
  htmlSetMetaEncoding (htmlDocPtr doc,
      const xmlChar *encoding);

 void
  htmlDocDumpMemory (xmlDocPtr cur,
      xmlChar **mem,
      int *size);
 void
  htmlDocDumpMemoryFormat (xmlDocPtr cur,
      xmlChar **mem,
      int *size,
      int format);
 int
  htmlDocDump (FILE *f,
      xmlDocPtr cur);
 int
  htmlSaveFile (const char *filename,
      xmlDocPtr cur);
 int
  htmlNodeDump (xmlBufferPtr buf,
      xmlDocPtr doc,
      xmlNodePtr cur);
 void
  htmlNodeDumpFile (FILE *out,
      xmlDocPtr doc,
      xmlNodePtr cur);
 int
  htmlNodeDumpFileFormat (FILE *out,
      xmlDocPtr doc,
      xmlNodePtr cur,
      const char *encoding,
      int format);
 int
  htmlSaveFileEnc (const char *filename,
      xmlDocPtr cur,
      const char *encoding);
 int
  htmlSaveFileFormat (const char *filename,
      xmlDocPtr cur,
      const char *encoding,
      int format);

 void
  htmlNodeDumpFormatOutput(xmlOutputBufferPtr buf,
      xmlDocPtr doc,
      xmlNodePtr cur,
      const char *encoding,
      int format);
 void
  htmlDocContentDumpOutput(xmlOutputBufferPtr buf,
      xmlDocPtr cur,
      const char *encoding);
 void
  htmlDocContentDumpFormatOutput(xmlOutputBufferPtr buf,
      xmlDocPtr cur,
      const char *encoding,
      int format);
 void
  htmlNodeDumpOutput (xmlOutputBufferPtr buf,
      xmlDocPtr doc,
      xmlNodePtr cur,
      const char *encoding);



 int
  htmlIsBooleanAttr (const xmlChar *name);
# 29 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2

# 1 "./include/libxml/nanoftp.h" 1
# 60 "./include/libxml/nanoftp.h"
typedef void (*ftpListCallback) (void *userData,
                          const char *filename, const char *attrib,
                          const char *owner, const char *group,
     unsigned long size, int links, int year,
     const char *month, int day, int hour,
     int minute);
# 74 "./include/libxml/nanoftp.h"
typedef void (*ftpDataCallback) (void *userData,
     const char *data,
     int len);




 void
 xmlNanoFTPInit (void);
 void
 xmlNanoFTPCleanup (void);




 void *
 xmlNanoFTPNewCtxt (const char *URL);
 void
 xmlNanoFTPFreeCtxt (void * ctx);
 void *
 xmlNanoFTPConnectTo (const char *server,
     int port);



 void *
 xmlNanoFTPOpen (const char *URL);
 int
 xmlNanoFTPConnect (void *ctx);
 int
 xmlNanoFTPClose (void *ctx);
 int
 xmlNanoFTPQuit (void *ctx);
 void
 xmlNanoFTPScanProxy (const char *URL);
 void
 xmlNanoFTPProxy (const char *host,
     int port,
     const char *user,
     const char *passwd,
     int type);
 int
 xmlNanoFTPUpdateURL (void *ctx,
     const char *URL);




 int
 xmlNanoFTPGetResponse (void *ctx);
 int
 xmlNanoFTPCheckResponse (void *ctx);




 int
 xmlNanoFTPCwd (void *ctx,
     const char *directory);
 int
 xmlNanoFTPDele (void *ctx,
     const char *file);

 int
 xmlNanoFTPGetConnection (void *ctx);
 int
 xmlNanoFTPCloseConnection(void *ctx);
 int
 xmlNanoFTPList (void *ctx,
     ftpListCallback callback,
     void *userData,
     const char *filename);
 int
 xmlNanoFTPGetSocket (void *ctx,
     const char *filename);
 int
 xmlNanoFTPGet (void *ctx,
     ftpDataCallback callback,
     void *userData,
     const char *filename);
 int
 xmlNanoFTPRead (void *ctx,
     void *dest,
     int len);
# 31 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2
# 1 "./include/libxml/nanohttp.h" 1
# 21 "./include/libxml/nanohttp.h"
 void
 xmlNanoHTTPInit (void);
 void
 xmlNanoHTTPCleanup (void);
 void
 xmlNanoHTTPScanProxy (const char *URL);
 int
 xmlNanoHTTPFetch (const char *URL,
     const char *filename,
     char **contentType);
 void *
 xmlNanoHTTPMethod (const char *URL,
     const char *method,
     const char *input,
     char **contentType,
     const char *headers,
     int ilen);
 void *
 xmlNanoHTTPMethodRedir (const char *URL,
     const char *method,
     const char *input,
     char **contentType,
     char **redir,
     const char *headers,
     int ilen);
 void *
 xmlNanoHTTPOpen (const char *URL,
     char **contentType);
 void *
 xmlNanoHTTPOpenRedir (const char *URL,
     char **contentType,
     char **redir);
 int
 xmlNanoHTTPReturnCode (void *ctx);
 const char *
 xmlNanoHTTPAuthHeader (void *ctx);
 const char *
 xmlNanoHTTPRedir (void *ctx);
 int
 xmlNanoHTTPContentLength( void * ctx );
 const char *
 xmlNanoHTTPEncoding (void *ctx);
 const char *
 xmlNanoHTTPMimeType (void *ctx);
 int
 xmlNanoHTTPRead (void *ctx,
     void *dest,
     int len);

 int
 xmlNanoHTTPSave (void *ctxt,
     const char *filename);

 void
 xmlNanoHTTPClose (void *ctx);
# 32 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2


# 1 "./include/libxml/pattern.h" 1
# 29 "./include/libxml/pattern.h"
typedef struct _xmlPattern xmlPattern;
typedef xmlPattern *xmlPatternPtr;
# 39 "./include/libxml/pattern.h"
typedef enum {
    XML_PATTERN_DEFAULT = 0,
    XML_PATTERN_XPATH = 1<<0,
    XML_PATTERN_XSSEL = 1<<1,
    XML_PATTERN_XSFIELD = 1<<2
} xmlPatternFlags;

 void
   xmlFreePattern (xmlPatternPtr comp);

 void
   xmlFreePatternList (xmlPatternPtr comp);

 xmlPatternPtr
   xmlPatterncompile (const xmlChar *pattern,
       xmlDict *dict,
       int flags,
       const xmlChar **namespaces);
 int
   xmlPatternMatch (xmlPatternPtr comp,
       xmlNodePtr node);


typedef struct _xmlStreamCtxt xmlStreamCtxt;
typedef xmlStreamCtxt *xmlStreamCtxtPtr;

 int
   xmlPatternStreamable (xmlPatternPtr comp);
 int
   xmlPatternMaxDepth (xmlPatternPtr comp);
 int
   xmlPatternMinDepth (xmlPatternPtr comp);
 int
   xmlPatternFromRoot (xmlPatternPtr comp);
 xmlStreamCtxtPtr
   xmlPatternGetStreamCtxt (xmlPatternPtr comp);
 void
   xmlFreeStreamCtxt (xmlStreamCtxtPtr stream);
 int
   xmlStreamPushNode (xmlStreamCtxtPtr stream,
       const xmlChar *name,
       const xmlChar *ns,
       int nodeType);
 int
   xmlStreamPush (xmlStreamCtxtPtr stream,
       const xmlChar *name,
       const xmlChar *ns);
 int
   xmlStreamPushAttr (xmlStreamCtxtPtr stream,
       const xmlChar *name,
       const xmlChar *ns);
 int
   xmlStreamPop (xmlStreamCtxtPtr stream);
 int
   xmlStreamWantsAnyNode (xmlStreamCtxtPtr stream);
# 35 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2
# 1 "./include/libxml/relaxng.h" 1
# 23 "./include/libxml/relaxng.h"
typedef struct _xmlRelaxNG xmlRelaxNG;
typedef xmlRelaxNG *xmlRelaxNGPtr;
# 35 "./include/libxml/relaxng.h"
typedef void ( *xmlRelaxNGValidityErrorFunc) (void *ctx, const char *msg, ...) __attribute__((__format__(__printf__,2,3)));
# 45 "./include/libxml/relaxng.h"
typedef void ( *xmlRelaxNGValidityWarningFunc) (void *ctx, const char *msg, ...) __attribute__((__format__(__printf__,2,3)));




typedef struct _xmlRelaxNGParserCtxt xmlRelaxNGParserCtxt;
typedef xmlRelaxNGParserCtxt *xmlRelaxNGParserCtxtPtr;

typedef struct _xmlRelaxNGValidCtxt xmlRelaxNGValidCtxt;
typedef xmlRelaxNGValidCtxt *xmlRelaxNGValidCtxtPtr;






typedef enum {
    XML_RELAXNG_OK = 0,
    XML_RELAXNG_ERR_MEMORY,
    XML_RELAXNG_ERR_TYPE,
    XML_RELAXNG_ERR_TYPEVAL,
    XML_RELAXNG_ERR_DUPID,
    XML_RELAXNG_ERR_TYPECMP,
    XML_RELAXNG_ERR_NOSTATE,
    XML_RELAXNG_ERR_NODEFINE,
    XML_RELAXNG_ERR_LISTEXTRA,
    XML_RELAXNG_ERR_LISTEMPTY,
    XML_RELAXNG_ERR_INTERNODATA,
    XML_RELAXNG_ERR_INTERSEQ,
    XML_RELAXNG_ERR_INTEREXTRA,
    XML_RELAXNG_ERR_ELEMNAME,
    XML_RELAXNG_ERR_ATTRNAME,
    XML_RELAXNG_ERR_ELEMNONS,
    XML_RELAXNG_ERR_ATTRNONS,
    XML_RELAXNG_ERR_ELEMWRONGNS,
    XML_RELAXNG_ERR_ATTRWRONGNS,
    XML_RELAXNG_ERR_ELEMEXTRANS,
    XML_RELAXNG_ERR_ATTREXTRANS,
    XML_RELAXNG_ERR_ELEMNOTEMPTY,
    XML_RELAXNG_ERR_NOELEM,
    XML_RELAXNG_ERR_NOTELEM,
    XML_RELAXNG_ERR_ATTRVALID,
    XML_RELAXNG_ERR_CONTENTVALID,
    XML_RELAXNG_ERR_EXTRACONTENT,
    XML_RELAXNG_ERR_INVALIDATTR,
    XML_RELAXNG_ERR_DATAELEM,
    XML_RELAXNG_ERR_VALELEM,
    XML_RELAXNG_ERR_LISTELEM,
    XML_RELAXNG_ERR_DATATYPE,
    XML_RELAXNG_ERR_VALUE,
    XML_RELAXNG_ERR_LIST,
    XML_RELAXNG_ERR_NOGRAMMAR,
    XML_RELAXNG_ERR_EXTRADATA,
    XML_RELAXNG_ERR_LACKDATA,
    XML_RELAXNG_ERR_INTERNAL,
    XML_RELAXNG_ERR_ELEMWRONG,
    XML_RELAXNG_ERR_TEXTWRONG
} xmlRelaxNGValidErr;






typedef enum {
    XML_RELAXNGP_NONE = 0,
    XML_RELAXNGP_FREE_DOC = 1,
    XML_RELAXNGP_CRNG = 2
} xmlRelaxNGParserFlag;

 int
      xmlRelaxNGInitTypes (void);
 void
      xmlRelaxNGCleanupTypes (void);




 xmlRelaxNGParserCtxtPtr
      xmlRelaxNGNewParserCtxt (const char *URL);
 xmlRelaxNGParserCtxtPtr
      xmlRelaxNGNewMemParserCtxt (const char *buffer,
       int size);
 xmlRelaxNGParserCtxtPtr
      xmlRelaxNGNewDocParserCtxt (xmlDocPtr doc);

 int
      xmlRelaxParserSetFlag (xmlRelaxNGParserCtxtPtr ctxt,
       int flag);

 void
      xmlRelaxNGFreeParserCtxt (xmlRelaxNGParserCtxtPtr ctxt);
 void
      xmlRelaxNGSetParserErrors(xmlRelaxNGParserCtxtPtr ctxt,
      xmlRelaxNGValidityErrorFunc err,
      xmlRelaxNGValidityWarningFunc warn,
      void *ctx);
 int
      xmlRelaxNGGetParserErrors(xmlRelaxNGParserCtxtPtr ctxt,
      xmlRelaxNGValidityErrorFunc *err,
      xmlRelaxNGValidityWarningFunc *warn,
      void **ctx);
 void
      xmlRelaxNGSetParserStructuredErrors(
      xmlRelaxNGParserCtxtPtr ctxt,
      xmlStructuredErrorFunc serror,
      void *ctx);
 xmlRelaxNGPtr
      xmlRelaxNGParse (xmlRelaxNGParserCtxtPtr ctxt);
 void
      xmlRelaxNGFree (xmlRelaxNGPtr schema);

 void
      xmlRelaxNGDump (FILE *output,
      xmlRelaxNGPtr schema);
 void
      xmlRelaxNGDumpTree (FILE * output,
      xmlRelaxNGPtr schema);




 void
      xmlRelaxNGSetValidErrors(xmlRelaxNGValidCtxtPtr ctxt,
      xmlRelaxNGValidityErrorFunc err,
      xmlRelaxNGValidityWarningFunc warn,
      void *ctx);
 int
      xmlRelaxNGGetValidErrors(xmlRelaxNGValidCtxtPtr ctxt,
      xmlRelaxNGValidityErrorFunc *err,
      xmlRelaxNGValidityWarningFunc *warn,
      void **ctx);
 void
   xmlRelaxNGSetValidStructuredErrors(xmlRelaxNGValidCtxtPtr ctxt,
       xmlStructuredErrorFunc serror, void *ctx);
 xmlRelaxNGValidCtxtPtr
      xmlRelaxNGNewValidCtxt (xmlRelaxNGPtr schema);
 void
      xmlRelaxNGFreeValidCtxt (xmlRelaxNGValidCtxtPtr ctxt);
 int
      xmlRelaxNGValidateDoc (xmlRelaxNGValidCtxtPtr ctxt,
       xmlDocPtr doc);



 int
      xmlRelaxNGValidatePushElement (xmlRelaxNGValidCtxtPtr ctxt,
      xmlDocPtr doc,
      xmlNodePtr elem);
 int
      xmlRelaxNGValidatePushCData (xmlRelaxNGValidCtxtPtr ctxt,
      const xmlChar *data,
      int len);
 int
      xmlRelaxNGValidatePopElement (xmlRelaxNGValidCtxtPtr ctxt,
      xmlDocPtr doc,
      xmlNodePtr elem);
 int
      xmlRelaxNGValidateFullElement (xmlRelaxNGValidCtxtPtr ctxt,
      xmlDocPtr doc,
      xmlNodePtr elem);
# 36 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2


# 1 "./include/libxml/schemasInternals.h" 1
# 29 "./include/libxml/schemasInternals.h"
typedef enum {
    XML_SCHEMAS_UNKNOWN = 0,
    XML_SCHEMAS_STRING,
    XML_SCHEMAS_NORMSTRING,
    XML_SCHEMAS_DECIMAL,
    XML_SCHEMAS_TIME,
    XML_SCHEMAS_GDAY,
    XML_SCHEMAS_GMONTH,
    XML_SCHEMAS_GMONTHDAY,
    XML_SCHEMAS_GYEAR,
    XML_SCHEMAS_GYEARMONTH,
    XML_SCHEMAS_DATE,
    XML_SCHEMAS_DATETIME,
    XML_SCHEMAS_DURATION,
    XML_SCHEMAS_FLOAT,
    XML_SCHEMAS_DOUBLE,
    XML_SCHEMAS_BOOLEAN,
    XML_SCHEMAS_TOKEN,
    XML_SCHEMAS_LANGUAGE,
    XML_SCHEMAS_NMTOKEN,
    XML_SCHEMAS_NMTOKENS,
    XML_SCHEMAS_NAME,
    XML_SCHEMAS_QNAME,
    XML_SCHEMAS_NCNAME,
    XML_SCHEMAS_ID,
    XML_SCHEMAS_IDREF,
    XML_SCHEMAS_IDREFS,
    XML_SCHEMAS_ENTITY,
    XML_SCHEMAS_ENTITIES,
    XML_SCHEMAS_NOTATION,
    XML_SCHEMAS_ANYURI,
    XML_SCHEMAS_INTEGER,
    XML_SCHEMAS_NPINTEGER,
    XML_SCHEMAS_NINTEGER,
    XML_SCHEMAS_NNINTEGER,
    XML_SCHEMAS_PINTEGER,
    XML_SCHEMAS_INT,
    XML_SCHEMAS_UINT,
    XML_SCHEMAS_LONG,
    XML_SCHEMAS_ULONG,
    XML_SCHEMAS_SHORT,
    XML_SCHEMAS_USHORT,
    XML_SCHEMAS_BYTE,
    XML_SCHEMAS_UBYTE,
    XML_SCHEMAS_HEXBINARY,
    XML_SCHEMAS_BASE64BINARY,
    XML_SCHEMAS_ANYTYPE,
    XML_SCHEMAS_ANYSIMPLETYPE
} xmlSchemaValType;




typedef enum {
    XML_SCHEMA_TYPE_BASIC = 1,
    XML_SCHEMA_TYPE_ANY,
    XML_SCHEMA_TYPE_FACET,
    XML_SCHEMA_TYPE_SIMPLE,
    XML_SCHEMA_TYPE_COMPLEX,
    XML_SCHEMA_TYPE_SEQUENCE = 6,
    XML_SCHEMA_TYPE_CHOICE,
    XML_SCHEMA_TYPE_ALL,
    XML_SCHEMA_TYPE_SIMPLE_CONTENT,
    XML_SCHEMA_TYPE_COMPLEX_CONTENT,
    XML_SCHEMA_TYPE_UR,
    XML_SCHEMA_TYPE_RESTRICTION,
    XML_SCHEMA_TYPE_EXTENSION,
    XML_SCHEMA_TYPE_ELEMENT,
    XML_SCHEMA_TYPE_ATTRIBUTE,
    XML_SCHEMA_TYPE_ATTRIBUTEGROUP,
    XML_SCHEMA_TYPE_GROUP,
    XML_SCHEMA_TYPE_NOTATION,
    XML_SCHEMA_TYPE_LIST,
    XML_SCHEMA_TYPE_UNION,
    XML_SCHEMA_TYPE_ANY_ATTRIBUTE,
    XML_SCHEMA_TYPE_IDC_UNIQUE,
    XML_SCHEMA_TYPE_IDC_KEY,
    XML_SCHEMA_TYPE_IDC_KEYREF,
    XML_SCHEMA_TYPE_PARTICLE = 25,
    XML_SCHEMA_TYPE_ATTRIBUTE_USE,
    XML_SCHEMA_FACET_MININCLUSIVE = 1000,
    XML_SCHEMA_FACET_MINEXCLUSIVE,
    XML_SCHEMA_FACET_MAXINCLUSIVE,
    XML_SCHEMA_FACET_MAXEXCLUSIVE,
    XML_SCHEMA_FACET_TOTALDIGITS,
    XML_SCHEMA_FACET_FRACTIONDIGITS,
    XML_SCHEMA_FACET_PATTERN,
    XML_SCHEMA_FACET_ENUMERATION,
    XML_SCHEMA_FACET_WHITESPACE,
    XML_SCHEMA_FACET_LENGTH,
    XML_SCHEMA_FACET_MAXLENGTH,
    XML_SCHEMA_FACET_MINLENGTH,
    XML_SCHEMA_EXTRA_QNAMEREF = 2000,
    XML_SCHEMA_EXTRA_ATTR_USE_PROHIB
} xmlSchemaTypeType;

typedef enum {
    XML_SCHEMA_CONTENT_UNKNOWN = 0,
    XML_SCHEMA_CONTENT_EMPTY = 1,
    XML_SCHEMA_CONTENT_ELEMENTS,
    XML_SCHEMA_CONTENT_MIXED,
    XML_SCHEMA_CONTENT_SIMPLE,
    XML_SCHEMA_CONTENT_MIXED_OR_ELEMENTS,
    XML_SCHEMA_CONTENT_BASIC,
    XML_SCHEMA_CONTENT_ANY
} xmlSchemaContentType;

typedef struct _xmlSchemaVal xmlSchemaVal;
typedef xmlSchemaVal *xmlSchemaValPtr;

typedef struct _xmlSchemaType xmlSchemaType;
typedef xmlSchemaType *xmlSchemaTypePtr;

typedef struct _xmlSchemaFacet xmlSchemaFacet;
typedef xmlSchemaFacet *xmlSchemaFacetPtr;




typedef struct _xmlSchemaAnnot xmlSchemaAnnot;
typedef xmlSchemaAnnot *xmlSchemaAnnotPtr;
struct _xmlSchemaAnnot {
    struct _xmlSchemaAnnot *next;
    xmlNodePtr content;
};
# 246 "./include/libxml/schemasInternals.h"
typedef struct _xmlSchemaAttribute xmlSchemaAttribute;
typedef xmlSchemaAttribute *xmlSchemaAttributePtr;
struct _xmlSchemaAttribute {
    xmlSchemaTypeType type;
    struct _xmlSchemaAttribute *next;
    const xmlChar *name;
    const xmlChar *id;
    const xmlChar *ref;
    const xmlChar *refNs;
    const xmlChar *typeName;
    const xmlChar *typeNs;
    xmlSchemaAnnotPtr annot;

    xmlSchemaTypePtr base;
    int occurs;
    const xmlChar *defValue;
    xmlSchemaTypePtr subtypes;
    xmlNodePtr node;
    const xmlChar *targetNamespace;
    int flags;
    const xmlChar *refPrefix;
    xmlSchemaValPtr defVal;
    xmlSchemaAttributePtr refDecl;
};






typedef struct _xmlSchemaAttributeLink xmlSchemaAttributeLink;
typedef xmlSchemaAttributeLink *xmlSchemaAttributeLinkPtr;
struct _xmlSchemaAttributeLink {
    struct _xmlSchemaAttributeLink *next;
    struct _xmlSchemaAttribute *attr;
};
# 294 "./include/libxml/schemasInternals.h"
typedef struct _xmlSchemaWildcardNs xmlSchemaWildcardNs;
typedef xmlSchemaWildcardNs *xmlSchemaWildcardNsPtr;
struct _xmlSchemaWildcardNs {
    struct _xmlSchemaWildcardNs *next;
    const xmlChar *value;
};





typedef struct _xmlSchemaWildcard xmlSchemaWildcard;
typedef xmlSchemaWildcard *xmlSchemaWildcardPtr;
struct _xmlSchemaWildcard {
    xmlSchemaTypeType type;
    const xmlChar *id;
    xmlSchemaAnnotPtr annot;
    xmlNodePtr node;
    int minOccurs;
    int maxOccurs;
    int processContents;
    int any;
    xmlSchemaWildcardNsPtr nsSet;
    xmlSchemaWildcardNsPtr negNsSet;
    int flags;
};
# 359 "./include/libxml/schemasInternals.h"
typedef struct _xmlSchemaAttributeGroup xmlSchemaAttributeGroup;
typedef xmlSchemaAttributeGroup *xmlSchemaAttributeGroupPtr;
struct _xmlSchemaAttributeGroup {
    xmlSchemaTypeType type;
    struct _xmlSchemaAttribute *next;
    const xmlChar *name;
    const xmlChar *id;
    const xmlChar *ref;
    const xmlChar *refNs;
    xmlSchemaAnnotPtr annot;

    xmlSchemaAttributePtr attributes;
    xmlNodePtr node;
    int flags;
    xmlSchemaWildcardPtr attributeWildcard;
    const xmlChar *refPrefix;
    xmlSchemaAttributeGroupPtr refItem;
    const xmlChar *targetNamespace;
    void *attrUses;
};






typedef struct _xmlSchemaTypeLink xmlSchemaTypeLink;
typedef xmlSchemaTypeLink *xmlSchemaTypeLinkPtr;
struct _xmlSchemaTypeLink {
    struct _xmlSchemaTypeLink *next;
    xmlSchemaTypePtr type;
};





typedef struct _xmlSchemaFacetLink xmlSchemaFacetLink;
typedef xmlSchemaFacetLink *xmlSchemaFacetLinkPtr;
struct _xmlSchemaFacetLink {
    struct _xmlSchemaFacetLink *next;
    xmlSchemaFacetPtr facet;
};
# 602 "./include/libxml/schemasInternals.h"
struct _xmlSchemaType {
    xmlSchemaTypeType type;
    struct _xmlSchemaType *next;
    const xmlChar *name;
    const xmlChar *id ;
    const xmlChar *ref;
    const xmlChar *refNs;
    xmlSchemaAnnotPtr annot;
    xmlSchemaTypePtr subtypes;
    xmlSchemaAttributePtr attributes;
    xmlNodePtr node;
    int minOccurs;
    int maxOccurs;

    int flags;
    xmlSchemaContentType contentType;
    const xmlChar *base;
    const xmlChar *baseNs;
    xmlSchemaTypePtr baseType;
    xmlSchemaFacetPtr facets;
    struct _xmlSchemaType *redef;
    int recurse;
    xmlSchemaAttributeLinkPtr *attributeUses;
    xmlSchemaWildcardPtr attributeWildcard;
    int builtInType;
    xmlSchemaTypeLinkPtr memberTypes;
    xmlSchemaFacetLinkPtr facetSet;
    const xmlChar *refPrefix;
    xmlSchemaTypePtr contentTypeDef;

    xmlRegexpPtr contModel;
    const xmlChar *targetNamespace;
    void *attrUses;
};
# 763 "./include/libxml/schemasInternals.h"
typedef struct _xmlSchemaElement xmlSchemaElement;
typedef xmlSchemaElement *xmlSchemaElementPtr;
struct _xmlSchemaElement {
    xmlSchemaTypeType type;
    struct _xmlSchemaType *next;
    const xmlChar *name;
    const xmlChar *id;
    const xmlChar *ref;
    const xmlChar *refNs;
    xmlSchemaAnnotPtr annot;
    xmlSchemaTypePtr subtypes;
    xmlSchemaAttributePtr attributes;
    xmlNodePtr node;
    int minOccurs;
    int maxOccurs;

    int flags;
    const xmlChar *targetNamespace;
    const xmlChar *namedType;
    const xmlChar *namedTypeNs;
    const xmlChar *substGroup;
    const xmlChar *substGroupNs;
    const xmlChar *scope;
    const xmlChar *value;
    struct _xmlSchemaElement *refDecl;

    xmlRegexpPtr contModel;
    xmlSchemaContentType contentType;
    const xmlChar *refPrefix;
    xmlSchemaValPtr defVal;
    void *idcs;
};
# 823 "./include/libxml/schemasInternals.h"
struct _xmlSchemaFacet {
    xmlSchemaTypeType type;
    struct _xmlSchemaFacet *next;
    const xmlChar *value;
    const xmlChar *id;
    xmlSchemaAnnotPtr annot;
    xmlNodePtr node;
    int fixed;
    int whitespace;
    xmlSchemaValPtr val;
    xmlRegexpPtr regexp;
};




typedef struct _xmlSchemaNotation xmlSchemaNotation;
typedef xmlSchemaNotation *xmlSchemaNotationPtr;
struct _xmlSchemaNotation {
    xmlSchemaTypeType type;
    const xmlChar *name;
    xmlSchemaAnnotPtr annot;
    const xmlChar *identifier;
    const xmlChar *targetNamespace;
};
# 923 "./include/libxml/schemasInternals.h"
struct _xmlSchema {
    const xmlChar *name;
    const xmlChar *targetNamespace;
    const xmlChar *version;
    const xmlChar *id;
    xmlDocPtr doc;
    xmlSchemaAnnotPtr annot;
    int flags;

    xmlHashTablePtr typeDecl;
    xmlHashTablePtr attrDecl;
    xmlHashTablePtr attrgrpDecl;
    xmlHashTablePtr elemDecl;
    xmlHashTablePtr notaDecl;

    xmlHashTablePtr schemasImports;

    void *_private;
    xmlHashTablePtr groupDecl;
    xmlDictPtr dict;
    void *includes;
    int preserve;
    int counter;
    xmlHashTablePtr idcDef;
    void *volatiles;
};

 void xmlSchemaFreeType (xmlSchemaTypePtr type);
 void xmlSchemaFreeWildcard(xmlSchemaWildcardPtr wildcard);
# 39 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2
# 1 "./include/libxml/schematron.h" 1
# 24 "./include/libxml/schematron.h"
typedef enum {
    XML_SCHEMATRON_OUT_QUIET = 1 << 0,
    XML_SCHEMATRON_OUT_TEXT = 1 << 1,
    XML_SCHEMATRON_OUT_XML = 1 << 2,
    XML_SCHEMATRON_OUT_ERROR = 1 << 3,
    XML_SCHEMATRON_OUT_FILE = 1 << 8,
    XML_SCHEMATRON_OUT_BUFFER = 1 << 9,
    XML_SCHEMATRON_OUT_IO = 1 << 10
} xmlSchematronValidOptions;




typedef struct _xmlSchematron xmlSchematron;
typedef xmlSchematron *xmlSchematronPtr;
# 48 "./include/libxml/schematron.h"
typedef void (*xmlSchematronValidityErrorFunc) (void *ctx, const char *msg, ...);
# 58 "./include/libxml/schematron.h"
typedef void (*xmlSchematronValidityWarningFunc) (void *ctx, const char *msg, ...);




typedef struct _xmlSchematronParserCtxt xmlSchematronParserCtxt;
typedef xmlSchematronParserCtxt *xmlSchematronParserCtxtPtr;

typedef struct _xmlSchematronValidCtxt xmlSchematronValidCtxt;
typedef xmlSchematronValidCtxt *xmlSchematronValidCtxtPtr;




 xmlSchematronParserCtxtPtr
     xmlSchematronNewParserCtxt (const char *URL);
 xmlSchematronParserCtxtPtr
     xmlSchematronNewMemParserCtxt(const char *buffer,
      int size);
 xmlSchematronParserCtxtPtr
     xmlSchematronNewDocParserCtxt(xmlDocPtr doc);
 void
     xmlSchematronFreeParserCtxt (xmlSchematronParserCtxtPtr ctxt);
# 95 "./include/libxml/schematron.h"
 xmlSchematronPtr
     xmlSchematronParse (xmlSchematronParserCtxtPtr ctxt);
 void
     xmlSchematronFree (xmlSchematronPtr schema);



 void
     xmlSchematronSetValidStructuredErrors(
                                   xmlSchematronValidCtxtPtr ctxt,
       xmlStructuredErrorFunc serror,
       void *ctx);
# 128 "./include/libxml/schematron.h"
 xmlSchematronValidCtxtPtr
     xmlSchematronNewValidCtxt (xmlSchematronPtr schema,
      int options);
 void
     xmlSchematronFreeValidCtxt (xmlSchematronValidCtxtPtr ctxt);
 int
     xmlSchematronValidateDoc (xmlSchematronValidCtxtPtr ctxt,
      xmlDocPtr instance);
# 40 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2


# 1 "./include/libxml/uri.h" 1
# 31 "./include/libxml/uri.h"
typedef struct _xmlURI xmlURI;
typedef xmlURI *xmlURIPtr;
struct _xmlURI {
    char *scheme;
    char *opaque;
    char *authority;
    char *server;
    char *user;
    int port;
    char *path;
    char *query;
    char *fragment;
    int cleanup;
    char *query_raw;
};






 xmlURIPtr
  xmlCreateURI (void);
 xmlChar *
  xmlBuildURI (const xmlChar *URI,
      const xmlChar *base);
 xmlChar *
  xmlBuildRelativeURI (const xmlChar *URI,
      const xmlChar *base);
 xmlURIPtr
  xmlParseURI (const char *str);
 xmlURIPtr
  xmlParseURIRaw (const char *str,
      int raw);
 int
  xmlParseURIReference (xmlURIPtr uri,
      const char *str);
 xmlChar *
  xmlSaveUri (xmlURIPtr uri);
 void
  xmlPrintURI (FILE *stream,
      xmlURIPtr uri);
 xmlChar *
  xmlURIEscapeStr (const xmlChar *str,
      const xmlChar *list);
 char *
  xmlURIUnescapeString (const char *str,
      int len,
      char *target);
 int
  xmlNormalizeURIPath (char *path);
 xmlChar *
  xmlURIEscape (const xmlChar *str);
 void
  xmlFreeURI (xmlURIPtr uri);
 xmlChar*
  xmlCanonicPath (const xmlChar *path);
 xmlChar*
  xmlPathToURI (const xmlChar *path);
# 43 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2

# 1 "./include/libxml/xinclude.h" 1
# 86 "./include/libxml/xinclude.h"
typedef struct _xmlXIncludeCtxt xmlXIncludeCtxt;
typedef xmlXIncludeCtxt *xmlXIncludeCtxtPtr;




 int
  xmlXIncludeProcess (xmlDocPtr doc);
 int
  xmlXIncludeProcessFlags (xmlDocPtr doc,
      int flags);
 int
  xmlXIncludeProcessFlagsData(xmlDocPtr doc,
      int flags,
      void *data);
 int
                xmlXIncludeProcessTreeFlagsData(xmlNodePtr tree,
                                         int flags,
                                         void *data);
 int
  xmlXIncludeProcessTree (xmlNodePtr tree);
 int
  xmlXIncludeProcessTreeFlags(xmlNodePtr tree,
      int flags);



 xmlXIncludeCtxtPtr
  xmlXIncludeNewContext (xmlDocPtr doc);
 int
  xmlXIncludeSetFlags (xmlXIncludeCtxtPtr ctxt,
      int flags);
 void
  xmlXIncludeFreeContext (xmlXIncludeCtxtPtr ctxt);
 int
  xmlXIncludeProcessNode (xmlXIncludeCtxtPtr ctxt,
      xmlNodePtr tree);
# 45 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2


# 1 "./include/libxml/xmlerror.h" 1
# 48 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2



# 1 "./include/libxml/xmlreader.h" 1
# 18 "./include/libxml/xmlreader.h"
# 1 "./include/libxml/xmlschemas.h" 1
# 28 "./include/libxml/xmlschemas.h"
typedef enum {
    XML_SCHEMAS_ERR_OK = 0,
    XML_SCHEMAS_ERR_NOROOT = 1,
    XML_SCHEMAS_ERR_UNDECLAREDELEM,
    XML_SCHEMAS_ERR_NOTTOPLEVEL,
    XML_SCHEMAS_ERR_MISSING,
    XML_SCHEMAS_ERR_WRONGELEM,
    XML_SCHEMAS_ERR_NOTYPE,
    XML_SCHEMAS_ERR_NOROLLBACK,
    XML_SCHEMAS_ERR_ISABSTRACT,
    XML_SCHEMAS_ERR_NOTEMPTY,
    XML_SCHEMAS_ERR_ELEMCONT,
    XML_SCHEMAS_ERR_HAVEDEFAULT,
    XML_SCHEMAS_ERR_NOTNILLABLE,
    XML_SCHEMAS_ERR_EXTRACONTENT,
    XML_SCHEMAS_ERR_INVALIDATTR,
    XML_SCHEMAS_ERR_INVALIDELEM,
    XML_SCHEMAS_ERR_NOTDETERMINIST,
    XML_SCHEMAS_ERR_CONSTRUCT,
    XML_SCHEMAS_ERR_INTERNAL,
    XML_SCHEMAS_ERR_NOTSIMPLE,
    XML_SCHEMAS_ERR_ATTRUNKNOWN,
    XML_SCHEMAS_ERR_ATTRINVALID,
    XML_SCHEMAS_ERR_VALUE,
    XML_SCHEMAS_ERR_FACET,
    XML_SCHEMAS_ERR_,
    XML_SCHEMAS_ERR_XXX
} xmlSchemaValidError;
# 67 "./include/libxml/xmlschemas.h"
typedef enum {
    XML_SCHEMA_VAL_VC_I_CREATE = 1<<0



} xmlSchemaValidOption;
# 84 "./include/libxml/xmlschemas.h"
typedef struct _xmlSchema xmlSchema;
typedef xmlSchema *xmlSchemaPtr;
# 95 "./include/libxml/xmlschemas.h"
typedef void ( *xmlSchemaValidityErrorFunc)
                 (void *ctx, const char *msg, ...) __attribute__((__format__(__printf__,2,3)));
# 106 "./include/libxml/xmlschemas.h"
typedef void ( *xmlSchemaValidityWarningFunc)
                 (void *ctx, const char *msg, ...) __attribute__((__format__(__printf__,2,3)));




typedef struct _xmlSchemaParserCtxt xmlSchemaParserCtxt;
typedef xmlSchemaParserCtxt *xmlSchemaParserCtxtPtr;

typedef struct _xmlSchemaValidCtxt xmlSchemaValidCtxt;
typedef xmlSchemaValidCtxt *xmlSchemaValidCtxtPtr;
# 131 "./include/libxml/xmlschemas.h"
typedef int ( *xmlSchemaValidityLocatorFunc) (void *ctx,
                           const char **file, unsigned long *line);




 xmlSchemaParserCtxtPtr
     xmlSchemaNewParserCtxt (const char *URL);
 xmlSchemaParserCtxtPtr
     xmlSchemaNewMemParserCtxt (const char *buffer,
      int size);
 xmlSchemaParserCtxtPtr
     xmlSchemaNewDocParserCtxt (xmlDocPtr doc);
 void
     xmlSchemaFreeParserCtxt (xmlSchemaParserCtxtPtr ctxt);
 void
     xmlSchemaSetParserErrors (xmlSchemaParserCtxtPtr ctxt,
      xmlSchemaValidityErrorFunc err,
      xmlSchemaValidityWarningFunc warn,
      void *ctx);
 void
     xmlSchemaSetParserStructuredErrors(xmlSchemaParserCtxtPtr ctxt,
      xmlStructuredErrorFunc serror,
      void *ctx);
 int
  xmlSchemaGetParserErrors(xmlSchemaParserCtxtPtr ctxt,
     xmlSchemaValidityErrorFunc * err,
     xmlSchemaValidityWarningFunc * warn,
     void **ctx);
 int
  xmlSchemaIsValid (xmlSchemaValidCtxtPtr ctxt);

 xmlSchemaPtr
     xmlSchemaParse (xmlSchemaParserCtxtPtr ctxt);
 void
     xmlSchemaFree (xmlSchemaPtr schema);

 void
     xmlSchemaDump (FILE *output,
      xmlSchemaPtr schema);




 void
     xmlSchemaSetValidErrors (xmlSchemaValidCtxtPtr ctxt,
      xmlSchemaValidityErrorFunc err,
      xmlSchemaValidityWarningFunc warn,
      void *ctx);
 void
     xmlSchemaSetValidStructuredErrors(xmlSchemaValidCtxtPtr ctxt,
      xmlStructuredErrorFunc serror,
      void *ctx);
 int
     xmlSchemaGetValidErrors (xmlSchemaValidCtxtPtr ctxt,
      xmlSchemaValidityErrorFunc *err,
      xmlSchemaValidityWarningFunc *warn,
      void **ctx);
 int
     xmlSchemaSetValidOptions (xmlSchemaValidCtxtPtr ctxt,
      int options);
 void
            xmlSchemaValidateSetFilename(xmlSchemaValidCtxtPtr vctxt,
                                  const char *filename);
 int
     xmlSchemaValidCtxtGetOptions(xmlSchemaValidCtxtPtr ctxt);

 xmlSchemaValidCtxtPtr
     xmlSchemaNewValidCtxt (xmlSchemaPtr schema);
 void
     xmlSchemaFreeValidCtxt (xmlSchemaValidCtxtPtr ctxt);
 int
     xmlSchemaValidateDoc (xmlSchemaValidCtxtPtr ctxt,
      xmlDocPtr instance);
 int
            xmlSchemaValidateOneElement (xmlSchemaValidCtxtPtr ctxt,
                    xmlNodePtr elem);
 int
     xmlSchemaValidateStream (xmlSchemaValidCtxtPtr ctxt,
      xmlParserInputBufferPtr input,
      xmlCharEncoding enc,
      xmlSAXHandlerPtr sax,
      void *user_data);
 int
     xmlSchemaValidateFile (xmlSchemaValidCtxtPtr ctxt,
      const char * filename,
      int options);

 xmlParserCtxtPtr
     xmlSchemaValidCtxtGetParserCtxt(xmlSchemaValidCtxtPtr ctxt);




typedef struct _xmlSchemaSAXPlug xmlSchemaSAXPlugStruct;
typedef xmlSchemaSAXPlugStruct *xmlSchemaSAXPlugPtr;

 xmlSchemaSAXPlugPtr
            xmlSchemaSAXPlug (xmlSchemaValidCtxtPtr ctxt,
      xmlSAXHandlerPtr *sax,
      void **user_data);
 int
            xmlSchemaSAXUnplug (xmlSchemaSAXPlugPtr plug);


 void
            xmlSchemaValidateSetLocator (xmlSchemaValidCtxtPtr vctxt,
      xmlSchemaValidityLocatorFunc f,
      void *ctxt);
# 19 "./include/libxml/xmlreader.h" 2
# 31 "./include/libxml/xmlreader.h"
typedef enum {
    XML_PARSER_SEVERITY_VALIDITY_WARNING = 1,
    XML_PARSER_SEVERITY_VALIDITY_ERROR = 2,
    XML_PARSER_SEVERITY_WARNING = 3,
    XML_PARSER_SEVERITY_ERROR = 4
} xmlParserSeverities;
# 45 "./include/libxml/xmlreader.h"
typedef enum {
    XML_TEXTREADER_MODE_INITIAL = 0,
    XML_TEXTREADER_MODE_INTERACTIVE = 1,
    XML_TEXTREADER_MODE_ERROR = 2,
    XML_TEXTREADER_MODE_EOF =3,
    XML_TEXTREADER_MODE_CLOSED = 4,
    XML_TEXTREADER_MODE_READING = 5
} xmlTextReaderMode;
# 61 "./include/libxml/xmlreader.h"
typedef enum {
    XML_PARSER_LOADDTD = 1,
    XML_PARSER_DEFAULTATTRS = 2,
    XML_PARSER_VALIDATE = 3,
    XML_PARSER_SUBST_ENTITIES = 4
} xmlParserProperties;






typedef enum {
    XML_READER_TYPE_NONE = 0,
    XML_READER_TYPE_ELEMENT = 1,
    XML_READER_TYPE_ATTRIBUTE = 2,
    XML_READER_TYPE_TEXT = 3,
    XML_READER_TYPE_CDATA = 4,
    XML_READER_TYPE_ENTITY_REFERENCE = 5,
    XML_READER_TYPE_ENTITY = 6,
    XML_READER_TYPE_PROCESSING_INSTRUCTION = 7,
    XML_READER_TYPE_COMMENT = 8,
    XML_READER_TYPE_DOCUMENT = 9,
    XML_READER_TYPE_DOCUMENT_TYPE = 10,
    XML_READER_TYPE_DOCUMENT_FRAGMENT = 11,
    XML_READER_TYPE_NOTATION = 12,
    XML_READER_TYPE_WHITESPACE = 13,
    XML_READER_TYPE_SIGNIFICANT_WHITESPACE = 14,
    XML_READER_TYPE_END_ELEMENT = 15,
    XML_READER_TYPE_END_ENTITY = 16,
    XML_READER_TYPE_XML_DECLARATION = 17
} xmlReaderTypes;






typedef struct _xmlTextReader xmlTextReader;






typedef xmlTextReader *xmlTextReaderPtr;




 xmlTextReaderPtr
   xmlNewTextReader (xmlParserInputBufferPtr input,
                                          const char *URI);
 xmlTextReaderPtr
   xmlNewTextReaderFilename(const char *URI);

 void
   xmlFreeTextReader (xmlTextReaderPtr reader);

 int
            xmlTextReaderSetup(xmlTextReaderPtr reader,
                   xmlParserInputBufferPtr input, const char *URL,
                   const char *encoding, int options);




 int
   xmlTextReaderRead (xmlTextReaderPtr reader);


 xmlChar *
   xmlTextReaderReadInnerXml(xmlTextReaderPtr reader);

 xmlChar *
   xmlTextReaderReadOuterXml(xmlTextReaderPtr reader);


 xmlChar *
   xmlTextReaderReadString (xmlTextReaderPtr reader);
 int
   xmlTextReaderReadAttributeValue(xmlTextReaderPtr reader);




 int
   xmlTextReaderAttributeCount(xmlTextReaderPtr reader);
 int
   xmlTextReaderDepth (xmlTextReaderPtr reader);
 int
   xmlTextReaderHasAttributes(xmlTextReaderPtr reader);
 int
   xmlTextReaderHasValue(xmlTextReaderPtr reader);
 int
   xmlTextReaderIsDefault (xmlTextReaderPtr reader);
 int
   xmlTextReaderIsEmptyElement(xmlTextReaderPtr reader);
 int
   xmlTextReaderNodeType (xmlTextReaderPtr reader);
 int
   xmlTextReaderQuoteChar (xmlTextReaderPtr reader);
 int
   xmlTextReaderReadState (xmlTextReaderPtr reader);
 int
                        xmlTextReaderIsNamespaceDecl(xmlTextReaderPtr reader);

 const xmlChar *
      xmlTextReaderConstBaseUri (xmlTextReaderPtr reader);
 const xmlChar *
      xmlTextReaderConstLocalName (xmlTextReaderPtr reader);
 const xmlChar *
      xmlTextReaderConstName (xmlTextReaderPtr reader);
 const xmlChar *
      xmlTextReaderConstNamespaceUri(xmlTextReaderPtr reader);
 const xmlChar *
      xmlTextReaderConstPrefix (xmlTextReaderPtr reader);
 const xmlChar *
      xmlTextReaderConstXmlLang (xmlTextReaderPtr reader);
 const xmlChar *
      xmlTextReaderConstString (xmlTextReaderPtr reader,
       const xmlChar *str);
 const xmlChar *
      xmlTextReaderConstValue (xmlTextReaderPtr reader);





 xmlChar *
   xmlTextReaderBaseUri (xmlTextReaderPtr reader);
 xmlChar *
   xmlTextReaderLocalName (xmlTextReaderPtr reader);
 xmlChar *
   xmlTextReaderName (xmlTextReaderPtr reader);
 xmlChar *
   xmlTextReaderNamespaceUri(xmlTextReaderPtr reader);
 xmlChar *
   xmlTextReaderPrefix (xmlTextReaderPtr reader);
 xmlChar *
   xmlTextReaderXmlLang (xmlTextReaderPtr reader);
 xmlChar *
   xmlTextReaderValue (xmlTextReaderPtr reader);




 int
      xmlTextReaderClose (xmlTextReaderPtr reader);
 xmlChar *
      xmlTextReaderGetAttributeNo (xmlTextReaderPtr reader,
       int no);
 xmlChar *
      xmlTextReaderGetAttribute (xmlTextReaderPtr reader,
       const xmlChar *name);
 xmlChar *
      xmlTextReaderGetAttributeNs (xmlTextReaderPtr reader,
       const xmlChar *localName,
       const xmlChar *namespaceURI);
 xmlParserInputBufferPtr
      xmlTextReaderGetRemainder (xmlTextReaderPtr reader);
 xmlChar *
      xmlTextReaderLookupNamespace(xmlTextReaderPtr reader,
       const xmlChar *prefix);
 int
      xmlTextReaderMoveToAttributeNo(xmlTextReaderPtr reader,
       int no);
 int
      xmlTextReaderMoveToAttribute(xmlTextReaderPtr reader,
       const xmlChar *name);
 int
      xmlTextReaderMoveToAttributeNs(xmlTextReaderPtr reader,
       const xmlChar *localName,
       const xmlChar *namespaceURI);
 int
      xmlTextReaderMoveToFirstAttribute(xmlTextReaderPtr reader);
 int
      xmlTextReaderMoveToNextAttribute(xmlTextReaderPtr reader);
 int
      xmlTextReaderMoveToElement (xmlTextReaderPtr reader);
 int
      xmlTextReaderNormalization (xmlTextReaderPtr reader);
 const xmlChar *
      xmlTextReaderConstEncoding (xmlTextReaderPtr reader);




 int
      xmlTextReaderSetParserProp (xmlTextReaderPtr reader,
       int prop,
       int value);
 int
      xmlTextReaderGetParserProp (xmlTextReaderPtr reader,
       int prop);
 xmlNodePtr
      xmlTextReaderCurrentNode (xmlTextReaderPtr reader);

 int
            xmlTextReaderGetParserLineNumber(xmlTextReaderPtr reader);

 int
            xmlTextReaderGetParserColumnNumber(xmlTextReaderPtr reader);

 xmlNodePtr
      xmlTextReaderPreserve (xmlTextReaderPtr reader);

 int
      xmlTextReaderPreservePattern(xmlTextReaderPtr reader,
       const xmlChar *pattern,
       const xmlChar **namespaces);

 xmlDocPtr
      xmlTextReaderCurrentDoc (xmlTextReaderPtr reader);
 xmlNodePtr
      xmlTextReaderExpand (xmlTextReaderPtr reader);
 int
      xmlTextReaderNext (xmlTextReaderPtr reader);
 int
      xmlTextReaderNextSibling (xmlTextReaderPtr reader);
 int
      xmlTextReaderIsValid (xmlTextReaderPtr reader);

 int
      xmlTextReaderRelaxNGValidate(xmlTextReaderPtr reader,
       const char *rng);
 int
      xmlTextReaderRelaxNGValidateCtxt(xmlTextReaderPtr reader,
       xmlRelaxNGValidCtxtPtr ctxt,
       int options);

 int
      xmlTextReaderRelaxNGSetSchema(xmlTextReaderPtr reader,
       xmlRelaxNGPtr schema);
 int
      xmlTextReaderSchemaValidate (xmlTextReaderPtr reader,
       const char *xsd);
 int
      xmlTextReaderSchemaValidateCtxt(xmlTextReaderPtr reader,
       xmlSchemaValidCtxtPtr ctxt,
       int options);
 int
      xmlTextReaderSetSchema (xmlTextReaderPtr reader,
       xmlSchemaPtr schema);

 const xmlChar *
      xmlTextReaderConstXmlVersion(xmlTextReaderPtr reader);
 int
      xmlTextReaderStandalone (xmlTextReaderPtr reader);





 long
  xmlTextReaderByteConsumed (xmlTextReaderPtr reader);




 xmlTextReaderPtr
  xmlReaderWalker (xmlDocPtr doc);
 xmlTextReaderPtr
  xmlReaderForDoc (const xmlChar * cur,
      const char *URL,
      const char *encoding,
      int options);
 xmlTextReaderPtr
  xmlReaderForFile (const char *filename,
      const char *encoding,
      int options);
 xmlTextReaderPtr
  xmlReaderForMemory (const char *buffer,
      int size,
      const char *URL,
      const char *encoding,
      int options);
 xmlTextReaderPtr
  xmlReaderForFd (int fd,
      const char *URL,
      const char *encoding,
      int options);
 xmlTextReaderPtr
  xmlReaderForIO (xmlInputReadCallback ioread,
      xmlInputCloseCallback ioclose,
      void *ioctx,
      const char *URL,
      const char *encoding,
      int options);

 int
  xmlReaderNewWalker (xmlTextReaderPtr reader,
      xmlDocPtr doc);
 int
  xmlReaderNewDoc (xmlTextReaderPtr reader,
      const xmlChar * cur,
      const char *URL,
      const char *encoding,
      int options);
 int
  xmlReaderNewFile (xmlTextReaderPtr reader,
      const char *filename,
      const char *encoding,
      int options);
 int
  xmlReaderNewMemory (xmlTextReaderPtr reader,
      const char *buffer,
      int size,
      const char *URL,
      const char *encoding,
      int options);
 int
  xmlReaderNewFd (xmlTextReaderPtr reader,
      int fd,
      const char *URL,
      const char *encoding,
      int options);
 int
  xmlReaderNewIO (xmlTextReaderPtr reader,
      xmlInputReadCallback ioread,
      xmlInputCloseCallback ioclose,
      void *ioctx,
      const char *URL,
      const char *encoding,
      int options);



typedef void * xmlTextReaderLocatorPtr;
# 400 "./include/libxml/xmlreader.h"
typedef void ( *xmlTextReaderErrorFunc)(void *arg,
            const char *msg,
            xmlParserSeverities severity,
            xmlTextReaderLocatorPtr locator);
 int
     xmlTextReaderLocatorLineNumber(xmlTextReaderLocatorPtr locator);
 xmlChar *
     xmlTextReaderLocatorBaseURI (xmlTextReaderLocatorPtr locator);
 void
     xmlTextReaderSetErrorHandler(xmlTextReaderPtr reader,
      xmlTextReaderErrorFunc f,
      void *arg);
 void
     xmlTextReaderSetStructuredErrorHandler(xmlTextReaderPtr reader,
         xmlStructuredErrorFunc f,
         void *arg);
 void
     xmlTextReaderGetErrorHandler(xmlTextReaderPtr reader,
      xmlTextReaderErrorFunc *f,
      void **arg);
# 52 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2

# 1 "./include/libxml/xmlsave.h" 1
# 29 "./include/libxml/xmlsave.h"
typedef enum {
    XML_SAVE_FORMAT = 1<<0,
    XML_SAVE_NO_DECL = 1<<1,
    XML_SAVE_NO_EMPTY = 1<<2,
    XML_SAVE_NO_XHTML = 1<<3,
    XML_SAVE_XHTML = 1<<4,
    XML_SAVE_AS_XML = 1<<5,
    XML_SAVE_AS_HTML = 1<<6,
    XML_SAVE_WSNONSIG = 1<<7
} xmlSaveOption;


typedef struct _xmlSaveCtxt xmlSaveCtxt;
typedef xmlSaveCtxt *xmlSaveCtxtPtr;

 xmlSaveCtxtPtr
  xmlSaveToFd (int fd,
      const char *encoding,
      int options);
 xmlSaveCtxtPtr
  xmlSaveToFilename (const char *filename,
      const char *encoding,
      int options);

 xmlSaveCtxtPtr
  xmlSaveToBuffer (xmlBufferPtr buffer,
      const char *encoding,
      int options);

 xmlSaveCtxtPtr
  xmlSaveToIO (xmlOutputWriteCallback iowrite,
      xmlOutputCloseCallback ioclose,
      void *ioctx,
      const char *encoding,
      int options);

 long
  xmlSaveDoc (xmlSaveCtxtPtr ctxt,
      xmlDocPtr doc);
 long
  xmlSaveTree (xmlSaveCtxtPtr ctxt,
      xmlNodePtr node);

 int
  xmlSaveFlush (xmlSaveCtxtPtr ctxt);
 int
  xmlSaveClose (xmlSaveCtxtPtr ctxt);
 int
  xmlSaveSetEscape (xmlSaveCtxtPtr ctxt,
      xmlCharEncodingOutputFunc escape);
 int
  xmlSaveSetAttrEscape (xmlSaveCtxtPtr ctxt,
      xmlCharEncodingOutputFunc escape);
# 54 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2

# 1 "./include/libxml/xmlschemastypes.h" 1
# 26 "./include/libxml/xmlschemastypes.h"
typedef enum {
    XML_SCHEMA_WHITESPACE_UNKNOWN = 0,
    XML_SCHEMA_WHITESPACE_PRESERVE = 1,
    XML_SCHEMA_WHITESPACE_REPLACE = 2,
    XML_SCHEMA_WHITESPACE_COLLAPSE = 3
} xmlSchemaWhitespaceValueType;

 void
  xmlSchemaInitTypes (void);
 void
  xmlSchemaCleanupTypes (void);
 xmlSchemaTypePtr
  xmlSchemaGetPredefinedType (const xmlChar *name,
       const xmlChar *ns);
 int
  xmlSchemaValidatePredefinedType (xmlSchemaTypePtr type,
       const xmlChar *value,
       xmlSchemaValPtr *val);
 int
  xmlSchemaValPredefTypeNode (xmlSchemaTypePtr type,
       const xmlChar *value,
       xmlSchemaValPtr *val,
       xmlNodePtr node);
 int
  xmlSchemaValidateFacet (xmlSchemaTypePtr base,
       xmlSchemaFacetPtr facet,
       const xmlChar *value,
       xmlSchemaValPtr val);
 int
  xmlSchemaValidateFacetWhtsp (xmlSchemaFacetPtr facet,
       xmlSchemaWhitespaceValueType fws,
       xmlSchemaValType valType,
       const xmlChar *value,
       xmlSchemaValPtr val,
       xmlSchemaWhitespaceValueType ws);
 void
  xmlSchemaFreeValue (xmlSchemaValPtr val);
 xmlSchemaFacetPtr
  xmlSchemaNewFacet (void);
 int
  xmlSchemaCheckFacet (xmlSchemaFacetPtr facet,
       xmlSchemaTypePtr typeDecl,
       xmlSchemaParserCtxtPtr ctxt,
       const xmlChar *name);
 void
  xmlSchemaFreeFacet (xmlSchemaFacetPtr facet);
 int
  xmlSchemaCompareValues (xmlSchemaValPtr x,
       xmlSchemaValPtr y);
 xmlSchemaTypePtr
    xmlSchemaGetBuiltInListSimpleTypeItemType (xmlSchemaTypePtr type);
 int
    xmlSchemaValidateListSimpleTypeFacet (xmlSchemaFacetPtr facet,
       const xmlChar *value,
       unsigned long actualLen,
       unsigned long *expectedLen);
 xmlSchemaTypePtr
  xmlSchemaGetBuiltInType (xmlSchemaValType type);
 int
  xmlSchemaIsBuiltInTypeFacet (xmlSchemaTypePtr type,
       int facetType);
 xmlChar *
  xmlSchemaCollapseString (const xmlChar *value);
 xmlChar *
  xmlSchemaWhiteSpaceReplace (const xmlChar *value);
 unsigned long
  xmlSchemaGetFacetValueAsULong (xmlSchemaFacetPtr facet);
 int
  xmlSchemaValidateLengthFacet (xmlSchemaTypePtr type,
       xmlSchemaFacetPtr facet,
       const xmlChar *value,
       xmlSchemaValPtr val,
       unsigned long *length);
 int
  xmlSchemaValidateLengthFacetWhtsp(xmlSchemaFacetPtr facet,
        xmlSchemaValType valType,
        const xmlChar *value,
        xmlSchemaValPtr val,
        unsigned long *length,
        xmlSchemaWhitespaceValueType ws);
 int
  xmlSchemaValPredefTypeNodeNoNorm(xmlSchemaTypePtr type,
       const xmlChar *value,
       xmlSchemaValPtr *val,
       xmlNodePtr node);
 int
  xmlSchemaGetCanonValue (xmlSchemaValPtr val,
       const xmlChar **retValue);
 int
  xmlSchemaGetCanonValueWhtsp (xmlSchemaValPtr val,
       const xmlChar **retValue,
       xmlSchemaWhitespaceValueType ws);
 int
  xmlSchemaValueAppend (xmlSchemaValPtr prev,
       xmlSchemaValPtr cur);
 xmlSchemaValPtr
  xmlSchemaValueGetNext (xmlSchemaValPtr cur);
 const xmlChar *
  xmlSchemaValueGetAsString (xmlSchemaValPtr val);
 int
  xmlSchemaValueGetAsBoolean (xmlSchemaValPtr val);
 xmlSchemaValPtr
  xmlSchemaNewStringValue (xmlSchemaValType type,
       const xmlChar *value);
 xmlSchemaValPtr
  xmlSchemaNewNOTATIONValue (const xmlChar *name,
       const xmlChar *ns);
 xmlSchemaValPtr
  xmlSchemaNewQNameValue (const xmlChar *namespaceName,
       const xmlChar *localName);
 int
  xmlSchemaCompareValuesWhtsp (xmlSchemaValPtr x,
       xmlSchemaWhitespaceValueType xws,
       xmlSchemaValPtr y,
       xmlSchemaWhitespaceValueType yws);
 xmlSchemaValPtr
  xmlSchemaCopyValue (xmlSchemaValPtr val);
 xmlSchemaValType
  xmlSchemaGetValType (xmlSchemaValPtr val);
# 56 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2

# 1 "./include/libxml/xmlunicode.h" 1
# 26 "./include/libxml/xmlunicode.h"
 int xmlUCSIsAegeanNumbers (int code);
 int xmlUCSIsAlphabeticPresentationForms (int code);
 int xmlUCSIsArabic (int code);
 int xmlUCSIsArabicPresentationFormsA (int code);
 int xmlUCSIsArabicPresentationFormsB (int code);
 int xmlUCSIsArmenian (int code);
 int xmlUCSIsArrows (int code);
 int xmlUCSIsBasicLatin (int code);
 int xmlUCSIsBengali (int code);
 int xmlUCSIsBlockElements (int code);
 int xmlUCSIsBopomofo (int code);
 int xmlUCSIsBopomofoExtended (int code);
 int xmlUCSIsBoxDrawing (int code);
 int xmlUCSIsBraillePatterns (int code);
 int xmlUCSIsBuhid (int code);
 int xmlUCSIsByzantineMusicalSymbols (int code);
 int xmlUCSIsCJKCompatibility (int code);
 int xmlUCSIsCJKCompatibilityForms (int code);
 int xmlUCSIsCJKCompatibilityIdeographs (int code);
 int xmlUCSIsCJKCompatibilityIdeographsSupplement (int code);
 int xmlUCSIsCJKRadicalsSupplement (int code);
 int xmlUCSIsCJKSymbolsandPunctuation (int code);
 int xmlUCSIsCJKUnifiedIdeographs (int code);
 int xmlUCSIsCJKUnifiedIdeographsExtensionA (int code);
 int xmlUCSIsCJKUnifiedIdeographsExtensionB (int code);
 int xmlUCSIsCherokee (int code);
 int xmlUCSIsCombiningDiacriticalMarks (int code);
 int xmlUCSIsCombiningDiacriticalMarksforSymbols (int code);
 int xmlUCSIsCombiningHalfMarks (int code);
 int xmlUCSIsCombiningMarksforSymbols (int code);
 int xmlUCSIsControlPictures (int code);
 int xmlUCSIsCurrencySymbols (int code);
 int xmlUCSIsCypriotSyllabary (int code);
 int xmlUCSIsCyrillic (int code);
 int xmlUCSIsCyrillicSupplement (int code);
 int xmlUCSIsDeseret (int code);
 int xmlUCSIsDevanagari (int code);
 int xmlUCSIsDingbats (int code);
 int xmlUCSIsEnclosedAlphanumerics (int code);
 int xmlUCSIsEnclosedCJKLettersandMonths (int code);
 int xmlUCSIsEthiopic (int code);
 int xmlUCSIsGeneralPunctuation (int code);
 int xmlUCSIsGeometricShapes (int code);
 int xmlUCSIsGeorgian (int code);
 int xmlUCSIsGothic (int code);
 int xmlUCSIsGreek (int code);
 int xmlUCSIsGreekExtended (int code);
 int xmlUCSIsGreekandCoptic (int code);
 int xmlUCSIsGujarati (int code);
 int xmlUCSIsGurmukhi (int code);
 int xmlUCSIsHalfwidthandFullwidthForms (int code);
 int xmlUCSIsHangulCompatibilityJamo (int code);
 int xmlUCSIsHangulJamo (int code);
 int xmlUCSIsHangulSyllables (int code);
 int xmlUCSIsHanunoo (int code);
 int xmlUCSIsHebrew (int code);
 int xmlUCSIsHighPrivateUseSurrogates (int code);
 int xmlUCSIsHighSurrogates (int code);
 int xmlUCSIsHiragana (int code);
 int xmlUCSIsIPAExtensions (int code);
 int xmlUCSIsIdeographicDescriptionCharacters (int code);
 int xmlUCSIsKanbun (int code);
 int xmlUCSIsKangxiRadicals (int code);
 int xmlUCSIsKannada (int code);
 int xmlUCSIsKatakana (int code);
 int xmlUCSIsKatakanaPhoneticExtensions (int code);
 int xmlUCSIsKhmer (int code);
 int xmlUCSIsKhmerSymbols (int code);
 int xmlUCSIsLao (int code);
 int xmlUCSIsLatin1Supplement (int code);
 int xmlUCSIsLatinExtendedA (int code);
 int xmlUCSIsLatinExtendedB (int code);
 int xmlUCSIsLatinExtendedAdditional (int code);
 int xmlUCSIsLetterlikeSymbols (int code);
 int xmlUCSIsLimbu (int code);
 int xmlUCSIsLinearBIdeograms (int code);
 int xmlUCSIsLinearBSyllabary (int code);
 int xmlUCSIsLowSurrogates (int code);
 int xmlUCSIsMalayalam (int code);
 int xmlUCSIsMathematicalAlphanumericSymbols (int code);
 int xmlUCSIsMathematicalOperators (int code);
 int xmlUCSIsMiscellaneousMathematicalSymbolsA (int code);
 int xmlUCSIsMiscellaneousMathematicalSymbolsB (int code);
 int xmlUCSIsMiscellaneousSymbols (int code);
 int xmlUCSIsMiscellaneousSymbolsandArrows (int code);
 int xmlUCSIsMiscellaneousTechnical (int code);
 int xmlUCSIsMongolian (int code);
 int xmlUCSIsMusicalSymbols (int code);
 int xmlUCSIsMyanmar (int code);
 int xmlUCSIsNumberForms (int code);
 int xmlUCSIsOgham (int code);
 int xmlUCSIsOldItalic (int code);
 int xmlUCSIsOpticalCharacterRecognition (int code);
 int xmlUCSIsOriya (int code);
 int xmlUCSIsOsmanya (int code);
 int xmlUCSIsPhoneticExtensions (int code);
 int xmlUCSIsPrivateUse (int code);
 int xmlUCSIsPrivateUseArea (int code);
 int xmlUCSIsRunic (int code);
 int xmlUCSIsShavian (int code);
 int xmlUCSIsSinhala (int code);
 int xmlUCSIsSmallFormVariants (int code);
 int xmlUCSIsSpacingModifierLetters (int code);
 int xmlUCSIsSpecials (int code);
 int xmlUCSIsSuperscriptsandSubscripts (int code);
 int xmlUCSIsSupplementalArrowsA (int code);
 int xmlUCSIsSupplementalArrowsB (int code);
 int xmlUCSIsSupplementalMathematicalOperators (int code);
 int xmlUCSIsSupplementaryPrivateUseAreaA (int code);
 int xmlUCSIsSupplementaryPrivateUseAreaB (int code);
 int xmlUCSIsSyriac (int code);
 int xmlUCSIsTagalog (int code);
 int xmlUCSIsTagbanwa (int code);
 int xmlUCSIsTags (int code);
 int xmlUCSIsTaiLe (int code);
 int xmlUCSIsTaiXuanJingSymbols (int code);
 int xmlUCSIsTamil (int code);
 int xmlUCSIsTelugu (int code);
 int xmlUCSIsThaana (int code);
 int xmlUCSIsThai (int code);
 int xmlUCSIsTibetan (int code);
 int xmlUCSIsUgaritic (int code);
 int xmlUCSIsUnifiedCanadianAboriginalSyllabics (int code);
 int xmlUCSIsVariationSelectors (int code);
 int xmlUCSIsVariationSelectorsSupplement (int code);
 int xmlUCSIsYiRadicals (int code);
 int xmlUCSIsYiSyllables (int code);
 int xmlUCSIsYijingHexagramSymbols (int code);

 int xmlUCSIsBlock (int code, const char *block);

 int xmlUCSIsCatC (int code);
 int xmlUCSIsCatCc (int code);
 int xmlUCSIsCatCf (int code);
 int xmlUCSIsCatCo (int code);
 int xmlUCSIsCatCs (int code);
 int xmlUCSIsCatL (int code);
 int xmlUCSIsCatLl (int code);
 int xmlUCSIsCatLm (int code);
 int xmlUCSIsCatLo (int code);
 int xmlUCSIsCatLt (int code);
 int xmlUCSIsCatLu (int code);
 int xmlUCSIsCatM (int code);
 int xmlUCSIsCatMc (int code);
 int xmlUCSIsCatMe (int code);
 int xmlUCSIsCatMn (int code);
 int xmlUCSIsCatN (int code);
 int xmlUCSIsCatNd (int code);
 int xmlUCSIsCatNl (int code);
 int xmlUCSIsCatNo (int code);
 int xmlUCSIsCatP (int code);
 int xmlUCSIsCatPc (int code);
 int xmlUCSIsCatPd (int code);
 int xmlUCSIsCatPe (int code);
 int xmlUCSIsCatPf (int code);
 int xmlUCSIsCatPi (int code);
 int xmlUCSIsCatPo (int code);
 int xmlUCSIsCatPs (int code);
 int xmlUCSIsCatS (int code);
 int xmlUCSIsCatSc (int code);
 int xmlUCSIsCatSk (int code);
 int xmlUCSIsCatSm (int code);
 int xmlUCSIsCatSo (int code);
 int xmlUCSIsCatZ (int code);
 int xmlUCSIsCatZl (int code);
 int xmlUCSIsCatZp (int code);
 int xmlUCSIsCatZs (int code);

 int xmlUCSIsCat (int code, const char *cat);
# 58 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2

# 1 "./include/libxml/xmlwriter.h" 1
# 26 "./include/libxml/xmlwriter.h"
    typedef struct _xmlTextWriter xmlTextWriter;
    typedef xmlTextWriter *xmlTextWriterPtr;




    xmlTextWriterPtr
        xmlNewTextWriter(xmlOutputBufferPtr out);
    xmlTextWriterPtr
        xmlNewTextWriterFilename(const char *uri, int compression);
    xmlTextWriterPtr
        xmlNewTextWriterMemory(xmlBufferPtr buf, int compression);
    xmlTextWriterPtr
        xmlNewTextWriterPushParser(xmlParserCtxtPtr ctxt, int compression);
    xmlTextWriterPtr
        xmlNewTextWriterDoc(xmlDocPtr * doc, int compression);
    xmlTextWriterPtr
        xmlNewTextWriterTree(xmlDocPtr doc, xmlNodePtr node,
                             int compression);
    void xmlFreeTextWriter(xmlTextWriterPtr writer);
# 55 "./include/libxml/xmlwriter.h"
    int
        xmlTextWriterStartDocument(xmlTextWriterPtr writer,
                                   const char *version,
                                   const char *encoding,
                                   const char *standalone);
    int xmlTextWriterEndDocument(xmlTextWriterPtr
                                                   writer);




    int xmlTextWriterStartComment(xmlTextWriterPtr
                                                    writer);
    int xmlTextWriterEndComment(xmlTextWriterPtr writer);
    int
        xmlTextWriterWriteFormatComment(xmlTextWriterPtr writer,
                                        const char *format, ...)
     __attribute__((__format__(__printf__,2,3)));
    int
        xmlTextWriterWriteVFormatComment(xmlTextWriterPtr writer,
                                         const char *format,
                                         va_list argptr)
      __attribute__((__format__(__printf__,2,0)));
    int xmlTextWriterWriteComment(xmlTextWriterPtr
                                                    writer,
                                                    const xmlChar *
                                                    content);




    int
        xmlTextWriterStartElement(xmlTextWriterPtr writer,
                                  const xmlChar * name);
    int xmlTextWriterStartElementNS(xmlTextWriterPtr
                                                      writer,
                                                      const xmlChar *
                                                      prefix,
                                                      const xmlChar * name,
                                                      const xmlChar *
                                                      namespaceURI);
    int xmlTextWriterEndElement(xmlTextWriterPtr writer);
    int xmlTextWriterFullEndElement(xmlTextWriterPtr
                                                      writer);




    int
        xmlTextWriterWriteFormatElement(xmlTextWriterPtr writer,
                                        const xmlChar * name,
                                        const char *format, ...)
     __attribute__((__format__(__printf__,3,4)));
    int
        xmlTextWriterWriteVFormatElement(xmlTextWriterPtr writer,
                                         const xmlChar * name,
                                         const char *format,
                                         va_list argptr)
      __attribute__((__format__(__printf__,3,0)));
    int xmlTextWriterWriteElement(xmlTextWriterPtr
                                                    writer,
                                                    const xmlChar * name,
                                                    const xmlChar *
                                                    content);
    int
        xmlTextWriterWriteFormatElementNS(xmlTextWriterPtr writer,
                                          const xmlChar * prefix,
                                          const xmlChar * name,
                                          const xmlChar * namespaceURI,
                                          const char *format, ...)
       __attribute__((__format__(__printf__,5,6)));
    int
        xmlTextWriterWriteVFormatElementNS(xmlTextWriterPtr writer,
                                           const xmlChar * prefix,
                                           const xmlChar * name,
                                           const xmlChar * namespaceURI,
                                           const char *format,
                                           va_list argptr)
        __attribute__((__format__(__printf__,5,0)));
    int xmlTextWriterWriteElementNS(xmlTextWriterPtr
                                                      writer,
                                                      const xmlChar *
                                                      prefix,
                                                      const xmlChar * name,
                                                      const xmlChar *
                                                      namespaceURI,
                                                      const xmlChar *
                                                      content);




    int
        xmlTextWriterWriteFormatRaw(xmlTextWriterPtr writer,
                                    const char *format, ...)
        __attribute__((__format__(__printf__,2,3)));
    int
        xmlTextWriterWriteVFormatRaw(xmlTextWriterPtr writer,
                                     const char *format, va_list argptr)
         __attribute__((__format__(__printf__,2,0)));
    int
        xmlTextWriterWriteRawLen(xmlTextWriterPtr writer,
                                 const xmlChar * content, int len);
    int
        xmlTextWriterWriteRaw(xmlTextWriterPtr writer,
                              const xmlChar * content);
    int xmlTextWriterWriteFormatString(xmlTextWriterPtr
                                                         writer,
                                                         const char
                                                         *format, ...)
        __attribute__((__format__(__printf__,2,3)));
    int xmlTextWriterWriteVFormatString(xmlTextWriterPtr
                                                          writer,
                                                          const char
                                                          *format,
                                                          va_list argptr)
         __attribute__((__format__(__printf__,2,0)));
    int xmlTextWriterWriteString(xmlTextWriterPtr writer,
                                                   const xmlChar *
                                                   content);
    int xmlTextWriterWriteBase64(xmlTextWriterPtr writer,
                                                   const char *data,
                                                   int start, int len);
    int xmlTextWriterWriteBinHex(xmlTextWriterPtr writer,
                                                   const char *data,
                                                   int start, int len);




    int
        xmlTextWriterStartAttribute(xmlTextWriterPtr writer,
                                    const xmlChar * name);
    int xmlTextWriterStartAttributeNS(xmlTextWriterPtr
                                                        writer,
                                                        const xmlChar *
                                                        prefix,
                                                        const xmlChar *
                                                        name,
                                                        const xmlChar *
                                                        namespaceURI);
    int xmlTextWriterEndAttribute(xmlTextWriterPtr
                                                    writer);




    int
        xmlTextWriterWriteFormatAttribute(xmlTextWriterPtr writer,
                                          const xmlChar * name,
                                          const char *format, ...)
       __attribute__((__format__(__printf__,3,4)));
    int
        xmlTextWriterWriteVFormatAttribute(xmlTextWriterPtr writer,
                                           const xmlChar * name,
                                           const char *format,
                                           va_list argptr)
        __attribute__((__format__(__printf__,3,0)));
    int xmlTextWriterWriteAttribute(xmlTextWriterPtr
                                                      writer,
                                                      const xmlChar * name,
                                                      const xmlChar *
                                                      content);
    int
        xmlTextWriterWriteFormatAttributeNS(xmlTextWriterPtr writer,
                                            const xmlChar * prefix,
                                            const xmlChar * name,
                                            const xmlChar * namespaceURI,
                                            const char *format, ...)
         __attribute__((__format__(__printf__,5,6)));
    int
        xmlTextWriterWriteVFormatAttributeNS(xmlTextWriterPtr writer,
                                             const xmlChar * prefix,
                                             const xmlChar * name,
                                             const xmlChar * namespaceURI,
                                             const char *format,
                                             va_list argptr)
          __attribute__((__format__(__printf__,5,0)));
    int xmlTextWriterWriteAttributeNS(xmlTextWriterPtr
                                                        writer,
                                                        const xmlChar *
                                                        prefix,
                                                        const xmlChar *
                                                        name,
                                                        const xmlChar *
                                                        namespaceURI,
                                                        const xmlChar *
                                                        content);




    int
        xmlTextWriterStartPI(xmlTextWriterPtr writer,
                             const xmlChar * target);
    int xmlTextWriterEndPI(xmlTextWriterPtr writer);




    int
        xmlTextWriterWriteFormatPI(xmlTextWriterPtr writer,
                                   const xmlChar * target,
                                   const char *format, ...)
       __attribute__((__format__(__printf__,3,4)));
    int
        xmlTextWriterWriteVFormatPI(xmlTextWriterPtr writer,
                                    const xmlChar * target,
                                    const char *format, va_list argptr)
        __attribute__((__format__(__printf__,3,0)));
    int
        xmlTextWriterWritePI(xmlTextWriterPtr writer,
                             const xmlChar * target,
                             const xmlChar * content);
# 280 "./include/libxml/xmlwriter.h"
    int xmlTextWriterStartCDATA(xmlTextWriterPtr writer);
    int xmlTextWriterEndCDATA(xmlTextWriterPtr writer);




    int
        xmlTextWriterWriteFormatCDATA(xmlTextWriterPtr writer,
                                      const char *format, ...)
          __attribute__((__format__(__printf__,2,3)));
    int
        xmlTextWriterWriteVFormatCDATA(xmlTextWriterPtr writer,
                                       const char *format, va_list argptr)
           __attribute__((__format__(__printf__,2,0)));
    int
        xmlTextWriterWriteCDATA(xmlTextWriterPtr writer,
                                const xmlChar * content);




    int
        xmlTextWriterStartDTD(xmlTextWriterPtr writer,
                              const xmlChar * name,
                              const xmlChar * pubid,
                              const xmlChar * sysid);
    int xmlTextWriterEndDTD(xmlTextWriterPtr writer);




    int
        xmlTextWriterWriteFormatDTD(xmlTextWriterPtr writer,
                                    const xmlChar * name,
                                    const xmlChar * pubid,
                                    const xmlChar * sysid,
                                    const char *format, ...)
        __attribute__((__format__(__printf__,5,6)));
    int
        xmlTextWriterWriteVFormatDTD(xmlTextWriterPtr writer,
                                     const xmlChar * name,
                                     const xmlChar * pubid,
                                     const xmlChar * sysid,
                                     const char *format, va_list argptr)
         __attribute__((__format__(__printf__,5,0)));
    int
        xmlTextWriterWriteDTD(xmlTextWriterPtr writer,
                              const xmlChar * name,
                              const xmlChar * pubid,
                              const xmlChar * sysid,
                              const xmlChar * subset);
# 342 "./include/libxml/xmlwriter.h"
    int
        xmlTextWriterStartDTDElement(xmlTextWriterPtr writer,
                                     const xmlChar * name);
    int xmlTextWriterEndDTDElement(xmlTextWriterPtr
                                                     writer);




    int
        xmlTextWriterWriteFormatDTDElement(xmlTextWriterPtr writer,
                                           const xmlChar * name,
                                           const char *format, ...)
        __attribute__((__format__(__printf__,3,4)));
    int
        xmlTextWriterWriteVFormatDTDElement(xmlTextWriterPtr writer,
                                            const xmlChar * name,
                                            const char *format,
                                            va_list argptr)
         __attribute__((__format__(__printf__,3,0)));
    int xmlTextWriterWriteDTDElement(xmlTextWriterPtr
                                                       writer,
                                                       const xmlChar *
                                                       name,
                                                       const xmlChar *
                                                       content);




    int
        xmlTextWriterStartDTDAttlist(xmlTextWriterPtr writer,
                                     const xmlChar * name);
    int xmlTextWriterEndDTDAttlist(xmlTextWriterPtr
                                                     writer);




    int
        xmlTextWriterWriteFormatDTDAttlist(xmlTextWriterPtr writer,
                                           const xmlChar * name,
                                           const char *format, ...)
        __attribute__((__format__(__printf__,3,4)));
    int
        xmlTextWriterWriteVFormatDTDAttlist(xmlTextWriterPtr writer,
                                            const xmlChar * name,
                                            const char *format,
                                            va_list argptr)
         __attribute__((__format__(__printf__,3,0)));
    int xmlTextWriterWriteDTDAttlist(xmlTextWriterPtr
                                                       writer,
                                                       const xmlChar *
                                                       name,
                                                       const xmlChar *
                                                       content);




    int
        xmlTextWriterStartDTDEntity(xmlTextWriterPtr writer,
                                    int pe, const xmlChar * name);
    int xmlTextWriterEndDTDEntity(xmlTextWriterPtr
                                                    writer);




    int
        xmlTextWriterWriteFormatDTDInternalEntity(xmlTextWriterPtr writer,
                                                  int pe,
                                                  const xmlChar * name,
                                                  const char *format, ...)
        __attribute__((__format__(__printf__,4,5)));
    int
        xmlTextWriterWriteVFormatDTDInternalEntity(xmlTextWriterPtr writer,
                                                   int pe,
                                                   const xmlChar * name,
                                                   const char *format,
                                                   va_list argptr)
         __attribute__((__format__(__printf__,4,0)));
    int
        xmlTextWriterWriteDTDInternalEntity(xmlTextWriterPtr writer,
                                            int pe,
                                            const xmlChar * name,
                                            const xmlChar * content);
    int
        xmlTextWriterWriteDTDExternalEntity(xmlTextWriterPtr writer,
                                            int pe,
                                            const xmlChar * name,
                                            const xmlChar * pubid,
                                            const xmlChar * sysid,
                                            const xmlChar * ndataid);
    int
        xmlTextWriterWriteDTDExternalEntityContents(xmlTextWriterPtr
                                                    writer,
                                                    const xmlChar * pubid,
                                                    const xmlChar * sysid,
                                                    const xmlChar *
                                                    ndataid);
    int xmlTextWriterWriteDTDEntity(xmlTextWriterPtr
                                                      writer, int pe,
                                                      const xmlChar * name,
                                                      const xmlChar *
                                                      pubid,
                                                      const xmlChar *
                                                      sysid,
                                                      const xmlChar *
                                                      ndataid,
                                                      const xmlChar *
                                                      content);




    int
        xmlTextWriterWriteDTDNotation(xmlTextWriterPtr writer,
                                      const xmlChar * name,
                                      const xmlChar * pubid,
                                      const xmlChar * sysid);




    int
        xmlTextWriterSetIndent(xmlTextWriterPtr writer, int indent);
    int
        xmlTextWriterSetIndentString(xmlTextWriterPtr writer,
                                     const xmlChar * str);

    int
        xmlTextWriterSetQuoteChar(xmlTextWriterPtr writer, xmlChar quotechar);





    int xmlTextWriterFlush(xmlTextWriterPtr writer);
# 60 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2

# 1 "./include/libxml/xpathInternals.h" 1
# 103 "./include/libxml/xpathInternals.h"
 int
  xmlXPathPopBoolean (xmlXPathParserContextPtr ctxt);
 double
  xmlXPathPopNumber (xmlXPathParserContextPtr ctxt);
 xmlChar *
  xmlXPathPopString (xmlXPathParserContextPtr ctxt);
 xmlNodeSetPtr
  xmlXPathPopNodeSet (xmlXPathParserContextPtr ctxt);
 void *
  xmlXPathPopExternal (xmlXPathParserContextPtr ctxt);
# 334 "./include/libxml/xpathInternals.h"
 void
 xmlXPathRegisterVariableLookup (xmlXPathContextPtr ctxt,
      xmlXPathVariableLookupFunc f,
      void *data);





 void
     xmlXPathRegisterFuncLookup (xmlXPathContextPtr ctxt,
      xmlXPathFuncLookupFunc f,
      void *funcCtxt);




 void
  xmlXPatherror (xmlXPathParserContextPtr ctxt,
     const char *file,
     int line,
     int no);

 void
  xmlXPathErr (xmlXPathParserContextPtr ctxt,
     int error);


 void
  xmlXPathDebugDumpObject (FILE *output,
      xmlXPathObjectPtr cur,
      int depth);
 void
     xmlXPathDebugDumpCompExpr(FILE *output,
      xmlXPathCompExprPtr comp,
      int depth);




 int
  xmlXPathNodeSetContains (xmlNodeSetPtr cur,
       xmlNodePtr val);
 xmlNodeSetPtr
  xmlXPathDifference (xmlNodeSetPtr nodes1,
       xmlNodeSetPtr nodes2);
 xmlNodeSetPtr
  xmlXPathIntersection (xmlNodeSetPtr nodes1,
       xmlNodeSetPtr nodes2);

 xmlNodeSetPtr
  xmlXPathDistinctSorted (xmlNodeSetPtr nodes);
 xmlNodeSetPtr
  xmlXPathDistinct (xmlNodeSetPtr nodes);

 int
  xmlXPathHasSameNodes (xmlNodeSetPtr nodes1,
       xmlNodeSetPtr nodes2);

 xmlNodeSetPtr
  xmlXPathNodeLeadingSorted (xmlNodeSetPtr nodes,
       xmlNodePtr node);
 xmlNodeSetPtr
  xmlXPathLeadingSorted (xmlNodeSetPtr nodes1,
       xmlNodeSetPtr nodes2);
 xmlNodeSetPtr
  xmlXPathNodeLeading (xmlNodeSetPtr nodes,
       xmlNodePtr node);
 xmlNodeSetPtr
  xmlXPathLeading (xmlNodeSetPtr nodes1,
       xmlNodeSetPtr nodes2);

 xmlNodeSetPtr
  xmlXPathNodeTrailingSorted (xmlNodeSetPtr nodes,
       xmlNodePtr node);
 xmlNodeSetPtr
  xmlXPathTrailingSorted (xmlNodeSetPtr nodes1,
       xmlNodeSetPtr nodes2);
 xmlNodeSetPtr
  xmlXPathNodeTrailing (xmlNodeSetPtr nodes,
       xmlNodePtr node);
 xmlNodeSetPtr
  xmlXPathTrailing (xmlNodeSetPtr nodes1,
       xmlNodeSetPtr nodes2);






 int
  xmlXPathRegisterNs (xmlXPathContextPtr ctxt,
       const xmlChar *prefix,
       const xmlChar *ns_uri);
 const xmlChar *
  xmlXPathNsLookup (xmlXPathContextPtr ctxt,
       const xmlChar *prefix);
 void
  xmlXPathRegisteredNsCleanup (xmlXPathContextPtr ctxt);

 int
  xmlXPathRegisterFunc (xmlXPathContextPtr ctxt,
       const xmlChar *name,
       xmlXPathFunction f);
 int
  xmlXPathRegisterFuncNS (xmlXPathContextPtr ctxt,
       const xmlChar *name,
       const xmlChar *ns_uri,
       xmlXPathFunction f);
 int
  xmlXPathRegisterVariable (xmlXPathContextPtr ctxt,
       const xmlChar *name,
       xmlXPathObjectPtr value);
 int
  xmlXPathRegisterVariableNS (xmlXPathContextPtr ctxt,
       const xmlChar *name,
       const xmlChar *ns_uri,
       xmlXPathObjectPtr value);
 xmlXPathFunction
  xmlXPathFunctionLookup (xmlXPathContextPtr ctxt,
       const xmlChar *name);
 xmlXPathFunction
  xmlXPathFunctionLookupNS (xmlXPathContextPtr ctxt,
       const xmlChar *name,
       const xmlChar *ns_uri);
 void
  xmlXPathRegisteredFuncsCleanup (xmlXPathContextPtr ctxt);
 xmlXPathObjectPtr
  xmlXPathVariableLookup (xmlXPathContextPtr ctxt,
       const xmlChar *name);
 xmlXPathObjectPtr
  xmlXPathVariableLookupNS (xmlXPathContextPtr ctxt,
       const xmlChar *name,
       const xmlChar *ns_uri);
 void
  xmlXPathRegisteredVariablesCleanup(xmlXPathContextPtr ctxt);




 xmlXPathParserContextPtr
    xmlXPathNewParserContext (const xmlChar *str,
       xmlXPathContextPtr ctxt);
 void
  xmlXPathFreeParserContext (xmlXPathParserContextPtr ctxt);


 xmlXPathObjectPtr
  valuePop (xmlXPathParserContextPtr ctxt);
 int
  valuePush (xmlXPathParserContextPtr ctxt,
       xmlXPathObjectPtr value);

 xmlXPathObjectPtr
  xmlXPathNewString (const xmlChar *val);
 xmlXPathObjectPtr
  xmlXPathNewCString (const char *val);
 xmlXPathObjectPtr
  xmlXPathWrapString (xmlChar *val);
 xmlXPathObjectPtr
  xmlXPathWrapCString (char * val);
 xmlXPathObjectPtr
  xmlXPathNewFloat (double val);
 xmlXPathObjectPtr
  xmlXPathNewBoolean (int val);
 xmlXPathObjectPtr
  xmlXPathNewNodeSet (xmlNodePtr val);
 xmlXPathObjectPtr
  xmlXPathNewValueTree (xmlNodePtr val);
 int
  xmlXPathNodeSetAdd (xmlNodeSetPtr cur,
       xmlNodePtr val);
 int
  xmlXPathNodeSetAddUnique (xmlNodeSetPtr cur,
       xmlNodePtr val);
 int
  xmlXPathNodeSetAddNs (xmlNodeSetPtr cur,
       xmlNodePtr node,
       xmlNsPtr ns);
 void
  xmlXPathNodeSetSort (xmlNodeSetPtr set);

 void
  xmlXPathRoot (xmlXPathParserContextPtr ctxt);
 void
  xmlXPathEvalExpr (xmlXPathParserContextPtr ctxt);
 xmlChar *
  xmlXPathParseName (xmlXPathParserContextPtr ctxt);
 xmlChar *
  xmlXPathParseNCName (xmlXPathParserContextPtr ctxt);




 double
  xmlXPathStringEvalNumber (const xmlChar *str);
 int
  xmlXPathEvaluatePredicateResult (xmlXPathParserContextPtr ctxt,
       xmlXPathObjectPtr res);
 void
  xmlXPathRegisterAllFunctions (xmlXPathContextPtr ctxt);
 xmlNodeSetPtr
  xmlXPathNodeSetMerge (xmlNodeSetPtr val1,
       xmlNodeSetPtr val2);
 void
  xmlXPathNodeSetDel (xmlNodeSetPtr cur,
       xmlNodePtr val);
 void
  xmlXPathNodeSetRemove (xmlNodeSetPtr cur,
       int val);
 xmlXPathObjectPtr
  xmlXPathNewNodeSetList (xmlNodeSetPtr val);
 xmlXPathObjectPtr
  xmlXPathWrapNodeSet (xmlNodeSetPtr val);
 xmlXPathObjectPtr
  xmlXPathWrapExternal (void *val);

 int xmlXPathEqualValues(xmlXPathParserContextPtr ctxt);
 int xmlXPathNotEqualValues(xmlXPathParserContextPtr ctxt);
 int xmlXPathCompareValues(xmlXPathParserContextPtr ctxt, int inf, int strict);
 void xmlXPathValueFlipSign(xmlXPathParserContextPtr ctxt);
 void xmlXPathAddValues(xmlXPathParserContextPtr ctxt);
 void xmlXPathSubValues(xmlXPathParserContextPtr ctxt);
 void xmlXPathMultValues(xmlXPathParserContextPtr ctxt);
 void xmlXPathDivValues(xmlXPathParserContextPtr ctxt);
 void xmlXPathModValues(xmlXPathParserContextPtr ctxt);

 int xmlXPathIsNodeType(const xmlChar *name);




 xmlNodePtr xmlXPathNextSelf(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);
 xmlNodePtr xmlXPathNextChild(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);
 xmlNodePtr xmlXPathNextDescendant(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);
 xmlNodePtr xmlXPathNextDescendantOrSelf(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);
 xmlNodePtr xmlXPathNextParent(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);
 xmlNodePtr xmlXPathNextAncestorOrSelf(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);
 xmlNodePtr xmlXPathNextFollowingSibling(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);
 xmlNodePtr xmlXPathNextFollowing(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);
 xmlNodePtr xmlXPathNextNamespace(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);
 xmlNodePtr xmlXPathNextAttribute(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);
 xmlNodePtr xmlXPathNextPreceding(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);
 xmlNodePtr xmlXPathNextAncestor(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);
 xmlNodePtr xmlXPathNextPrecedingSibling(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);



 void xmlXPathLastFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathPositionFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathCountFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathIdFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathLocalNameFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathNamespaceURIFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathStringFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathStringLengthFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathConcatFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathContainsFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathStartsWithFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathSubstringFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathSubstringBeforeFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathSubstringAfterFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathNormalizeFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathTranslateFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathNotFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathTrueFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathFalseFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathLangFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathNumberFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathSumFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathFloorFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathCeilingFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathRoundFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathBooleanFunction(xmlXPathParserContextPtr ctxt, int nargs);




 void xmlXPathNodeSetFreeNs(xmlNsPtr ns);
# 62 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2
# 1 "./include/libxml/xpointer.h" 1
# 34 "./include/libxml/xpointer.h"
typedef struct _xmlLocationSet xmlLocationSet;
typedef xmlLocationSet *xmlLocationSetPtr;
struct _xmlLocationSet {
    int locNr;
    int locMax;
    xmlXPathObjectPtr *locTab;
};





 xmlLocationSetPtr
      xmlXPtrLocationSetCreate (xmlXPathObjectPtr val);
 void
      xmlXPtrFreeLocationSet (xmlLocationSetPtr obj);
 xmlLocationSetPtr
      xmlXPtrLocationSetMerge (xmlLocationSetPtr val1,
       xmlLocationSetPtr val2);
 xmlXPathObjectPtr
      xmlXPtrNewRange (xmlNodePtr start,
       int startindex,
       xmlNodePtr end,
       int endindex);
 xmlXPathObjectPtr
      xmlXPtrNewRangePoints (xmlXPathObjectPtr start,
       xmlXPathObjectPtr end);
 xmlXPathObjectPtr
      xmlXPtrNewRangeNodePoint (xmlNodePtr start,
       xmlXPathObjectPtr end);
 xmlXPathObjectPtr
      xmlXPtrNewRangePointNode (xmlXPathObjectPtr start,
       xmlNodePtr end);
 xmlXPathObjectPtr
      xmlXPtrNewRangeNodes (xmlNodePtr start,
       xmlNodePtr end);
 xmlXPathObjectPtr
      xmlXPtrNewLocationSetNodes (xmlNodePtr start,
       xmlNodePtr end);
 xmlXPathObjectPtr
      xmlXPtrNewLocationSetNodeSet(xmlNodeSetPtr set);
 xmlXPathObjectPtr
      xmlXPtrNewRangeNodeObject (xmlNodePtr start,
       xmlXPathObjectPtr end);
 xmlXPathObjectPtr
      xmlXPtrNewCollapsedRange (xmlNodePtr start);
 void
      xmlXPtrLocationSetAdd (xmlLocationSetPtr cur,
       xmlXPathObjectPtr val);
 xmlXPathObjectPtr
      xmlXPtrWrapLocationSet (xmlLocationSetPtr val);
 void
      xmlXPtrLocationSetDel (xmlLocationSetPtr cur,
       xmlXPathObjectPtr val);
 void
      xmlXPtrLocationSetRemove (xmlLocationSetPtr cur,
       int val);




 xmlXPathContextPtr
      xmlXPtrNewContext (xmlDocPtr doc,
       xmlNodePtr here,
       xmlNodePtr origin);
 xmlXPathObjectPtr
      xmlXPtrEval (const xmlChar *str,
       xmlXPathContextPtr ctx);
 void
      xmlXPtrRangeToFunction (xmlXPathParserContextPtr ctxt,
       int nargs);
 xmlNodePtr
      xmlXPtrBuildNodeList (xmlXPathObjectPtr obj);
 void
      xmlXPtrEvalRangePredicate (xmlXPathParserContextPtr ctxt);
# 63 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2
# 1 "./include/libxml/xmlmodule.h" 1
# 27 "./include/libxml/xmlmodule.h"
typedef struct _xmlModule xmlModule;
typedef xmlModule *xmlModulePtr;






typedef enum {
    XML_MODULE_LAZY = 1,
    XML_MODULE_LOCAL= 2
} xmlModuleOption;

 xmlModulePtr xmlModuleOpen (const char *filename,
       int options);

 int xmlModuleSymbol (xmlModulePtr module,
       const char* name,
       void **result);

 int xmlModuleClose (xmlModulePtr module);

 int xmlModuleFree (xmlModulePtr module);
# 64 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2
# 72 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (__xmlGenericError) __xmlGenericError__internal_alias __attribute((visibility("hidden")));
# 82 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (__xmlGenericErrorContext) __xmlGenericErrorContext__internal_alias __attribute((visibility("hidden")));
# 94 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (docbCreatePushParserCtxt) docbCreatePushParserCtxt__internal_alias __attribute((visibility("hidden")));
# 106 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlAttrAllowed) htmlAttrAllowed__internal_alias __attribute((visibility("hidden")));
# 118 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlAutoCloseTag) htmlAutoCloseTag__internal_alias __attribute((visibility("hidden")));
# 130 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlCreateFileParserCtxt) htmlCreateFileParserCtxt__internal_alias __attribute((visibility("hidden")));
# 142 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlCreateMemoryParserCtxt) htmlCreateMemoryParserCtxt__internal_alias __attribute((visibility("hidden")));
# 154 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlCreatePushParserCtxt) htmlCreatePushParserCtxt__internal_alias __attribute((visibility("hidden")));
# 166 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlCtxtReadDoc) htmlCtxtReadDoc__internal_alias __attribute((visibility("hidden")));
# 178 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlCtxtReadFd) htmlCtxtReadFd__internal_alias __attribute((visibility("hidden")));
# 190 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlCtxtReadFile) htmlCtxtReadFile__internal_alias __attribute((visibility("hidden")));
# 202 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlCtxtReadIO) htmlCtxtReadIO__internal_alias __attribute((visibility("hidden")));
# 214 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlCtxtReadMemory) htmlCtxtReadMemory__internal_alias __attribute((visibility("hidden")));
# 226 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlCtxtReset) htmlCtxtReset__internal_alias __attribute((visibility("hidden")));
# 238 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlCtxtUseOptions) htmlCtxtUseOptions__internal_alias __attribute((visibility("hidden")));
# 250 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlDefaultSAXHandlerInit) htmlDefaultSAXHandlerInit__internal_alias __attribute((visibility("hidden")));
# 262 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlDocContentDumpFormatOutput) htmlDocContentDumpFormatOutput__internal_alias __attribute((visibility("hidden")));
# 274 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlDocContentDumpOutput) htmlDocContentDumpOutput__internal_alias __attribute((visibility("hidden")));
# 286 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlDocDump) htmlDocDump__internal_alias __attribute((visibility("hidden")));
# 298 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlDocDumpMemory) htmlDocDumpMemory__internal_alias __attribute((visibility("hidden")));
# 310 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlDocDumpMemoryFormat) htmlDocDumpMemoryFormat__internal_alias __attribute((visibility("hidden")));
# 322 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlElementAllowedHere) htmlElementAllowedHere__internal_alias __attribute((visibility("hidden")));
# 334 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlElementStatusHere) htmlElementStatusHere__internal_alias __attribute((visibility("hidden")));
# 346 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlEncodeEntities) htmlEncodeEntities__internal_alias __attribute((visibility("hidden")));
# 358 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlEntityLookup) htmlEntityLookup__internal_alias __attribute((visibility("hidden")));
# 370 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlEntityValueLookup) htmlEntityValueLookup__internal_alias __attribute((visibility("hidden")));
# 382 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlFreeParserCtxt) htmlFreeParserCtxt__internal_alias __attribute((visibility("hidden")));
# 394 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlGetMetaEncoding) htmlGetMetaEncoding__internal_alias __attribute((visibility("hidden")));
# 406 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlHandleOmittedElem) htmlHandleOmittedElem__internal_alias __attribute((visibility("hidden")));
# 418 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlInitAutoClose) htmlInitAutoClose__internal_alias __attribute((visibility("hidden")));
# 430 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlIsAutoClosed) htmlIsAutoClosed__internal_alias __attribute((visibility("hidden")));
# 442 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlIsBooleanAttr) htmlIsBooleanAttr__internal_alias __attribute((visibility("hidden")));
# 454 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlIsScriptAttribute) htmlIsScriptAttribute__internal_alias __attribute((visibility("hidden")));
# 466 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlNewDoc) htmlNewDoc__internal_alias __attribute((visibility("hidden")));
# 478 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlNewDocNoDtD) htmlNewDocNoDtD__internal_alias __attribute((visibility("hidden")));
# 490 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlNewParserCtxt) htmlNewParserCtxt__internal_alias __attribute((visibility("hidden")));
# 502 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlNodeDump) htmlNodeDump__internal_alias __attribute((visibility("hidden")));
# 514 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlNodeDumpFile) htmlNodeDumpFile__internal_alias __attribute((visibility("hidden")));
# 526 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlNodeDumpFileFormat) htmlNodeDumpFileFormat__internal_alias __attribute((visibility("hidden")));
# 538 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlNodeDumpFormatOutput) htmlNodeDumpFormatOutput__internal_alias __attribute((visibility("hidden")));
# 550 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlNodeDumpOutput) htmlNodeDumpOutput__internal_alias __attribute((visibility("hidden")));
# 562 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlNodeStatus) htmlNodeStatus__internal_alias __attribute((visibility("hidden")));
# 574 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlParseCharRef) htmlParseCharRef__internal_alias __attribute((visibility("hidden")));
# 586 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlParseChunk) htmlParseChunk__internal_alias __attribute((visibility("hidden")));
# 598 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlParseDoc) htmlParseDoc__internal_alias __attribute((visibility("hidden")));
# 610 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlParseDocument) htmlParseDocument__internal_alias __attribute((visibility("hidden")));
# 622 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlParseElement) htmlParseElement__internal_alias __attribute((visibility("hidden")));
# 634 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlParseEntityRef) htmlParseEntityRef__internal_alias __attribute((visibility("hidden")));
# 646 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlParseFile) htmlParseFile__internal_alias __attribute((visibility("hidden")));
# 658 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlReadDoc) htmlReadDoc__internal_alias __attribute((visibility("hidden")));
# 670 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlReadFd) htmlReadFd__internal_alias __attribute((visibility("hidden")));
# 682 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlReadFile) htmlReadFile__internal_alias __attribute((visibility("hidden")));
# 694 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlReadIO) htmlReadIO__internal_alias __attribute((visibility("hidden")));
# 706 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlReadMemory) htmlReadMemory__internal_alias __attribute((visibility("hidden")));
# 718 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlSAXParseDoc) htmlSAXParseDoc__internal_alias __attribute((visibility("hidden")));
# 730 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlSAXParseFile) htmlSAXParseFile__internal_alias __attribute((visibility("hidden")));
# 742 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlSaveFile) htmlSaveFile__internal_alias __attribute((visibility("hidden")));
# 754 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlSaveFileEnc) htmlSaveFileEnc__internal_alias __attribute((visibility("hidden")));
# 766 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlSaveFileFormat) htmlSaveFileFormat__internal_alias __attribute((visibility("hidden")));
# 778 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlSetMetaEncoding) htmlSetMetaEncoding__internal_alias __attribute((visibility("hidden")));
# 790 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlTagLookup) htmlTagLookup__internal_alias __attribute((visibility("hidden")));
# 801 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (inputPop) inputPop__internal_alias __attribute((visibility("hidden")));
# 811 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (inputPush) inputPush__internal_alias __attribute((visibility("hidden")));
# 821 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (namePop) namePop__internal_alias __attribute((visibility("hidden")));
# 831 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (namePush) namePush__internal_alias __attribute((visibility("hidden")));
# 841 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (nodePop) nodePop__internal_alias __attribute((visibility("hidden")));
# 851 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (nodePush) nodePush__internal_alias __attribute((visibility("hidden")));
# 862 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (valuePop) valuePop__internal_alias __attribute((visibility("hidden")));
# 874 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (valuePush) valuePush__internal_alias __attribute((visibility("hidden")));
# 886 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlACatalogAdd) xmlACatalogAdd__internal_alias __attribute((visibility("hidden")));
# 898 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlACatalogDump) xmlACatalogDump__internal_alias __attribute((visibility("hidden")));
# 910 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlACatalogRemove) xmlACatalogRemove__internal_alias __attribute((visibility("hidden")));
# 922 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlACatalogResolve) xmlACatalogResolve__internal_alias __attribute((visibility("hidden")));
# 934 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlACatalogResolvePublic) xmlACatalogResolvePublic__internal_alias __attribute((visibility("hidden")));
# 946 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlACatalogResolveSystem) xmlACatalogResolveSystem__internal_alias __attribute((visibility("hidden")));
# 958 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlACatalogResolveURI) xmlACatalogResolveURI__internal_alias __attribute((visibility("hidden")));
# 969 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddAttributeDecl) xmlAddAttributeDecl__internal_alias __attribute((visibility("hidden")));
# 979 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddChild) xmlAddChild__internal_alias __attribute((visibility("hidden")));
# 989 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddChildList) xmlAddChildList__internal_alias __attribute((visibility("hidden")));
# 999 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddDocEntity) xmlAddDocEntity__internal_alias __attribute((visibility("hidden")));
# 1009 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddDtdEntity) xmlAddDtdEntity__internal_alias __attribute((visibility("hidden")));
# 1019 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddElementDecl) xmlAddElementDecl__internal_alias __attribute((visibility("hidden")));
# 1029 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddEncodingAlias) xmlAddEncodingAlias__internal_alias __attribute((visibility("hidden")));
# 1039 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddID) xmlAddID__internal_alias __attribute((visibility("hidden")));
# 1049 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddNextSibling) xmlAddNextSibling__internal_alias __attribute((visibility("hidden")));
# 1059 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddNotationDecl) xmlAddNotationDecl__internal_alias __attribute((visibility("hidden")));
# 1070 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddPrevSibling) xmlAddPrevSibling__internal_alias __attribute((visibility("hidden")));
# 1081 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddRef) xmlAddRef__internal_alias __attribute((visibility("hidden")));
# 1091 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddSibling) xmlAddSibling__internal_alias __attribute((visibility("hidden")));
# 1102 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAllocOutputBuffer) xmlAllocOutputBuffer__internal_alias __attribute((visibility("hidden")));
# 1113 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAllocParserInputBuffer) xmlAllocParserInputBuffer__internal_alias __attribute((visibility("hidden")));
# 1124 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAttrSerializeTxtContent) xmlAttrSerializeTxtContent__internal_alias __attribute((visibility("hidden")));
# 1136 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataCompile) xmlAutomataCompile__internal_alias __attribute((visibility("hidden")));
# 1148 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataGetInitState) xmlAutomataGetInitState__internal_alias __attribute((visibility("hidden")));
# 1160 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataIsDeterminist) xmlAutomataIsDeterminist__internal_alias __attribute((visibility("hidden")));
# 1172 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewAllTrans) xmlAutomataNewAllTrans__internal_alias __attribute((visibility("hidden")));
# 1184 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewCountTrans) xmlAutomataNewCountTrans__internal_alias __attribute((visibility("hidden")));
# 1196 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewCountTrans2) xmlAutomataNewCountTrans2__internal_alias __attribute((visibility("hidden")));
# 1208 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewCountedTrans) xmlAutomataNewCountedTrans__internal_alias __attribute((visibility("hidden")));
# 1220 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewCounter) xmlAutomataNewCounter__internal_alias __attribute((visibility("hidden")));
# 1232 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewCounterTrans) xmlAutomataNewCounterTrans__internal_alias __attribute((visibility("hidden")));
# 1244 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewEpsilon) xmlAutomataNewEpsilon__internal_alias __attribute((visibility("hidden")));
# 1256 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewNegTrans) xmlAutomataNewNegTrans__internal_alias __attribute((visibility("hidden")));
# 1268 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewOnceTrans) xmlAutomataNewOnceTrans__internal_alias __attribute((visibility("hidden")));
# 1280 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewOnceTrans2) xmlAutomataNewOnceTrans2__internal_alias __attribute((visibility("hidden")));
# 1292 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewState) xmlAutomataNewState__internal_alias __attribute((visibility("hidden")));
# 1304 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewTransition) xmlAutomataNewTransition__internal_alias __attribute((visibility("hidden")));
# 1316 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewTransition2) xmlAutomataNewTransition2__internal_alias __attribute((visibility("hidden")));
# 1328 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataSetFinalState) xmlAutomataSetFinalState__internal_alias __attribute((visibility("hidden")));
# 1340 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBoolToText) xmlBoolToText__internal_alias __attribute((visibility("hidden")));
# 1351 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferAdd) xmlBufferAdd__internal_alias __attribute((visibility("hidden")));
# 1361 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferAddHead) xmlBufferAddHead__internal_alias __attribute((visibility("hidden")));
# 1371 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferCCat) xmlBufferCCat__internal_alias __attribute((visibility("hidden")));
# 1381 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferCat) xmlBufferCat__internal_alias __attribute((visibility("hidden")));
# 1391 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferContent) xmlBufferContent__internal_alias __attribute((visibility("hidden")));
# 1401 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferCreate) xmlBufferCreate__internal_alias __attribute((visibility("hidden")));
# 1411 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferCreateSize) xmlBufferCreateSize__internal_alias __attribute((visibility("hidden")));
# 1421 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferCreateStatic) xmlBufferCreateStatic__internal_alias __attribute((visibility("hidden")));
# 1431 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferDump) xmlBufferDump__internal_alias __attribute((visibility("hidden")));
# 1441 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferEmpty) xmlBufferEmpty__internal_alias __attribute((visibility("hidden")));
# 1451 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferFree) xmlBufferFree__internal_alias __attribute((visibility("hidden")));
# 1461 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferGrow) xmlBufferGrow__internal_alias __attribute((visibility("hidden")));
# 1471 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferLength) xmlBufferLength__internal_alias __attribute((visibility("hidden")));
# 1481 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferResize) xmlBufferResize__internal_alias __attribute((visibility("hidden")));
# 1491 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferSetAllocationScheme) xmlBufferSetAllocationScheme__internal_alias __attribute((visibility("hidden")));
# 1501 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferShrink) xmlBufferShrink__internal_alias __attribute((visibility("hidden")));
# 1511 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferWriteCHAR) xmlBufferWriteCHAR__internal_alias __attribute((visibility("hidden")));
# 1521 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferWriteChar) xmlBufferWriteChar__internal_alias __attribute((visibility("hidden")));
# 1531 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferWriteQuotedString) xmlBufferWriteQuotedString__internal_alias __attribute((visibility("hidden")));
# 1541 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBuildQName) xmlBuildQName__internal_alias __attribute((visibility("hidden")));
# 1551 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBuildRelativeURI) xmlBuildRelativeURI__internal_alias __attribute((visibility("hidden")));
# 1561 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBuildURI) xmlBuildURI__internal_alias __attribute((visibility("hidden")));
# 1571 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlByteConsumed) xmlByteConsumed__internal_alias __attribute((visibility("hidden")));
# 1582 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlC14NDocDumpMemory) xmlC14NDocDumpMemory__internal_alias __attribute((visibility("hidden")));
# 1594 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlC14NDocSave) xmlC14NDocSave__internal_alias __attribute((visibility("hidden")));
# 1606 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlC14NDocSaveTo) xmlC14NDocSaveTo__internal_alias __attribute((visibility("hidden")));
# 1618 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlC14NExecute) xmlC14NExecute__internal_alias __attribute((visibility("hidden")));
# 1629 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCanonicPath) xmlCanonicPath__internal_alias __attribute((visibility("hidden")));
# 1640 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogAdd) xmlCatalogAdd__internal_alias __attribute((visibility("hidden")));
# 1652 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogAddLocal) xmlCatalogAddLocal__internal_alias __attribute((visibility("hidden")));
# 1664 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogCleanup) xmlCatalogCleanup__internal_alias __attribute((visibility("hidden")));
# 1676 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogConvert) xmlCatalogConvert__internal_alias __attribute((visibility("hidden")));
# 1688 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogDump) xmlCatalogDump__internal_alias __attribute((visibility("hidden")));
# 1700 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogFreeLocal) xmlCatalogFreeLocal__internal_alias __attribute((visibility("hidden")));
# 1712 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogGetDefaults) xmlCatalogGetDefaults__internal_alias __attribute((visibility("hidden")));
# 1724 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogGetPublic) xmlCatalogGetPublic__internal_alias __attribute((visibility("hidden")));
# 1736 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogGetSystem) xmlCatalogGetSystem__internal_alias __attribute((visibility("hidden")));
# 1748 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogIsEmpty) xmlCatalogIsEmpty__internal_alias __attribute((visibility("hidden")));
# 1760 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogLocalResolve) xmlCatalogLocalResolve__internal_alias __attribute((visibility("hidden")));
# 1772 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogLocalResolveURI) xmlCatalogLocalResolveURI__internal_alias __attribute((visibility("hidden")));
# 1784 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogRemove) xmlCatalogRemove__internal_alias __attribute((visibility("hidden")));
# 1796 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogResolve) xmlCatalogResolve__internal_alias __attribute((visibility("hidden")));
# 1808 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogResolvePublic) xmlCatalogResolvePublic__internal_alias __attribute((visibility("hidden")));
# 1820 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogResolveSystem) xmlCatalogResolveSystem__internal_alias __attribute((visibility("hidden")));
# 1832 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogResolveURI) xmlCatalogResolveURI__internal_alias __attribute((visibility("hidden")));
# 1844 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogSetDebug) xmlCatalogSetDebug__internal_alias __attribute((visibility("hidden")));
# 1856 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogSetDefaultPrefer) xmlCatalogSetDefaultPrefer__internal_alias __attribute((visibility("hidden")));
# 1868 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogSetDefaults) xmlCatalogSetDefaults__internal_alias __attribute((visibility("hidden")));
# 1879 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCharEncCloseFunc) xmlCharEncCloseFunc__internal_alias __attribute((visibility("hidden")));
# 1889 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCharEncFirstLine) xmlCharEncFirstLine__internal_alias __attribute((visibility("hidden")));
# 1899 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCharEncInFunc) xmlCharEncInFunc__internal_alias __attribute((visibility("hidden")));
# 1909 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCharEncOutFunc) xmlCharEncOutFunc__internal_alias __attribute((visibility("hidden")));
# 1919 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCharInRange) xmlCharInRange__internal_alias __attribute((visibility("hidden")));
# 1929 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCharStrdup) xmlCharStrdup__internal_alias __attribute((visibility("hidden")));
# 1939 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCharStrndup) xmlCharStrndup__internal_alias __attribute((visibility("hidden")));
# 1949 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCheckFilename) xmlCheckFilename__internal_alias __attribute((visibility("hidden")));
# 1959 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCheckHTTPInput) xmlCheckHTTPInput__internal_alias __attribute((visibility("hidden")));
# 1969 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCheckLanguageID) xmlCheckLanguageID__internal_alias __attribute((visibility("hidden")));
# 1979 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCheckUTF8) xmlCheckUTF8__internal_alias __attribute((visibility("hidden")));
# 1989 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCheckVersion) xmlCheckVersion__internal_alias __attribute((visibility("hidden")));
# 2000 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlChildElementCount) xmlChildElementCount__internal_alias __attribute((visibility("hidden")));
# 2011 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCleanupCharEncodingHandlers) xmlCleanupCharEncodingHandlers__internal_alias __attribute((visibility("hidden")));
# 2021 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCleanupEncodingAliases) xmlCleanupEncodingAliases__internal_alias __attribute((visibility("hidden")));
# 2031 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCleanupGlobals) xmlCleanupGlobals__internal_alias __attribute((visibility("hidden")));
# 2041 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCleanupInputCallbacks) xmlCleanupInputCallbacks__internal_alias __attribute((visibility("hidden")));
# 2051 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCleanupMemory) xmlCleanupMemory__internal_alias __attribute((visibility("hidden")));
# 2062 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCleanupOutputCallbacks) xmlCleanupOutputCallbacks__internal_alias __attribute((visibility("hidden")));
# 2073 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCleanupParser) xmlCleanupParser__internal_alias __attribute((visibility("hidden")));
# 2084 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCleanupPredefinedEntities) xmlCleanupPredefinedEntities__internal_alias __attribute((visibility("hidden")));
# 2095 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCleanupThreads) xmlCleanupThreads__internal_alias __attribute((visibility("hidden")));
# 2105 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlClearNodeInfoSeq) xmlClearNodeInfoSeq__internal_alias __attribute((visibility("hidden")));
# 2115 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlClearParserCtxt) xmlClearParserCtxt__internal_alias __attribute((visibility("hidden")));
# 2126 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlConvertSGMLCatalog) xmlConvertSGMLCatalog__internal_alias __attribute((visibility("hidden")));
# 2138 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyAttributeTable) xmlCopyAttributeTable__internal_alias __attribute((visibility("hidden")));
# 2149 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyChar) xmlCopyChar__internal_alias __attribute((visibility("hidden")));
# 2159 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyCharMultiByte) xmlCopyCharMultiByte__internal_alias __attribute((visibility("hidden")));
# 2170 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyDoc) xmlCopyDoc__internal_alias __attribute((visibility("hidden")));
# 2181 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyDocElementContent) xmlCopyDocElementContent__internal_alias __attribute((visibility("hidden")));
# 2192 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyDtd) xmlCopyDtd__internal_alias __attribute((visibility("hidden")));
# 2203 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyElementContent) xmlCopyElementContent__internal_alias __attribute((visibility("hidden")));
# 2214 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyElementTable) xmlCopyElementTable__internal_alias __attribute((visibility("hidden")));
# 2226 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyEntitiesTable) xmlCopyEntitiesTable__internal_alias __attribute((visibility("hidden")));
# 2238 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyEnumeration) xmlCopyEnumeration__internal_alias __attribute((visibility("hidden")));
# 2249 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyError) xmlCopyError__internal_alias __attribute((visibility("hidden")));
# 2259 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyNamespace) xmlCopyNamespace__internal_alias __attribute((visibility("hidden")));
# 2269 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyNamespaceList) xmlCopyNamespaceList__internal_alias __attribute((visibility("hidden")));
# 2279 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyNode) xmlCopyNode__internal_alias __attribute((visibility("hidden")));
# 2289 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyNodeList) xmlCopyNodeList__internal_alias __attribute((visibility("hidden")));
# 2300 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyNotationTable) xmlCopyNotationTable__internal_alias __attribute((visibility("hidden")));
# 2311 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyProp) xmlCopyProp__internal_alias __attribute((visibility("hidden")));
# 2321 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyPropList) xmlCopyPropList__internal_alias __attribute((visibility("hidden")));
# 2331 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateDocParserCtxt) xmlCreateDocParserCtxt__internal_alias __attribute((visibility("hidden")));
# 2341 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateEntitiesTable) xmlCreateEntitiesTable__internal_alias __attribute((visibility("hidden")));
# 2351 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateEntityParserCtxt) xmlCreateEntityParserCtxt__internal_alias __attribute((visibility("hidden")));
# 2361 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateEnumeration) xmlCreateEnumeration__internal_alias __attribute((visibility("hidden")));
# 2371 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateFileParserCtxt) xmlCreateFileParserCtxt__internal_alias __attribute((visibility("hidden")));
# 2381 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateIOParserCtxt) xmlCreateIOParserCtxt__internal_alias __attribute((visibility("hidden")));
# 2391 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateIntSubset) xmlCreateIntSubset__internal_alias __attribute((visibility("hidden")));
# 2401 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateMemoryParserCtxt) xmlCreateMemoryParserCtxt__internal_alias __attribute((visibility("hidden")));
# 2412 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreatePushParserCtxt) xmlCreatePushParserCtxt__internal_alias __attribute((visibility("hidden")));
# 2423 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateURI) xmlCreateURI__internal_alias __attribute((visibility("hidden")));
# 2433 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateURLParserCtxt) xmlCreateURLParserCtxt__internal_alias __attribute((visibility("hidden")));
# 2443 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtGetLastError) xmlCtxtGetLastError__internal_alias __attribute((visibility("hidden")));
# 2453 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtReadDoc) xmlCtxtReadDoc__internal_alias __attribute((visibility("hidden")));
# 2463 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtReadFd) xmlCtxtReadFd__internal_alias __attribute((visibility("hidden")));
# 2473 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtReadFile) xmlCtxtReadFile__internal_alias __attribute((visibility("hidden")));
# 2483 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtReadIO) xmlCtxtReadIO__internal_alias __attribute((visibility("hidden")));
# 2493 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtReadMemory) xmlCtxtReadMemory__internal_alias __attribute((visibility("hidden")));
# 2503 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtReset) xmlCtxtReset__internal_alias __attribute((visibility("hidden")));
# 2513 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtResetLastError) xmlCtxtResetLastError__internal_alias __attribute((visibility("hidden")));
# 2523 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtResetPush) xmlCtxtResetPush__internal_alias __attribute((visibility("hidden")));
# 2533 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtUseOptions) xmlCtxtUseOptions__internal_alias __attribute((visibility("hidden")));
# 2543 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCurrentChar) xmlCurrentChar__internal_alias __attribute((visibility("hidden")));
# 2553 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDOMWrapAdoptNode) xmlDOMWrapAdoptNode__internal_alias __attribute((visibility("hidden")));
# 2563 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDOMWrapCloneNode) xmlDOMWrapCloneNode__internal_alias __attribute((visibility("hidden")));
# 2573 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDOMWrapFreeCtxt) xmlDOMWrapFreeCtxt__internal_alias __attribute((visibility("hidden")));
# 2583 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDOMWrapNewCtxt) xmlDOMWrapNewCtxt__internal_alias __attribute((visibility("hidden")));
# 2593 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDOMWrapReconcileNamespaces) xmlDOMWrapReconcileNamespaces__internal_alias __attribute((visibility("hidden")));
# 2603 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDOMWrapRemoveNode) xmlDOMWrapRemoveNode__internal_alias __attribute((visibility("hidden")));
# 2614 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDebugCheckDocument) xmlDebugCheckDocument__internal_alias __attribute((visibility("hidden")));
# 2626 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDebugDumpAttr) xmlDebugDumpAttr__internal_alias __attribute((visibility("hidden")));
# 2638 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDebugDumpAttrList) xmlDebugDumpAttrList__internal_alias __attribute((visibility("hidden")));
# 2650 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDebugDumpDTD) xmlDebugDumpDTD__internal_alias __attribute((visibility("hidden")));
# 2662 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDebugDumpDocument) xmlDebugDumpDocument__internal_alias __attribute((visibility("hidden")));
# 2674 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDebugDumpDocumentHead) xmlDebugDumpDocumentHead__internal_alias __attribute((visibility("hidden")));
# 2686 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDebugDumpEntities) xmlDebugDumpEntities__internal_alias __attribute((visibility("hidden")));
# 2698 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDebugDumpNode) xmlDebugDumpNode__internal_alias __attribute((visibility("hidden")));
# 2710 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDebugDumpNodeList) xmlDebugDumpNodeList__internal_alias __attribute((visibility("hidden")));
# 2722 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDebugDumpOneNode) xmlDebugDumpOneNode__internal_alias __attribute((visibility("hidden")));
# 2734 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDebugDumpString) xmlDebugDumpString__internal_alias __attribute((visibility("hidden")));
# 2746 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDecodeEntities) xmlDecodeEntities__internal_alias __attribute((visibility("hidden")));
# 2757 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDefaultSAXHandlerInit) xmlDefaultSAXHandlerInit__internal_alias __attribute((visibility("hidden")));
# 2767 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDelEncodingAlias) xmlDelEncodingAlias__internal_alias __attribute((visibility("hidden")));
# 2777 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDeregisterNodeDefault) xmlDeregisterNodeDefault__internal_alias __attribute((visibility("hidden")));
# 2787 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDetectCharEncoding) xmlDetectCharEncoding__internal_alias __attribute((visibility("hidden")));
# 2797 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDictCleanup) xmlDictCleanup__internal_alias __attribute((visibility("hidden")));
# 2807 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDictCreate) xmlDictCreate__internal_alias __attribute((visibility("hidden")));
# 2817 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDictCreateSub) xmlDictCreateSub__internal_alias __attribute((visibility("hidden")));
# 2827 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDictExists) xmlDictExists__internal_alias __attribute((visibility("hidden")));
# 2837 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDictFree) xmlDictFree__internal_alias __attribute((visibility("hidden")));
# 2847 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDictLookup) xmlDictLookup__internal_alias __attribute((visibility("hidden")));
# 2857 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDictOwns) xmlDictOwns__internal_alias __attribute((visibility("hidden")));
# 2867 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDictQLookup) xmlDictQLookup__internal_alias __attribute((visibility("hidden")));
# 2877 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDictReference) xmlDictReference__internal_alias __attribute((visibility("hidden")));
# 2887 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDictSize) xmlDictSize__internal_alias __attribute((visibility("hidden")));
# 2897 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDocCopyNode) xmlDocCopyNode__internal_alias __attribute((visibility("hidden")));
# 2907 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDocCopyNodeList) xmlDocCopyNodeList__internal_alias __attribute((visibility("hidden")));
# 2918 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDocDump) xmlDocDump__internal_alias __attribute((visibility("hidden")));
# 2930 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDocDumpFormatMemory) xmlDocDumpFormatMemory__internal_alias __attribute((visibility("hidden")));
# 2942 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDocDumpFormatMemoryEnc) xmlDocDumpFormatMemoryEnc__internal_alias __attribute((visibility("hidden")));
# 2954 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDocDumpMemory) xmlDocDumpMemory__internal_alias __attribute((visibility("hidden")));
# 2966 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDocDumpMemoryEnc) xmlDocDumpMemoryEnc__internal_alias __attribute((visibility("hidden")));
# 2978 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDocFormatDump) xmlDocFormatDump__internal_alias __attribute((visibility("hidden")));
# 2989 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDocGetRootElement) xmlDocGetRootElement__internal_alias __attribute((visibility("hidden")));
# 3000 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDocSetRootElement) xmlDocSetRootElement__internal_alias __attribute((visibility("hidden")));
# 3012 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDumpAttributeDecl) xmlDumpAttributeDecl__internal_alias __attribute((visibility("hidden")));
# 3024 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDumpAttributeTable) xmlDumpAttributeTable__internal_alias __attribute((visibility("hidden")));
# 3036 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDumpElementDecl) xmlDumpElementDecl__internal_alias __attribute((visibility("hidden")));
# 3048 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDumpElementTable) xmlDumpElementTable__internal_alias __attribute((visibility("hidden")));
# 3060 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDumpEntitiesTable) xmlDumpEntitiesTable__internal_alias __attribute((visibility("hidden")));
# 3072 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDumpEntityDecl) xmlDumpEntityDecl__internal_alias __attribute((visibility("hidden")));
# 3084 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDumpNotationDecl) xmlDumpNotationDecl__internal_alias __attribute((visibility("hidden")));
# 3096 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDumpNotationTable) xmlDumpNotationTable__internal_alias __attribute((visibility("hidden")));
# 3108 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlElemDump) xmlElemDump__internal_alias __attribute((visibility("hidden")));
# 3120 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlEncodeEntities) xmlEncodeEntities__internal_alias __attribute((visibility("hidden")));
# 3131 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlEncodeEntitiesReentrant) xmlEncodeEntitiesReentrant__internal_alias __attribute((visibility("hidden")));
# 3141 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlEncodeSpecialChars) xmlEncodeSpecialChars__internal_alias __attribute((visibility("hidden")));
# 3151 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlErrMemory) xmlErrMemory__internal_alias __attribute((visibility("hidden")));
# 3162 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpCtxtNbCons) xmlExpCtxtNbCons__internal_alias __attribute((visibility("hidden")));
# 3174 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpCtxtNbNodes) xmlExpCtxtNbNodes__internal_alias __attribute((visibility("hidden")));
# 3186 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpDump) xmlExpDump__internal_alias __attribute((visibility("hidden")));
# 3198 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpExpDerive) xmlExpExpDerive__internal_alias __attribute((visibility("hidden")));
# 3210 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpFree) xmlExpFree__internal_alias __attribute((visibility("hidden")));
# 3222 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpFreeCtxt) xmlExpFreeCtxt__internal_alias __attribute((visibility("hidden")));
# 3234 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpGetLanguage) xmlExpGetLanguage__internal_alias __attribute((visibility("hidden")));
# 3246 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpGetStart) xmlExpGetStart__internal_alias __attribute((visibility("hidden")));
# 3258 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpIsNillable) xmlExpIsNillable__internal_alias __attribute((visibility("hidden")));
# 3270 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpMaxToken) xmlExpMaxToken__internal_alias __attribute((visibility("hidden")));
# 3282 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpNewAtom) xmlExpNewAtom__internal_alias __attribute((visibility("hidden")));
# 3294 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpNewCtxt) xmlExpNewCtxt__internal_alias __attribute((visibility("hidden")));
# 3306 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpNewOr) xmlExpNewOr__internal_alias __attribute((visibility("hidden")));
# 3318 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpNewRange) xmlExpNewRange__internal_alias __attribute((visibility("hidden")));
# 3330 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpNewSeq) xmlExpNewSeq__internal_alias __attribute((visibility("hidden")));
# 3342 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpParse) xmlExpParse__internal_alias __attribute((visibility("hidden")));
# 3354 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpRef) xmlExpRef__internal_alias __attribute((visibility("hidden")));
# 3366 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpStringDerive) xmlExpStringDerive__internal_alias __attribute((visibility("hidden")));
# 3378 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpSubsume) xmlExpSubsume__internal_alias __attribute((visibility("hidden")));
# 3389 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFileClose) xmlFileClose__internal_alias __attribute((visibility("hidden")));
# 3399 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFileMatch) xmlFileMatch__internal_alias __attribute((visibility("hidden")));
# 3409 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFileOpen) xmlFileOpen__internal_alias __attribute((visibility("hidden")));
# 3419 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFileRead) xmlFileRead__internal_alias __attribute((visibility("hidden")));
# 3429 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFindCharEncodingHandler) xmlFindCharEncodingHandler__internal_alias __attribute((visibility("hidden")));
# 3440 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFirstElementChild) xmlFirstElementChild__internal_alias __attribute((visibility("hidden")));
# 3451 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeAttributeTable) xmlFreeAttributeTable__internal_alias __attribute((visibility("hidden")));
# 3462 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeAutomata) xmlFreeAutomata__internal_alias __attribute((visibility("hidden")));
# 3474 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeCatalog) xmlFreeCatalog__internal_alias __attribute((visibility("hidden")));
# 3485 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeDoc) xmlFreeDoc__internal_alias __attribute((visibility("hidden")));
# 3495 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeDocElementContent) xmlFreeDocElementContent__internal_alias __attribute((visibility("hidden")));
# 3505 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeDtd) xmlFreeDtd__internal_alias __attribute((visibility("hidden")));
# 3515 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeElementContent) xmlFreeElementContent__internal_alias __attribute((visibility("hidden")));
# 3525 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeElementTable) xmlFreeElementTable__internal_alias __attribute((visibility("hidden")));
# 3535 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeEntitiesTable) xmlFreeEntitiesTable__internal_alias __attribute((visibility("hidden")));
# 3545 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeEnumeration) xmlFreeEnumeration__internal_alias __attribute((visibility("hidden")));
# 3555 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeIDTable) xmlFreeIDTable__internal_alias __attribute((visibility("hidden")));
# 3565 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeInputStream) xmlFreeInputStream__internal_alias __attribute((visibility("hidden")));
# 3575 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeMutex) xmlFreeMutex__internal_alias __attribute((visibility("hidden")));
# 3585 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeNode) xmlFreeNode__internal_alias __attribute((visibility("hidden")));
# 3595 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeNodeList) xmlFreeNodeList__internal_alias __attribute((visibility("hidden")));
# 3605 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeNotationTable) xmlFreeNotationTable__internal_alias __attribute((visibility("hidden")));
# 3615 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeNs) xmlFreeNs__internal_alias __attribute((visibility("hidden")));
# 3625 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeNsList) xmlFreeNsList__internal_alias __attribute((visibility("hidden")));
# 3635 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeParserCtxt) xmlFreeParserCtxt__internal_alias __attribute((visibility("hidden")));
# 3645 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeParserInputBuffer) xmlFreeParserInputBuffer__internal_alias __attribute((visibility("hidden")));
# 3656 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreePattern) xmlFreePattern__internal_alias __attribute((visibility("hidden")));
# 3668 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreePatternList) xmlFreePatternList__internal_alias __attribute((visibility("hidden")));
# 3679 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeProp) xmlFreeProp__internal_alias __attribute((visibility("hidden")));
# 3689 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreePropList) xmlFreePropList__internal_alias __attribute((visibility("hidden")));
# 3699 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeRMutex) xmlFreeRMutex__internal_alias __attribute((visibility("hidden")));
# 3709 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeRefTable) xmlFreeRefTable__internal_alias __attribute((visibility("hidden")));
# 3720 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeStreamCtxt) xmlFreeStreamCtxt__internal_alias __attribute((visibility("hidden")));
# 3732 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeTextReader) xmlFreeTextReader__internal_alias __attribute((visibility("hidden")));
# 3744 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeTextWriter) xmlFreeTextWriter__internal_alias __attribute((visibility("hidden")));
# 3755 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeURI) xmlFreeURI__internal_alias __attribute((visibility("hidden")));
# 3766 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeValidCtxt) xmlFreeValidCtxt__internal_alias __attribute((visibility("hidden")));
# 3777 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGcMemGet) xmlGcMemGet__internal_alias __attribute((visibility("hidden")));
# 3787 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGcMemSetup) xmlGcMemSetup__internal_alias __attribute((visibility("hidden")));
# 3797 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetBufferAllocationScheme) xmlGetBufferAllocationScheme__internal_alias __attribute((visibility("hidden")));
# 3807 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetCharEncodingHandler) xmlGetCharEncodingHandler__internal_alias __attribute((visibility("hidden")));
# 3817 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetCharEncodingName) xmlGetCharEncodingName__internal_alias __attribute((visibility("hidden")));
# 3827 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetCompressMode) xmlGetCompressMode__internal_alias __attribute((visibility("hidden")));
# 3837 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetDocCompressMode) xmlGetDocCompressMode__internal_alias __attribute((visibility("hidden")));
# 3847 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetDocEntity) xmlGetDocEntity__internal_alias __attribute((visibility("hidden")));
# 3857 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetDtdAttrDesc) xmlGetDtdAttrDesc__internal_alias __attribute((visibility("hidden")));
# 3867 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetDtdElementDesc) xmlGetDtdElementDesc__internal_alias __attribute((visibility("hidden")));
# 3877 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetDtdEntity) xmlGetDtdEntity__internal_alias __attribute((visibility("hidden")));
# 3887 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetDtdNotationDesc) xmlGetDtdNotationDesc__internal_alias __attribute((visibility("hidden")));
# 3897 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetDtdQAttrDesc) xmlGetDtdQAttrDesc__internal_alias __attribute((visibility("hidden")));
# 3907 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetDtdQElementDesc) xmlGetDtdQElementDesc__internal_alias __attribute((visibility("hidden")));
# 3917 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetEncodingAlias) xmlGetEncodingAlias__internal_alias __attribute((visibility("hidden")));
# 3927 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetExternalEntityLoader) xmlGetExternalEntityLoader__internal_alias __attribute((visibility("hidden")));
# 3938 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetFeature) xmlGetFeature__internal_alias __attribute((visibility("hidden")));
# 3950 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetFeaturesList) xmlGetFeaturesList__internal_alias __attribute((visibility("hidden")));
# 3961 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetGlobalState) xmlGetGlobalState__internal_alias __attribute((visibility("hidden")));
# 3971 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetID) xmlGetID__internal_alias __attribute((visibility("hidden")));
# 3981 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetIntSubset) xmlGetIntSubset__internal_alias __attribute((visibility("hidden")));
# 3991 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetLastChild) xmlGetLastChild__internal_alias __attribute((visibility("hidden")));
# 4001 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetLastError) xmlGetLastError__internal_alias __attribute((visibility("hidden")));
# 4011 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetLineNo) xmlGetLineNo__internal_alias __attribute((visibility("hidden")));
# 4021 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetNoNsProp) xmlGetNoNsProp__internal_alias __attribute((visibility("hidden")));
# 4032 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetNodePath) xmlGetNodePath__internal_alias __attribute((visibility("hidden")));
# 4044 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetNsList) xmlGetNsList__internal_alias __attribute((visibility("hidden")));
# 4055 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetNsProp) xmlGetNsProp__internal_alias __attribute((visibility("hidden")));
# 4065 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetParameterEntity) xmlGetParameterEntity__internal_alias __attribute((visibility("hidden")));
# 4075 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetPredefinedEntity) xmlGetPredefinedEntity__internal_alias __attribute((visibility("hidden")));
# 4085 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetProp) xmlGetProp__internal_alias __attribute((visibility("hidden")));
# 4095 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetRefs) xmlGetRefs__internal_alias __attribute((visibility("hidden")));
# 4105 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetThreadId) xmlGetThreadId__internal_alias __attribute((visibility("hidden")));
# 4115 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetUTF8Char) xmlGetUTF8Char__internal_alias __attribute((visibility("hidden")));
# 4126 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHandleEntity) xmlHandleEntity__internal_alias __attribute((visibility("hidden")));
# 4137 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHasFeature) xmlHasFeature__internal_alias __attribute((visibility("hidden")));
# 4147 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHasNsProp) xmlHasNsProp__internal_alias __attribute((visibility("hidden")));
# 4157 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHasProp) xmlHasProp__internal_alias __attribute((visibility("hidden")));
# 4167 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashAddEntry) xmlHashAddEntry__internal_alias __attribute((visibility("hidden")));
# 4177 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashAddEntry2) xmlHashAddEntry2__internal_alias __attribute((visibility("hidden")));
# 4187 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashAddEntry3) xmlHashAddEntry3__internal_alias __attribute((visibility("hidden")));
# 4197 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashCopy) xmlHashCopy__internal_alias __attribute((visibility("hidden")));
# 4207 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashCreate) xmlHashCreate__internal_alias __attribute((visibility("hidden")));
# 4217 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashCreateDict) xmlHashCreateDict__internal_alias __attribute((visibility("hidden")));
# 4227 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashFree) xmlHashFree__internal_alias __attribute((visibility("hidden")));
# 4237 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashLookup) xmlHashLookup__internal_alias __attribute((visibility("hidden")));
# 4247 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashLookup2) xmlHashLookup2__internal_alias __attribute((visibility("hidden")));
# 4257 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashLookup3) xmlHashLookup3__internal_alias __attribute((visibility("hidden")));
# 4267 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashQLookup) xmlHashQLookup__internal_alias __attribute((visibility("hidden")));
# 4277 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashQLookup2) xmlHashQLookup2__internal_alias __attribute((visibility("hidden")));
# 4287 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashQLookup3) xmlHashQLookup3__internal_alias __attribute((visibility("hidden")));
# 4297 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashRemoveEntry) xmlHashRemoveEntry__internal_alias __attribute((visibility("hidden")));
# 4307 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashRemoveEntry2) xmlHashRemoveEntry2__internal_alias __attribute((visibility("hidden")));
# 4317 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashRemoveEntry3) xmlHashRemoveEntry3__internal_alias __attribute((visibility("hidden")));
# 4327 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashScan) xmlHashScan__internal_alias __attribute((visibility("hidden")));
# 4337 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashScan3) xmlHashScan3__internal_alias __attribute((visibility("hidden")));
# 4347 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashScanFull) xmlHashScanFull__internal_alias __attribute((visibility("hidden")));
# 4357 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashScanFull3) xmlHashScanFull3__internal_alias __attribute((visibility("hidden")));
# 4367 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashSize) xmlHashSize__internal_alias __attribute((visibility("hidden")));
# 4377 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashUpdateEntry) xmlHashUpdateEntry__internal_alias __attribute((visibility("hidden")));
# 4387 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashUpdateEntry2) xmlHashUpdateEntry2__internal_alias __attribute((visibility("hidden")));
# 4397 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashUpdateEntry3) xmlHashUpdateEntry3__internal_alias __attribute((visibility("hidden")));
# 4408 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIOFTPClose) xmlIOFTPClose__internal_alias __attribute((visibility("hidden")));
# 4420 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIOFTPMatch) xmlIOFTPMatch__internal_alias __attribute((visibility("hidden")));
# 4432 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIOFTPOpen) xmlIOFTPOpen__internal_alias __attribute((visibility("hidden")));
# 4444 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIOFTPRead) xmlIOFTPRead__internal_alias __attribute((visibility("hidden")));
# 4456 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIOHTTPClose) xmlIOHTTPClose__internal_alias __attribute((visibility("hidden")));
# 4468 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIOHTTPMatch) xmlIOHTTPMatch__internal_alias __attribute((visibility("hidden")));
# 4480 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIOHTTPOpen) xmlIOHTTPOpen__internal_alias __attribute((visibility("hidden")));
# 4492 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIOHTTPOpenW) xmlIOHTTPOpenW__internal_alias __attribute((visibility("hidden")));
# 4504 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIOHTTPRead) xmlIOHTTPRead__internal_alias __attribute((visibility("hidden")));
# 4516 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIOParseDTD) xmlIOParseDTD__internal_alias __attribute((visibility("hidden")));
# 4527 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlInitCharEncodingHandlers) xmlInitCharEncodingHandlers__internal_alias __attribute((visibility("hidden")));
# 4537 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlInitGlobals) xmlInitGlobals__internal_alias __attribute((visibility("hidden")));
# 4547 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlInitMemory) xmlInitMemory__internal_alias __attribute((visibility("hidden")));
# 4557 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlInitNodeInfoSeq) xmlInitNodeInfoSeq__internal_alias __attribute((visibility("hidden")));
# 4567 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlInitParser) xmlInitParser__internal_alias __attribute((visibility("hidden")));
# 4577 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlInitParserCtxt) xmlInitParserCtxt__internal_alias __attribute((visibility("hidden")));
# 4587 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlInitThreads) xmlInitThreads__internal_alias __attribute((visibility("hidden")));
# 4598 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlInitializeCatalog) xmlInitializeCatalog__internal_alias __attribute((visibility("hidden")));
# 4609 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlInitializeGlobalState) xmlInitializeGlobalState__internal_alias __attribute((visibility("hidden")));
# 4620 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlInitializePredefinedEntities) xmlInitializePredefinedEntities__internal_alias __attribute((visibility("hidden")));
# 4631 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsBaseChar) xmlIsBaseChar__internal_alias __attribute((visibility("hidden")));
# 4641 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsBlank) xmlIsBlank__internal_alias __attribute((visibility("hidden")));
# 4651 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsBlankNode) xmlIsBlankNode__internal_alias __attribute((visibility("hidden")));
# 4661 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsChar) xmlIsChar__internal_alias __attribute((visibility("hidden")));
# 4671 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsCombining) xmlIsCombining__internal_alias __attribute((visibility("hidden")));
# 4681 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsDigit) xmlIsDigit__internal_alias __attribute((visibility("hidden")));
# 4691 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsExtender) xmlIsExtender__internal_alias __attribute((visibility("hidden")));
# 4701 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsID) xmlIsID__internal_alias __attribute((visibility("hidden")));
# 4711 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsIdeographic) xmlIsIdeographic__internal_alias __attribute((visibility("hidden")));
# 4721 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsLetter) xmlIsLetter__internal_alias __attribute((visibility("hidden")));
# 4731 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsMainThread) xmlIsMainThread__internal_alias __attribute((visibility("hidden")));
# 4741 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsMixedElement) xmlIsMixedElement__internal_alias __attribute((visibility("hidden")));
# 4751 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsPubidChar) xmlIsPubidChar__internal_alias __attribute((visibility("hidden")));
# 4761 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsRef) xmlIsRef__internal_alias __attribute((visibility("hidden")));
# 4771 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsXHTML) xmlIsXHTML__internal_alias __attribute((visibility("hidden")));
# 4781 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlKeepBlanksDefault) xmlKeepBlanksDefault__internal_alias __attribute((visibility("hidden")));
# 4792 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlLastElementChild) xmlLastElementChild__internal_alias __attribute((visibility("hidden")));
# 4803 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlLineNumbersDefault) xmlLineNumbersDefault__internal_alias __attribute((visibility("hidden")));
# 4813 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlLinkGetData) xmlLinkGetData__internal_alias __attribute((visibility("hidden")));
# 4823 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListAppend) xmlListAppend__internal_alias __attribute((visibility("hidden")));
# 4833 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListClear) xmlListClear__internal_alias __attribute((visibility("hidden")));
# 4843 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListCopy) xmlListCopy__internal_alias __attribute((visibility("hidden")));
# 4853 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListCreate) xmlListCreate__internal_alias __attribute((visibility("hidden")));
# 4863 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListDelete) xmlListDelete__internal_alias __attribute((visibility("hidden")));
# 4873 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListDup) xmlListDup__internal_alias __attribute((visibility("hidden")));
# 4883 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListEmpty) xmlListEmpty__internal_alias __attribute((visibility("hidden")));
# 4893 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListEnd) xmlListEnd__internal_alias __attribute((visibility("hidden")));
# 4903 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListFront) xmlListFront__internal_alias __attribute((visibility("hidden")));
# 4913 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListInsert) xmlListInsert__internal_alias __attribute((visibility("hidden")));
# 4923 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListMerge) xmlListMerge__internal_alias __attribute((visibility("hidden")));
# 4933 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListPopBack) xmlListPopBack__internal_alias __attribute((visibility("hidden")));
# 4943 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListPopFront) xmlListPopFront__internal_alias __attribute((visibility("hidden")));
# 4953 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListPushBack) xmlListPushBack__internal_alias __attribute((visibility("hidden")));
# 4963 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListPushFront) xmlListPushFront__internal_alias __attribute((visibility("hidden")));
# 4973 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListRemoveAll) xmlListRemoveAll__internal_alias __attribute((visibility("hidden")));
# 4983 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListRemoveFirst) xmlListRemoveFirst__internal_alias __attribute((visibility("hidden")));
# 4993 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListRemoveLast) xmlListRemoveLast__internal_alias __attribute((visibility("hidden")));
# 5003 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListReverse) xmlListReverse__internal_alias __attribute((visibility("hidden")));
# 5013 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListReverseSearch) xmlListReverseSearch__internal_alias __attribute((visibility("hidden")));
# 5023 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListReverseWalk) xmlListReverseWalk__internal_alias __attribute((visibility("hidden")));
# 5033 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListSearch) xmlListSearch__internal_alias __attribute((visibility("hidden")));
# 5043 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListSize) xmlListSize__internal_alias __attribute((visibility("hidden")));
# 5053 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListSort) xmlListSort__internal_alias __attribute((visibility("hidden")));
# 5063 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListWalk) xmlListWalk__internal_alias __attribute((visibility("hidden")));
# 5074 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlLoadACatalog) xmlLoadACatalog__internal_alias __attribute((visibility("hidden")));
# 5086 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlLoadCatalog) xmlLoadCatalog__internal_alias __attribute((visibility("hidden")));
# 5098 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlLoadCatalogs) xmlLoadCatalogs__internal_alias __attribute((visibility("hidden")));
# 5109 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlLoadExternalEntity) xmlLoadExternalEntity__internal_alias __attribute((visibility("hidden")));
# 5120 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlLoadSGMLSuperCatalog) xmlLoadSGMLSuperCatalog__internal_alias __attribute((visibility("hidden")));
# 5131 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlLockLibrary) xmlLockLibrary__internal_alias __attribute((visibility("hidden")));
# 5142 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlLsCountNode) xmlLsCountNode__internal_alias __attribute((visibility("hidden")));
# 5154 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlLsOneNode) xmlLsOneNode__internal_alias __attribute((visibility("hidden")));
# 5165 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMallocAtomicLoc) xmlMallocAtomicLoc__internal_alias __attribute((visibility("hidden")));
# 5175 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMallocLoc) xmlMallocLoc__internal_alias __attribute((visibility("hidden")));
# 5185 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemBlocks) xmlMemBlocks__internal_alias __attribute((visibility("hidden")));
# 5195 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemDisplay) xmlMemDisplay__internal_alias __attribute((visibility("hidden")));
# 5205 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemDisplayLast) xmlMemDisplayLast__internal_alias __attribute((visibility("hidden")));
# 5215 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemFree) xmlMemFree__internal_alias __attribute((visibility("hidden")));
# 5225 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemGet) xmlMemGet__internal_alias __attribute((visibility("hidden")));
# 5235 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemMalloc) xmlMemMalloc__internal_alias __attribute((visibility("hidden")));
# 5245 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemRealloc) xmlMemRealloc__internal_alias __attribute((visibility("hidden")));
# 5255 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemSetup) xmlMemSetup__internal_alias __attribute((visibility("hidden")));
# 5265 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemShow) xmlMemShow__internal_alias __attribute((visibility("hidden")));
# 5275 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemStrdupLoc) xmlMemStrdupLoc__internal_alias __attribute((visibility("hidden")));
# 5285 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemUsed) xmlMemUsed__internal_alias __attribute((visibility("hidden")));
# 5295 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemoryDump) xmlMemoryDump__internal_alias __attribute((visibility("hidden")));
# 5305 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemoryStrdup) xmlMemoryStrdup__internal_alias __attribute((visibility("hidden")));
# 5316 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlModuleClose) xmlModuleClose__internal_alias __attribute((visibility("hidden")));
# 5328 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlModuleFree) xmlModuleFree__internal_alias __attribute((visibility("hidden")));
# 5340 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlModuleOpen) xmlModuleOpen__internal_alias __attribute((visibility("hidden")));
# 5352 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlModuleSymbol) xmlModuleSymbol__internal_alias __attribute((visibility("hidden")));
# 5363 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMutexLock) xmlMutexLock__internal_alias __attribute((visibility("hidden")));
# 5373 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMutexUnlock) xmlMutexUnlock__internal_alias __attribute((visibility("hidden")));
# 5384 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNamespaceParseNCName) xmlNamespaceParseNCName__internal_alias __attribute((visibility("hidden")));
# 5396 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNamespaceParseNSDef) xmlNamespaceParseNSDef__internal_alias __attribute((visibility("hidden")));
# 5408 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNamespaceParseQName) xmlNamespaceParseQName__internal_alias __attribute((visibility("hidden")));
# 5420 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPCheckResponse) xmlNanoFTPCheckResponse__internal_alias __attribute((visibility("hidden")));
# 5432 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPCleanup) xmlNanoFTPCleanup__internal_alias __attribute((visibility("hidden")));
# 5444 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPClose) xmlNanoFTPClose__internal_alias __attribute((visibility("hidden")));
# 5456 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPCloseConnection) xmlNanoFTPCloseConnection__internal_alias __attribute((visibility("hidden")));
# 5468 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPConnect) xmlNanoFTPConnect__internal_alias __attribute((visibility("hidden")));
# 5480 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPConnectTo) xmlNanoFTPConnectTo__internal_alias __attribute((visibility("hidden")));
# 5492 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPCwd) xmlNanoFTPCwd__internal_alias __attribute((visibility("hidden")));
# 5504 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPDele) xmlNanoFTPDele__internal_alias __attribute((visibility("hidden")));
# 5516 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPFreeCtxt) xmlNanoFTPFreeCtxt__internal_alias __attribute((visibility("hidden")));
# 5528 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPGet) xmlNanoFTPGet__internal_alias __attribute((visibility("hidden")));
# 5540 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPGetConnection) xmlNanoFTPGetConnection__internal_alias __attribute((visibility("hidden")));
# 5552 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPGetResponse) xmlNanoFTPGetResponse__internal_alias __attribute((visibility("hidden")));
# 5564 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPGetSocket) xmlNanoFTPGetSocket__internal_alias __attribute((visibility("hidden")));
# 5576 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPInit) xmlNanoFTPInit__internal_alias __attribute((visibility("hidden")));
# 5588 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPList) xmlNanoFTPList__internal_alias __attribute((visibility("hidden")));
# 5600 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPNewCtxt) xmlNanoFTPNewCtxt__internal_alias __attribute((visibility("hidden")));
# 5612 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPOpen) xmlNanoFTPOpen__internal_alias __attribute((visibility("hidden")));
# 5624 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPProxy) xmlNanoFTPProxy__internal_alias __attribute((visibility("hidden")));
# 5636 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPQuit) xmlNanoFTPQuit__internal_alias __attribute((visibility("hidden")));
# 5648 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPRead) xmlNanoFTPRead__internal_alias __attribute((visibility("hidden")));
# 5660 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPScanProxy) xmlNanoFTPScanProxy__internal_alias __attribute((visibility("hidden")));
# 5672 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPUpdateURL) xmlNanoFTPUpdateURL__internal_alias __attribute((visibility("hidden")));
# 5684 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPAuthHeader) xmlNanoHTTPAuthHeader__internal_alias __attribute((visibility("hidden")));
# 5696 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPCleanup) xmlNanoHTTPCleanup__internal_alias __attribute((visibility("hidden")));
# 5708 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPClose) xmlNanoHTTPClose__internal_alias __attribute((visibility("hidden")));
# 5720 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPContentLength) xmlNanoHTTPContentLength__internal_alias __attribute((visibility("hidden")));
# 5732 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPEncoding) xmlNanoHTTPEncoding__internal_alias __attribute((visibility("hidden")));
# 5744 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPFetch) xmlNanoHTTPFetch__internal_alias __attribute((visibility("hidden")));
# 5756 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPInit) xmlNanoHTTPInit__internal_alias __attribute((visibility("hidden")));
# 5768 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPMethod) xmlNanoHTTPMethod__internal_alias __attribute((visibility("hidden")));
# 5780 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPMethodRedir) xmlNanoHTTPMethodRedir__internal_alias __attribute((visibility("hidden")));
# 5792 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPMimeType) xmlNanoHTTPMimeType__internal_alias __attribute((visibility("hidden")));
# 5804 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPOpen) xmlNanoHTTPOpen__internal_alias __attribute((visibility("hidden")));
# 5816 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPOpenRedir) xmlNanoHTTPOpenRedir__internal_alias __attribute((visibility("hidden")));
# 5828 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPRead) xmlNanoHTTPRead__internal_alias __attribute((visibility("hidden")));
# 5840 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPRedir) xmlNanoHTTPRedir__internal_alias __attribute((visibility("hidden")));
# 5852 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPReturnCode) xmlNanoHTTPReturnCode__internal_alias __attribute((visibility("hidden")));
# 5864 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPSave) xmlNanoHTTPSave__internal_alias __attribute((visibility("hidden")));
# 5876 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPScanProxy) xmlNanoHTTPScanProxy__internal_alias __attribute((visibility("hidden")));
# 5888 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewAutomata) xmlNewAutomata__internal_alias __attribute((visibility("hidden")));
# 5899 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewCDataBlock) xmlNewCDataBlock__internal_alias __attribute((visibility("hidden")));
# 5910 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewCatalog) xmlNewCatalog__internal_alias __attribute((visibility("hidden")));
# 5921 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewCharEncodingHandler) xmlNewCharEncodingHandler__internal_alias __attribute((visibility("hidden")));
# 5931 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewCharRef) xmlNewCharRef__internal_alias __attribute((visibility("hidden")));
# 5942 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewChild) xmlNewChild__internal_alias __attribute((visibility("hidden")));
# 5953 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewComment) xmlNewComment__internal_alias __attribute((visibility("hidden")));
# 5963 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewDoc) xmlNewDoc__internal_alias __attribute((visibility("hidden")));
# 5973 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewDocComment) xmlNewDocComment__internal_alias __attribute((visibility("hidden")));
# 5983 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewDocElementContent) xmlNewDocElementContent__internal_alias __attribute((visibility("hidden")));
# 5994 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewDocFragment) xmlNewDocFragment__internal_alias __attribute((visibility("hidden")));
# 6005 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewDocNode) xmlNewDocNode__internal_alias __attribute((visibility("hidden")));
# 6015 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewDocNodeEatName) xmlNewDocNodeEatName__internal_alias __attribute((visibility("hidden")));
# 6025 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewDocPI) xmlNewDocPI__internal_alias __attribute((visibility("hidden")));
# 6035 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewDocProp) xmlNewDocProp__internal_alias __attribute((visibility("hidden")));
# 6046 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewDocRawNode) xmlNewDocRawNode__internal_alias __attribute((visibility("hidden")));
# 6057 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewDocText) xmlNewDocText__internal_alias __attribute((visibility("hidden")));
# 6067 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewDocTextLen) xmlNewDocTextLen__internal_alias __attribute((visibility("hidden")));
# 6077 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewDtd) xmlNewDtd__internal_alias __attribute((visibility("hidden")));
# 6087 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewElementContent) xmlNewElementContent__internal_alias __attribute((visibility("hidden")));
# 6097 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewEntity) xmlNewEntity__internal_alias __attribute((visibility("hidden")));
# 6107 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewEntityInputStream) xmlNewEntityInputStream__internal_alias __attribute((visibility("hidden")));
# 6118 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewGlobalNs) xmlNewGlobalNs__internal_alias __attribute((visibility("hidden")));
# 6129 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewIOInputStream) xmlNewIOInputStream__internal_alias __attribute((visibility("hidden")));
# 6139 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewInputFromFile) xmlNewInputFromFile__internal_alias __attribute((visibility("hidden")));
# 6149 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewInputStream) xmlNewInputStream__internal_alias __attribute((visibility("hidden")));
# 6159 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewMutex) xmlNewMutex__internal_alias __attribute((visibility("hidden")));
# 6169 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewNode) xmlNewNode__internal_alias __attribute((visibility("hidden")));
# 6179 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewNodeEatName) xmlNewNodeEatName__internal_alias __attribute((visibility("hidden")));
# 6189 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewNs) xmlNewNs__internal_alias __attribute((visibility("hidden")));
# 6199 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewNsProp) xmlNewNsProp__internal_alias __attribute((visibility("hidden")));
# 6209 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewNsPropEatName) xmlNewNsPropEatName__internal_alias __attribute((visibility("hidden")));
# 6219 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewPI) xmlNewPI__internal_alias __attribute((visibility("hidden")));
# 6229 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewParserCtxt) xmlNewParserCtxt__internal_alias __attribute((visibility("hidden")));
# 6240 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewProp) xmlNewProp__internal_alias __attribute((visibility("hidden")));
# 6251 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewRMutex) xmlNewRMutex__internal_alias __attribute((visibility("hidden")));
# 6261 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewReference) xmlNewReference__internal_alias __attribute((visibility("hidden")));
# 6271 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewStringInputStream) xmlNewStringInputStream__internal_alias __attribute((visibility("hidden")));
# 6281 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewText) xmlNewText__internal_alias __attribute((visibility("hidden")));
# 6292 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewTextChild) xmlNewTextChild__internal_alias __attribute((visibility("hidden")));
# 6303 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewTextLen) xmlNewTextLen__internal_alias __attribute((visibility("hidden")));
# 6314 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewTextReader) xmlNewTextReader__internal_alias __attribute((visibility("hidden")));
# 6326 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewTextReaderFilename) xmlNewTextReaderFilename__internal_alias __attribute((visibility("hidden")));
# 6338 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewTextWriter) xmlNewTextWriter__internal_alias __attribute((visibility("hidden")));
# 6350 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewTextWriterDoc) xmlNewTextWriterDoc__internal_alias __attribute((visibility("hidden")));
# 6362 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewTextWriterFilename) xmlNewTextWriterFilename__internal_alias __attribute((visibility("hidden")));
# 6374 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewTextWriterMemory) xmlNewTextWriterMemory__internal_alias __attribute((visibility("hidden")));
# 6386 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewTextWriterPushParser) xmlNewTextWriterPushParser__internal_alias __attribute((visibility("hidden")));
# 6398 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewTextWriterTree) xmlNewTextWriterTree__internal_alias __attribute((visibility("hidden")));
# 6410 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewValidCtxt) xmlNewValidCtxt__internal_alias __attribute((visibility("hidden")));
# 6421 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNextChar) xmlNextChar__internal_alias __attribute((visibility("hidden")));
# 6432 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNextElementSibling) xmlNextElementSibling__internal_alias __attribute((visibility("hidden")));
# 6443 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNoNetExternalEntityLoader) xmlNoNetExternalEntityLoader__internal_alias __attribute((visibility("hidden")));
# 6453 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeAddContent) xmlNodeAddContent__internal_alias __attribute((visibility("hidden")));
# 6463 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeAddContentLen) xmlNodeAddContentLen__internal_alias __attribute((visibility("hidden")));
# 6473 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeBufGetContent) xmlNodeBufGetContent__internal_alias __attribute((visibility("hidden")));
# 6484 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeDump) xmlNodeDump__internal_alias __attribute((visibility("hidden")));
# 6496 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeDumpOutput) xmlNodeDumpOutput__internal_alias __attribute((visibility("hidden")));
# 6507 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeGetBase) xmlNodeGetBase__internal_alias __attribute((visibility("hidden")));
# 6517 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeGetContent) xmlNodeGetContent__internal_alias __attribute((visibility("hidden")));
# 6527 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeGetLang) xmlNodeGetLang__internal_alias __attribute((visibility("hidden")));
# 6537 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeGetSpacePreserve) xmlNodeGetSpacePreserve__internal_alias __attribute((visibility("hidden")));
# 6547 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeIsText) xmlNodeIsText__internal_alias __attribute((visibility("hidden")));
# 6558 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeListGetRawString) xmlNodeListGetRawString__internal_alias __attribute((visibility("hidden")));
# 6569 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeListGetString) xmlNodeListGetString__internal_alias __attribute((visibility("hidden")));
# 6580 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeSetBase) xmlNodeSetBase__internal_alias __attribute((visibility("hidden")));
# 6591 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeSetContent) xmlNodeSetContent__internal_alias __attribute((visibility("hidden")));
# 6602 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeSetContentLen) xmlNodeSetContentLen__internal_alias __attribute((visibility("hidden")));
# 6614 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeSetLang) xmlNodeSetLang__internal_alias __attribute((visibility("hidden")));
# 6626 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeSetName) xmlNodeSetName__internal_alias __attribute((visibility("hidden")));
# 6638 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeSetSpacePreserve) xmlNodeSetSpacePreserve__internal_alias __attribute((visibility("hidden")));
# 6649 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNormalizeURIPath) xmlNormalizeURIPath__internal_alias __attribute((visibility("hidden")));
# 6659 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNormalizeWindowsPath) xmlNormalizeWindowsPath__internal_alias __attribute((visibility("hidden")));
# 6670 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlOutputBufferClose) xmlOutputBufferClose__internal_alias __attribute((visibility("hidden")));
# 6682 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlOutputBufferCreateBuffer) xmlOutputBufferCreateBuffer__internal_alias __attribute((visibility("hidden")));
# 6694 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlOutputBufferCreateFd) xmlOutputBufferCreateFd__internal_alias __attribute((visibility("hidden")));
# 6706 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlOutputBufferCreateFile) xmlOutputBufferCreateFile__internal_alias __attribute((visibility("hidden")));
# 6718 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlOutputBufferCreateFilename) xmlOutputBufferCreateFilename__internal_alias __attribute((visibility("hidden")));
# 6729 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlOutputBufferCreateFilenameDefault) xmlOutputBufferCreateFilenameDefault__internal_alias __attribute((visibility("hidden")));
# 6740 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlOutputBufferCreateIO) xmlOutputBufferCreateIO__internal_alias __attribute((visibility("hidden")));
# 6752 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlOutputBufferFlush) xmlOutputBufferFlush__internal_alias __attribute((visibility("hidden")));
# 6764 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlOutputBufferWrite) xmlOutputBufferWrite__internal_alias __attribute((visibility("hidden")));
# 6776 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlOutputBufferWriteEscape) xmlOutputBufferWriteEscape__internal_alias __attribute((visibility("hidden")));
# 6788 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlOutputBufferWriteString) xmlOutputBufferWriteString__internal_alias __attribute((visibility("hidden")));
# 6799 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseAttValue) xmlParseAttValue__internal_alias __attribute((visibility("hidden")));
# 6810 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseAttribute) xmlParseAttribute__internal_alias __attribute((visibility("hidden")));
# 6821 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseAttributeListDecl) xmlParseAttributeListDecl__internal_alias __attribute((visibility("hidden")));
# 6831 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseAttributeType) xmlParseAttributeType__internal_alias __attribute((visibility("hidden")));
# 6842 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseBalancedChunkMemory) xmlParseBalancedChunkMemory__internal_alias __attribute((visibility("hidden")));
# 6854 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseBalancedChunkMemoryRecover) xmlParseBalancedChunkMemoryRecover__internal_alias __attribute((visibility("hidden")));
# 6865 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseCDSect) xmlParseCDSect__internal_alias __attribute((visibility("hidden")));
# 6876 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseCatalogFile) xmlParseCatalogFile__internal_alias __attribute((visibility("hidden")));
# 6887 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseCharData) xmlParseCharData__internal_alias __attribute((visibility("hidden")));
# 6897 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseCharEncoding) xmlParseCharEncoding__internal_alias __attribute((visibility("hidden")));
# 6907 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseCharRef) xmlParseCharRef__internal_alias __attribute((visibility("hidden")));
# 6918 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseChunk) xmlParseChunk__internal_alias __attribute((visibility("hidden")));
# 6929 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseComment) xmlParseComment__internal_alias __attribute((visibility("hidden")));
# 6939 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseContent) xmlParseContent__internal_alias __attribute((visibility("hidden")));
# 6949 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseCtxtExternalEntity) xmlParseCtxtExternalEntity__internal_alias __attribute((visibility("hidden")));
# 6960 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseDTD) xmlParseDTD__internal_alias __attribute((visibility("hidden")));
# 6971 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseDefaultDecl) xmlParseDefaultDecl__internal_alias __attribute((visibility("hidden")));
# 6982 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseDoc) xmlParseDoc__internal_alias __attribute((visibility("hidden")));
# 6993 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseDocTypeDecl) xmlParseDocTypeDecl__internal_alias __attribute((visibility("hidden")));
# 7003 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseDocument) xmlParseDocument__internal_alias __attribute((visibility("hidden")));
# 7013 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseElement) xmlParseElement__internal_alias __attribute((visibility("hidden")));
# 7023 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseElementChildrenContentDecl) xmlParseElementChildrenContentDecl__internal_alias __attribute((visibility("hidden")));
# 7033 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseElementContentDecl) xmlParseElementContentDecl__internal_alias __attribute((visibility("hidden")));
# 7043 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseElementDecl) xmlParseElementDecl__internal_alias __attribute((visibility("hidden")));
# 7053 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseElementMixedContentDecl) xmlParseElementMixedContentDecl__internal_alias __attribute((visibility("hidden")));
# 7063 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEncName) xmlParseEncName__internal_alias __attribute((visibility("hidden")));
# 7073 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEncodingDecl) xmlParseEncodingDecl__internal_alias __attribute((visibility("hidden")));
# 7084 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEndTag) xmlParseEndTag__internal_alias __attribute((visibility("hidden")));
# 7096 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEntity) xmlParseEntity__internal_alias __attribute((visibility("hidden")));
# 7107 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEntityDecl) xmlParseEntityDecl__internal_alias __attribute((visibility("hidden")));
# 7117 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEntityRef) xmlParseEntityRef__internal_alias __attribute((visibility("hidden")));
# 7127 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEntityValue) xmlParseEntityValue__internal_alias __attribute((visibility("hidden")));
# 7137 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEnumeratedType) xmlParseEnumeratedType__internal_alias __attribute((visibility("hidden")));
# 7147 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEnumerationType) xmlParseEnumerationType__internal_alias __attribute((visibility("hidden")));
# 7157 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseExtParsedEnt) xmlParseExtParsedEnt__internal_alias __attribute((visibility("hidden")));
# 7168 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseExternalEntity) xmlParseExternalEntity__internal_alias __attribute((visibility("hidden")));
# 7179 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseExternalID) xmlParseExternalID__internal_alias __attribute((visibility("hidden")));
# 7189 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseExternalSubset) xmlParseExternalSubset__internal_alias __attribute((visibility("hidden")));
# 7200 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseFile) xmlParseFile__internal_alias __attribute((visibility("hidden")));
# 7211 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseInNodeContext) xmlParseInNodeContext__internal_alias __attribute((visibility("hidden")));
# 7221 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseMarkupDecl) xmlParseMarkupDecl__internal_alias __attribute((visibility("hidden")));
# 7232 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseMemory) xmlParseMemory__internal_alias __attribute((visibility("hidden")));
# 7243 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseMisc) xmlParseMisc__internal_alias __attribute((visibility("hidden")));
# 7253 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseName) xmlParseName__internal_alias __attribute((visibility("hidden")));
# 7264 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseNamespace) xmlParseNamespace__internal_alias __attribute((visibility("hidden")));
# 7275 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseNmtoken) xmlParseNmtoken__internal_alias __attribute((visibility("hidden")));
# 7285 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseNotationDecl) xmlParseNotationDecl__internal_alias __attribute((visibility("hidden")));
# 7295 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseNotationType) xmlParseNotationType__internal_alias __attribute((visibility("hidden")));
# 7305 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParsePEReference) xmlParsePEReference__internal_alias __attribute((visibility("hidden")));
# 7315 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParsePI) xmlParsePI__internal_alias __attribute((visibility("hidden")));
# 7325 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParsePITarget) xmlParsePITarget__internal_alias __attribute((visibility("hidden")));
# 7335 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParsePubidLiteral) xmlParsePubidLiteral__internal_alias __attribute((visibility("hidden")));
# 7346 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseQuotedString) xmlParseQuotedString__internal_alias __attribute((visibility("hidden")));
# 7357 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseReference) xmlParseReference__internal_alias __attribute((visibility("hidden")));
# 7367 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseSDDecl) xmlParseSDDecl__internal_alias __attribute((visibility("hidden")));
# 7378 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseStartTag) xmlParseStartTag__internal_alias __attribute((visibility("hidden")));
# 7389 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseSystemLiteral) xmlParseSystemLiteral__internal_alias __attribute((visibility("hidden")));
# 7399 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseTextDecl) xmlParseTextDecl__internal_alias __attribute((visibility("hidden")));
# 7409 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseURI) xmlParseURI__internal_alias __attribute((visibility("hidden")));
# 7419 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseURIRaw) xmlParseURIRaw__internal_alias __attribute((visibility("hidden")));
# 7429 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseURIReference) xmlParseURIReference__internal_alias __attribute((visibility("hidden")));
# 7439 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseVersionInfo) xmlParseVersionInfo__internal_alias __attribute((visibility("hidden")));
# 7449 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseVersionNum) xmlParseVersionNum__internal_alias __attribute((visibility("hidden")));
# 7459 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseXMLDecl) xmlParseXMLDecl__internal_alias __attribute((visibility("hidden")));
# 7469 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserAddNodeInfo) xmlParserAddNodeInfo__internal_alias __attribute((visibility("hidden")));
# 7479 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserError) xmlParserError__internal_alias __attribute((visibility("hidden")));
# 7489 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserFindNodeInfo) xmlParserFindNodeInfo__internal_alias __attribute((visibility("hidden")));
# 7499 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserFindNodeInfoIndex) xmlParserFindNodeInfoIndex__internal_alias __attribute((visibility("hidden")));
# 7509 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserGetDirectory) xmlParserGetDirectory__internal_alias __attribute((visibility("hidden")));
# 7519 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserHandlePEReference) xmlParserHandlePEReference__internal_alias __attribute((visibility("hidden")));
# 7530 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserHandleReference) xmlParserHandleReference__internal_alias __attribute((visibility("hidden")));
# 7541 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputBufferCreateFd) xmlParserInputBufferCreateFd__internal_alias __attribute((visibility("hidden")));
# 7551 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputBufferCreateFile) xmlParserInputBufferCreateFile__internal_alias __attribute((visibility("hidden")));
# 7561 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputBufferCreateFilename) xmlParserInputBufferCreateFilename__internal_alias __attribute((visibility("hidden")));
# 7571 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputBufferCreateFilenameDefault) xmlParserInputBufferCreateFilenameDefault__internal_alias __attribute((visibility("hidden")));
# 7581 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputBufferCreateIO) xmlParserInputBufferCreateIO__internal_alias __attribute((visibility("hidden")));
# 7591 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputBufferCreateMem) xmlParserInputBufferCreateMem__internal_alias __attribute((visibility("hidden")));
# 7601 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputBufferCreateStatic) xmlParserInputBufferCreateStatic__internal_alias __attribute((visibility("hidden")));
# 7611 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputBufferGrow) xmlParserInputBufferGrow__internal_alias __attribute((visibility("hidden")));
# 7621 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputBufferPush) xmlParserInputBufferPush__internal_alias __attribute((visibility("hidden")));
# 7631 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputBufferRead) xmlParserInputBufferRead__internal_alias __attribute((visibility("hidden")));
# 7641 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputGrow) xmlParserInputGrow__internal_alias __attribute((visibility("hidden")));
# 7651 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputRead) xmlParserInputRead__internal_alias __attribute((visibility("hidden")));
# 7661 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputShrink) xmlParserInputShrink__internal_alias __attribute((visibility("hidden")));
# 7671 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserPrintFileContext) xmlParserPrintFileContext__internal_alias __attribute((visibility("hidden")));
# 7681 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserPrintFileInfo) xmlParserPrintFileInfo__internal_alias __attribute((visibility("hidden")));
# 7691 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserValidityError) xmlParserValidityError__internal_alias __attribute((visibility("hidden")));
# 7701 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserValidityWarning) xmlParserValidityWarning__internal_alias __attribute((visibility("hidden")));
# 7711 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserWarning) xmlParserWarning__internal_alias __attribute((visibility("hidden")));
# 7721 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPathToURI) xmlPathToURI__internal_alias __attribute((visibility("hidden")));
# 7732 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPatternFromRoot) xmlPatternFromRoot__internal_alias __attribute((visibility("hidden")));
# 7744 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPatternGetStreamCtxt) xmlPatternGetStreamCtxt__internal_alias __attribute((visibility("hidden")));
# 7756 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPatternMatch) xmlPatternMatch__internal_alias __attribute((visibility("hidden")));
# 7768 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPatternMaxDepth) xmlPatternMaxDepth__internal_alias __attribute((visibility("hidden")));
# 7780 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPatternMinDepth) xmlPatternMinDepth__internal_alias __attribute((visibility("hidden")));
# 7792 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPatternStreamable) xmlPatternStreamable__internal_alias __attribute((visibility("hidden")));
# 7804 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPatterncompile) xmlPatterncompile__internal_alias __attribute((visibility("hidden")));
# 7815 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPedanticParserDefault) xmlPedanticParserDefault__internal_alias __attribute((visibility("hidden")));
# 7825 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPopInput) xmlPopInput__internal_alias __attribute((visibility("hidden")));
# 7835 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPopInputCallbacks) xmlPopInputCallbacks__internal_alias __attribute((visibility("hidden")));
# 7846 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPreviousElementSibling) xmlPreviousElementSibling__internal_alias __attribute((visibility("hidden")));
# 7857 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPrintURI) xmlPrintURI__internal_alias __attribute((visibility("hidden")));
# 7867 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPushInput) xmlPushInput__internal_alias __attribute((visibility("hidden")));
# 7877 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRMutexLock) xmlRMutexLock__internal_alias __attribute((visibility("hidden")));
# 7887 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRMutexUnlock) xmlRMutexUnlock__internal_alias __attribute((visibility("hidden")));
# 7897 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReadDoc) xmlReadDoc__internal_alias __attribute((visibility("hidden")));
# 7907 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReadFd) xmlReadFd__internal_alias __attribute((visibility("hidden")));
# 7917 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReadFile) xmlReadFile__internal_alias __attribute((visibility("hidden")));
# 7927 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReadIO) xmlReadIO__internal_alias __attribute((visibility("hidden")));
# 7937 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReadMemory) xmlReadMemory__internal_alias __attribute((visibility("hidden")));
# 7948 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReaderForDoc) xmlReaderForDoc__internal_alias __attribute((visibility("hidden")));
# 7960 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReaderForFd) xmlReaderForFd__internal_alias __attribute((visibility("hidden")));
# 7972 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReaderForFile) xmlReaderForFile__internal_alias __attribute((visibility("hidden")));
# 7984 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReaderForIO) xmlReaderForIO__internal_alias __attribute((visibility("hidden")));
# 7996 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReaderForMemory) xmlReaderForMemory__internal_alias __attribute((visibility("hidden")));
# 8008 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReaderNewDoc) xmlReaderNewDoc__internal_alias __attribute((visibility("hidden")));
# 8020 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReaderNewFd) xmlReaderNewFd__internal_alias __attribute((visibility("hidden")));
# 8032 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReaderNewFile) xmlReaderNewFile__internal_alias __attribute((visibility("hidden")));
# 8044 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReaderNewIO) xmlReaderNewIO__internal_alias __attribute((visibility("hidden")));
# 8056 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReaderNewMemory) xmlReaderNewMemory__internal_alias __attribute((visibility("hidden")));
# 8068 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReaderNewWalker) xmlReaderNewWalker__internal_alias __attribute((visibility("hidden")));
# 8080 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReaderWalker) xmlReaderWalker__internal_alias __attribute((visibility("hidden")));
# 8091 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReallocLoc) xmlReallocLoc__internal_alias __attribute((visibility("hidden")));
# 8102 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReconciliateNs) xmlReconciliateNs__internal_alias __attribute((visibility("hidden")));
# 8114 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRecoverDoc) xmlRecoverDoc__internal_alias __attribute((visibility("hidden")));
# 8126 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRecoverFile) xmlRecoverFile__internal_alias __attribute((visibility("hidden")));
# 8138 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRecoverMemory) xmlRecoverMemory__internal_alias __attribute((visibility("hidden")));
# 8150 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegExecErrInfo) xmlRegExecErrInfo__internal_alias __attribute((visibility("hidden")));
# 8162 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegExecNextValues) xmlRegExecNextValues__internal_alias __attribute((visibility("hidden")));
# 8174 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegExecPushString) xmlRegExecPushString__internal_alias __attribute((visibility("hidden")));
# 8186 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegExecPushString2) xmlRegExecPushString2__internal_alias __attribute((visibility("hidden")));
# 8198 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegFreeExecCtxt) xmlRegFreeExecCtxt__internal_alias __attribute((visibility("hidden")));
# 8210 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegFreeRegexp) xmlRegFreeRegexp__internal_alias __attribute((visibility("hidden")));
# 8222 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegNewExecCtxt) xmlRegNewExecCtxt__internal_alias __attribute((visibility("hidden")));
# 8234 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegexpCompile) xmlRegexpCompile__internal_alias __attribute((visibility("hidden")));
# 8246 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegexpExec) xmlRegexpExec__internal_alias __attribute((visibility("hidden")));
# 8258 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegexpIsDeterminist) xmlRegexpIsDeterminist__internal_alias __attribute((visibility("hidden")));
# 8270 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegexpPrint) xmlRegexpPrint__internal_alias __attribute((visibility("hidden")));
# 8281 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegisterCharEncodingHandler) xmlRegisterCharEncodingHandler__internal_alias __attribute((visibility("hidden")));
# 8291 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegisterDefaultInputCallbacks) xmlRegisterDefaultInputCallbacks__internal_alias __attribute((visibility("hidden")));
# 8302 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegisterDefaultOutputCallbacks) xmlRegisterDefaultOutputCallbacks__internal_alias __attribute((visibility("hidden")));
# 8314 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegisterHTTPPostCallbacks) xmlRegisterHTTPPostCallbacks__internal_alias __attribute((visibility("hidden")));
# 8325 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegisterInputCallbacks) xmlRegisterInputCallbacks__internal_alias __attribute((visibility("hidden")));
# 8335 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegisterNodeDefault) xmlRegisterNodeDefault__internal_alias __attribute((visibility("hidden")));
# 8346 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegisterOutputCallbacks) xmlRegisterOutputCallbacks__internal_alias __attribute((visibility("hidden")));
# 8358 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGCleanupTypes) xmlRelaxNGCleanupTypes__internal_alias __attribute((visibility("hidden")));
# 8370 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGDump) xmlRelaxNGDump__internal_alias __attribute((visibility("hidden")));
# 8382 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGDumpTree) xmlRelaxNGDumpTree__internal_alias __attribute((visibility("hidden")));
# 8394 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGFree) xmlRelaxNGFree__internal_alias __attribute((visibility("hidden")));
# 8406 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGFreeParserCtxt) xmlRelaxNGFreeParserCtxt__internal_alias __attribute((visibility("hidden")));
# 8418 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGFreeValidCtxt) xmlRelaxNGFreeValidCtxt__internal_alias __attribute((visibility("hidden")));
# 8430 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGGetParserErrors) xmlRelaxNGGetParserErrors__internal_alias __attribute((visibility("hidden")));
# 8442 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGGetValidErrors) xmlRelaxNGGetValidErrors__internal_alias __attribute((visibility("hidden")));
# 8454 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGInitTypes) xmlRelaxNGInitTypes__internal_alias __attribute((visibility("hidden")));
# 8466 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGNewDocParserCtxt) xmlRelaxNGNewDocParserCtxt__internal_alias __attribute((visibility("hidden")));
# 8478 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGNewMemParserCtxt) xmlRelaxNGNewMemParserCtxt__internal_alias __attribute((visibility("hidden")));
# 8490 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGNewParserCtxt) xmlRelaxNGNewParserCtxt__internal_alias __attribute((visibility("hidden")));
# 8502 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGNewValidCtxt) xmlRelaxNGNewValidCtxt__internal_alias __attribute((visibility("hidden")));
# 8514 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGParse) xmlRelaxNGParse__internal_alias __attribute((visibility("hidden")));
# 8526 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGSetParserErrors) xmlRelaxNGSetParserErrors__internal_alias __attribute((visibility("hidden")));
# 8538 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGSetParserStructuredErrors) xmlRelaxNGSetParserStructuredErrors__internal_alias __attribute((visibility("hidden")));
# 8550 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGSetValidErrors) xmlRelaxNGSetValidErrors__internal_alias __attribute((visibility("hidden")));
# 8562 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGSetValidStructuredErrors) xmlRelaxNGSetValidStructuredErrors__internal_alias __attribute((visibility("hidden")));
# 8574 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGValidateDoc) xmlRelaxNGValidateDoc__internal_alias __attribute((visibility("hidden")));
# 8586 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGValidateFullElement) xmlRelaxNGValidateFullElement__internal_alias __attribute((visibility("hidden")));
# 8598 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGValidatePopElement) xmlRelaxNGValidatePopElement__internal_alias __attribute((visibility("hidden")));
# 8610 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGValidatePushCData) xmlRelaxNGValidatePushCData__internal_alias __attribute((visibility("hidden")));
# 8622 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGValidatePushElement) xmlRelaxNGValidatePushElement__internal_alias __attribute((visibility("hidden")));
# 8634 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxParserSetFlag) xmlRelaxParserSetFlag__internal_alias __attribute((visibility("hidden")));
# 8645 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRemoveID) xmlRemoveID__internal_alias __attribute((visibility("hidden")));
# 8655 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRemoveProp) xmlRemoveProp__internal_alias __attribute((visibility("hidden")));
# 8665 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRemoveRef) xmlRemoveRef__internal_alias __attribute((visibility("hidden")));
# 8676 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReplaceNode) xmlReplaceNode__internal_alias __attribute((visibility("hidden")));
# 8687 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlResetError) xmlResetError__internal_alias __attribute((visibility("hidden")));
# 8697 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlResetLastError) xmlResetLastError__internal_alias __attribute((visibility("hidden")));
# 8707 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2AttributeDecl) xmlSAX2AttributeDecl__internal_alias __attribute((visibility("hidden")));
# 8717 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2CDataBlock) xmlSAX2CDataBlock__internal_alias __attribute((visibility("hidden")));
# 8727 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2Characters) xmlSAX2Characters__internal_alias __attribute((visibility("hidden")));
# 8737 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2Comment) xmlSAX2Comment__internal_alias __attribute((visibility("hidden")));
# 8747 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2ElementDecl) xmlSAX2ElementDecl__internal_alias __attribute((visibility("hidden")));
# 8757 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2EndDocument) xmlSAX2EndDocument__internal_alias __attribute((visibility("hidden")));
# 8768 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2EndElement) xmlSAX2EndElement__internal_alias __attribute((visibility("hidden")));
# 8779 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2EndElementNs) xmlSAX2EndElementNs__internal_alias __attribute((visibility("hidden")));
# 8789 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2EntityDecl) xmlSAX2EntityDecl__internal_alias __attribute((visibility("hidden")));
# 8799 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2ExternalSubset) xmlSAX2ExternalSubset__internal_alias __attribute((visibility("hidden")));
# 8809 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2GetColumnNumber) xmlSAX2GetColumnNumber__internal_alias __attribute((visibility("hidden")));
# 8819 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2GetEntity) xmlSAX2GetEntity__internal_alias __attribute((visibility("hidden")));
# 8829 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2GetLineNumber) xmlSAX2GetLineNumber__internal_alias __attribute((visibility("hidden")));
# 8839 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2GetParameterEntity) xmlSAX2GetParameterEntity__internal_alias __attribute((visibility("hidden")));
# 8849 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2GetPublicId) xmlSAX2GetPublicId__internal_alias __attribute((visibility("hidden")));
# 8859 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2GetSystemId) xmlSAX2GetSystemId__internal_alias __attribute((visibility("hidden")));
# 8869 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2HasExternalSubset) xmlSAX2HasExternalSubset__internal_alias __attribute((visibility("hidden")));
# 8879 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2HasInternalSubset) xmlSAX2HasInternalSubset__internal_alias __attribute((visibility("hidden")));
# 8889 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2IgnorableWhitespace) xmlSAX2IgnorableWhitespace__internal_alias __attribute((visibility("hidden")));
# 8899 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2InitDefaultSAXHandler) xmlSAX2InitDefaultSAXHandler__internal_alias __attribute((visibility("hidden")));
# 8910 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2InitDocbDefaultSAXHandler) xmlSAX2InitDocbDefaultSAXHandler__internal_alias __attribute((visibility("hidden")));
# 8922 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2InitHtmlDefaultSAXHandler) xmlSAX2InitHtmlDefaultSAXHandler__internal_alias __attribute((visibility("hidden")));
# 8933 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2InternalSubset) xmlSAX2InternalSubset__internal_alias __attribute((visibility("hidden")));
# 8943 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2IsStandalone) xmlSAX2IsStandalone__internal_alias __attribute((visibility("hidden")));
# 8953 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2NotationDecl) xmlSAX2NotationDecl__internal_alias __attribute((visibility("hidden")));
# 8963 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2ProcessingInstruction) xmlSAX2ProcessingInstruction__internal_alias __attribute((visibility("hidden")));
# 8973 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2Reference) xmlSAX2Reference__internal_alias __attribute((visibility("hidden")));
# 8983 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2ResolveEntity) xmlSAX2ResolveEntity__internal_alias __attribute((visibility("hidden")));
# 8993 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2SetDocumentLocator) xmlSAX2SetDocumentLocator__internal_alias __attribute((visibility("hidden")));
# 9003 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2StartDocument) xmlSAX2StartDocument__internal_alias __attribute((visibility("hidden")));
# 9014 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2StartElement) xmlSAX2StartElement__internal_alias __attribute((visibility("hidden")));
# 9025 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2StartElementNs) xmlSAX2StartElementNs__internal_alias __attribute((visibility("hidden")));
# 9035 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2UnparsedEntityDecl) xmlSAX2UnparsedEntityDecl__internal_alias __attribute((visibility("hidden")));
# 9046 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXDefaultVersion) xmlSAXDefaultVersion__internal_alias __attribute((visibility("hidden")));
# 9058 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXParseDTD) xmlSAXParseDTD__internal_alias __attribute((visibility("hidden")));
# 9070 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXParseDoc) xmlSAXParseDoc__internal_alias __attribute((visibility("hidden")));
# 9082 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXParseEntity) xmlSAXParseEntity__internal_alias __attribute((visibility("hidden")));
# 9094 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXParseFile) xmlSAXParseFile__internal_alias __attribute((visibility("hidden")));
# 9106 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXParseFileWithData) xmlSAXParseFileWithData__internal_alias __attribute((visibility("hidden")));
# 9118 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXParseMemory) xmlSAXParseMemory__internal_alias __attribute((visibility("hidden")));
# 9130 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXParseMemoryWithData) xmlSAXParseMemoryWithData__internal_alias __attribute((visibility("hidden")));
# 9142 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXUserParseFile) xmlSAXUserParseFile__internal_alias __attribute((visibility("hidden")));
# 9154 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXUserParseMemory) xmlSAXUserParseMemory__internal_alias __attribute((visibility("hidden")));
# 9165 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXVersion) xmlSAXVersion__internal_alias __attribute((visibility("hidden")));
# 9176 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveClose) xmlSaveClose__internal_alias __attribute((visibility("hidden")));
# 9188 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveDoc) xmlSaveDoc__internal_alias __attribute((visibility("hidden")));
# 9200 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveFile) xmlSaveFile__internal_alias __attribute((visibility("hidden")));
# 9212 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveFileEnc) xmlSaveFileEnc__internal_alias __attribute((visibility("hidden")));
# 9224 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveFileTo) xmlSaveFileTo__internal_alias __attribute((visibility("hidden")));
# 9236 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveFlush) xmlSaveFlush__internal_alias __attribute((visibility("hidden")));
# 9248 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveFormatFile) xmlSaveFormatFile__internal_alias __attribute((visibility("hidden")));
# 9260 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveFormatFileEnc) xmlSaveFormatFileEnc__internal_alias __attribute((visibility("hidden")));
# 9272 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveFormatFileTo) xmlSaveFormatFileTo__internal_alias __attribute((visibility("hidden")));
# 9284 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveSetAttrEscape) xmlSaveSetAttrEscape__internal_alias __attribute((visibility("hidden")));
# 9296 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveSetEscape) xmlSaveSetEscape__internal_alias __attribute((visibility("hidden")));
# 9308 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveToBuffer) xmlSaveToBuffer__internal_alias __attribute((visibility("hidden")));
# 9320 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveToFd) xmlSaveToFd__internal_alias __attribute((visibility("hidden")));
# 9332 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveToFilename) xmlSaveToFilename__internal_alias __attribute((visibility("hidden")));
# 9344 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveToIO) xmlSaveToIO__internal_alias __attribute((visibility("hidden")));
# 9356 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveTree) xmlSaveTree__internal_alias __attribute((visibility("hidden")));
# 9367 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveUri) xmlSaveUri__internal_alias __attribute((visibility("hidden")));
# 9378 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlScanName) xmlScanName__internal_alias __attribute((visibility("hidden")));
# 9390 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaCheckFacet) xmlSchemaCheckFacet__internal_alias __attribute((visibility("hidden")));
# 9402 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaCleanupTypes) xmlSchemaCleanupTypes__internal_alias __attribute((visibility("hidden")));
# 9414 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaCollapseString) xmlSchemaCollapseString__internal_alias __attribute((visibility("hidden")));
# 9426 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaCompareValues) xmlSchemaCompareValues__internal_alias __attribute((visibility("hidden")));
# 9438 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaCompareValuesWhtsp) xmlSchemaCompareValuesWhtsp__internal_alias __attribute((visibility("hidden")));
# 9450 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaCopyValue) xmlSchemaCopyValue__internal_alias __attribute((visibility("hidden")));
# 9462 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaDump) xmlSchemaDump__internal_alias __attribute((visibility("hidden")));
# 9474 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaFree) xmlSchemaFree__internal_alias __attribute((visibility("hidden")));
# 9486 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaFreeFacet) xmlSchemaFreeFacet__internal_alias __attribute((visibility("hidden")));
# 9498 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaFreeParserCtxt) xmlSchemaFreeParserCtxt__internal_alias __attribute((visibility("hidden")));
# 9510 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaFreeType) xmlSchemaFreeType__internal_alias __attribute((visibility("hidden")));
# 9522 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaFreeValidCtxt) xmlSchemaFreeValidCtxt__internal_alias __attribute((visibility("hidden")));
# 9534 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaFreeValue) xmlSchemaFreeValue__internal_alias __attribute((visibility("hidden")));
# 9546 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaFreeWildcard) xmlSchemaFreeWildcard__internal_alias __attribute((visibility("hidden")));
# 9558 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaGetBuiltInListSimpleTypeItemType) xmlSchemaGetBuiltInListSimpleTypeItemType__internal_alias __attribute((visibility("hidden")));
# 9570 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaGetBuiltInType) xmlSchemaGetBuiltInType__internal_alias __attribute((visibility("hidden")));
# 9582 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaGetCanonValue) xmlSchemaGetCanonValue__internal_alias __attribute((visibility("hidden")));
# 9594 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaGetCanonValueWhtsp) xmlSchemaGetCanonValueWhtsp__internal_alias __attribute((visibility("hidden")));
# 9606 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaGetFacetValueAsULong) xmlSchemaGetFacetValueAsULong__internal_alias __attribute((visibility("hidden")));
# 9618 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaGetParserErrors) xmlSchemaGetParserErrors__internal_alias __attribute((visibility("hidden")));
# 9630 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaGetPredefinedType) xmlSchemaGetPredefinedType__internal_alias __attribute((visibility("hidden")));
# 9642 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaGetValType) xmlSchemaGetValType__internal_alias __attribute((visibility("hidden")));
# 9654 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaGetValidErrors) xmlSchemaGetValidErrors__internal_alias __attribute((visibility("hidden")));
# 9666 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaInitTypes) xmlSchemaInitTypes__internal_alias __attribute((visibility("hidden")));
# 9678 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaIsBuiltInTypeFacet) xmlSchemaIsBuiltInTypeFacet__internal_alias __attribute((visibility("hidden")));
# 9690 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaIsValid) xmlSchemaIsValid__internal_alias __attribute((visibility("hidden")));
# 9702 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaNewDocParserCtxt) xmlSchemaNewDocParserCtxt__internal_alias __attribute((visibility("hidden")));
# 9714 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaNewFacet) xmlSchemaNewFacet__internal_alias __attribute((visibility("hidden")));
# 9726 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaNewMemParserCtxt) xmlSchemaNewMemParserCtxt__internal_alias __attribute((visibility("hidden")));
# 9738 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaNewNOTATIONValue) xmlSchemaNewNOTATIONValue__internal_alias __attribute((visibility("hidden")));
# 9750 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaNewParserCtxt) xmlSchemaNewParserCtxt__internal_alias __attribute((visibility("hidden")));
# 9762 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaNewQNameValue) xmlSchemaNewQNameValue__internal_alias __attribute((visibility("hidden")));
# 9774 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaNewStringValue) xmlSchemaNewStringValue__internal_alias __attribute((visibility("hidden")));
# 9786 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaNewValidCtxt) xmlSchemaNewValidCtxt__internal_alias __attribute((visibility("hidden")));
# 9798 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaParse) xmlSchemaParse__internal_alias __attribute((visibility("hidden")));
# 9810 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaSAXPlug) xmlSchemaSAXPlug__internal_alias __attribute((visibility("hidden")));
# 9822 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaSAXUnplug) xmlSchemaSAXUnplug__internal_alias __attribute((visibility("hidden")));
# 9834 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaSetParserErrors) xmlSchemaSetParserErrors__internal_alias __attribute((visibility("hidden")));
# 9846 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaSetParserStructuredErrors) xmlSchemaSetParserStructuredErrors__internal_alias __attribute((visibility("hidden")));
# 9858 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaSetValidErrors) xmlSchemaSetValidErrors__internal_alias __attribute((visibility("hidden")));
# 9870 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaSetValidOptions) xmlSchemaSetValidOptions__internal_alias __attribute((visibility("hidden")));
# 9882 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaSetValidStructuredErrors) xmlSchemaSetValidStructuredErrors__internal_alias __attribute((visibility("hidden")));
# 9894 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValPredefTypeNode) xmlSchemaValPredefTypeNode__internal_alias __attribute((visibility("hidden")));
# 9906 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValPredefTypeNodeNoNorm) xmlSchemaValPredefTypeNodeNoNorm__internal_alias __attribute((visibility("hidden")));
# 9918 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValidCtxtGetOptions) xmlSchemaValidCtxtGetOptions__internal_alias __attribute((visibility("hidden")));
# 9930 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValidCtxtGetParserCtxt) xmlSchemaValidCtxtGetParserCtxt__internal_alias __attribute((visibility("hidden")));
# 9942 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValidateDoc) xmlSchemaValidateDoc__internal_alias __attribute((visibility("hidden")));
# 9954 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValidateFacet) xmlSchemaValidateFacet__internal_alias __attribute((visibility("hidden")));
# 9966 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValidateFacetWhtsp) xmlSchemaValidateFacetWhtsp__internal_alias __attribute((visibility("hidden")));
# 9978 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValidateFile) xmlSchemaValidateFile__internal_alias __attribute((visibility("hidden")));
# 9990 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValidateLengthFacet) xmlSchemaValidateLengthFacet__internal_alias __attribute((visibility("hidden")));
# 10002 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValidateLengthFacetWhtsp) xmlSchemaValidateLengthFacetWhtsp__internal_alias __attribute((visibility("hidden")));
# 10014 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValidateListSimpleTypeFacet) xmlSchemaValidateListSimpleTypeFacet__internal_alias __attribute((visibility("hidden")));
# 10026 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValidateOneElement) xmlSchemaValidateOneElement__internal_alias __attribute((visibility("hidden")));
# 10038 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValidatePredefinedType) xmlSchemaValidatePredefinedType__internal_alias __attribute((visibility("hidden")));
# 10050 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValidateStream) xmlSchemaValidateStream__internal_alias __attribute((visibility("hidden")));
# 10062 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValueAppend) xmlSchemaValueAppend__internal_alias __attribute((visibility("hidden")));
# 10074 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValueGetAsBoolean) xmlSchemaValueGetAsBoolean__internal_alias __attribute((visibility("hidden")));
# 10086 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValueGetAsString) xmlSchemaValueGetAsString__internal_alias __attribute((visibility("hidden")));
# 10098 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValueGetNext) xmlSchemaValueGetNext__internal_alias __attribute((visibility("hidden")));
# 10110 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaWhiteSpaceReplace) xmlSchemaWhiteSpaceReplace__internal_alias __attribute((visibility("hidden")));
# 10122 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchematronFree) xmlSchematronFree__internal_alias __attribute((visibility("hidden")));
# 10134 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchematronFreeParserCtxt) xmlSchematronFreeParserCtxt__internal_alias __attribute((visibility("hidden")));
# 10146 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchematronFreeValidCtxt) xmlSchematronFreeValidCtxt__internal_alias __attribute((visibility("hidden")));
# 10158 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchematronNewDocParserCtxt) xmlSchematronNewDocParserCtxt__internal_alias __attribute((visibility("hidden")));
# 10170 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchematronNewMemParserCtxt) xmlSchematronNewMemParserCtxt__internal_alias __attribute((visibility("hidden")));
# 10182 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchematronNewParserCtxt) xmlSchematronNewParserCtxt__internal_alias __attribute((visibility("hidden")));
# 10194 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchematronNewValidCtxt) xmlSchematronNewValidCtxt__internal_alias __attribute((visibility("hidden")));
# 10206 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchematronParse) xmlSchematronParse__internal_alias __attribute((visibility("hidden")));
# 10218 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchematronSetValidStructuredErrors) xmlSchematronSetValidStructuredErrors__internal_alias __attribute((visibility("hidden")));
# 10230 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchematronValidateDoc) xmlSchematronValidateDoc__internal_alias __attribute((visibility("hidden")));
# 10241 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSearchNs) xmlSearchNs__internal_alias __attribute((visibility("hidden")));
# 10251 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSearchNsByHref) xmlSearchNsByHref__internal_alias __attribute((visibility("hidden")));
# 10261 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetBufferAllocationScheme) xmlSetBufferAllocationScheme__internal_alias __attribute((visibility("hidden")));
# 10271 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetCompressMode) xmlSetCompressMode__internal_alias __attribute((visibility("hidden")));
# 10281 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetDocCompressMode) xmlSetDocCompressMode__internal_alias __attribute((visibility("hidden")));
# 10292 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetEntityReferenceFunc) xmlSetEntityReferenceFunc__internal_alias __attribute((visibility("hidden")));
# 10303 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetExternalEntityLoader) xmlSetExternalEntityLoader__internal_alias __attribute((visibility("hidden")));
# 10314 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetFeature) xmlSetFeature__internal_alias __attribute((visibility("hidden")));
# 10325 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetGenericErrorFunc) xmlSetGenericErrorFunc__internal_alias __attribute((visibility("hidden")));
# 10335 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetListDoc) xmlSetListDoc__internal_alias __attribute((visibility("hidden")));
# 10345 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetNs) xmlSetNs__internal_alias __attribute((visibility("hidden")));
# 10356 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetNsProp) xmlSetNsProp__internal_alias __attribute((visibility("hidden")));
# 10368 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetProp) xmlSetProp__internal_alias __attribute((visibility("hidden")));
# 10379 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetStructuredErrorFunc) xmlSetStructuredErrorFunc__internal_alias __attribute((visibility("hidden")));
# 10389 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetTreeDoc) xmlSetTreeDoc__internal_alias __attribute((visibility("hidden")));
# 10400 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetupParserForBuffer) xmlSetupParserForBuffer__internal_alias __attribute((visibility("hidden")));
# 10412 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShell) xmlShell__internal_alias __attribute((visibility("hidden")));
# 10424 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellBase) xmlShellBase__internal_alias __attribute((visibility("hidden")));
# 10436 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellCat) xmlShellCat__internal_alias __attribute((visibility("hidden")));
# 10448 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellDir) xmlShellDir__internal_alias __attribute((visibility("hidden")));
# 10460 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellDu) xmlShellDu__internal_alias __attribute((visibility("hidden")));
# 10472 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellList) xmlShellList__internal_alias __attribute((visibility("hidden")));
# 10484 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellLoad) xmlShellLoad__internal_alias __attribute((visibility("hidden")));
# 10496 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellPrintNode) xmlShellPrintNode__internal_alias __attribute((visibility("hidden")));
# 10508 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellPrintXPathError) xmlShellPrintXPathError__internal_alias __attribute((visibility("hidden")));
# 10520 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellPrintXPathResult) xmlShellPrintXPathResult__internal_alias __attribute((visibility("hidden")));
# 10532 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellPwd) xmlShellPwd__internal_alias __attribute((visibility("hidden")));
# 10544 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellSave) xmlShellSave__internal_alias __attribute((visibility("hidden")));
# 10556 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellValidate) xmlShellValidate__internal_alias __attribute((visibility("hidden")));
# 10568 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellWrite) xmlShellWrite__internal_alias __attribute((visibility("hidden")));
# 10579 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSkipBlankChars) xmlSkipBlankChars__internal_alias __attribute((visibility("hidden")));
# 10589 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSnprintfElementContent) xmlSnprintfElementContent__internal_alias __attribute((visibility("hidden")));
# 10599 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSplitQName) xmlSplitQName__internal_alias __attribute((visibility("hidden")));
# 10609 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSplitQName2) xmlSplitQName2__internal_alias __attribute((visibility("hidden")));
# 10619 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSplitQName3) xmlSplitQName3__internal_alias __attribute((visibility("hidden")));
# 10630 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSprintfElementContent) xmlSprintfElementContent__internal_alias __attribute((visibility("hidden")));
# 10641 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStopParser) xmlStopParser__internal_alias __attribute((visibility("hidden")));
# 10651 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrEqual) xmlStrEqual__internal_alias __attribute((visibility("hidden")));
# 10661 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrPrintf) xmlStrPrintf__internal_alias __attribute((visibility("hidden")));
# 10671 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrQEqual) xmlStrQEqual__internal_alias __attribute((visibility("hidden")));
# 10681 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrVPrintf) xmlStrVPrintf__internal_alias __attribute((visibility("hidden")));
# 10691 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrcasecmp) xmlStrcasecmp__internal_alias __attribute((visibility("hidden")));
# 10701 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrcasestr) xmlStrcasestr__internal_alias __attribute((visibility("hidden")));
# 10711 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrcat) xmlStrcat__internal_alias __attribute((visibility("hidden")));
# 10721 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrchr) xmlStrchr__internal_alias __attribute((visibility("hidden")));
# 10731 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrcmp) xmlStrcmp__internal_alias __attribute((visibility("hidden")));
# 10741 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrdup) xmlStrdup__internal_alias __attribute((visibility("hidden")));
# 10752 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStreamPop) xmlStreamPop__internal_alias __attribute((visibility("hidden")));
# 10764 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStreamPush) xmlStreamPush__internal_alias __attribute((visibility("hidden")));
# 10776 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStreamPushAttr) xmlStreamPushAttr__internal_alias __attribute((visibility("hidden")));
# 10788 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStreamPushNode) xmlStreamPushNode__internal_alias __attribute((visibility("hidden")));
# 10800 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStreamWantsAnyNode) xmlStreamWantsAnyNode__internal_alias __attribute((visibility("hidden")));
# 10811 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStringCurrentChar) xmlStringCurrentChar__internal_alias __attribute((visibility("hidden")));
# 10821 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStringDecodeEntities) xmlStringDecodeEntities__internal_alias __attribute((visibility("hidden")));
# 10831 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStringGetNodeList) xmlStringGetNodeList__internal_alias __attribute((visibility("hidden")));
# 10841 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStringLenDecodeEntities) xmlStringLenDecodeEntities__internal_alias __attribute((visibility("hidden")));
# 10851 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStringLenGetNodeList) xmlStringLenGetNodeList__internal_alias __attribute((visibility("hidden")));
# 10861 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrlen) xmlStrlen__internal_alias __attribute((visibility("hidden")));
# 10871 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrncasecmp) xmlStrncasecmp__internal_alias __attribute((visibility("hidden")));
# 10881 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrncat) xmlStrncat__internal_alias __attribute((visibility("hidden")));
# 10891 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrncatNew) xmlStrncatNew__internal_alias __attribute((visibility("hidden")));
# 10901 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrncmp) xmlStrncmp__internal_alias __attribute((visibility("hidden")));
# 10911 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrndup) xmlStrndup__internal_alias __attribute((visibility("hidden")));
# 10921 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrstr) xmlStrstr__internal_alias __attribute((visibility("hidden")));
# 10931 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrsub) xmlStrsub__internal_alias __attribute((visibility("hidden")));
# 10941 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSubstituteEntitiesDefault) xmlSubstituteEntitiesDefault__internal_alias __attribute((visibility("hidden")));
# 10951 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSwitchEncoding) xmlSwitchEncoding__internal_alias __attribute((visibility("hidden")));
# 10961 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSwitchInputEncoding) xmlSwitchInputEncoding__internal_alias __attribute((visibility("hidden")));
# 10971 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSwitchToEncoding) xmlSwitchToEncoding__internal_alias __attribute((visibility("hidden")));
# 10981 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextConcat) xmlTextConcat__internal_alias __attribute((visibility("hidden")));
# 10991 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextMerge) xmlTextMerge__internal_alias __attribute((visibility("hidden")));
# 11002 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderAttributeCount) xmlTextReaderAttributeCount__internal_alias __attribute((visibility("hidden")));
# 11014 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderBaseUri) xmlTextReaderBaseUri__internal_alias __attribute((visibility("hidden")));
# 11026 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderByteConsumed) xmlTextReaderByteConsumed__internal_alias __attribute((visibility("hidden")));
# 11038 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderClose) xmlTextReaderClose__internal_alias __attribute((visibility("hidden")));
# 11050 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderConstBaseUri) xmlTextReaderConstBaseUri__internal_alias __attribute((visibility("hidden")));
# 11062 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderConstEncoding) xmlTextReaderConstEncoding__internal_alias __attribute((visibility("hidden")));
# 11074 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderConstLocalName) xmlTextReaderConstLocalName__internal_alias __attribute((visibility("hidden")));
# 11086 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderConstName) xmlTextReaderConstName__internal_alias __attribute((visibility("hidden")));
# 11098 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderConstNamespaceUri) xmlTextReaderConstNamespaceUri__internal_alias __attribute((visibility("hidden")));
# 11110 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderConstPrefix) xmlTextReaderConstPrefix__internal_alias __attribute((visibility("hidden")));
# 11122 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderConstString) xmlTextReaderConstString__internal_alias __attribute((visibility("hidden")));
# 11134 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderConstValue) xmlTextReaderConstValue__internal_alias __attribute((visibility("hidden")));
# 11146 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderConstXmlLang) xmlTextReaderConstXmlLang__internal_alias __attribute((visibility("hidden")));
# 11158 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderConstXmlVersion) xmlTextReaderConstXmlVersion__internal_alias __attribute((visibility("hidden")));
# 11170 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderCurrentDoc) xmlTextReaderCurrentDoc__internal_alias __attribute((visibility("hidden")));
# 11182 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderCurrentNode) xmlTextReaderCurrentNode__internal_alias __attribute((visibility("hidden")));
# 11194 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderDepth) xmlTextReaderDepth__internal_alias __attribute((visibility("hidden")));
# 11206 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderExpand) xmlTextReaderExpand__internal_alias __attribute((visibility("hidden")));
# 11218 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderGetAttribute) xmlTextReaderGetAttribute__internal_alias __attribute((visibility("hidden")));
# 11230 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderGetAttributeNo) xmlTextReaderGetAttributeNo__internal_alias __attribute((visibility("hidden")));
# 11242 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderGetAttributeNs) xmlTextReaderGetAttributeNs__internal_alias __attribute((visibility("hidden")));
# 11254 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderGetErrorHandler) xmlTextReaderGetErrorHandler__internal_alias __attribute((visibility("hidden")));
# 11266 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderGetParserColumnNumber) xmlTextReaderGetParserColumnNumber__internal_alias __attribute((visibility("hidden")));
# 11278 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderGetParserLineNumber) xmlTextReaderGetParserLineNumber__internal_alias __attribute((visibility("hidden")));
# 11290 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderGetParserProp) xmlTextReaderGetParserProp__internal_alias __attribute((visibility("hidden")));
# 11302 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderGetRemainder) xmlTextReaderGetRemainder__internal_alias __attribute((visibility("hidden")));
# 11314 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderHasAttributes) xmlTextReaderHasAttributes__internal_alias __attribute((visibility("hidden")));
# 11326 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderHasValue) xmlTextReaderHasValue__internal_alias __attribute((visibility("hidden")));
# 11338 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderIsDefault) xmlTextReaderIsDefault__internal_alias __attribute((visibility("hidden")));
# 11350 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderIsEmptyElement) xmlTextReaderIsEmptyElement__internal_alias __attribute((visibility("hidden")));
# 11362 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderIsNamespaceDecl) xmlTextReaderIsNamespaceDecl__internal_alias __attribute((visibility("hidden")));
# 11374 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderIsValid) xmlTextReaderIsValid__internal_alias __attribute((visibility("hidden")));
# 11386 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderLocalName) xmlTextReaderLocalName__internal_alias __attribute((visibility("hidden")));
# 11398 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderLocatorBaseURI) xmlTextReaderLocatorBaseURI__internal_alias __attribute((visibility("hidden")));
# 11410 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderLocatorLineNumber) xmlTextReaderLocatorLineNumber__internal_alias __attribute((visibility("hidden")));
# 11422 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderLookupNamespace) xmlTextReaderLookupNamespace__internal_alias __attribute((visibility("hidden")));
# 11434 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderMoveToAttribute) xmlTextReaderMoveToAttribute__internal_alias __attribute((visibility("hidden")));
# 11446 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderMoveToAttributeNo) xmlTextReaderMoveToAttributeNo__internal_alias __attribute((visibility("hidden")));
# 11458 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderMoveToAttributeNs) xmlTextReaderMoveToAttributeNs__internal_alias __attribute((visibility("hidden")));
# 11470 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderMoveToElement) xmlTextReaderMoveToElement__internal_alias __attribute((visibility("hidden")));
# 11482 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderMoveToFirstAttribute) xmlTextReaderMoveToFirstAttribute__internal_alias __attribute((visibility("hidden")));
# 11494 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderMoveToNextAttribute) xmlTextReaderMoveToNextAttribute__internal_alias __attribute((visibility("hidden")));
# 11506 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderName) xmlTextReaderName__internal_alias __attribute((visibility("hidden")));
# 11518 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderNamespaceUri) xmlTextReaderNamespaceUri__internal_alias __attribute((visibility("hidden")));
# 11530 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderNext) xmlTextReaderNext__internal_alias __attribute((visibility("hidden")));
# 11542 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderNextSibling) xmlTextReaderNextSibling__internal_alias __attribute((visibility("hidden")));
# 11554 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderNodeType) xmlTextReaderNodeType__internal_alias __attribute((visibility("hidden")));
# 11566 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderNormalization) xmlTextReaderNormalization__internal_alias __attribute((visibility("hidden")));
# 11578 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderPrefix) xmlTextReaderPrefix__internal_alias __attribute((visibility("hidden")));
# 11590 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderPreserve) xmlTextReaderPreserve__internal_alias __attribute((visibility("hidden")));
# 11602 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderPreservePattern) xmlTextReaderPreservePattern__internal_alias __attribute((visibility("hidden")));
# 11614 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderQuoteChar) xmlTextReaderQuoteChar__internal_alias __attribute((visibility("hidden")));
# 11626 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderRead) xmlTextReaderRead__internal_alias __attribute((visibility("hidden")));
# 11638 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderReadAttributeValue) xmlTextReaderReadAttributeValue__internal_alias __attribute((visibility("hidden")));
# 11650 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderReadInnerXml) xmlTextReaderReadInnerXml__internal_alias __attribute((visibility("hidden")));
# 11662 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderReadOuterXml) xmlTextReaderReadOuterXml__internal_alias __attribute((visibility("hidden")));
# 11674 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderReadState) xmlTextReaderReadState__internal_alias __attribute((visibility("hidden")));
# 11686 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderReadString) xmlTextReaderReadString__internal_alias __attribute((visibility("hidden")));
# 11698 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderRelaxNGSetSchema) xmlTextReaderRelaxNGSetSchema__internal_alias __attribute((visibility("hidden")));
# 11710 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderRelaxNGValidate) xmlTextReaderRelaxNGValidate__internal_alias __attribute((visibility("hidden")));
# 11722 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderSchemaValidate) xmlTextReaderSchemaValidate__internal_alias __attribute((visibility("hidden")));
# 11734 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderSchemaValidateCtxt) xmlTextReaderSchemaValidateCtxt__internal_alias __attribute((visibility("hidden")));
# 11746 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderSetErrorHandler) xmlTextReaderSetErrorHandler__internal_alias __attribute((visibility("hidden")));
# 11758 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderSetParserProp) xmlTextReaderSetParserProp__internal_alias __attribute((visibility("hidden")));
# 11770 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderSetSchema) xmlTextReaderSetSchema__internal_alias __attribute((visibility("hidden")));
# 11782 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderSetStructuredErrorHandler) xmlTextReaderSetStructuredErrorHandler__internal_alias __attribute((visibility("hidden")));
# 11794 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderSetup) xmlTextReaderSetup__internal_alias __attribute((visibility("hidden")));
# 11806 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderStandalone) xmlTextReaderStandalone__internal_alias __attribute((visibility("hidden")));
# 11818 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderValue) xmlTextReaderValue__internal_alias __attribute((visibility("hidden")));
# 11830 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderXmlLang) xmlTextReaderXmlLang__internal_alias __attribute((visibility("hidden")));
# 11842 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterEndAttribute) xmlTextWriterEndAttribute__internal_alias __attribute((visibility("hidden")));
# 11854 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterEndCDATA) xmlTextWriterEndCDATA__internal_alias __attribute((visibility("hidden")));
# 11866 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterEndComment) xmlTextWriterEndComment__internal_alias __attribute((visibility("hidden")));
# 11878 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterEndDTD) xmlTextWriterEndDTD__internal_alias __attribute((visibility("hidden")));
# 11890 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterEndDTDAttlist) xmlTextWriterEndDTDAttlist__internal_alias __attribute((visibility("hidden")));
# 11902 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterEndDTDElement) xmlTextWriterEndDTDElement__internal_alias __attribute((visibility("hidden")));
# 11914 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterEndDTDEntity) xmlTextWriterEndDTDEntity__internal_alias __attribute((visibility("hidden")));
# 11926 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterEndDocument) xmlTextWriterEndDocument__internal_alias __attribute((visibility("hidden")));
# 11938 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterEndElement) xmlTextWriterEndElement__internal_alias __attribute((visibility("hidden")));
# 11950 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterEndPI) xmlTextWriterEndPI__internal_alias __attribute((visibility("hidden")));
# 11962 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterFlush) xmlTextWriterFlush__internal_alias __attribute((visibility("hidden")));
# 11974 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterFullEndElement) xmlTextWriterFullEndElement__internal_alias __attribute((visibility("hidden")));
# 11986 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterSetIndent) xmlTextWriterSetIndent__internal_alias __attribute((visibility("hidden")));
# 11998 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterSetIndentString) xmlTextWriterSetIndentString__internal_alias __attribute((visibility("hidden")));
# 12010 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterStartAttribute) xmlTextWriterStartAttribute__internal_alias __attribute((visibility("hidden")));
# 12022 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterStartAttributeNS) xmlTextWriterStartAttributeNS__internal_alias __attribute((visibility("hidden")));
# 12034 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterStartCDATA) xmlTextWriterStartCDATA__internal_alias __attribute((visibility("hidden")));
# 12046 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterStartComment) xmlTextWriterStartComment__internal_alias __attribute((visibility("hidden")));
# 12058 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterStartDTD) xmlTextWriterStartDTD__internal_alias __attribute((visibility("hidden")));
# 12070 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterStartDTDAttlist) xmlTextWriterStartDTDAttlist__internal_alias __attribute((visibility("hidden")));
# 12082 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterStartDTDElement) xmlTextWriterStartDTDElement__internal_alias __attribute((visibility("hidden")));
# 12094 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterStartDTDEntity) xmlTextWriterStartDTDEntity__internal_alias __attribute((visibility("hidden")));
# 12106 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterStartDocument) xmlTextWriterStartDocument__internal_alias __attribute((visibility("hidden")));
# 12118 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterStartElement) xmlTextWriterStartElement__internal_alias __attribute((visibility("hidden")));
# 12130 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterStartElementNS) xmlTextWriterStartElementNS__internal_alias __attribute((visibility("hidden")));
# 12142 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterStartPI) xmlTextWriterStartPI__internal_alias __attribute((visibility("hidden")));
# 12154 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteAttribute) xmlTextWriterWriteAttribute__internal_alias __attribute((visibility("hidden")));
# 12166 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteAttributeNS) xmlTextWriterWriteAttributeNS__internal_alias __attribute((visibility("hidden")));
# 12178 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteBase64) xmlTextWriterWriteBase64__internal_alias __attribute((visibility("hidden")));
# 12190 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteBinHex) xmlTextWriterWriteBinHex__internal_alias __attribute((visibility("hidden")));
# 12202 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteCDATA) xmlTextWriterWriteCDATA__internal_alias __attribute((visibility("hidden")));
# 12214 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteComment) xmlTextWriterWriteComment__internal_alias __attribute((visibility("hidden")));
# 12226 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteDTD) xmlTextWriterWriteDTD__internal_alias __attribute((visibility("hidden")));
# 12238 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteDTDAttlist) xmlTextWriterWriteDTDAttlist__internal_alias __attribute((visibility("hidden")));
# 12250 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteDTDElement) xmlTextWriterWriteDTDElement__internal_alias __attribute((visibility("hidden")));
# 12262 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteDTDEntity) xmlTextWriterWriteDTDEntity__internal_alias __attribute((visibility("hidden")));
# 12274 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteDTDExternalEntity) xmlTextWriterWriteDTDExternalEntity__internal_alias __attribute((visibility("hidden")));
# 12286 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteDTDExternalEntityContents) xmlTextWriterWriteDTDExternalEntityContents__internal_alias __attribute((visibility("hidden")));
# 12298 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteDTDInternalEntity) xmlTextWriterWriteDTDInternalEntity__internal_alias __attribute((visibility("hidden")));
# 12310 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteDTDNotation) xmlTextWriterWriteDTDNotation__internal_alias __attribute((visibility("hidden")));
# 12322 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteElement) xmlTextWriterWriteElement__internal_alias __attribute((visibility("hidden")));
# 12334 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteElementNS) xmlTextWriterWriteElementNS__internal_alias __attribute((visibility("hidden")));
# 12346 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatAttribute) xmlTextWriterWriteFormatAttribute__internal_alias __attribute((visibility("hidden")));
# 12358 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatAttributeNS) xmlTextWriterWriteFormatAttributeNS__internal_alias __attribute((visibility("hidden")));
# 12370 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatCDATA) xmlTextWriterWriteFormatCDATA__internal_alias __attribute((visibility("hidden")));
# 12382 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatComment) xmlTextWriterWriteFormatComment__internal_alias __attribute((visibility("hidden")));
# 12394 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatDTD) xmlTextWriterWriteFormatDTD__internal_alias __attribute((visibility("hidden")));
# 12406 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatDTDAttlist) xmlTextWriterWriteFormatDTDAttlist__internal_alias __attribute((visibility("hidden")));
# 12418 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatDTDElement) xmlTextWriterWriteFormatDTDElement__internal_alias __attribute((visibility("hidden")));
# 12430 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatDTDInternalEntity) xmlTextWriterWriteFormatDTDInternalEntity__internal_alias __attribute((visibility("hidden")));
# 12442 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatElement) xmlTextWriterWriteFormatElement__internal_alias __attribute((visibility("hidden")));
# 12454 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatElementNS) xmlTextWriterWriteFormatElementNS__internal_alias __attribute((visibility("hidden")));
# 12466 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatPI) xmlTextWriterWriteFormatPI__internal_alias __attribute((visibility("hidden")));
# 12478 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatRaw) xmlTextWriterWriteFormatRaw__internal_alias __attribute((visibility("hidden")));
# 12490 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatString) xmlTextWriterWriteFormatString__internal_alias __attribute((visibility("hidden")));
# 12502 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWritePI) xmlTextWriterWritePI__internal_alias __attribute((visibility("hidden")));
# 12514 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteRaw) xmlTextWriterWriteRaw__internal_alias __attribute((visibility("hidden")));
# 12526 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteRawLen) xmlTextWriterWriteRawLen__internal_alias __attribute((visibility("hidden")));
# 12538 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteString) xmlTextWriterWriteString__internal_alias __attribute((visibility("hidden")));
# 12550 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatAttribute) xmlTextWriterWriteVFormatAttribute__internal_alias __attribute((visibility("hidden")));
# 12562 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatAttributeNS) xmlTextWriterWriteVFormatAttributeNS__internal_alias __attribute((visibility("hidden")));
# 12574 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatCDATA) xmlTextWriterWriteVFormatCDATA__internal_alias __attribute((visibility("hidden")));
# 12586 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatComment) xmlTextWriterWriteVFormatComment__internal_alias __attribute((visibility("hidden")));
# 12598 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatDTD) xmlTextWriterWriteVFormatDTD__internal_alias __attribute((visibility("hidden")));
# 12610 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatDTDAttlist) xmlTextWriterWriteVFormatDTDAttlist__internal_alias __attribute((visibility("hidden")));
# 12622 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatDTDElement) xmlTextWriterWriteVFormatDTDElement__internal_alias __attribute((visibility("hidden")));
# 12634 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatDTDInternalEntity) xmlTextWriterWriteVFormatDTDInternalEntity__internal_alias __attribute((visibility("hidden")));
# 12646 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatElement) xmlTextWriterWriteVFormatElement__internal_alias __attribute((visibility("hidden")));
# 12658 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatElementNS) xmlTextWriterWriteVFormatElementNS__internal_alias __attribute((visibility("hidden")));
# 12670 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatPI) xmlTextWriterWriteVFormatPI__internal_alias __attribute((visibility("hidden")));
# 12682 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatRaw) xmlTextWriterWriteVFormatRaw__internal_alias __attribute((visibility("hidden")));
# 12694 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatString) xmlTextWriterWriteVFormatString__internal_alias __attribute((visibility("hidden")));
# 12705 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefBufferAllocScheme) xmlThrDefBufferAllocScheme__internal_alias __attribute((visibility("hidden")));
# 12715 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefDefaultBufferSize) xmlThrDefDefaultBufferSize__internal_alias __attribute((visibility("hidden")));
# 12725 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefDeregisterNodeDefault) xmlThrDefDeregisterNodeDefault__internal_alias __attribute((visibility("hidden")));
# 12735 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefDoValidityCheckingDefaultValue) xmlThrDefDoValidityCheckingDefaultValue__internal_alias __attribute((visibility("hidden")));
# 12745 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefGetWarningsDefaultValue) xmlThrDefGetWarningsDefaultValue__internal_alias __attribute((visibility("hidden")));
# 12755 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefIndentTreeOutput) xmlThrDefIndentTreeOutput__internal_alias __attribute((visibility("hidden")));
# 12765 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefKeepBlanksDefaultValue) xmlThrDefKeepBlanksDefaultValue__internal_alias __attribute((visibility("hidden")));
# 12775 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefLineNumbersDefaultValue) xmlThrDefLineNumbersDefaultValue__internal_alias __attribute((visibility("hidden")));
# 12785 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefLoadExtDtdDefaultValue) xmlThrDefLoadExtDtdDefaultValue__internal_alias __attribute((visibility("hidden")));
# 12795 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefOutputBufferCreateFilenameDefault) xmlThrDefOutputBufferCreateFilenameDefault__internal_alias __attribute((visibility("hidden")));
# 12805 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefParserDebugEntities) xmlThrDefParserDebugEntities__internal_alias __attribute((visibility("hidden")));
# 12815 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefParserInputBufferCreateFilenameDefault) xmlThrDefParserInputBufferCreateFilenameDefault__internal_alias __attribute((visibility("hidden")));
# 12825 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefPedanticParserDefaultValue) xmlThrDefPedanticParserDefaultValue__internal_alias __attribute((visibility("hidden")));
# 12835 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefRegisterNodeDefault) xmlThrDefRegisterNodeDefault__internal_alias __attribute((visibility("hidden")));
# 12845 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefSaveNoEmptyTags) xmlThrDefSaveNoEmptyTags__internal_alias __attribute((visibility("hidden")));
# 12855 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefSetGenericErrorFunc) xmlThrDefSetGenericErrorFunc__internal_alias __attribute((visibility("hidden")));
# 12865 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefSetStructuredErrorFunc) xmlThrDefSetStructuredErrorFunc__internal_alias __attribute((visibility("hidden")));
# 12875 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefSubstituteEntitiesDefaultValue) xmlThrDefSubstituteEntitiesDefaultValue__internal_alias __attribute((visibility("hidden")));
# 12885 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefTreeIndentString) xmlThrDefTreeIndentString__internal_alias __attribute((visibility("hidden")));
# 12896 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsAegeanNumbers) xmlUCSIsAegeanNumbers__internal_alias __attribute((visibility("hidden")));
# 12908 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsAlphabeticPresentationForms) xmlUCSIsAlphabeticPresentationForms__internal_alias __attribute((visibility("hidden")));
# 12920 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsArabic) xmlUCSIsArabic__internal_alias __attribute((visibility("hidden")));
# 12932 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsArabicPresentationFormsA) xmlUCSIsArabicPresentationFormsA__internal_alias __attribute((visibility("hidden")));
# 12944 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsArabicPresentationFormsB) xmlUCSIsArabicPresentationFormsB__internal_alias __attribute((visibility("hidden")));
# 12956 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsArmenian) xmlUCSIsArmenian__internal_alias __attribute((visibility("hidden")));
# 12968 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsArrows) xmlUCSIsArrows__internal_alias __attribute((visibility("hidden")));
# 12980 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsBasicLatin) xmlUCSIsBasicLatin__internal_alias __attribute((visibility("hidden")));
# 12992 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsBengali) xmlUCSIsBengali__internal_alias __attribute((visibility("hidden")));
# 13004 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsBlock) xmlUCSIsBlock__internal_alias __attribute((visibility("hidden")));
# 13016 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsBlockElements) xmlUCSIsBlockElements__internal_alias __attribute((visibility("hidden")));
# 13028 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsBopomofo) xmlUCSIsBopomofo__internal_alias __attribute((visibility("hidden")));
# 13040 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsBopomofoExtended) xmlUCSIsBopomofoExtended__internal_alias __attribute((visibility("hidden")));
# 13052 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsBoxDrawing) xmlUCSIsBoxDrawing__internal_alias __attribute((visibility("hidden")));
# 13064 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsBraillePatterns) xmlUCSIsBraillePatterns__internal_alias __attribute((visibility("hidden")));
# 13076 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsBuhid) xmlUCSIsBuhid__internal_alias __attribute((visibility("hidden")));
# 13088 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsByzantineMusicalSymbols) xmlUCSIsByzantineMusicalSymbols__internal_alias __attribute((visibility("hidden")));
# 13100 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCJKCompatibility) xmlUCSIsCJKCompatibility__internal_alias __attribute((visibility("hidden")));
# 13112 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCJKCompatibilityForms) xmlUCSIsCJKCompatibilityForms__internal_alias __attribute((visibility("hidden")));
# 13124 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCJKCompatibilityIdeographs) xmlUCSIsCJKCompatibilityIdeographs__internal_alias __attribute((visibility("hidden")));
# 13136 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCJKCompatibilityIdeographsSupplement) xmlUCSIsCJKCompatibilityIdeographsSupplement__internal_alias __attribute((visibility("hidden")));
# 13148 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCJKRadicalsSupplement) xmlUCSIsCJKRadicalsSupplement__internal_alias __attribute((visibility("hidden")));
# 13160 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCJKSymbolsandPunctuation) xmlUCSIsCJKSymbolsandPunctuation__internal_alias __attribute((visibility("hidden")));
# 13172 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCJKUnifiedIdeographs) xmlUCSIsCJKUnifiedIdeographs__internal_alias __attribute((visibility("hidden")));
# 13184 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCJKUnifiedIdeographsExtensionA) xmlUCSIsCJKUnifiedIdeographsExtensionA__internal_alias __attribute((visibility("hidden")));
# 13196 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCJKUnifiedIdeographsExtensionB) xmlUCSIsCJKUnifiedIdeographsExtensionB__internal_alias __attribute((visibility("hidden")));
# 13208 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCat) xmlUCSIsCat__internal_alias __attribute((visibility("hidden")));
# 13220 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatC) xmlUCSIsCatC__internal_alias __attribute((visibility("hidden")));
# 13232 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatCc) xmlUCSIsCatCc__internal_alias __attribute((visibility("hidden")));
# 13244 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatCf) xmlUCSIsCatCf__internal_alias __attribute((visibility("hidden")));
# 13256 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatCo) xmlUCSIsCatCo__internal_alias __attribute((visibility("hidden")));
# 13268 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatCs) xmlUCSIsCatCs__internal_alias __attribute((visibility("hidden")));
# 13280 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatL) xmlUCSIsCatL__internal_alias __attribute((visibility("hidden")));
# 13292 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatLl) xmlUCSIsCatLl__internal_alias __attribute((visibility("hidden")));
# 13304 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatLm) xmlUCSIsCatLm__internal_alias __attribute((visibility("hidden")));
# 13316 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatLo) xmlUCSIsCatLo__internal_alias __attribute((visibility("hidden")));
# 13328 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatLt) xmlUCSIsCatLt__internal_alias __attribute((visibility("hidden")));
# 13340 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatLu) xmlUCSIsCatLu__internal_alias __attribute((visibility("hidden")));
# 13352 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatM) xmlUCSIsCatM__internal_alias __attribute((visibility("hidden")));
# 13364 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatMc) xmlUCSIsCatMc__internal_alias __attribute((visibility("hidden")));
# 13376 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatMe) xmlUCSIsCatMe__internal_alias __attribute((visibility("hidden")));
# 13388 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatMn) xmlUCSIsCatMn__internal_alias __attribute((visibility("hidden")));
# 13400 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatN) xmlUCSIsCatN__internal_alias __attribute((visibility("hidden")));
# 13412 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatNd) xmlUCSIsCatNd__internal_alias __attribute((visibility("hidden")));
# 13424 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatNl) xmlUCSIsCatNl__internal_alias __attribute((visibility("hidden")));
# 13436 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatNo) xmlUCSIsCatNo__internal_alias __attribute((visibility("hidden")));
# 13448 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatP) xmlUCSIsCatP__internal_alias __attribute((visibility("hidden")));
# 13460 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatPc) xmlUCSIsCatPc__internal_alias __attribute((visibility("hidden")));
# 13472 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatPd) xmlUCSIsCatPd__internal_alias __attribute((visibility("hidden")));
# 13484 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatPe) xmlUCSIsCatPe__internal_alias __attribute((visibility("hidden")));
# 13496 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatPf) xmlUCSIsCatPf__internal_alias __attribute((visibility("hidden")));
# 13508 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatPi) xmlUCSIsCatPi__internal_alias __attribute((visibility("hidden")));
# 13520 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatPo) xmlUCSIsCatPo__internal_alias __attribute((visibility("hidden")));
# 13532 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatPs) xmlUCSIsCatPs__internal_alias __attribute((visibility("hidden")));
# 13544 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatS) xmlUCSIsCatS__internal_alias __attribute((visibility("hidden")));
# 13556 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatSc) xmlUCSIsCatSc__internal_alias __attribute((visibility("hidden")));
# 13568 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatSk) xmlUCSIsCatSk__internal_alias __attribute((visibility("hidden")));
# 13580 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatSm) xmlUCSIsCatSm__internal_alias __attribute((visibility("hidden")));
# 13592 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatSo) xmlUCSIsCatSo__internal_alias __attribute((visibility("hidden")));
# 13604 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatZ) xmlUCSIsCatZ__internal_alias __attribute((visibility("hidden")));
# 13616 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatZl) xmlUCSIsCatZl__internal_alias __attribute((visibility("hidden")));
# 13628 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatZp) xmlUCSIsCatZp__internal_alias __attribute((visibility("hidden")));
# 13640 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatZs) xmlUCSIsCatZs__internal_alias __attribute((visibility("hidden")));
# 13652 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCherokee) xmlUCSIsCherokee__internal_alias __attribute((visibility("hidden")));
# 13664 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCombiningDiacriticalMarks) xmlUCSIsCombiningDiacriticalMarks__internal_alias __attribute((visibility("hidden")));
# 13676 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCombiningDiacriticalMarksforSymbols) xmlUCSIsCombiningDiacriticalMarksforSymbols__internal_alias __attribute((visibility("hidden")));
# 13688 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCombiningHalfMarks) xmlUCSIsCombiningHalfMarks__internal_alias __attribute((visibility("hidden")));
# 13700 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCombiningMarksforSymbols) xmlUCSIsCombiningMarksforSymbols__internal_alias __attribute((visibility("hidden")));
# 13712 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsControlPictures) xmlUCSIsControlPictures__internal_alias __attribute((visibility("hidden")));
# 13724 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCurrencySymbols) xmlUCSIsCurrencySymbols__internal_alias __attribute((visibility("hidden")));
# 13736 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCypriotSyllabary) xmlUCSIsCypriotSyllabary__internal_alias __attribute((visibility("hidden")));
# 13748 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCyrillic) xmlUCSIsCyrillic__internal_alias __attribute((visibility("hidden")));
# 13760 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCyrillicSupplement) xmlUCSIsCyrillicSupplement__internal_alias __attribute((visibility("hidden")));
# 13772 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsDeseret) xmlUCSIsDeseret__internal_alias __attribute((visibility("hidden")));
# 13784 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsDevanagari) xmlUCSIsDevanagari__internal_alias __attribute((visibility("hidden")));
# 13796 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsDingbats) xmlUCSIsDingbats__internal_alias __attribute((visibility("hidden")));
# 13808 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsEnclosedAlphanumerics) xmlUCSIsEnclosedAlphanumerics__internal_alias __attribute((visibility("hidden")));
# 13820 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsEnclosedCJKLettersandMonths) xmlUCSIsEnclosedCJKLettersandMonths__internal_alias __attribute((visibility("hidden")));
# 13832 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsEthiopic) xmlUCSIsEthiopic__internal_alias __attribute((visibility("hidden")));
# 13844 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsGeneralPunctuation) xmlUCSIsGeneralPunctuation__internal_alias __attribute((visibility("hidden")));
# 13856 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsGeometricShapes) xmlUCSIsGeometricShapes__internal_alias __attribute((visibility("hidden")));
# 13868 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsGeorgian) xmlUCSIsGeorgian__internal_alias __attribute((visibility("hidden")));
# 13880 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsGothic) xmlUCSIsGothic__internal_alias __attribute((visibility("hidden")));
# 13892 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsGreek) xmlUCSIsGreek__internal_alias __attribute((visibility("hidden")));
# 13904 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsGreekExtended) xmlUCSIsGreekExtended__internal_alias __attribute((visibility("hidden")));
# 13916 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsGreekandCoptic) xmlUCSIsGreekandCoptic__internal_alias __attribute((visibility("hidden")));
# 13928 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsGujarati) xmlUCSIsGujarati__internal_alias __attribute((visibility("hidden")));
# 13940 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsGurmukhi) xmlUCSIsGurmukhi__internal_alias __attribute((visibility("hidden")));
# 13952 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsHalfwidthandFullwidthForms) xmlUCSIsHalfwidthandFullwidthForms__internal_alias __attribute((visibility("hidden")));
# 13964 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsHangulCompatibilityJamo) xmlUCSIsHangulCompatibilityJamo__internal_alias __attribute((visibility("hidden")));
# 13976 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsHangulJamo) xmlUCSIsHangulJamo__internal_alias __attribute((visibility("hidden")));
# 13988 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsHangulSyllables) xmlUCSIsHangulSyllables__internal_alias __attribute((visibility("hidden")));
# 14000 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsHanunoo) xmlUCSIsHanunoo__internal_alias __attribute((visibility("hidden")));
# 14012 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsHebrew) xmlUCSIsHebrew__internal_alias __attribute((visibility("hidden")));
# 14024 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsHighPrivateUseSurrogates) xmlUCSIsHighPrivateUseSurrogates__internal_alias __attribute((visibility("hidden")));
# 14036 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsHighSurrogates) xmlUCSIsHighSurrogates__internal_alias __attribute((visibility("hidden")));
# 14048 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsHiragana) xmlUCSIsHiragana__internal_alias __attribute((visibility("hidden")));
# 14060 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsIPAExtensions) xmlUCSIsIPAExtensions__internal_alias __attribute((visibility("hidden")));
# 14072 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsIdeographicDescriptionCharacters) xmlUCSIsIdeographicDescriptionCharacters__internal_alias __attribute((visibility("hidden")));
# 14084 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsKanbun) xmlUCSIsKanbun__internal_alias __attribute((visibility("hidden")));
# 14096 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsKangxiRadicals) xmlUCSIsKangxiRadicals__internal_alias __attribute((visibility("hidden")));
# 14108 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsKannada) xmlUCSIsKannada__internal_alias __attribute((visibility("hidden")));
# 14120 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsKatakana) xmlUCSIsKatakana__internal_alias __attribute((visibility("hidden")));
# 14132 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsKatakanaPhoneticExtensions) xmlUCSIsKatakanaPhoneticExtensions__internal_alias __attribute((visibility("hidden")));
# 14144 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsKhmer) xmlUCSIsKhmer__internal_alias __attribute((visibility("hidden")));
# 14156 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsKhmerSymbols) xmlUCSIsKhmerSymbols__internal_alias __attribute((visibility("hidden")));
# 14168 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsLao) xmlUCSIsLao__internal_alias __attribute((visibility("hidden")));
# 14180 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsLatin1Supplement) xmlUCSIsLatin1Supplement__internal_alias __attribute((visibility("hidden")));
# 14192 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsLatinExtendedA) xmlUCSIsLatinExtendedA__internal_alias __attribute((visibility("hidden")));
# 14204 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsLatinExtendedAdditional) xmlUCSIsLatinExtendedAdditional__internal_alias __attribute((visibility("hidden")));
# 14216 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsLatinExtendedB) xmlUCSIsLatinExtendedB__internal_alias __attribute((visibility("hidden")));
# 14228 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsLetterlikeSymbols) xmlUCSIsLetterlikeSymbols__internal_alias __attribute((visibility("hidden")));
# 14240 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsLimbu) xmlUCSIsLimbu__internal_alias __attribute((visibility("hidden")));
# 14252 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsLinearBIdeograms) xmlUCSIsLinearBIdeograms__internal_alias __attribute((visibility("hidden")));
# 14264 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsLinearBSyllabary) xmlUCSIsLinearBSyllabary__internal_alias __attribute((visibility("hidden")));
# 14276 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsLowSurrogates) xmlUCSIsLowSurrogates__internal_alias __attribute((visibility("hidden")));
# 14288 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsMalayalam) xmlUCSIsMalayalam__internal_alias __attribute((visibility("hidden")));
# 14300 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsMathematicalAlphanumericSymbols) xmlUCSIsMathematicalAlphanumericSymbols__internal_alias __attribute((visibility("hidden")));
# 14312 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsMathematicalOperators) xmlUCSIsMathematicalOperators__internal_alias __attribute((visibility("hidden")));
# 14324 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsMiscellaneousMathematicalSymbolsA) xmlUCSIsMiscellaneousMathematicalSymbolsA__internal_alias __attribute((visibility("hidden")));
# 14336 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsMiscellaneousMathematicalSymbolsB) xmlUCSIsMiscellaneousMathematicalSymbolsB__internal_alias __attribute((visibility("hidden")));
# 14348 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsMiscellaneousSymbols) xmlUCSIsMiscellaneousSymbols__internal_alias __attribute((visibility("hidden")));
# 14360 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsMiscellaneousSymbolsandArrows) xmlUCSIsMiscellaneousSymbolsandArrows__internal_alias __attribute((visibility("hidden")));
# 14372 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsMiscellaneousTechnical) xmlUCSIsMiscellaneousTechnical__internal_alias __attribute((visibility("hidden")));
# 14384 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsMongolian) xmlUCSIsMongolian__internal_alias __attribute((visibility("hidden")));
# 14396 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsMusicalSymbols) xmlUCSIsMusicalSymbols__internal_alias __attribute((visibility("hidden")));
# 14408 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsMyanmar) xmlUCSIsMyanmar__internal_alias __attribute((visibility("hidden")));
# 14420 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsNumberForms) xmlUCSIsNumberForms__internal_alias __attribute((visibility("hidden")));
# 14432 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsOgham) xmlUCSIsOgham__internal_alias __attribute((visibility("hidden")));
# 14444 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsOldItalic) xmlUCSIsOldItalic__internal_alias __attribute((visibility("hidden")));
# 14456 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsOpticalCharacterRecognition) xmlUCSIsOpticalCharacterRecognition__internal_alias __attribute((visibility("hidden")));
# 14468 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsOriya) xmlUCSIsOriya__internal_alias __attribute((visibility("hidden")));
# 14480 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsOsmanya) xmlUCSIsOsmanya__internal_alias __attribute((visibility("hidden")));
# 14492 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsPhoneticExtensions) xmlUCSIsPhoneticExtensions__internal_alias __attribute((visibility("hidden")));
# 14504 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsPrivateUse) xmlUCSIsPrivateUse__internal_alias __attribute((visibility("hidden")));
# 14516 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsPrivateUseArea) xmlUCSIsPrivateUseArea__internal_alias __attribute((visibility("hidden")));
# 14528 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsRunic) xmlUCSIsRunic__internal_alias __attribute((visibility("hidden")));
# 14540 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsShavian) xmlUCSIsShavian__internal_alias __attribute((visibility("hidden")));
# 14552 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsSinhala) xmlUCSIsSinhala__internal_alias __attribute((visibility("hidden")));
# 14564 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsSmallFormVariants) xmlUCSIsSmallFormVariants__internal_alias __attribute((visibility("hidden")));
# 14576 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsSpacingModifierLetters) xmlUCSIsSpacingModifierLetters__internal_alias __attribute((visibility("hidden")));
# 14588 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsSpecials) xmlUCSIsSpecials__internal_alias __attribute((visibility("hidden")));
# 14600 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsSuperscriptsandSubscripts) xmlUCSIsSuperscriptsandSubscripts__internal_alias __attribute((visibility("hidden")));
# 14612 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsSupplementalArrowsA) xmlUCSIsSupplementalArrowsA__internal_alias __attribute((visibility("hidden")));
# 14624 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsSupplementalArrowsB) xmlUCSIsSupplementalArrowsB__internal_alias __attribute((visibility("hidden")));
# 14636 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsSupplementalMathematicalOperators) xmlUCSIsSupplementalMathematicalOperators__internal_alias __attribute((visibility("hidden")));
# 14648 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsSupplementaryPrivateUseAreaA) xmlUCSIsSupplementaryPrivateUseAreaA__internal_alias __attribute((visibility("hidden")));
# 14660 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsSupplementaryPrivateUseAreaB) xmlUCSIsSupplementaryPrivateUseAreaB__internal_alias __attribute((visibility("hidden")));
# 14672 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsSyriac) xmlUCSIsSyriac__internal_alias __attribute((visibility("hidden")));
# 14684 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsTagalog) xmlUCSIsTagalog__internal_alias __attribute((visibility("hidden")));
# 14696 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsTagbanwa) xmlUCSIsTagbanwa__internal_alias __attribute((visibility("hidden")));
# 14708 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsTags) xmlUCSIsTags__internal_alias __attribute((visibility("hidden")));
# 14720 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsTaiLe) xmlUCSIsTaiLe__internal_alias __attribute((visibility("hidden")));
# 14732 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsTaiXuanJingSymbols) xmlUCSIsTaiXuanJingSymbols__internal_alias __attribute((visibility("hidden")));
# 14744 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsTamil) xmlUCSIsTamil__internal_alias __attribute((visibility("hidden")));
# 14756 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsTelugu) xmlUCSIsTelugu__internal_alias __attribute((visibility("hidden")));
# 14768 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsThaana) xmlUCSIsThaana__internal_alias __attribute((visibility("hidden")));
# 14780 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsThai) xmlUCSIsThai__internal_alias __attribute((visibility("hidden")));
# 14792 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsTibetan) xmlUCSIsTibetan__internal_alias __attribute((visibility("hidden")));
# 14804 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsUgaritic) xmlUCSIsUgaritic__internal_alias __attribute((visibility("hidden")));
# 14816 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsUnifiedCanadianAboriginalSyllabics) xmlUCSIsUnifiedCanadianAboriginalSyllabics__internal_alias __attribute((visibility("hidden")));
# 14828 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsVariationSelectors) xmlUCSIsVariationSelectors__internal_alias __attribute((visibility("hidden")));
# 14840 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsVariationSelectorsSupplement) xmlUCSIsVariationSelectorsSupplement__internal_alias __attribute((visibility("hidden")));
# 14852 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsYiRadicals) xmlUCSIsYiRadicals__internal_alias __attribute((visibility("hidden")));
# 14864 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsYiSyllables) xmlUCSIsYiSyllables__internal_alias __attribute((visibility("hidden")));
# 14876 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsYijingHexagramSymbols) xmlUCSIsYijingHexagramSymbols__internal_alias __attribute((visibility("hidden")));
# 14887 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlURIEscape) xmlURIEscape__internal_alias __attribute((visibility("hidden")));
# 14897 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlURIEscapeStr) xmlURIEscapeStr__internal_alias __attribute((visibility("hidden")));
# 14907 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlURIUnescapeString) xmlURIUnescapeString__internal_alias __attribute((visibility("hidden")));
# 14917 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUTF8Charcmp) xmlUTF8Charcmp__internal_alias __attribute((visibility("hidden")));
# 14927 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUTF8Size) xmlUTF8Size__internal_alias __attribute((visibility("hidden")));
# 14937 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUTF8Strlen) xmlUTF8Strlen__internal_alias __attribute((visibility("hidden")));
# 14947 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUTF8Strloc) xmlUTF8Strloc__internal_alias __attribute((visibility("hidden")));
# 14957 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUTF8Strndup) xmlUTF8Strndup__internal_alias __attribute((visibility("hidden")));
# 14967 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUTF8Strpos) xmlUTF8Strpos__internal_alias __attribute((visibility("hidden")));
# 14977 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUTF8Strsize) xmlUTF8Strsize__internal_alias __attribute((visibility("hidden")));
# 14987 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUTF8Strsub) xmlUTF8Strsub__internal_alias __attribute((visibility("hidden")));
# 14997 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUnlinkNode) xmlUnlinkNode__internal_alias __attribute((visibility("hidden")));
# 15007 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUnlockLibrary) xmlUnlockLibrary__internal_alias __attribute((visibility("hidden")));
# 15018 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUnsetNsProp) xmlUnsetNsProp__internal_alias __attribute((visibility("hidden")));
# 15030 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUnsetProp) xmlUnsetProp__internal_alias __attribute((visibility("hidden")));
# 15042 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidBuildContentModel) xmlValidBuildContentModel__internal_alias __attribute((visibility("hidden")));
# 15054 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidCtxtNormalizeAttributeValue) xmlValidCtxtNormalizeAttributeValue__internal_alias __attribute((visibility("hidden")));
# 15066 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidGetPotentialChildren) xmlValidGetPotentialChildren__internal_alias __attribute((visibility("hidden")));
# 15078 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidGetValidElements) xmlValidGetValidElements__internal_alias __attribute((visibility("hidden")));
# 15090 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidNormalizeAttributeValue) xmlValidNormalizeAttributeValue__internal_alias __attribute((visibility("hidden")));
# 15102 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateAttributeDecl) xmlValidateAttributeDecl__internal_alias __attribute((visibility("hidden")));
# 15114 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateAttributeValue) xmlValidateAttributeValue__internal_alias __attribute((visibility("hidden")));
# 15126 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateDocument) xmlValidateDocument__internal_alias __attribute((visibility("hidden")));
# 15138 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateDocumentFinal) xmlValidateDocumentFinal__internal_alias __attribute((visibility("hidden")));
# 15150 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateDtd) xmlValidateDtd__internal_alias __attribute((visibility("hidden")));
# 15162 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateDtdFinal) xmlValidateDtdFinal__internal_alias __attribute((visibility("hidden")));
# 15174 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateElement) xmlValidateElement__internal_alias __attribute((visibility("hidden")));
# 15186 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateElementDecl) xmlValidateElementDecl__internal_alias __attribute((visibility("hidden")));
# 15198 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateNCName) xmlValidateNCName__internal_alias __attribute((visibility("hidden")));
# 15210 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateNMToken) xmlValidateNMToken__internal_alias __attribute((visibility("hidden")));
# 15222 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateName) xmlValidateName__internal_alias __attribute((visibility("hidden")));
# 15234 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateNameValue) xmlValidateNameValue__internal_alias __attribute((visibility("hidden")));
# 15246 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateNamesValue) xmlValidateNamesValue__internal_alias __attribute((visibility("hidden")));
# 15258 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateNmtokenValue) xmlValidateNmtokenValue__internal_alias __attribute((visibility("hidden")));
# 15270 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateNmtokensValue) xmlValidateNmtokensValue__internal_alias __attribute((visibility("hidden")));
# 15282 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateNotationDecl) xmlValidateNotationDecl__internal_alias __attribute((visibility("hidden")));
# 15294 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateNotationUse) xmlValidateNotationUse__internal_alias __attribute((visibility("hidden")));
# 15306 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateOneAttribute) xmlValidateOneAttribute__internal_alias __attribute((visibility("hidden")));
# 15318 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateOneElement) xmlValidateOneElement__internal_alias __attribute((visibility("hidden")));
# 15330 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateOneNamespace) xmlValidateOneNamespace__internal_alias __attribute((visibility("hidden")));
# 15342 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidatePopElement) xmlValidatePopElement__internal_alias __attribute((visibility("hidden")));
# 15354 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidatePushCData) xmlValidatePushCData__internal_alias __attribute((visibility("hidden")));
# 15366 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidatePushElement) xmlValidatePushElement__internal_alias __attribute((visibility("hidden")));
# 15378 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateQName) xmlValidateQName__internal_alias __attribute((visibility("hidden")));
# 15390 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateRoot) xmlValidateRoot__internal_alias __attribute((visibility("hidden")));
# 15402 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXIncludeFreeContext) xmlXIncludeFreeContext__internal_alias __attribute((visibility("hidden")));
# 15414 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXIncludeNewContext) xmlXIncludeNewContext__internal_alias __attribute((visibility("hidden")));
# 15426 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXIncludeProcess) xmlXIncludeProcess__internal_alias __attribute((visibility("hidden")));
# 15438 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXIncludeProcessFlags) xmlXIncludeProcessFlags__internal_alias __attribute((visibility("hidden")));
# 15450 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXIncludeProcessFlagsData) xmlXIncludeProcessFlagsData__internal_alias __attribute((visibility("hidden")));
# 15462 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXIncludeProcessNode) xmlXIncludeProcessNode__internal_alias __attribute((visibility("hidden")));
# 15474 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXIncludeProcessTree) xmlXIncludeProcessTree__internal_alias __attribute((visibility("hidden")));
# 15486 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXIncludeProcessTreeFlags) xmlXIncludeProcessTreeFlags__internal_alias __attribute((visibility("hidden")));
# 15498 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXIncludeProcessTreeFlagsData) xmlXIncludeProcessTreeFlagsData__internal_alias __attribute((visibility("hidden")));
# 15510 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXIncludeSetFlags) xmlXIncludeSetFlags__internal_alias __attribute((visibility("hidden")));
# 15522 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathAddValues) xmlXPathAddValues__internal_alias __attribute((visibility("hidden")));
# 15534 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathBooleanFunction) xmlXPathBooleanFunction__internal_alias __attribute((visibility("hidden")));
# 15546 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastBooleanToNumber) xmlXPathCastBooleanToNumber__internal_alias __attribute((visibility("hidden")));
# 15558 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastBooleanToString) xmlXPathCastBooleanToString__internal_alias __attribute((visibility("hidden")));
# 15570 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastNodeSetToBoolean) xmlXPathCastNodeSetToBoolean__internal_alias __attribute((visibility("hidden")));
# 15582 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastNodeSetToNumber) xmlXPathCastNodeSetToNumber__internal_alias __attribute((visibility("hidden")));
# 15594 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastNodeSetToString) xmlXPathCastNodeSetToString__internal_alias __attribute((visibility("hidden")));
# 15606 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastNodeToNumber) xmlXPathCastNodeToNumber__internal_alias __attribute((visibility("hidden")));
# 15618 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastNodeToString) xmlXPathCastNodeToString__internal_alias __attribute((visibility("hidden")));
# 15630 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastNumberToBoolean) xmlXPathCastNumberToBoolean__internal_alias __attribute((visibility("hidden")));
# 15642 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastNumberToString) xmlXPathCastNumberToString__internal_alias __attribute((visibility("hidden")));
# 15654 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastStringToBoolean) xmlXPathCastStringToBoolean__internal_alias __attribute((visibility("hidden")));
# 15666 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastStringToNumber) xmlXPathCastStringToNumber__internal_alias __attribute((visibility("hidden")));
# 15678 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastToBoolean) xmlXPathCastToBoolean__internal_alias __attribute((visibility("hidden")));
# 15690 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastToNumber) xmlXPathCastToNumber__internal_alias __attribute((visibility("hidden")));
# 15702 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastToString) xmlXPathCastToString__internal_alias __attribute((visibility("hidden")));
# 15714 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCeilingFunction) xmlXPathCeilingFunction__internal_alias __attribute((visibility("hidden")));
# 15726 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCmpNodes) xmlXPathCmpNodes__internal_alias __attribute((visibility("hidden")));
# 15738 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCompareValues) xmlXPathCompareValues__internal_alias __attribute((visibility("hidden")));
# 15750 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCompile) xmlXPathCompile__internal_alias __attribute((visibility("hidden")));
# 15762 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCompiledEval) xmlXPathCompiledEval__internal_alias __attribute((visibility("hidden")));
# 15774 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCompiledEvalToBoolean) xmlXPathCompiledEvalToBoolean__internal_alias __attribute((visibility("hidden")));
# 15786 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathConcatFunction) xmlXPathConcatFunction__internal_alias __attribute((visibility("hidden")));
# 15798 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathContainsFunction) xmlXPathContainsFunction__internal_alias __attribute((visibility("hidden")));
# 15810 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathContextSetCache) xmlXPathContextSetCache__internal_alias __attribute((visibility("hidden")));
# 15822 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathConvertBoolean) xmlXPathConvertBoolean__internal_alias __attribute((visibility("hidden")));
# 15834 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathConvertNumber) xmlXPathConvertNumber__internal_alias __attribute((visibility("hidden")));
# 15846 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathConvertString) xmlXPathConvertString__internal_alias __attribute((visibility("hidden")));
# 15858 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCountFunction) xmlXPathCountFunction__internal_alias __attribute((visibility("hidden")));
# 15870 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCtxtCompile) xmlXPathCtxtCompile__internal_alias __attribute((visibility("hidden")));
# 15882 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathDebugDumpCompExpr) xmlXPathDebugDumpCompExpr__internal_alias __attribute((visibility("hidden")));
# 15894 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathDebugDumpObject) xmlXPathDebugDumpObject__internal_alias __attribute((visibility("hidden")));
# 15906 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathDifference) xmlXPathDifference__internal_alias __attribute((visibility("hidden")));
# 15918 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathDistinct) xmlXPathDistinct__internal_alias __attribute((visibility("hidden")));
# 15930 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathDistinctSorted) xmlXPathDistinctSorted__internal_alias __attribute((visibility("hidden")));
# 15942 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathDivValues) xmlXPathDivValues__internal_alias __attribute((visibility("hidden")));
# 15954 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathEqualValues) xmlXPathEqualValues__internal_alias __attribute((visibility("hidden")));
# 15966 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathErr) xmlXPathErr__internal_alias __attribute((visibility("hidden")));
# 15978 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathEval) xmlXPathEval__internal_alias __attribute((visibility("hidden")));
# 15990 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathEvalExpr) xmlXPathEvalExpr__internal_alias __attribute((visibility("hidden")));
# 16002 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathEvalExpression) xmlXPathEvalExpression__internal_alias __attribute((visibility("hidden")));
# 16014 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathEvalPredicate) xmlXPathEvalPredicate__internal_alias __attribute((visibility("hidden")));
# 16026 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathEvaluatePredicateResult) xmlXPathEvaluatePredicateResult__internal_alias __attribute((visibility("hidden")));
# 16038 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathFalseFunction) xmlXPathFalseFunction__internal_alias __attribute((visibility("hidden")));
# 16050 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathFloorFunction) xmlXPathFloorFunction__internal_alias __attribute((visibility("hidden")));
# 16062 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathFreeCompExpr) xmlXPathFreeCompExpr__internal_alias __attribute((visibility("hidden")));
# 16074 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathFreeContext) xmlXPathFreeContext__internal_alias __attribute((visibility("hidden")));
# 16086 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathFreeNodeSet) xmlXPathFreeNodeSet__internal_alias __attribute((visibility("hidden")));
# 16098 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathFreeNodeSetList) xmlXPathFreeNodeSetList__internal_alias __attribute((visibility("hidden")));
# 16110 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathFreeObject) xmlXPathFreeObject__internal_alias __attribute((visibility("hidden")));
# 16122 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathFreeParserContext) xmlXPathFreeParserContext__internal_alias __attribute((visibility("hidden")));
# 16134 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathFunctionLookup) xmlXPathFunctionLookup__internal_alias __attribute((visibility("hidden")));
# 16146 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathFunctionLookupNS) xmlXPathFunctionLookupNS__internal_alias __attribute((visibility("hidden")));
# 16158 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathHasSameNodes) xmlXPathHasSameNodes__internal_alias __attribute((visibility("hidden")));
# 16170 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathIdFunction) xmlXPathIdFunction__internal_alias __attribute((visibility("hidden")));
# 16182 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathInit) xmlXPathInit__internal_alias __attribute((visibility("hidden")));
# 16194 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathIntersection) xmlXPathIntersection__internal_alias __attribute((visibility("hidden")));
# 16206 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathIsInf) xmlXPathIsInf__internal_alias __attribute((visibility("hidden")));
# 16218 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathIsNaN) xmlXPathIsNaN__internal_alias __attribute((visibility("hidden")));
# 16230 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathIsNodeType) xmlXPathIsNodeType__internal_alias __attribute((visibility("hidden")));
# 16242 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathLangFunction) xmlXPathLangFunction__internal_alias __attribute((visibility("hidden")));
# 16254 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathLastFunction) xmlXPathLastFunction__internal_alias __attribute((visibility("hidden")));
# 16266 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathLeading) xmlXPathLeading__internal_alias __attribute((visibility("hidden")));
# 16278 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathLeadingSorted) xmlXPathLeadingSorted__internal_alias __attribute((visibility("hidden")));
# 16290 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathLocalNameFunction) xmlXPathLocalNameFunction__internal_alias __attribute((visibility("hidden")));
# 16302 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathModValues) xmlXPathModValues__internal_alias __attribute((visibility("hidden")));
# 16314 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathMultValues) xmlXPathMultValues__internal_alias __attribute((visibility("hidden")));
# 16326 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNamespaceURIFunction) xmlXPathNamespaceURIFunction__internal_alias __attribute((visibility("hidden")));
# 16338 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNewBoolean) xmlXPathNewBoolean__internal_alias __attribute((visibility("hidden")));
# 16350 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNewCString) xmlXPathNewCString__internal_alias __attribute((visibility("hidden")));
# 16362 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNewContext) xmlXPathNewContext__internal_alias __attribute((visibility("hidden")));
# 16374 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNewFloat) xmlXPathNewFloat__internal_alias __attribute((visibility("hidden")));
# 16386 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNewNodeSet) xmlXPathNewNodeSet__internal_alias __attribute((visibility("hidden")));
# 16398 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNewNodeSetList) xmlXPathNewNodeSetList__internal_alias __attribute((visibility("hidden")));
# 16410 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNewParserContext) xmlXPathNewParserContext__internal_alias __attribute((visibility("hidden")));
# 16422 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNewString) xmlXPathNewString__internal_alias __attribute((visibility("hidden")));
# 16434 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNewValueTree) xmlXPathNewValueTree__internal_alias __attribute((visibility("hidden")));
# 16446 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextAncestor) xmlXPathNextAncestor__internal_alias __attribute((visibility("hidden")));
# 16458 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextAncestorOrSelf) xmlXPathNextAncestorOrSelf__internal_alias __attribute((visibility("hidden")));
# 16470 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextAttribute) xmlXPathNextAttribute__internal_alias __attribute((visibility("hidden")));
# 16482 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextChild) xmlXPathNextChild__internal_alias __attribute((visibility("hidden")));
# 16494 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextDescendant) xmlXPathNextDescendant__internal_alias __attribute((visibility("hidden")));
# 16506 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextDescendantOrSelf) xmlXPathNextDescendantOrSelf__internal_alias __attribute((visibility("hidden")));
# 16518 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextFollowing) xmlXPathNextFollowing__internal_alias __attribute((visibility("hidden")));
# 16530 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextFollowingSibling) xmlXPathNextFollowingSibling__internal_alias __attribute((visibility("hidden")));
# 16542 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextNamespace) xmlXPathNextNamespace__internal_alias __attribute((visibility("hidden")));
# 16554 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextParent) xmlXPathNextParent__internal_alias __attribute((visibility("hidden")));
# 16566 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextPreceding) xmlXPathNextPreceding__internal_alias __attribute((visibility("hidden")));
# 16578 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextPrecedingSibling) xmlXPathNextPrecedingSibling__internal_alias __attribute((visibility("hidden")));
# 16590 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextSelf) xmlXPathNextSelf__internal_alias __attribute((visibility("hidden")));
# 16602 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeLeading) xmlXPathNodeLeading__internal_alias __attribute((visibility("hidden")));
# 16614 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeLeadingSorted) xmlXPathNodeLeadingSorted__internal_alias __attribute((visibility("hidden")));
# 16626 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeSetAdd) xmlXPathNodeSetAdd__internal_alias __attribute((visibility("hidden")));
# 16638 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeSetAddNs) xmlXPathNodeSetAddNs__internal_alias __attribute((visibility("hidden")));
# 16650 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeSetAddUnique) xmlXPathNodeSetAddUnique__internal_alias __attribute((visibility("hidden")));
# 16662 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeSetContains) xmlXPathNodeSetContains__internal_alias __attribute((visibility("hidden")));
# 16674 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeSetCreate) xmlXPathNodeSetCreate__internal_alias __attribute((visibility("hidden")));
# 16686 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeSetDel) xmlXPathNodeSetDel__internal_alias __attribute((visibility("hidden")));
# 16698 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeSetFreeNs) xmlXPathNodeSetFreeNs__internal_alias __attribute((visibility("hidden")));
# 16710 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeSetMerge) xmlXPathNodeSetMerge__internal_alias __attribute((visibility("hidden")));
# 16722 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeSetRemove) xmlXPathNodeSetRemove__internal_alias __attribute((visibility("hidden")));
# 16734 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeSetSort) xmlXPathNodeSetSort__internal_alias __attribute((visibility("hidden")));
# 16746 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeTrailing) xmlXPathNodeTrailing__internal_alias __attribute((visibility("hidden")));
# 16758 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeTrailingSorted) xmlXPathNodeTrailingSorted__internal_alias __attribute((visibility("hidden")));
# 16770 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNormalizeFunction) xmlXPathNormalizeFunction__internal_alias __attribute((visibility("hidden")));
# 16782 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNotEqualValues) xmlXPathNotEqualValues__internal_alias __attribute((visibility("hidden")));
# 16794 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNotFunction) xmlXPathNotFunction__internal_alias __attribute((visibility("hidden")));
# 16806 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNsLookup) xmlXPathNsLookup__internal_alias __attribute((visibility("hidden")));
# 16818 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNumberFunction) xmlXPathNumberFunction__internal_alias __attribute((visibility("hidden")));
# 16830 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathObjectCopy) xmlXPathObjectCopy__internal_alias __attribute((visibility("hidden")));
# 16842 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathOrderDocElems) xmlXPathOrderDocElems__internal_alias __attribute((visibility("hidden")));
# 16854 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathParseNCName) xmlXPathParseNCName__internal_alias __attribute((visibility("hidden")));
# 16866 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathParseName) xmlXPathParseName__internal_alias __attribute((visibility("hidden")));
# 16878 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathPopBoolean) xmlXPathPopBoolean__internal_alias __attribute((visibility("hidden")));
# 16890 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathPopExternal) xmlXPathPopExternal__internal_alias __attribute((visibility("hidden")));
# 16902 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathPopNodeSet) xmlXPathPopNodeSet__internal_alias __attribute((visibility("hidden")));
# 16914 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathPopNumber) xmlXPathPopNumber__internal_alias __attribute((visibility("hidden")));
# 16926 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathPopString) xmlXPathPopString__internal_alias __attribute((visibility("hidden")));
# 16938 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathPositionFunction) xmlXPathPositionFunction__internal_alias __attribute((visibility("hidden")));
# 16950 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRegisterAllFunctions) xmlXPathRegisterAllFunctions__internal_alias __attribute((visibility("hidden")));
# 16962 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRegisterFunc) xmlXPathRegisterFunc__internal_alias __attribute((visibility("hidden")));
# 16974 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRegisterFuncLookup) xmlXPathRegisterFuncLookup__internal_alias __attribute((visibility("hidden")));
# 16986 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRegisterFuncNS) xmlXPathRegisterFuncNS__internal_alias __attribute((visibility("hidden")));
# 16998 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRegisterNs) xmlXPathRegisterNs__internal_alias __attribute((visibility("hidden")));
# 17010 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRegisterVariable) xmlXPathRegisterVariable__internal_alias __attribute((visibility("hidden")));
# 17022 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRegisterVariableLookup) xmlXPathRegisterVariableLookup__internal_alias __attribute((visibility("hidden")));
# 17034 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRegisterVariableNS) xmlXPathRegisterVariableNS__internal_alias __attribute((visibility("hidden")));
# 17046 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRegisteredFuncsCleanup) xmlXPathRegisteredFuncsCleanup__internal_alias __attribute((visibility("hidden")));
# 17058 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRegisteredNsCleanup) xmlXPathRegisteredNsCleanup__internal_alias __attribute((visibility("hidden")));
# 17070 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRegisteredVariablesCleanup) xmlXPathRegisteredVariablesCleanup__internal_alias __attribute((visibility("hidden")));
# 17082 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRoot) xmlXPathRoot__internal_alias __attribute((visibility("hidden")));
# 17094 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRoundFunction) xmlXPathRoundFunction__internal_alias __attribute((visibility("hidden")));
# 17106 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathStartsWithFunction) xmlXPathStartsWithFunction__internal_alias __attribute((visibility("hidden")));
# 17118 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathStringEvalNumber) xmlXPathStringEvalNumber__internal_alias __attribute((visibility("hidden")));
# 17130 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathStringFunction) xmlXPathStringFunction__internal_alias __attribute((visibility("hidden")));
# 17142 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathStringLengthFunction) xmlXPathStringLengthFunction__internal_alias __attribute((visibility("hidden")));
# 17154 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathSubValues) xmlXPathSubValues__internal_alias __attribute((visibility("hidden")));
# 17166 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathSubstringAfterFunction) xmlXPathSubstringAfterFunction__internal_alias __attribute((visibility("hidden")));
# 17178 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathSubstringBeforeFunction) xmlXPathSubstringBeforeFunction__internal_alias __attribute((visibility("hidden")));
# 17190 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathSubstringFunction) xmlXPathSubstringFunction__internal_alias __attribute((visibility("hidden")));
# 17202 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathSumFunction) xmlXPathSumFunction__internal_alias __attribute((visibility("hidden")));
# 17214 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathTrailing) xmlXPathTrailing__internal_alias __attribute((visibility("hidden")));
# 17226 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathTrailingSorted) xmlXPathTrailingSorted__internal_alias __attribute((visibility("hidden")));
# 17238 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathTranslateFunction) xmlXPathTranslateFunction__internal_alias __attribute((visibility("hidden")));
# 17250 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathTrueFunction) xmlXPathTrueFunction__internal_alias __attribute((visibility("hidden")));
# 17262 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathValueFlipSign) xmlXPathValueFlipSign__internal_alias __attribute((visibility("hidden")));
# 17274 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathVariableLookup) xmlXPathVariableLookup__internal_alias __attribute((visibility("hidden")));
# 17286 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathVariableLookupNS) xmlXPathVariableLookupNS__internal_alias __attribute((visibility("hidden")));
# 17298 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathWrapCString) xmlXPathWrapCString__internal_alias __attribute((visibility("hidden")));
# 17310 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathWrapExternal) xmlXPathWrapExternal__internal_alias __attribute((visibility("hidden")));
# 17322 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathWrapNodeSet) xmlXPathWrapNodeSet__internal_alias __attribute((visibility("hidden")));
# 17334 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathWrapString) xmlXPathWrapString__internal_alias __attribute((visibility("hidden")));
# 17346 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPatherror) xmlXPatherror__internal_alias __attribute((visibility("hidden")));
# 17358 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrBuildNodeList) xmlXPtrBuildNodeList__internal_alias __attribute((visibility("hidden")));
# 17370 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrEval) xmlXPtrEval__internal_alias __attribute((visibility("hidden")));
# 17382 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrEvalRangePredicate) xmlXPtrEvalRangePredicate__internal_alias __attribute((visibility("hidden")));
# 17394 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrFreeLocationSet) xmlXPtrFreeLocationSet__internal_alias __attribute((visibility("hidden")));
# 17406 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrLocationSetAdd) xmlXPtrLocationSetAdd__internal_alias __attribute((visibility("hidden")));
# 17418 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrLocationSetCreate) xmlXPtrLocationSetCreate__internal_alias __attribute((visibility("hidden")));
# 17430 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrLocationSetDel) xmlXPtrLocationSetDel__internal_alias __attribute((visibility("hidden")));
# 17442 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrLocationSetMerge) xmlXPtrLocationSetMerge__internal_alias __attribute((visibility("hidden")));
# 17454 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrLocationSetRemove) xmlXPtrLocationSetRemove__internal_alias __attribute((visibility("hidden")));
# 17466 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrNewCollapsedRange) xmlXPtrNewCollapsedRange__internal_alias __attribute((visibility("hidden")));
# 17478 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrNewContext) xmlXPtrNewContext__internal_alias __attribute((visibility("hidden")));
# 17490 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrNewLocationSetNodeSet) xmlXPtrNewLocationSetNodeSet__internal_alias __attribute((visibility("hidden")));
# 17502 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrNewLocationSetNodes) xmlXPtrNewLocationSetNodes__internal_alias __attribute((visibility("hidden")));
# 17514 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrNewRange) xmlXPtrNewRange__internal_alias __attribute((visibility("hidden")));
# 17526 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrNewRangeNodeObject) xmlXPtrNewRangeNodeObject__internal_alias __attribute((visibility("hidden")));
# 17538 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrNewRangeNodePoint) xmlXPtrNewRangeNodePoint__internal_alias __attribute((visibility("hidden")));
# 17550 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrNewRangeNodes) xmlXPtrNewRangeNodes__internal_alias __attribute((visibility("hidden")));
# 17562 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrNewRangePointNode) xmlXPtrNewRangePointNode__internal_alias __attribute((visibility("hidden")));
# 17574 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrNewRangePoints) xmlXPtrNewRangePoints__internal_alias __attribute((visibility("hidden")));
# 17586 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrRangeToFunction) xmlXPtrRangeToFunction__internal_alias __attribute((visibility("hidden")));
# 17598 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrWrapLocationSet) xmlXPtrWrapLocationSet__internal_alias __attribute((visibility("hidden")));
# 102 "/doner/libxml2/libxml2-4ea74a44/libxml2/libxml.h" 2
# 35 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 2
# 43 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/limits.h" 1 3 4
# 44 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 2
# 1 "/usr/include/string.h" 1 3 4
# 26 "/usr/include/string.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 27 "/usr/include/string.h" 2 3 4






# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 1 3 4
# 34 "/usr/include/string.h" 2 3 4
# 43 "/usr/include/string.h" 3 4

# 43 "/usr/include/string.h" 3 4
extern void *memcpy (void *__restrict __dest, const void *__restrict __src,
       size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern void *memmove (void *__dest, const void *__src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));





extern void *memccpy (void *__restrict __dest, const void *__restrict __src,
        int __c, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern void *memset (void *__s, int __c, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int memcmp (const void *__s1, const void *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 91 "/usr/include/string.h" 3 4
extern void *memchr (const void *__s, int __c, size_t __n)
      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 122 "/usr/include/string.h" 3 4
extern char *strcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strncpy (char *__restrict __dest,
        const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern char *strcat (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strncat (char *__restrict __dest, const char *__restrict __src,
        size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcmp (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern int strncmp (const char *__s1, const char *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcoll (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern size_t strxfrm (char *__restrict __dest,
         const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));



# 1 "/usr/include/x86_64-linux-gnu/bits/types/locale_t.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/types/locale_t.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3 4
struct __locale_struct
{

  struct __locale_data *__locales[13];


  const unsigned short int *__ctype_b;
  const int *__ctype_tolower;
  const int *__ctype_toupper;


  const char *__names[13];
};

typedef struct __locale_struct *__locale_t;
# 23 "/usr/include/x86_64-linux-gnu/bits/types/locale_t.h" 2 3 4

typedef __locale_t locale_t;
# 154 "/usr/include/string.h" 2 3 4


extern int strcoll_l (const char *__s1, const char *__s2, locale_t __l)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));


extern size_t strxfrm_l (char *__dest, const char *__src, size_t __n,
    locale_t __l) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4)));





extern char *strdup (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));






extern char *strndup (const char *__string, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));
# 226 "/usr/include/string.h" 3 4
extern char *strchr (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 253 "/usr/include/string.h" 3 4
extern char *strrchr (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 273 "/usr/include/string.h" 3 4
extern size_t strcspn (const char *__s, const char *__reject)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern size_t strspn (const char *__s, const char *__accept)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 303 "/usr/include/string.h" 3 4
extern char *strpbrk (const char *__s, const char *__accept)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 330 "/usr/include/string.h" 3 4
extern char *strstr (const char *__haystack, const char *__needle)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));




extern char *strtok (char *__restrict __s, const char *__restrict __delim)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));



extern char *__strtok_r (char *__restrict __s,
    const char *__restrict __delim,
    char **__restrict __save_ptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));

extern char *strtok_r (char *__restrict __s, const char *__restrict __delim,
         char **__restrict __save_ptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
# 385 "/usr/include/string.h" 3 4
extern size_t strlen (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));




extern size_t strnlen (const char *__string, size_t __maxlen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));




extern char *strerror (int __errnum) __attribute__ ((__nothrow__ , __leaf__));
# 410 "/usr/include/string.h" 3 4
extern int strerror_r (int __errnum, char *__buf, size_t __buflen) __asm__ ("" "__xpg_strerror_r") __attribute__ ((__nothrow__ , __leaf__))

                        __attribute__ ((__nonnull__ (2)));
# 428 "/usr/include/string.h" 3 4
extern char *strerror_l (int __errnum, locale_t __l) __attribute__ ((__nothrow__ , __leaf__));



# 1 "/usr/include/strings.h" 1 3 4
# 23 "/usr/include/strings.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 1 3 4
# 24 "/usr/include/strings.h" 2 3 4










extern int bcmp (const void *__s1, const void *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern void bcopy (const void *__src, void *__dest, size_t __n)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern void bzero (void *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 68 "/usr/include/strings.h" 3 4
extern char *index (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 96 "/usr/include/strings.h" 3 4
extern char *rindex (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));






extern int ffs (int __i) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));





extern int ffsl (long int __l) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
__extension__ extern int ffsll (long long int __ll)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern int strcasecmp (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strncasecmp (const char *__s1, const char *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));






extern int strcasecmp_l (const char *__s1, const char *__s2, locale_t __loc)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));



extern int strncasecmp_l (const char *__s1, const char *__s2,
     size_t __n, locale_t __loc)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 4)));








# 1 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3 4
extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void
__attribute__ ((__nothrow__ , __leaf__)) bcopy (const void *__src, void *__dest, size_t __len)
{
  (void) __builtin___memmove_chk (__dest, __src, __len, __builtin_object_size (__dest, 0));
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void
__attribute__ ((__nothrow__ , __leaf__)) bzero (void *__dest, size_t __len)
{
  (void) __builtin___memset_chk (__dest, '\0', __len, __builtin_object_size (__dest, 0));
}
# 145 "/usr/include/strings.h" 2 3 4
# 433 "/usr/include/string.h" 2 3 4



extern void explicit_bzero (void *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern char *strsep (char **__restrict __stringp,
       const char *__restrict __delim)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern char *strsignal (int __sig) __attribute__ ((__nothrow__ , __leaf__));


extern char *__stpcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern char *__stpncpy (char *__restrict __dest,
   const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpncpy (char *__restrict __dest,
        const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
# 495 "/usr/include/string.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 1 3 4
# 30 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3 4
extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void *
__attribute__ ((__nothrow__ , __leaf__)) memcpy (void *__restrict __dest, const void *__restrict __src, size_t __len)

{
  return __builtin___memcpy_chk (__dest, __src, __len, __builtin_object_size (__dest, 0));
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void *
__attribute__ ((__nothrow__ , __leaf__)) memmove (void *__dest, const void *__src, size_t __len)
{
  return __builtin___memmove_chk (__dest, __src, __len, __builtin_object_size (__dest, 0));
}
# 58 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3 4
extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void *
__attribute__ ((__nothrow__ , __leaf__)) memset (void *__dest, int __ch, size_t __len)
{
# 71 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3 4
  return __builtin___memset_chk (__dest, __ch, __len, __builtin_object_size (__dest, 0));
}




void __explicit_bzero_chk (void *__dest, size_t __len, size_t __destlen)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void
__attribute__ ((__nothrow__ , __leaf__)) explicit_bzero (void *__dest, size_t __len)
{
  __explicit_bzero_chk (__dest, __len, __builtin_object_size (__dest, 0));
}


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) strcpy (char *__restrict __dest, const char *__restrict __src)
{
  return __builtin___strcpy_chk (__dest, __src, __builtin_object_size (__dest, 2 > 1));
}
# 102 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3 4
extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) strncpy (char *__restrict __dest, const char *__restrict __src, size_t __len)

{
  return __builtin___strncpy_chk (__dest, __src, __len, __builtin_object_size (__dest, 2 > 1));
}


extern char *__stpncpy_chk (char *__dest, const char *__src, size_t __n,
       size_t __destlen) __attribute__ ((__nothrow__ , __leaf__));
extern char *__stpncpy_alias (char *__dest, const char *__src, size_t __n) __asm__ ("" "stpncpy") __attribute__ ((__nothrow__ , __leaf__))
                                 ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) stpncpy (char *__dest, const char *__src, size_t __n)
{
  if (__builtin_object_size (__dest, 2 > 1) != (size_t) -1
      && (!__builtin_constant_p (__n) || __n > __builtin_object_size (__dest, 2 > 1)))
    return __stpncpy_chk (__dest, __src, __n, __builtin_object_size (__dest, 2 > 1));
  return __stpncpy_alias (__dest, __src, __n);
}


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) strcat (char *__restrict __dest, const char *__restrict __src)
{
  return __builtin___strcat_chk (__dest, __src, __builtin_object_size (__dest, 2 > 1));
}


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) strncat (char *__restrict __dest, const char *__restrict __src, size_t __len)

{
  return __builtin___strncat_chk (__dest, __src, __len, __builtin_object_size (__dest, 2 > 1));
}
# 496 "/usr/include/string.h" 2 3 4




# 45 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 2
# 54 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
# 1 "./include/libxml/xmlerror.h" 1
# 55 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 2
# 66 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
# 1 "/usr/include/ctype.h" 1 3 4
# 28 "/usr/include/ctype.h" 3 4

# 46 "/usr/include/ctype.h" 3 4
enum
{
  _ISupper = ((0) < 8 ? ((1 << (0)) << 8) : ((1 << (0)) >> 8)),
  _ISlower = ((1) < 8 ? ((1 << (1)) << 8) : ((1 << (1)) >> 8)),
  _ISalpha = ((2) < 8 ? ((1 << (2)) << 8) : ((1 << (2)) >> 8)),
  _ISdigit = ((3) < 8 ? ((1 << (3)) << 8) : ((1 << (3)) >> 8)),
  _ISxdigit = ((4) < 8 ? ((1 << (4)) << 8) : ((1 << (4)) >> 8)),
  _ISspace = ((5) < 8 ? ((1 << (5)) << 8) : ((1 << (5)) >> 8)),
  _ISprint = ((6) < 8 ? ((1 << (6)) << 8) : ((1 << (6)) >> 8)),
  _ISgraph = ((7) < 8 ? ((1 << (7)) << 8) : ((1 << (7)) >> 8)),
  _ISblank = ((8) < 8 ? ((1 << (8)) << 8) : ((1 << (8)) >> 8)),
  _IScntrl = ((9) < 8 ? ((1 << (9)) << 8) : ((1 << (9)) >> 8)),
  _ISpunct = ((10) < 8 ? ((1 << (10)) << 8) : ((1 << (10)) >> 8)),
  _ISalnum = ((11) < 8 ? ((1 << (11)) << 8) : ((1 << (11)) >> 8))
};
# 79 "/usr/include/ctype.h" 3 4
extern const unsigned short int **__ctype_b_loc (void)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
extern const __int32_t **__ctype_tolower_loc (void)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
extern const __int32_t **__ctype_toupper_loc (void)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
# 108 "/usr/include/ctype.h" 3 4
extern int isalnum (int) __attribute__ ((__nothrow__ , __leaf__));
extern int isalpha (int) __attribute__ ((__nothrow__ , __leaf__));
extern int iscntrl (int) __attribute__ ((__nothrow__ , __leaf__));
extern int isdigit (int) __attribute__ ((__nothrow__ , __leaf__));
extern int islower (int) __attribute__ ((__nothrow__ , __leaf__));
extern int isgraph (int) __attribute__ ((__nothrow__ , __leaf__));
extern int isprint (int) __attribute__ ((__nothrow__ , __leaf__));
extern int ispunct (int) __attribute__ ((__nothrow__ , __leaf__));
extern int isspace (int) __attribute__ ((__nothrow__ , __leaf__));
extern int isupper (int) __attribute__ ((__nothrow__ , __leaf__));
extern int isxdigit (int) __attribute__ ((__nothrow__ , __leaf__));



extern int tolower (int __c) __attribute__ ((__nothrow__ , __leaf__));


extern int toupper (int __c) __attribute__ ((__nothrow__ , __leaf__));




extern int isblank (int) __attribute__ ((__nothrow__ , __leaf__));
# 142 "/usr/include/ctype.h" 3 4
extern int isascii (int __c) __attribute__ ((__nothrow__ , __leaf__));



extern int toascii (int __c) __attribute__ ((__nothrow__ , __leaf__));



extern int _toupper (int) __attribute__ ((__nothrow__ , __leaf__));
extern int _tolower (int) __attribute__ ((__nothrow__ , __leaf__));
# 206 "/usr/include/ctype.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) tolower (int __c)
{
  return __c >= -128 && __c < 256 ? (*__ctype_tolower_loc ())[__c] : __c;
}

extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) toupper (int __c)
{
  return __c >= -128 && __c < 256 ? (*__ctype_toupper_loc ())[__c] : __c;
}
# 251 "/usr/include/ctype.h" 3 4
extern int isalnum_l (int, locale_t) __attribute__ ((__nothrow__ , __leaf__));
extern int isalpha_l (int, locale_t) __attribute__ ((__nothrow__ , __leaf__));
extern int iscntrl_l (int, locale_t) __attribute__ ((__nothrow__ , __leaf__));
extern int isdigit_l (int, locale_t) __attribute__ ((__nothrow__ , __leaf__));
extern int islower_l (int, locale_t) __attribute__ ((__nothrow__ , __leaf__));
extern int isgraph_l (int, locale_t) __attribute__ ((__nothrow__ , __leaf__));
extern int isprint_l (int, locale_t) __attribute__ ((__nothrow__ , __leaf__));
extern int ispunct_l (int, locale_t) __attribute__ ((__nothrow__ , __leaf__));
extern int isspace_l (int, locale_t) __attribute__ ((__nothrow__ , __leaf__));
extern int isupper_l (int, locale_t) __attribute__ ((__nothrow__ , __leaf__));
extern int isxdigit_l (int, locale_t) __attribute__ ((__nothrow__ , __leaf__));

extern int isblank_l (int, locale_t) __attribute__ ((__nothrow__ , __leaf__));



extern int __tolower_l (int __c, locale_t __l) __attribute__ ((__nothrow__ , __leaf__));
extern int tolower_l (int __c, locale_t __l) __attribute__ ((__nothrow__ , __leaf__));


extern int __toupper_l (int __c, locale_t __l) __attribute__ ((__nothrow__ , __leaf__));
extern int toupper_l (int __c, locale_t __l) __attribute__ ((__nothrow__ , __leaf__));
# 327 "/usr/include/ctype.h" 3 4

# 67 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 2





# 1 "/usr/include/x86_64-linux-gnu/sys/stat.h" 1 3 4
# 99 "/usr/include/x86_64-linux-gnu/sys/stat.h" 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/stat.h" 1 3 4
# 46 "/usr/include/x86_64-linux-gnu/bits/stat.h" 3 4
struct stat
  {
    __dev_t st_dev;




    __ino_t st_ino;







    __nlink_t st_nlink;
    __mode_t st_mode;

    __uid_t st_uid;
    __gid_t st_gid;

    int __pad0;

    __dev_t st_rdev;




    __off_t st_size;



    __blksize_t st_blksize;

    __blkcnt_t st_blocks;
# 91 "/usr/include/x86_64-linux-gnu/bits/stat.h" 3 4
    struct timespec st_atim;
    struct timespec st_mtim;
    struct timespec st_ctim;
# 106 "/usr/include/x86_64-linux-gnu/bits/stat.h" 3 4
    __syscall_slong_t __glibc_reserved[3];
# 115 "/usr/include/x86_64-linux-gnu/bits/stat.h" 3 4
  };
# 102 "/usr/include/x86_64-linux-gnu/sys/stat.h" 2 3 4
# 213 "/usr/include/x86_64-linux-gnu/sys/stat.h" 3 4
extern int stat (const char *__restrict __file, struct stat *__restrict __buf) __asm__ ("" "stat64") __attribute__ ((__nothrow__ , __leaf__))

     __attribute__ ((__nonnull__ (1, 2)));
extern int fstat (int __fd, struct stat *__buf) __asm__ ("" "fstat64") __attribute__ ((__nothrow__ , __leaf__))
     __attribute__ ((__nonnull__ (2)));
# 239 "/usr/include/x86_64-linux-gnu/sys/stat.h" 3 4
extern int fstatat (int __fd, const char *__restrict __file, struct stat *__restrict __buf, int __flag) __asm__ ("" "fstatat64") __attribute__ ((__nothrow__ , __leaf__))


                 __attribute__ ((__nonnull__ (2, 3)));
# 263 "/usr/include/x86_64-linux-gnu/sys/stat.h" 3 4
extern int lstat (const char *__restrict __file, struct stat *__restrict __buf) __asm__ ("" "lstat64") __attribute__ ((__nothrow__ , __leaf__))


     __attribute__ ((__nonnull__ (1, 2)));
# 280 "/usr/include/x86_64-linux-gnu/sys/stat.h" 3 4
extern int chmod (const char *__file, __mode_t __mode)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int lchmod (const char *__file, __mode_t __mode)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));




extern int fchmod (int __fd, __mode_t __mode) __attribute__ ((__nothrow__ , __leaf__));





extern int fchmodat (int __fd, const char *__file, __mode_t __mode,
       int __flag)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2))) __attribute__ ((__warn_unused_result__));






extern __mode_t umask (__mode_t __mask) __attribute__ ((__nothrow__ , __leaf__));
# 317 "/usr/include/x86_64-linux-gnu/sys/stat.h" 3 4
extern int mkdir (const char *__path, __mode_t __mode)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int mkdirat (int __fd, const char *__path, __mode_t __mode)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));






extern int mknod (const char *__path, __mode_t __mode, __dev_t __dev)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int mknodat (int __fd, const char *__path, __mode_t __mode,
      __dev_t __dev) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));





extern int mkfifo (const char *__path, __mode_t __mode)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int mkfifoat (int __fd, const char *__path, __mode_t __mode)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));





extern int utimensat (int __fd, const char *__path,
        const struct timespec __times[2],
        int __flags)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));




extern int futimens (int __fd, const struct timespec __times[2]) __attribute__ ((__nothrow__ , __leaf__));
# 406 "/usr/include/x86_64-linux-gnu/sys/stat.h" 3 4
extern int __fxstat (int __ver, int __fildes, struct stat *__stat_buf) __asm__ ("" "__fxstat64") __attribute__ ((__nothrow__ , __leaf__))

     __attribute__ ((__nonnull__ (3)));
extern int __xstat (int __ver, const char *__filename, struct stat *__stat_buf) __asm__ ("" "__xstat64") __attribute__ ((__nothrow__ , __leaf__))

     __attribute__ ((__nonnull__ (2, 3)));
extern int __lxstat (int __ver, const char *__filename, struct stat *__stat_buf) __asm__ ("" "__lxstat64") __attribute__ ((__nothrow__ , __leaf__))

     __attribute__ ((__nonnull__ (2, 3)));
extern int __fxstatat (int __ver, int __fildes, const char *__filename, struct stat *__stat_buf, int __flag) __asm__ ("" "__fxstatat64") __attribute__ ((__nothrow__ , __leaf__))


                    __attribute__ ((__nonnull__ (3, 4)));
# 438 "/usr/include/x86_64-linux-gnu/sys/stat.h" 3 4
extern int __xmknod (int __ver, const char *__path, __mode_t __mode,
       __dev_t *__dev) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4)));

extern int __xmknodat (int __ver, int __fd, const char *__path,
         __mode_t __mode, __dev_t *__dev)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 5)));
# 452 "/usr/include/x86_64-linux-gnu/sys/stat.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) stat (const char *__path, struct stat *__statbuf)
{
  return __xstat (1, __path, __statbuf);
}


extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) lstat (const char *__path, struct stat *__statbuf)
{
  return __lxstat (1, __path, __statbuf);
}


extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) fstat (int __fd, struct stat *__statbuf)
{
  return __fxstat (1, __fd, __statbuf);
}


extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) fstatat (int __fd, const char *__filename, struct stat *__statbuf, int __flag)

{
  return __fxstatat (1, __fd, __filename, __statbuf, __flag);
}



extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) mknod (const char *__path, __mode_t __mode, __dev_t __dev)
{
  return __xmknod (0, __path, __mode, &__dev);
}



extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) mknodat (int __fd, const char *__path, __mode_t __mode, __dev_t __dev)

{
  return __xmknodat (0, __fd, __path, __mode, &__dev);
}
# 534 "/usr/include/x86_64-linux-gnu/sys/stat.h" 3 4

# 73 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 2


# 1 "/usr/include/fcntl.h" 1 3 4
# 28 "/usr/include/fcntl.h" 3 4







# 1 "/usr/include/x86_64-linux-gnu/bits/fcntl.h" 1 3 4
# 35 "/usr/include/x86_64-linux-gnu/bits/fcntl.h" 3 4
struct flock
  {
    short int l_type;
    short int l_whence;




    __off64_t l_start;
    __off64_t l_len;

    __pid_t l_pid;
  };
# 61 "/usr/include/x86_64-linux-gnu/bits/fcntl.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/fcntl-linux.h" 1 3 4
# 392 "/usr/include/x86_64-linux-gnu/bits/fcntl-linux.h" 3 4

# 466 "/usr/include/x86_64-linux-gnu/bits/fcntl-linux.h" 3 4

# 61 "/usr/include/x86_64-linux-gnu/bits/fcntl.h" 2 3 4
# 36 "/usr/include/fcntl.h" 2 3 4
# 78 "/usr/include/fcntl.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/stat.h" 1 3 4
# 79 "/usr/include/fcntl.h" 2 3 4
# 151 "/usr/include/fcntl.h" 3 4
extern int fcntl (int __fd, int __cmd, ...) __asm__ ("" "fcntl64");
# 171 "/usr/include/fcntl.h" 3 4
extern int open (const char *__file, int __oflag, ...) __asm__ ("" "open64")
     __attribute__ ((__nonnull__ (1)));
# 196 "/usr/include/fcntl.h" 3 4
extern int openat (int __fd, const char *__file, int __oflag, ...) __asm__ ("" "openat64")
                    __attribute__ ((__nonnull__ (2)));
# 217 "/usr/include/fcntl.h" 3 4
extern int creat (const char *__file, mode_t __mode) __asm__ ("" "creat64")
                  __attribute__ ((__nonnull__ (1)));
# 246 "/usr/include/fcntl.h" 3 4
extern int lockf (int __fd, int __cmd, __off64_t __len) __asm__ ("" "lockf64");
# 264 "/usr/include/fcntl.h" 3 4
extern int posix_fadvise (int __fd, __off64_t __offset, __off64_t __len, int __advise) __asm__ ("" "posix_fadvise64") __attribute__ ((__nothrow__ , __leaf__))

                      ;
# 285 "/usr/include/fcntl.h" 3 4
extern int posix_fallocate (int __fd, __off64_t __offset, __off64_t __len) __asm__ ("" "posix_fallocate64")

                           ;
# 301 "/usr/include/fcntl.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/fcntl2.h" 1 3 4
# 30 "/usr/include/x86_64-linux-gnu/bits/fcntl2.h" 3 4
extern int __open_2 (const char *__path, int __oflag) __asm__ ("" "__open64_2")
                     __attribute__ ((__nonnull__ (1)));
extern int __open_alias (const char *__path, int __oflag, ...) __asm__ ("" "open64")
                 __attribute__ ((__nonnull__ (1)));

extern void __open_too_many_args (void) __attribute__((__error__ ("open can be called either with 2 or 3 arguments, not more")))
                                                                  ;
extern void __open_missing_mode (void) __attribute__((__error__ ("open with O_CREAT or O_TMPFILE in second argument needs 3 arguments")))
                                                                            ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
open (const char *__path, int __oflag, ...)
{
  if (__builtin_va_arg_pack_len () > 1)
    __open_too_many_args ();

  if (__builtin_constant_p (__oflag))
    {
      if ((((__oflag) & 0100) != 0 || ((__oflag) & (020000000 | 0200000)) == (020000000 | 0200000)) && __builtin_va_arg_pack_len () < 1)
 {
   __open_missing_mode ();
   return __open_2 (__path, __oflag);
 }
      return __open_alias (__path, __oflag, __builtin_va_arg_pack ());
    }

  if (__builtin_va_arg_pack_len () < 1)
    return __open_2 (__path, __oflag);

  return __open_alias (__path, __oflag, __builtin_va_arg_pack ());
}
# 104 "/usr/include/x86_64-linux-gnu/bits/fcntl2.h" 3 4
extern int __openat_2 (int __fd, const char *__path, int __oflag) __asm__ ("" "__openat64_2")

     __attribute__ ((__nonnull__ (2)));
extern int __openat_alias (int __fd, const char *__path, int __oflag, ...) __asm__ ("" "openat64")

     __attribute__ ((__nonnull__ (2)));

extern void __openat_too_many_args (void) __attribute__((__error__ ("openat can be called either with 3 or 4 arguments, not more")))
                                                                    ;
extern void __openat_missing_mode (void) __attribute__((__error__ ("openat with O_CREAT or O_TMPFILE in third argument needs 4 arguments")))
                                                                             ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
openat (int __fd, const char *__path, int __oflag, ...)
{
  if (__builtin_va_arg_pack_len () > 1)
    __openat_too_many_args ();

  if (__builtin_constant_p (__oflag))
    {
      if ((((__oflag) & 0100) != 0 || ((__oflag) & (020000000 | 0200000)) == (020000000 | 0200000)) && __builtin_va_arg_pack_len () < 1)
 {
   __openat_missing_mode ();
   return __openat_2 (__fd, __path, __oflag);
 }
      return __openat_alias (__fd, __path, __oflag, __builtin_va_arg_pack ());
    }

  if (__builtin_va_arg_pack_len () < 1)
    return __openat_2 (__fd, __path, __oflag);

  return __openat_alias (__fd, __path, __oflag, __builtin_va_arg_pack ());
}
# 302 "/usr/include/fcntl.h" 2 3 4



# 76 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 2


# 1 "/usr/include/unistd.h" 1 3 4
# 27 "/usr/include/unistd.h" 3 4

# 202 "/usr/include/unistd.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/posix_opt.h" 1 3 4
# 203 "/usr/include/unistd.h" 2 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/environments.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/environments.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/environments.h" 2 3 4
# 207 "/usr/include/unistd.h" 2 3 4
# 226 "/usr/include/unistd.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 1 3 4
# 227 "/usr/include/unistd.h" 2 3 4
# 255 "/usr/include/unistd.h" 3 4
typedef __useconds_t useconds_t;
# 267 "/usr/include/unistd.h" 3 4
typedef __intptr_t intptr_t;






typedef __socklen_t socklen_t;
# 287 "/usr/include/unistd.h" 3 4
extern int access (const char *__name, int __type) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 304 "/usr/include/unistd.h" 3 4
extern int faccessat (int __fd, const char *__file, int __type, int __flag)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2))) __attribute__ ((__warn_unused_result__));
# 337 "/usr/include/unistd.h" 3 4
extern __off64_t lseek (int __fd, __off64_t __offset, int __whence) __asm__ ("" "lseek64") __attribute__ ((__nothrow__ , __leaf__))

             ;
# 353 "/usr/include/unistd.h" 3 4
extern int close (int __fd);






extern ssize_t read (int __fd, void *__buf, size_t __nbytes) __attribute__ ((__warn_unused_result__));





extern ssize_t write (int __fd, const void *__buf, size_t __n) __attribute__ ((__warn_unused_result__));
# 388 "/usr/include/unistd.h" 3 4
extern ssize_t pread (int __fd, void *__buf, size_t __nbytes, __off64_t __offset) __asm__ ("" "pread64")

               __attribute__ ((__warn_unused_result__));
extern ssize_t pwrite (int __fd, const void *__buf, size_t __nbytes, __off64_t __offset) __asm__ ("" "pwrite64")

                __attribute__ ((__warn_unused_result__));
# 417 "/usr/include/unistd.h" 3 4
extern int pipe (int __pipedes[2]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
# 432 "/usr/include/unistd.h" 3 4
extern unsigned int alarm (unsigned int __seconds) __attribute__ ((__nothrow__ , __leaf__));
# 444 "/usr/include/unistd.h" 3 4
extern unsigned int sleep (unsigned int __seconds);







extern __useconds_t ualarm (__useconds_t __value, __useconds_t __interval)
     __attribute__ ((__nothrow__ , __leaf__));






extern int usleep (__useconds_t __useconds);
# 469 "/usr/include/unistd.h" 3 4
extern int pause (void);



extern int chown (const char *__file, __uid_t __owner, __gid_t __group)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));



extern int fchown (int __fd, __uid_t __owner, __gid_t __group) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern int lchown (const char *__file, __uid_t __owner, __gid_t __group)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));






extern int fchownat (int __fd, const char *__file, __uid_t __owner,
       __gid_t __group, int __flag)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2))) __attribute__ ((__warn_unused_result__));



extern int chdir (const char *__path) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));



extern int fchdir (int __fd) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
# 511 "/usr/include/unistd.h" 3 4
extern char *getcwd (char *__buf, size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
# 525 "/usr/include/unistd.h" 3 4
extern char *getwd (char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__deprecated__)) __attribute__ ((__warn_unused_result__));




extern int dup (int __fd) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));


extern int dup2 (int __fd, int __fd2) __attribute__ ((__nothrow__ , __leaf__));
# 543 "/usr/include/unistd.h" 3 4
extern char **__environ;







extern int execve (const char *__path, char *const __argv[],
     char *const __envp[]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern int fexecve (int __fd, char *const __argv[], char *const __envp[])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));




extern int execv (const char *__path, char *const __argv[])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern int execle (const char *__path, const char *__arg, ...)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern int execl (const char *__path, const char *__arg, ...)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern int execvp (const char *__file, char *const __argv[])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern int execlp (const char *__file, const char *__arg, ...)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
# 598 "/usr/include/unistd.h" 3 4
extern int nice (int __inc) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern void _exit (int __status) __attribute__ ((__noreturn__));





# 1 "/usr/include/x86_64-linux-gnu/bits/confname.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/confname.h" 3 4
enum
  {
    _PC_LINK_MAX,

    _PC_MAX_CANON,

    _PC_MAX_INPUT,

    _PC_NAME_MAX,

    _PC_PATH_MAX,

    _PC_PIPE_BUF,

    _PC_CHOWN_RESTRICTED,

    _PC_NO_TRUNC,

    _PC_VDISABLE,

    _PC_SYNC_IO,

    _PC_ASYNC_IO,

    _PC_PRIO_IO,

    _PC_SOCK_MAXBUF,

    _PC_FILESIZEBITS,

    _PC_REC_INCR_XFER_SIZE,

    _PC_REC_MAX_XFER_SIZE,

    _PC_REC_MIN_XFER_SIZE,

    _PC_REC_XFER_ALIGN,

    _PC_ALLOC_SIZE_MIN,

    _PC_SYMLINK_MAX,

    _PC_2_SYMLINKS

  };


enum
  {
    _SC_ARG_MAX,

    _SC_CHILD_MAX,

    _SC_CLK_TCK,

    _SC_NGROUPS_MAX,

    _SC_OPEN_MAX,

    _SC_STREAM_MAX,

    _SC_TZNAME_MAX,

    _SC_JOB_CONTROL,

    _SC_SAVED_IDS,

    _SC_REALTIME_SIGNALS,

    _SC_PRIORITY_SCHEDULING,

    _SC_TIMERS,

    _SC_ASYNCHRONOUS_IO,

    _SC_PRIORITIZED_IO,

    _SC_SYNCHRONIZED_IO,

    _SC_FSYNC,

    _SC_MAPPED_FILES,

    _SC_MEMLOCK,

    _SC_MEMLOCK_RANGE,

    _SC_MEMORY_PROTECTION,

    _SC_MESSAGE_PASSING,

    _SC_SEMAPHORES,

    _SC_SHARED_MEMORY_OBJECTS,

    _SC_AIO_LISTIO_MAX,

    _SC_AIO_MAX,

    _SC_AIO_PRIO_DELTA_MAX,

    _SC_DELAYTIMER_MAX,

    _SC_MQ_OPEN_MAX,

    _SC_MQ_PRIO_MAX,

    _SC_VERSION,

    _SC_PAGESIZE,


    _SC_RTSIG_MAX,

    _SC_SEM_NSEMS_MAX,

    _SC_SEM_VALUE_MAX,

    _SC_SIGQUEUE_MAX,

    _SC_TIMER_MAX,




    _SC_BC_BASE_MAX,

    _SC_BC_DIM_MAX,

    _SC_BC_SCALE_MAX,

    _SC_BC_STRING_MAX,

    _SC_COLL_WEIGHTS_MAX,

    _SC_EQUIV_CLASS_MAX,

    _SC_EXPR_NEST_MAX,

    _SC_LINE_MAX,

    _SC_RE_DUP_MAX,

    _SC_CHARCLASS_NAME_MAX,


    _SC_2_VERSION,

    _SC_2_C_BIND,

    _SC_2_C_DEV,

    _SC_2_FORT_DEV,

    _SC_2_FORT_RUN,

    _SC_2_SW_DEV,

    _SC_2_LOCALEDEF,


    _SC_PII,

    _SC_PII_XTI,

    _SC_PII_SOCKET,

    _SC_PII_INTERNET,

    _SC_PII_OSI,

    _SC_POLL,

    _SC_SELECT,

    _SC_UIO_MAXIOV,

    _SC_IOV_MAX = _SC_UIO_MAXIOV,

    _SC_PII_INTERNET_STREAM,

    _SC_PII_INTERNET_DGRAM,

    _SC_PII_OSI_COTS,

    _SC_PII_OSI_CLTS,

    _SC_PII_OSI_M,

    _SC_T_IOV_MAX,



    _SC_THREADS,

    _SC_THREAD_SAFE_FUNCTIONS,

    _SC_GETGR_R_SIZE_MAX,

    _SC_GETPW_R_SIZE_MAX,

    _SC_LOGIN_NAME_MAX,

    _SC_TTY_NAME_MAX,

    _SC_THREAD_DESTRUCTOR_ITERATIONS,

    _SC_THREAD_KEYS_MAX,

    _SC_THREAD_STACK_MIN,

    _SC_THREAD_THREADS_MAX,

    _SC_THREAD_ATTR_STACKADDR,

    _SC_THREAD_ATTR_STACKSIZE,

    _SC_THREAD_PRIORITY_SCHEDULING,

    _SC_THREAD_PRIO_INHERIT,

    _SC_THREAD_PRIO_PROTECT,

    _SC_THREAD_PROCESS_SHARED,


    _SC_NPROCESSORS_CONF,

    _SC_NPROCESSORS_ONLN,

    _SC_PHYS_PAGES,

    _SC_AVPHYS_PAGES,

    _SC_ATEXIT_MAX,

    _SC_PASS_MAX,


    _SC_XOPEN_VERSION,

    _SC_XOPEN_XCU_VERSION,

    _SC_XOPEN_UNIX,

    _SC_XOPEN_CRYPT,

    _SC_XOPEN_ENH_I18N,

    _SC_XOPEN_SHM,


    _SC_2_CHAR_TERM,

    _SC_2_C_VERSION,

    _SC_2_UPE,


    _SC_XOPEN_XPG2,

    _SC_XOPEN_XPG3,

    _SC_XOPEN_XPG4,


    _SC_CHAR_BIT,

    _SC_CHAR_MAX,

    _SC_CHAR_MIN,

    _SC_INT_MAX,

    _SC_INT_MIN,

    _SC_LONG_BIT,

    _SC_WORD_BIT,

    _SC_MB_LEN_MAX,

    _SC_NZERO,

    _SC_SSIZE_MAX,

    _SC_SCHAR_MAX,

    _SC_SCHAR_MIN,

    _SC_SHRT_MAX,

    _SC_SHRT_MIN,

    _SC_UCHAR_MAX,

    _SC_UINT_MAX,

    _SC_ULONG_MAX,

    _SC_USHRT_MAX,


    _SC_NL_ARGMAX,

    _SC_NL_LANGMAX,

    _SC_NL_MSGMAX,

    _SC_NL_NMAX,

    _SC_NL_SETMAX,

    _SC_NL_TEXTMAX,


    _SC_XBS5_ILP32_OFF32,

    _SC_XBS5_ILP32_OFFBIG,

    _SC_XBS5_LP64_OFF64,

    _SC_XBS5_LPBIG_OFFBIG,


    _SC_XOPEN_LEGACY,

    _SC_XOPEN_REALTIME,

    _SC_XOPEN_REALTIME_THREADS,


    _SC_ADVISORY_INFO,

    _SC_BARRIERS,

    _SC_BASE,

    _SC_C_LANG_SUPPORT,

    _SC_C_LANG_SUPPORT_R,

    _SC_CLOCK_SELECTION,

    _SC_CPUTIME,

    _SC_THREAD_CPUTIME,

    _SC_DEVICE_IO,

    _SC_DEVICE_SPECIFIC,

    _SC_DEVICE_SPECIFIC_R,

    _SC_FD_MGMT,

    _SC_FIFO,

    _SC_PIPE,

    _SC_FILE_ATTRIBUTES,

    _SC_FILE_LOCKING,

    _SC_FILE_SYSTEM,

    _SC_MONOTONIC_CLOCK,

    _SC_MULTI_PROCESS,

    _SC_SINGLE_PROCESS,

    _SC_NETWORKING,

    _SC_READER_WRITER_LOCKS,

    _SC_SPIN_LOCKS,

    _SC_REGEXP,

    _SC_REGEX_VERSION,

    _SC_SHELL,

    _SC_SIGNALS,

    _SC_SPAWN,

    _SC_SPORADIC_SERVER,

    _SC_THREAD_SPORADIC_SERVER,

    _SC_SYSTEM_DATABASE,

    _SC_SYSTEM_DATABASE_R,

    _SC_TIMEOUTS,

    _SC_TYPED_MEMORY_OBJECTS,

    _SC_USER_GROUPS,

    _SC_USER_GROUPS_R,

    _SC_2_PBS,

    _SC_2_PBS_ACCOUNTING,

    _SC_2_PBS_LOCATE,

    _SC_2_PBS_MESSAGE,

    _SC_2_PBS_TRACK,

    _SC_SYMLOOP_MAX,

    _SC_STREAMS,

    _SC_2_PBS_CHECKPOINT,


    _SC_V6_ILP32_OFF32,

    _SC_V6_ILP32_OFFBIG,

    _SC_V6_LP64_OFF64,

    _SC_V6_LPBIG_OFFBIG,


    _SC_HOST_NAME_MAX,

    _SC_TRACE,

    _SC_TRACE_EVENT_FILTER,

    _SC_TRACE_INHERIT,

    _SC_TRACE_LOG,


    _SC_LEVEL1_ICACHE_SIZE,

    _SC_LEVEL1_ICACHE_ASSOC,

    _SC_LEVEL1_ICACHE_LINESIZE,

    _SC_LEVEL1_DCACHE_SIZE,

    _SC_LEVEL1_DCACHE_ASSOC,

    _SC_LEVEL1_DCACHE_LINESIZE,

    _SC_LEVEL2_CACHE_SIZE,

    _SC_LEVEL2_CACHE_ASSOC,

    _SC_LEVEL2_CACHE_LINESIZE,

    _SC_LEVEL3_CACHE_SIZE,

    _SC_LEVEL3_CACHE_ASSOC,

    _SC_LEVEL3_CACHE_LINESIZE,

    _SC_LEVEL4_CACHE_SIZE,

    _SC_LEVEL4_CACHE_ASSOC,

    _SC_LEVEL4_CACHE_LINESIZE,



    _SC_IPV6 = _SC_LEVEL1_ICACHE_SIZE + 50,

    _SC_RAW_SOCKETS,


    _SC_V7_ILP32_OFF32,

    _SC_V7_ILP32_OFFBIG,

    _SC_V7_LP64_OFF64,

    _SC_V7_LPBIG_OFFBIG,


    _SC_SS_REPL_MAX,


    _SC_TRACE_EVENT_NAME_MAX,

    _SC_TRACE_NAME_MAX,

    _SC_TRACE_SYS_MAX,

    _SC_TRACE_USER_EVENT_MAX,


    _SC_XOPEN_STREAMS,


    _SC_THREAD_ROBUST_PRIO_INHERIT,

    _SC_THREAD_ROBUST_PRIO_PROTECT

  };


enum
  {
    _CS_PATH,


    _CS_V6_WIDTH_RESTRICTED_ENVS,



    _CS_GNU_LIBC_VERSION,

    _CS_GNU_LIBPTHREAD_VERSION,


    _CS_V5_WIDTH_RESTRICTED_ENVS,



    _CS_V7_WIDTH_RESTRICTED_ENVS,



    _CS_LFS_CFLAGS = 1000,

    _CS_LFS_LDFLAGS,

    _CS_LFS_LIBS,

    _CS_LFS_LINTFLAGS,

    _CS_LFS64_CFLAGS,

    _CS_LFS64_LDFLAGS,

    _CS_LFS64_LIBS,

    _CS_LFS64_LINTFLAGS,


    _CS_XBS5_ILP32_OFF32_CFLAGS = 1100,

    _CS_XBS5_ILP32_OFF32_LDFLAGS,

    _CS_XBS5_ILP32_OFF32_LIBS,

    _CS_XBS5_ILP32_OFF32_LINTFLAGS,

    _CS_XBS5_ILP32_OFFBIG_CFLAGS,

    _CS_XBS5_ILP32_OFFBIG_LDFLAGS,

    _CS_XBS5_ILP32_OFFBIG_LIBS,

    _CS_XBS5_ILP32_OFFBIG_LINTFLAGS,

    _CS_XBS5_LP64_OFF64_CFLAGS,

    _CS_XBS5_LP64_OFF64_LDFLAGS,

    _CS_XBS5_LP64_OFF64_LIBS,

    _CS_XBS5_LP64_OFF64_LINTFLAGS,

    _CS_XBS5_LPBIG_OFFBIG_CFLAGS,

    _CS_XBS5_LPBIG_OFFBIG_LDFLAGS,

    _CS_XBS5_LPBIG_OFFBIG_LIBS,

    _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,


    _CS_POSIX_V6_ILP32_OFF32_CFLAGS,

    _CS_POSIX_V6_ILP32_OFF32_LDFLAGS,

    _CS_POSIX_V6_ILP32_OFF32_LIBS,

    _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,

    _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,

    _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,

    _CS_POSIX_V6_ILP32_OFFBIG_LIBS,

    _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,

    _CS_POSIX_V6_LP64_OFF64_CFLAGS,

    _CS_POSIX_V6_LP64_OFF64_LDFLAGS,

    _CS_POSIX_V6_LP64_OFF64_LIBS,

    _CS_POSIX_V6_LP64_OFF64_LINTFLAGS,

    _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,

    _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,

    _CS_POSIX_V6_LPBIG_OFFBIG_LIBS,

    _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS,


    _CS_POSIX_V7_ILP32_OFF32_CFLAGS,

    _CS_POSIX_V7_ILP32_OFF32_LDFLAGS,

    _CS_POSIX_V7_ILP32_OFF32_LIBS,

    _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS,

    _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS,

    _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS,

    _CS_POSIX_V7_ILP32_OFFBIG_LIBS,

    _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS,

    _CS_POSIX_V7_LP64_OFF64_CFLAGS,

    _CS_POSIX_V7_LP64_OFF64_LDFLAGS,

    _CS_POSIX_V7_LP64_OFF64_LIBS,

    _CS_POSIX_V7_LP64_OFF64_LINTFLAGS,

    _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS,

    _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS,

    _CS_POSIX_V7_LPBIG_OFFBIG_LIBS,

    _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS,


    _CS_V6_ENV,

    _CS_V7_ENV

  };
# 610 "/usr/include/unistd.h" 2 3 4


extern long int pathconf (const char *__path, int __name)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int fpathconf (int __fd, int __name) __attribute__ ((__nothrow__ , __leaf__));


extern long int sysconf (int __name) __attribute__ ((__nothrow__ , __leaf__));



extern size_t confstr (int __name, char *__buf, size_t __len) __attribute__ ((__nothrow__ , __leaf__));




extern __pid_t getpid (void) __attribute__ ((__nothrow__ , __leaf__));


extern __pid_t getppid (void) __attribute__ ((__nothrow__ , __leaf__));


extern __pid_t getpgrp (void) __attribute__ ((__nothrow__ , __leaf__));


extern __pid_t __getpgid (__pid_t __pid) __attribute__ ((__nothrow__ , __leaf__));

extern __pid_t getpgid (__pid_t __pid) __attribute__ ((__nothrow__ , __leaf__));






extern int setpgid (__pid_t __pid, __pid_t __pgid) __attribute__ ((__nothrow__ , __leaf__));
# 660 "/usr/include/unistd.h" 3 4
extern int setpgrp (void) __attribute__ ((__nothrow__ , __leaf__));






extern __pid_t setsid (void) __attribute__ ((__nothrow__ , __leaf__));



extern __pid_t getsid (__pid_t __pid) __attribute__ ((__nothrow__ , __leaf__));



extern __uid_t getuid (void) __attribute__ ((__nothrow__ , __leaf__));


extern __uid_t geteuid (void) __attribute__ ((__nothrow__ , __leaf__));


extern __gid_t getgid (void) __attribute__ ((__nothrow__ , __leaf__));


extern __gid_t getegid (void) __attribute__ ((__nothrow__ , __leaf__));




extern int getgroups (int __size, __gid_t __list[]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
# 700 "/usr/include/unistd.h" 3 4
extern int setuid (__uid_t __uid) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern int setreuid (__uid_t __ruid, __uid_t __euid) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern int seteuid (__uid_t __uid) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));






extern int setgid (__gid_t __gid) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern int setregid (__gid_t __rgid, __gid_t __egid) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern int setegid (__gid_t __gid) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
# 756 "/usr/include/unistd.h" 3 4
extern __pid_t fork (void) __attribute__ ((__nothrow__));







extern __pid_t vfork (void) __attribute__ ((__nothrow__ , __leaf__));





extern char *ttyname (int __fd) __attribute__ ((__nothrow__ , __leaf__));



extern int ttyname_r (int __fd, char *__buf, size_t __buflen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2))) __attribute__ ((__warn_unused_result__));



extern int isatty (int __fd) __attribute__ ((__nothrow__ , __leaf__));




extern int ttyslot (void) __attribute__ ((__nothrow__ , __leaf__));




extern int link (const char *__from, const char *__to)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2))) __attribute__ ((__warn_unused_result__));




extern int linkat (int __fromfd, const char *__from, int __tofd,
     const char *__to, int __flags)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4))) __attribute__ ((__warn_unused_result__));




extern int symlink (const char *__from, const char *__to)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2))) __attribute__ ((__warn_unused_result__));




extern ssize_t readlink (const char *__restrict __path,
    char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2))) __attribute__ ((__warn_unused_result__));




extern int symlinkat (const char *__from, int __tofd,
        const char *__to) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 3))) __attribute__ ((__warn_unused_result__));


extern ssize_t readlinkat (int __fd, const char *__restrict __path,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3))) __attribute__ ((__warn_unused_result__));



extern int unlink (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int unlinkat (int __fd, const char *__name, int __flag)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));



extern int rmdir (const char *__path) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern __pid_t tcgetpgrp (int __fd) __attribute__ ((__nothrow__ , __leaf__));


extern int tcsetpgrp (int __fd, __pid_t __pgrp_id) __attribute__ ((__nothrow__ , __leaf__));






extern char *getlogin (void);







extern int getlogin_r (char *__name, size_t __name_len) __attribute__ ((__nonnull__ (1)));




extern int setlogin (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







# 1 "/usr/include/x86_64-linux-gnu/bits/getopt_posix.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/bits/getopt_posix.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/getopt_core.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/getopt_core.h" 3 4








extern char *optarg;
# 50 "/usr/include/x86_64-linux-gnu/bits/getopt_core.h" 3 4
extern int optind;




extern int opterr;



extern int optopt;
# 91 "/usr/include/x86_64-linux-gnu/bits/getopt_core.h" 3 4
extern int getopt (int ___argc, char *const *___argv, const char *__shortopts)
       __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));


# 28 "/usr/include/x86_64-linux-gnu/bits/getopt_posix.h" 2 3 4


# 49 "/usr/include/x86_64-linux-gnu/bits/getopt_posix.h" 3 4

# 870 "/usr/include/unistd.h" 2 3 4







extern int gethostname (char *__name, size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern int sethostname (const char *__name, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));



extern int sethostid (long int __id) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));





extern int getdomainname (char *__name, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
extern int setdomainname (const char *__name, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));





extern int vhangup (void) __attribute__ ((__nothrow__ , __leaf__));


extern int revoke (const char *__file) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));







extern int profil (unsigned short int *__sample_buffer, size_t __size,
     size_t __offset, unsigned int __scale)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int acct (const char *__name) __attribute__ ((__nothrow__ , __leaf__));



extern char *getusershell (void) __attribute__ ((__nothrow__ , __leaf__));
extern void endusershell (void) __attribute__ ((__nothrow__ , __leaf__));
extern void setusershell (void) __attribute__ ((__nothrow__ , __leaf__));





extern int daemon (int __nochdir, int __noclose) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));






extern int chroot (const char *__path) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));



extern char *getpass (const char *__prompt) __attribute__ ((__nonnull__ (1)));







extern int fsync (int __fd);
# 967 "/usr/include/unistd.h" 3 4
extern long int gethostid (void);


extern void sync (void) __attribute__ ((__nothrow__ , __leaf__));





extern int getpagesize (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));




extern int getdtablesize (void) __attribute__ ((__nothrow__ , __leaf__));
# 995 "/usr/include/unistd.h" 3 4
extern int truncate (const char *__file, __off64_t __length) __asm__ ("" "truncate64") __attribute__ ((__nothrow__ , __leaf__))

                  __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 1017 "/usr/include/unistd.h" 3 4
extern int ftruncate (int __fd, __off64_t __length) __asm__ ("" "ftruncate64") __attribute__ ((__nothrow__ , __leaf__))
                   __attribute__ ((__warn_unused_result__));
# 1035 "/usr/include/unistd.h" 3 4
extern int brk (void *__addr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));





extern void *sbrk (intptr_t __delta) __attribute__ ((__nothrow__ , __leaf__));
# 1056 "/usr/include/unistd.h" 3 4
extern long int syscall (long int __sysno, ...) __attribute__ ((__nothrow__ , __leaf__));
# 1115 "/usr/include/unistd.h" 3 4
extern int fdatasync (int __fildes);
# 1124 "/usr/include/unistd.h" 3 4
extern char *crypt (const char *__key, const char *__salt)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
# 1161 "/usr/include/unistd.h" 3 4
int getentropy (void *__buffer, size_t __length) __attribute__ ((__warn_unused_result__));




# 1 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3 4
extern ssize_t __read_chk (int __fd, void *__buf, size_t __nbytes,
      size_t __buflen) __attribute__ ((__warn_unused_result__));
extern ssize_t __read_alias (int __fd, void *__buf, size_t __nbytes) __asm__ ("" "read")
                               __attribute__ ((__warn_unused_result__));
extern ssize_t __read_chk_warn (int __fd, void *__buf, size_t __nbytes, size_t __buflen) __asm__ ("" "__read_chk")


     __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("read called with bigger length than size of " "the destination buffer")))
                                  ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) ssize_t
read (int __fd, void *__buf, size_t __nbytes)
{
  if (__builtin_object_size (__buf, 0) != (size_t) -1)
    {
      if (!__builtin_constant_p (__nbytes))
 return __read_chk (__fd, __buf, __nbytes, __builtin_object_size (__buf, 0));

      if (__nbytes > __builtin_object_size (__buf, 0))
 return __read_chk_warn (__fd, __buf, __nbytes, __builtin_object_size (__buf, 0));
    }
  return __read_alias (__fd, __buf, __nbytes);
}
# 123 "/usr/include/x86_64-linux-gnu/bits/unistd.h" 3 4
extern ssize_t __readlink_chk (const char *__restrict __path,
          char *__restrict __buf, size_t __len,
          size_t __buflen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2))) __attribute__ ((__warn_unused_result__));
extern ssize_t __readlink_alias (const char *__restrict __path, char *__restrict __buf, size_t __len) __asm__ ("" "readlink") __attribute__ ((__nothrow__ , __leaf__))


     __attribute__ ((__nonnull__ (1, 2))) __attribute__ ((__warn_unused_result__));
extern ssize_t __readlink_chk_warn (const char *__restrict __path, char *__restrict __buf, size_t __len, size_t __buflen) __asm__ ("" "__readlink_chk") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__ ((__nonnull__ (1, 2))) __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("readlink called with bigger length " "than size of destination buffer")))
                                         ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__nonnull__ (1, 2))) __attribute__ ((__warn_unused_result__)) ssize_t
__attribute__ ((__nothrow__ , __leaf__)) readlink (const char *__restrict __path, char *__restrict __buf, size_t __len)

{
  if (__builtin_object_size (__buf, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__len))
 return __readlink_chk (__path, __buf, __len, __builtin_object_size (__buf, 2 > 1));

      if ( __len > __builtin_object_size (__buf, 2 > 1))
 return __readlink_chk_warn (__path, __buf, __len, __builtin_object_size (__buf, 2 > 1));
    }
  return __readlink_alias (__path, __buf, __len);
}



extern ssize_t __readlinkat_chk (int __fd, const char *__restrict __path,
     char *__restrict __buf, size_t __len,
     size_t __buflen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3))) __attribute__ ((__warn_unused_result__));
extern ssize_t __readlinkat_alias (int __fd, const char *__restrict __path, char *__restrict __buf, size_t __len) __asm__ ("" "readlinkat") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__ ((__nonnull__ (2, 3))) __attribute__ ((__warn_unused_result__));
extern ssize_t __readlinkat_chk_warn (int __fd, const char *__restrict __path, char *__restrict __buf, size_t __len, size_t __buflen) __asm__ ("" "__readlinkat_chk") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__ ((__nonnull__ (2, 3))) __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("readlinkat called with bigger " "length than size of destination " "buffer")))

                ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__nonnull__ (2, 3))) __attribute__ ((__warn_unused_result__)) ssize_t
__attribute__ ((__nothrow__ , __leaf__)) readlinkat (int __fd, const char *__restrict __path, char *__restrict __buf, size_t __len)

{
  if (__builtin_object_size (__buf, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__len))
 return __readlinkat_chk (__fd, __path, __buf, __len, __builtin_object_size (__buf, 2 > 1));

      if (__len > __builtin_object_size (__buf, 2 > 1))
 return __readlinkat_chk_warn (__fd, __path, __buf, __len,
          __builtin_object_size (__buf, 2 > 1));
    }
  return __readlinkat_alias (__fd, __path, __buf, __len);
}


extern char *__getcwd_chk (char *__buf, size_t __size, size_t __buflen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
extern char *__getcwd_alias (char *__buf, size_t __size) __asm__ ("" "getcwd") __attribute__ ((__nothrow__ , __leaf__))
                                              __attribute__ ((__warn_unused_result__));
extern char *__getcwd_chk_warn (char *__buf, size_t __size, size_t __buflen) __asm__ ("" "__getcwd_chk") __attribute__ ((__nothrow__ , __leaf__))


     __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("getcwd caller with bigger length than size of " "destination buffer")))
                              ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) char *
__attribute__ ((__nothrow__ , __leaf__)) getcwd (char *__buf, size_t __size)
{
  if (__builtin_object_size (__buf, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__size))
 return __getcwd_chk (__buf, __size, __builtin_object_size (__buf, 2 > 1));

      if (__size > __builtin_object_size (__buf, 2 > 1))
 return __getcwd_chk_warn (__buf, __size, __builtin_object_size (__buf, 2 > 1));
    }
  return __getcwd_alias (__buf, __size);
}


extern char *__getwd_chk (char *__buf, size_t buflen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
extern char *__getwd_warn (char *__buf) __asm__ ("" "getwd") __attribute__ ((__nothrow__ , __leaf__))
     __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("please use getcwd instead, as getwd " "doesn't specify buffer size")))
                                         ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__deprecated__)) __attribute__ ((__warn_unused_result__)) char *
__attribute__ ((__nothrow__ , __leaf__)) getwd (char *__buf)
{
  if (__builtin_object_size (__buf, 2 > 1) != (size_t) -1)
    return __getwd_chk (__buf, __builtin_object_size (__buf, 2 > 1));
  return __getwd_warn (__buf);
}


extern size_t __confstr_chk (int __name, char *__buf, size_t __len,
        size_t __buflen) __attribute__ ((__nothrow__ , __leaf__));
extern size_t __confstr_alias (int __name, char *__buf, size_t __len) __asm__ ("" "confstr") __attribute__ ((__nothrow__ , __leaf__))
                             ;
extern size_t __confstr_chk_warn (int __name, char *__buf, size_t __len, size_t __buflen) __asm__ ("" "__confstr_chk") __attribute__ ((__nothrow__ , __leaf__))


     __attribute__((__warning__ ("confstr called with bigger length than size of destination " "buffer")))
            ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) size_t
__attribute__ ((__nothrow__ , __leaf__)) confstr (int __name, char *__buf, size_t __len)
{
  if (__builtin_object_size (__buf, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__len))
 return __confstr_chk (__name, __buf, __len, __builtin_object_size (__buf, 2 > 1));

      if (__builtin_object_size (__buf, 2 > 1) < __len)
 return __confstr_chk_warn (__name, __buf, __len, __builtin_object_size (__buf, 2 > 1));
    }
  return __confstr_alias (__name, __buf, __len);
}


extern int __getgroups_chk (int __size, __gid_t __list[], size_t __listlen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
extern int __getgroups_alias (int __size, __gid_t __list[]) __asm__ ("" "getgroups") __attribute__ ((__nothrow__ , __leaf__))
                 __attribute__ ((__warn_unused_result__));
extern int __getgroups_chk_warn (int __size, __gid_t __list[], size_t __listlen) __asm__ ("" "__getgroups_chk") __attribute__ ((__nothrow__ , __leaf__))


     __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("getgroups called with bigger group count than what " "can fit into destination buffer")))
                                           ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) getgroups (int __size, __gid_t __list[])
{
  if (__builtin_object_size (__list, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__size) || __size < 0)
 return __getgroups_chk (__size, __list, __builtin_object_size (__list, 2 > 1));

      if (__size * sizeof (__gid_t) > __builtin_object_size (__list, 2 > 1))
 return __getgroups_chk_warn (__size, __list, __builtin_object_size (__list, 2 > 1));
    }
  return __getgroups_alias (__size, __list);
}


extern int __ttyname_r_chk (int __fd, char *__buf, size_t __buflen,
       size_t __nreal) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
extern int __ttyname_r_alias (int __fd, char *__buf, size_t __buflen) __asm__ ("" "ttyname_r") __attribute__ ((__nothrow__ , __leaf__))

     __attribute__ ((__nonnull__ (2)));
extern int __ttyname_r_chk_warn (int __fd, char *__buf, size_t __buflen, size_t __nreal) __asm__ ("" "__ttyname_r_chk") __attribute__ ((__nothrow__ , __leaf__))


     __attribute__ ((__nonnull__ (2))) __attribute__((__warning__ ("ttyname_r called with bigger buflen than " "size of destination buffer")))
                                  ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) ttyname_r (int __fd, char *__buf, size_t __buflen)
{
  if (__builtin_object_size (__buf, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__buflen))
 return __ttyname_r_chk (__fd, __buf, __buflen, __builtin_object_size (__buf, 2 > 1));

      if (__buflen > __builtin_object_size (__buf, 2 > 1))
 return __ttyname_r_chk_warn (__fd, __buf, __buflen, __builtin_object_size (__buf, 2 > 1));
    }
  return __ttyname_r_alias (__fd, __buf, __buflen);
}



extern int __getlogin_r_chk (char *__buf, size_t __buflen, size_t __nreal)
     __attribute__ ((__nonnull__ (1)));
extern int __getlogin_r_alias (char *__buf, size_t __buflen) __asm__ ("" "getlogin_r")
                     __attribute__ ((__nonnull__ (1)));
extern int __getlogin_r_chk_warn (char *__buf, size_t __buflen, size_t __nreal) __asm__ ("" "__getlogin_r_chk")


     __attribute__ ((__nonnull__ (1))) __attribute__((__warning__ ("getlogin_r called with bigger buflen than " "size of destination buffer")))
                                  ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
getlogin_r (char *__buf, size_t __buflen)
{
  if (__builtin_object_size (__buf, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__buflen))
 return __getlogin_r_chk (__buf, __buflen, __builtin_object_size (__buf, 2 > 1));

      if (__buflen > __builtin_object_size (__buf, 2 > 1))
 return __getlogin_r_chk_warn (__buf, __buflen, __builtin_object_size (__buf, 2 > 1));
    }
  return __getlogin_r_alias (__buf, __buflen);
}




extern int __gethostname_chk (char *__buf, size_t __buflen, size_t __nreal)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
extern int __gethostname_alias (char *__buf, size_t __buflen) __asm__ ("" "gethostname") __attribute__ ((__nothrow__ , __leaf__))
                   __attribute__ ((__nonnull__ (1)));
extern int __gethostname_chk_warn (char *__buf, size_t __buflen, size_t __nreal) __asm__ ("" "__gethostname_chk") __attribute__ ((__nothrow__ , __leaf__))


     __attribute__ ((__nonnull__ (1))) __attribute__((__warning__ ("gethostname called with bigger buflen than " "size of destination buffer")))
                                  ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) gethostname (char *__buf, size_t __buflen)
{
  if (__builtin_object_size (__buf, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__buflen))
 return __gethostname_chk (__buf, __buflen, __builtin_object_size (__buf, 2 > 1));

      if (__buflen > __builtin_object_size (__buf, 2 > 1))
 return __gethostname_chk_warn (__buf, __buflen, __builtin_object_size (__buf, 2 > 1));
    }
  return __gethostname_alias (__buf, __buflen);
}




extern int __getdomainname_chk (char *__buf, size_t __buflen, size_t __nreal)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
extern int __getdomainname_alias (char *__buf, size_t __buflen) __asm__ ("" "getdomainname") __attribute__ ((__nothrow__ , __leaf__))

                     __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
extern int __getdomainname_chk_warn (char *__buf, size_t __buflen, size_t __nreal) __asm__ ("" "__getdomainname_chk") __attribute__ ((__nothrow__ , __leaf__))


     __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("getdomainname called with bigger " "buflen than size of destination " "buffer")))

                    ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) getdomainname (char *__buf, size_t __buflen)
{
  if (__builtin_object_size (__buf, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__buflen))
 return __getdomainname_chk (__buf, __buflen, __builtin_object_size (__buf, 2 > 1));

      if (__buflen > __builtin_object_size (__buf, 2 > 1))
 return __getdomainname_chk_warn (__buf, __buflen, __builtin_object_size (__buf, 2 > 1));
    }
  return __getdomainname_alias (__buf, __buflen);
}
# 1167 "/usr/include/unistd.h" 2 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/unistd_ext.h" 1 3 4
# 1171 "/usr/include/unistd.h" 2 3 4


# 79 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 2


# 1 "/usr/include/zlib.h" 1 3 4
# 34 "/usr/include/zlib.h" 3 4
# 1 "/usr/include/zconf.h" 1 3 4
# 247 "/usr/include/zconf.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 1 3 4
# 143 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 3 4
typedef long int ptrdiff_t;
# 415 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 3 4
typedef struct {
  long long __max_align_ll __attribute__((__aligned__(__alignof__(long long))));
  long double __max_align_ld __attribute__((__aligned__(__alignof__(long double))));
# 426 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 3 4
} max_align_t;
# 248 "/usr/include/zconf.h" 2 3 4
     typedef size_t z_size_t;
# 391 "/usr/include/zconf.h" 3 4
typedef unsigned char Byte;

typedef unsigned int uInt;
typedef unsigned long uLong;





   typedef Byte Bytef;

typedef char charf;
typedef int intf;
typedef uInt uIntf;
typedef uLong uLongf;


   typedef void const *voidpc;
   typedef void *voidpf;
   typedef void *voidp;







# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/limits.h" 1 3 4
# 419 "/usr/include/zconf.h" 2 3 4
# 429 "/usr/include/zconf.h" 3 4
   typedef unsigned z_crc_t;
# 35 "/usr/include/zlib.h" 2 3 4
# 81 "/usr/include/zlib.h" 3 4
typedef voidpf (*alloc_func) (voidpf opaque, uInt items, uInt size);
typedef void (*free_func) (voidpf opaque, voidpf address);

struct internal_state;

typedef struct z_stream_s {
    Bytef *next_in;
    uInt avail_in;
    uLong total_in;

    Bytef *next_out;
    uInt avail_out;
    uLong total_out;

    char *msg;
    struct internal_state *state;

    alloc_func zalloc;
    free_func zfree;
    voidpf opaque;

    int data_type;

    uLong adler;
    uLong reserved;
} z_stream;

typedef z_stream *z_streamp;





typedef struct gz_header_s {
    int text;
    uLong time;
    int xflags;
    int os;
    Bytef *extra;
    uInt extra_len;
    uInt extra_max;
    Bytef *name;
    uInt name_max;
    Bytef *comment;
    uInt comm_max;
    int hcrc;
    int done;

} gz_header;

typedef gz_header *gz_headerp;
# 220 "/usr/include/zlib.h" 3 4
extern const char * zlibVersion (void);
# 250 "/usr/include/zlib.h" 3 4
extern int deflate (z_streamp strm, int flush);
# 363 "/usr/include/zlib.h" 3 4
extern int deflateEnd (z_streamp strm);
# 400 "/usr/include/zlib.h" 3 4
extern int inflate (z_streamp strm, int flush);
# 520 "/usr/include/zlib.h" 3 4
extern int inflateEnd (z_streamp strm);
# 611 "/usr/include/zlib.h" 3 4
extern int deflateSetDictionary (z_streamp strm, const Bytef *dictionary, uInt dictLength)

                                                               ;
# 655 "/usr/include/zlib.h" 3 4
extern int deflateGetDictionary (z_streamp strm, Bytef *dictionary, uInt *dictLength)

                                                                ;
# 677 "/usr/include/zlib.h" 3 4
extern int deflateCopy (z_streamp dest, z_streamp source)
                                                      ;
# 695 "/usr/include/zlib.h" 3 4
extern int deflateReset (z_streamp strm);
# 706 "/usr/include/zlib.h" 3 4
extern int deflateParams (z_streamp strm, int level, int strategy)

                                                    ;
# 744 "/usr/include/zlib.h" 3 4
extern int deflateTune (z_streamp strm, int good_length, int max_lazy, int nice_length, int max_chain)



                                                   ;
# 761 "/usr/include/zlib.h" 3 4
extern uLong deflateBound (z_streamp strm, uLong sourceLen)
                                                        ;
# 776 "/usr/include/zlib.h" 3 4
extern int deflatePending (z_streamp strm, unsigned *pending, int *bits)

                                                  ;
# 791 "/usr/include/zlib.h" 3 4
extern int deflatePrime (z_streamp strm, int bits, int value)

                                                ;
# 808 "/usr/include/zlib.h" 3 4
extern int deflateSetHeader (z_streamp strm, gz_headerp head)
                                                          ;
# 885 "/usr/include/zlib.h" 3 4
extern int inflateSetDictionary (z_streamp strm, const Bytef *dictionary, uInt dictLength)

                                                               ;
# 908 "/usr/include/zlib.h" 3 4
extern int inflateGetDictionary (z_streamp strm, Bytef *dictionary, uInt *dictLength)

                                                                ;
# 923 "/usr/include/zlib.h" 3 4
extern int inflateSync (z_streamp strm);
# 942 "/usr/include/zlib.h" 3 4
extern int inflateCopy (z_streamp dest, z_streamp source)
                                                      ;
# 958 "/usr/include/zlib.h" 3 4
extern int inflateReset (z_streamp strm);
# 968 "/usr/include/zlib.h" 3 4
extern int inflateReset2 (z_streamp strm, int windowBits)
                                                      ;
# 982 "/usr/include/zlib.h" 3 4
extern int inflatePrime (z_streamp strm, int bits, int value)

                                                ;
# 1003 "/usr/include/zlib.h" 3 4
extern long inflateMark (z_streamp strm);
# 1031 "/usr/include/zlib.h" 3 4
extern int inflateGetHeader (z_streamp strm, gz_headerp head)
                                                          ;
# 1093 "/usr/include/zlib.h" 3 4
typedef unsigned (*in_func) (void *, unsigned char * *)
                                                                   ;
typedef int (*out_func) (void *, unsigned char *, unsigned);

extern int inflateBack (z_streamp strm, in_func in, void *in_desc, out_func out, void *out_desc)

                                                                      ;
# 1167 "/usr/include/zlib.h" 3 4
extern int inflateBackEnd (z_streamp strm);







extern uLong zlibCompileFlags (void);
# 1228 "/usr/include/zlib.h" 3 4
extern int compress (Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen)
                                                                       ;
# 1243 "/usr/include/zlib.h" 3 4
extern int compress2 (Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen, int level)

                                             ;
# 1259 "/usr/include/zlib.h" 3 4
extern uLong compressBound (uLong sourceLen);






extern int uncompress (Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen)
                                                                         ;
# 1284 "/usr/include/zlib.h" 3 4
extern int uncompress2 (Bytef *dest, uLongf *destLen, const Bytef *source, uLong *sourceLen)
                                                                           ;
# 1301 "/usr/include/zlib.h" 3 4
typedef struct gzFile_s *gzFile;
# 1341 "/usr/include/zlib.h" 3 4
extern gzFile gzdopen (int fd, const char *mode);
# 1364 "/usr/include/zlib.h" 3 4
extern int gzbuffer (gzFile file, unsigned size);
# 1380 "/usr/include/zlib.h" 3 4
extern int gzsetparams (gzFile file, int level, int strategy);
# 1391 "/usr/include/zlib.h" 3 4
extern int gzread (gzFile file, voidp buf, unsigned len);
# 1421 "/usr/include/zlib.h" 3 4
extern z_size_t gzfread (voidp buf, z_size_t size, z_size_t nitems, gzFile file)
                                                  ;
# 1447 "/usr/include/zlib.h" 3 4
extern int gzwrite (gzFile file, voidpc buf, unsigned len)
                                                          ;






extern z_size_t gzfwrite (voidpc buf, z_size_t size, z_size_t nitems, gzFile file)
                                                                    ;
# 1469 "/usr/include/zlib.h" 3 4
extern int gzprintf (gzFile file, const char *format, ...);
# 1484 "/usr/include/zlib.h" 3 4
extern int gzputs (gzFile file, const char *s);







extern char * gzgets (gzFile file, char *buf, int len);
# 1505 "/usr/include/zlib.h" 3 4
extern int gzputc (gzFile file, int c);





extern int gzgetc (gzFile file);
# 1520 "/usr/include/zlib.h" 3 4
extern int gzungetc (int c, gzFile file);
# 1532 "/usr/include/zlib.h" 3 4
extern int gzflush (gzFile file, int flush);
# 1567 "/usr/include/zlib.h" 3 4
extern int gzrewind (gzFile file);
# 1595 "/usr/include/zlib.h" 3 4
extern int gzeof (gzFile file);
# 1610 "/usr/include/zlib.h" 3 4
extern int gzdirect (gzFile file);
# 1631 "/usr/include/zlib.h" 3 4
extern int gzclose (gzFile file);
# 1644 "/usr/include/zlib.h" 3 4
extern int gzclose_r (gzFile file);
extern int gzclose_w (gzFile file);
# 1656 "/usr/include/zlib.h" 3 4
extern const char * gzerror (gzFile file, int *errnum);
# 1672 "/usr/include/zlib.h" 3 4
extern void gzclearerr (gzFile file);
# 1689 "/usr/include/zlib.h" 3 4
extern uLong adler32 (uLong adler, const Bytef *buf, uInt len);
# 1708 "/usr/include/zlib.h" 3 4
extern uLong adler32_z (uLong adler, const Bytef *buf, z_size_t len)
                                                  ;
# 1726 "/usr/include/zlib.h" 3 4
extern uLong crc32 (uLong crc, const Bytef *buf, uInt len);
# 1743 "/usr/include/zlib.h" 3 4
extern uLong crc32_z (uLong adler, const Bytef *buf, z_size_t len)
                                                ;
# 1765 "/usr/include/zlib.h" 3 4
extern int deflateInit_ (z_streamp strm, int level, const char *version, int stream_size)
                                                                           ;
extern int inflateInit_ (z_streamp strm, const char *version, int stream_size)
                                                                           ;
extern int deflateInit2_ (z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy, const char *version, int stream_size)


                                                       ;
extern int inflateInit2_ (z_streamp strm, int windowBits, const char *version, int stream_size)
                                                                            ;
extern int inflateBackInit_ (z_streamp strm, int windowBits, unsigned char *window, const char *version, int stream_size)


                                                          ;
# 1818 "/usr/include/zlib.h" 3 4
struct gzFile_s {
    unsigned have;
    unsigned char *next;
    off_t pos;
};
extern int gzgetc_ (gzFile file);
# 1865 "/usr/include/zlib.h" 3 4
     extern gzFile gzopen64 (const char *, const char *);
     extern off_t gzseek64 (gzFile, off_t, int);
     extern off_t gztell64 (gzFile);
     extern off_t gzoffset64 (gzFile);
     extern uLong adler32_combine64 (uLong, uLong, off_t);
     extern uLong crc32_combine64 (uLong, uLong, off_t);
# 1889 "/usr/include/zlib.h" 3 4
extern const char * zError (int);
extern int inflateSyncPoint (z_streamp);
extern const z_crc_t * get_crc_table (void);
extern int inflateUndermine (z_streamp, int);
extern int inflateValidate (z_streamp, int);
extern unsigned long inflateCodesUsed (z_streamp);
extern int inflateResetKeep (z_streamp);
extern int deflateResetKeep (z_streamp);






extern int gzvprintf (gzFile file, const char *format, va_list va)

                                                              ;
# 82 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 2


# 1 "/usr/include/lzma.h" 1 3 4
# 76 "/usr/include/lzma.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 1 3 4
# 77 "/usr/include/lzma.h" 2 3 4
# 124 "/usr/include/lzma.h" 3 4
# 1 "/usr/include/inttypes.h" 1 3 4
# 27 "/usr/include/inttypes.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stdint.h" 1 3 4
# 9 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stdint.h" 3 4
# 1 "/usr/include/stdint.h" 1 3 4
# 26 "/usr/include/stdint.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 27 "/usr/include/stdint.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/wchar.h" 1 3 4
# 29 "/usr/include/stdint.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 30 "/usr/include/stdint.h" 2 3 4







# 1 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h" 3 4
typedef __uint8_t uint8_t;
typedef __uint16_t uint16_t;
typedef __uint32_t uint32_t;
typedef __uint64_t uint64_t;
# 38 "/usr/include/stdint.h" 2 3 4





typedef __int_least8_t int_least8_t;
typedef __int_least16_t int_least16_t;
typedef __int_least32_t int_least32_t;
typedef __int_least64_t int_least64_t;


typedef __uint_least8_t uint_least8_t;
typedef __uint_least16_t uint_least16_t;
typedef __uint_least32_t uint_least32_t;
typedef __uint_least64_t uint_least64_t;





typedef signed char int_fast8_t;

typedef long int int_fast16_t;
typedef long int int_fast32_t;
typedef long int int_fast64_t;
# 71 "/usr/include/stdint.h" 3 4
typedef unsigned char uint_fast8_t;

typedef unsigned long int uint_fast16_t;
typedef unsigned long int uint_fast32_t;
typedef unsigned long int uint_fast64_t;
# 90 "/usr/include/stdint.h" 3 4
typedef unsigned long int uintptr_t;
# 101 "/usr/include/stdint.h" 3 4
typedef __intmax_t intmax_t;
typedef __uintmax_t uintmax_t;
# 10 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stdint.h" 2 3 4
# 28 "/usr/include/inttypes.h" 2 3 4






typedef int __gwchar_t;
# 266 "/usr/include/inttypes.h" 3 4





typedef struct
  {
    long int quot;
    long int rem;
  } imaxdiv_t;
# 290 "/usr/include/inttypes.h" 3 4
extern intmax_t imaxabs (intmax_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern imaxdiv_t imaxdiv (intmax_t __numer, intmax_t __denom)
      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern intmax_t strtoimax (const char *__restrict __nptr,
      char **__restrict __endptr, int __base) __attribute__ ((__nothrow__ , __leaf__));


extern uintmax_t strtoumax (const char *__restrict __nptr,
       char ** __restrict __endptr, int __base) __attribute__ ((__nothrow__ , __leaf__));


extern intmax_t wcstoimax (const __gwchar_t *__restrict __nptr,
      __gwchar_t **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__));


extern uintmax_t wcstoumax (const __gwchar_t *__restrict __nptr,
       __gwchar_t ** __restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__));





extern long int __strtol_internal (const char *__restrict __nptr,
       char **__restrict __endptr,
       int __base, int __group)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));

extern __inline __attribute__ ((__gnu_inline__)) intmax_t
__attribute__ ((__nothrow__ , __leaf__)) strtoimax (const char *__restrict nptr, char **__restrict endptr, int base)

{
  return __strtol_internal (nptr, endptr, base, 0);
}

extern unsigned long int __strtoul_internal (const char *__restrict __nptr,
          char ** __restrict __endptr,
          int __base, int __group)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));

extern __inline __attribute__ ((__gnu_inline__)) uintmax_t
__attribute__ ((__nothrow__ , __leaf__)) strtoumax (const char *__restrict nptr, char **__restrict endptr, int base)

{
  return __strtoul_internal (nptr, endptr, base, 0);
}

extern long int __wcstol_internal (const __gwchar_t * __restrict __nptr,
       __gwchar_t **__restrict __endptr,
       int __base, int __group)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));

extern __inline __attribute__ ((__gnu_inline__)) intmax_t
__attribute__ ((__nothrow__ , __leaf__)) wcstoimax (const __gwchar_t *__restrict nptr, __gwchar_t **__restrict endptr, int base)

{
  return __wcstol_internal (nptr, endptr, base, 0);
}

extern unsigned long int __wcstoul_internal (const __gwchar_t *
          __restrict __nptr,
          __gwchar_t **
          __restrict __endptr,
          int __base, int __group)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));

extern __inline __attribute__ ((__gnu_inline__)) uintmax_t
__attribute__ ((__nothrow__ , __leaf__)) wcstoumax (const __gwchar_t *__restrict nptr, __gwchar_t **__restrict endptr, int base)

{
  return __wcstoul_internal (nptr, endptr, base, 0);
}
# 432 "/usr/include/inttypes.h" 3 4

# 125 "/usr/include/lzma.h" 2 3 4
# 292 "/usr/include/lzma.h" 3 4
# 1 "/usr/include/lzma/version.h" 1 3 4
# 108 "/usr/include/lzma/version.h" 3 4
extern uint32_t lzma_version_number(void)
  __attribute__((__nothrow__)) __attribute__((__const__));
# 118 "/usr/include/lzma/version.h" 3 4
extern const char * lzma_version_string(void)
  __attribute__((__nothrow__)) __attribute__((__const__));
# 293 "/usr/include/lzma.h" 2 3 4
# 1 "/usr/include/lzma/base.h" 1 3 4
# 29 "/usr/include/lzma/base.h" 3 4
typedef unsigned char lzma_bool;
# 44 "/usr/include/lzma/base.h" 3 4
typedef enum {
 LZMA_RESERVED_ENUM = 0
} lzma_reserved_enum;
# 57 "/usr/include/lzma/base.h" 3 4
typedef enum {
 LZMA_OK = 0,




 LZMA_STREAM_END = 1,
# 75 "/usr/include/lzma/base.h" 3 4
 LZMA_NO_CHECK = 2,
# 90 "/usr/include/lzma/base.h" 3 4
 LZMA_UNSUPPORTED_CHECK = 3,
# 115 "/usr/include/lzma/base.h" 3 4
 LZMA_GET_CHECK = 4,
# 128 "/usr/include/lzma/base.h" 3 4
 LZMA_MEM_ERROR = 5,
# 140 "/usr/include/lzma/base.h" 3 4
 LZMA_MEMLIMIT_ERROR = 6,
# 150 "/usr/include/lzma/base.h" 3 4
 LZMA_FORMAT_ERROR = 7,
# 160 "/usr/include/lzma/base.h" 3 4
 LZMA_OPTIONS_ERROR = 8,
# 172 "/usr/include/lzma/base.h" 3 4
 LZMA_DATA_ERROR = 9,
# 191 "/usr/include/lzma/base.h" 3 4
 LZMA_BUF_ERROR = 10,
# 218 "/usr/include/lzma/base.h" 3 4
 LZMA_PROG_ERROR = 11,
# 237 "/usr/include/lzma/base.h" 3 4
} lzma_ret;
# 250 "/usr/include/lzma/base.h" 3 4
typedef enum {
 LZMA_RUN = 0,
# 265 "/usr/include/lzma/base.h" 3 4
 LZMA_SYNC_FLUSH = 1,
# 290 "/usr/include/lzma/base.h" 3 4
 LZMA_FULL_FLUSH = 2,
# 305 "/usr/include/lzma/base.h" 3 4
 LZMA_FULL_BARRIER = 4,
# 328 "/usr/include/lzma/base.h" 3 4
 LZMA_FINISH = 3
# 345 "/usr/include/lzma/base.h" 3 4
} lzma_action;
# 372 "/usr/include/lzma/base.h" 3 4
typedef struct {
# 407 "/usr/include/lzma/base.h" 3 4
 void *( *alloc)(void *opaque, size_t nmemb, size_t size);
# 421 "/usr/include/lzma/base.h" 3 4
 void ( *free)(void *opaque, void *ptr);
# 432 "/usr/include/lzma/base.h" 3 4
 void *opaque;

} lzma_allocator;







typedef struct lzma_internal_s lzma_internal;
# 485 "/usr/include/lzma/base.h" 3 4
typedef struct {
 const uint8_t *next_in;
 size_t avail_in;
 uint64_t total_in;

 uint8_t *next_out;
 size_t avail_out;
 uint64_t total_out;
# 502 "/usr/include/lzma/base.h" 3 4
 const lzma_allocator *allocator;


 lzma_internal *internal;







 void *reserved_ptr1;
 void *reserved_ptr2;
 void *reserved_ptr3;
 void *reserved_ptr4;
 uint64_t reserved_int1;
 uint64_t reserved_int2;
 size_t reserved_int3;
 size_t reserved_int4;
 lzma_reserved_enum reserved_enum1;
 lzma_reserved_enum reserved_enum2;

} lzma_stream;
# 563 "/usr/include/lzma/base.h" 3 4
extern lzma_ret lzma_code(lzma_stream *strm, lzma_action action)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 580 "/usr/include/lzma/base.h" 3 4
extern void lzma_end(lzma_stream *strm) __attribute__((__nothrow__));
# 598 "/usr/include/lzma/base.h" 3 4
extern void lzma_get_progress(lzma_stream *strm,
  uint64_t *progress_in, uint64_t *progress_out) __attribute__((__nothrow__));
# 624 "/usr/include/lzma/base.h" 3 4
extern uint64_t lzma_memusage(const lzma_stream *strm)
  __attribute__((__nothrow__)) __attribute__((__pure__));
# 637 "/usr/include/lzma/base.h" 3 4
extern uint64_t lzma_memlimit_get(const lzma_stream *strm)
  __attribute__((__nothrow__)) __attribute__((__pure__));
# 658 "/usr/include/lzma/base.h" 3 4
extern lzma_ret lzma_memlimit_set(
  lzma_stream *strm, uint64_t memlimit) __attribute__((__nothrow__));
# 294 "/usr/include/lzma.h" 2 3 4
# 1 "/usr/include/lzma/vli.h" 1 3 4
# 63 "/usr/include/lzma/vli.h" 3 4
typedef uint64_t lzma_vli;
# 115 "/usr/include/lzma/vli.h" 3 4
extern lzma_ret lzma_vli_encode(lzma_vli vli, size_t *vli_pos,
  uint8_t *out, size_t *out_pos, size_t out_size) __attribute__((__nothrow__));
# 154 "/usr/include/lzma/vli.h" 3 4
extern lzma_ret lzma_vli_decode(lzma_vli *vli, size_t *vli_pos,
  const uint8_t *in, size_t *in_pos, size_t in_size)
  __attribute__((__nothrow__));
# 165 "/usr/include/lzma/vli.h" 3 4
extern uint32_t lzma_vli_size(lzma_vli vli)
  __attribute__((__nothrow__)) __attribute__((__pure__));
# 295 "/usr/include/lzma.h" 2 3 4
# 1 "/usr/include/lzma/check.h" 1 3 4
# 27 "/usr/include/lzma/check.h" 3 4
typedef enum {
 LZMA_CHECK_NONE = 0,






 LZMA_CHECK_CRC32 = 1,






 LZMA_CHECK_CRC64 = 4,






 LZMA_CHECK_SHA256 = 10





} lzma_check;
# 81 "/usr/include/lzma/check.h" 3 4
extern lzma_bool lzma_check_is_supported(lzma_check check)
  __attribute__((__nothrow__)) __attribute__((__const__));
# 95 "/usr/include/lzma/check.h" 3 4
extern uint32_t lzma_check_size(lzma_check check)
  __attribute__((__nothrow__)) __attribute__((__const__));
# 119 "/usr/include/lzma/check.h" 3 4
extern uint32_t lzma_crc32(
  const uint8_t *buf, size_t size, uint32_t crc)
  __attribute__((__nothrow__)) __attribute__((__pure__));
# 131 "/usr/include/lzma/check.h" 3 4
extern uint64_t lzma_crc64(
  const uint8_t *buf, size_t size, uint64_t crc)
  __attribute__((__nothrow__)) __attribute__((__pure__));
# 149 "/usr/include/lzma/check.h" 3 4
extern lzma_check lzma_get_check(const lzma_stream *strm)
  __attribute__((__nothrow__));
# 296 "/usr/include/lzma.h" 2 3 4


# 1 "/usr/include/lzma/filter.h" 1 3 4
# 43 "/usr/include/lzma/filter.h" 3 4
typedef struct {
# 54 "/usr/include/lzma/filter.h" 3 4
 lzma_vli id;
# 63 "/usr/include/lzma/filter.h" 3 4
 void *options;

} lzma_filter;
# 78 "/usr/include/lzma/filter.h" 3 4
extern lzma_bool lzma_filter_encoder_is_supported(lzma_vli id)
  __attribute__((__nothrow__)) __attribute__((__const__));
# 88 "/usr/include/lzma/filter.h" 3 4
extern lzma_bool lzma_filter_decoder_is_supported(lzma_vli id)
  __attribute__((__nothrow__)) __attribute__((__const__));
# 119 "/usr/include/lzma/filter.h" 3 4
extern lzma_ret lzma_filters_copy(
  const lzma_filter *src, lzma_filter *dest,
  const lzma_allocator *allocator) __attribute__((__nothrow__));
# 139 "/usr/include/lzma/filter.h" 3 4
extern uint64_t lzma_raw_encoder_memusage(const lzma_filter *filters)
  __attribute__((__nothrow__)) __attribute__((__pure__));
# 158 "/usr/include/lzma/filter.h" 3 4
extern uint64_t lzma_raw_decoder_memusage(const lzma_filter *filters)
  __attribute__((__nothrow__)) __attribute__((__pure__));
# 179 "/usr/include/lzma/filter.h" 3 4
extern lzma_ret lzma_raw_encoder(
  lzma_stream *strm, const lzma_filter *filters)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 197 "/usr/include/lzma/filter.h" 3 4
extern lzma_ret lzma_raw_decoder(
  lzma_stream *strm, const lzma_filter *filters)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 228 "/usr/include/lzma/filter.h" 3 4
extern lzma_ret lzma_filters_update(
  lzma_stream *strm, const lzma_filter *filters) __attribute__((__nothrow__));
# 259 "/usr/include/lzma/filter.h" 3 4
extern lzma_ret lzma_raw_buffer_encode(
  const lzma_filter *filters, const lzma_allocator *allocator,
  const uint8_t *in, size_t in_size, uint8_t *out,
  size_t *out_pos, size_t out_size) __attribute__((__nothrow__));
# 283 "/usr/include/lzma/filter.h" 3 4
extern lzma_ret lzma_raw_buffer_decode(
  const lzma_filter *filters, const lzma_allocator *allocator,
  const uint8_t *in, size_t *in_pos, size_t in_size,
  uint8_t *out, size_t *out_pos, size_t out_size) __attribute__((__nothrow__));
# 308 "/usr/include/lzma/filter.h" 3 4
extern lzma_ret lzma_properties_size(
  uint32_t *size, const lzma_filter *filter) __attribute__((__nothrow__));
# 334 "/usr/include/lzma/filter.h" 3 4
extern lzma_ret lzma_properties_encode(
  const lzma_filter *filter, uint8_t *props) __attribute__((__nothrow__));
# 359 "/usr/include/lzma/filter.h" 3 4
extern lzma_ret lzma_properties_decode(
  lzma_filter *filter, const lzma_allocator *allocator,
  const uint8_t *props, size_t props_size) __attribute__((__nothrow__));
# 383 "/usr/include/lzma/filter.h" 3 4
extern lzma_ret lzma_filter_flags_size(
  uint32_t *size, const lzma_filter *filter)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 406 "/usr/include/lzma/filter.h" 3 4
extern lzma_ret lzma_filter_flags_encode(const lzma_filter *filter,
  uint8_t *out, size_t *out_pos, size_t out_size)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 422 "/usr/include/lzma/filter.h" 3 4
extern lzma_ret lzma_filter_flags_decode(
  lzma_filter *filter, const lzma_allocator *allocator,
  const uint8_t *in, size_t *in_pos, size_t in_size)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 299 "/usr/include/lzma.h" 2 3 4
# 1 "/usr/include/lzma/bcj.h" 1 3 4
# 73 "/usr/include/lzma/bcj.h" 3 4
typedef struct {
# 88 "/usr/include/lzma/bcj.h" 3 4
 uint32_t start_offset;

} lzma_options_bcj;
# 300 "/usr/include/lzma.h" 2 3 4
# 1 "/usr/include/lzma/delta.h" 1 3 4
# 35 "/usr/include/lzma/delta.h" 3 4
typedef enum {
 LZMA_DELTA_TYPE_BYTE
} lzma_delta_type;







typedef struct {

 lzma_delta_type type;
# 59 "/usr/include/lzma/delta.h" 3 4
 uint32_t dist;
# 70 "/usr/include/lzma/delta.h" 3 4
 uint32_t reserved_int1;
 uint32_t reserved_int2;
 uint32_t reserved_int3;
 uint32_t reserved_int4;
 void *reserved_ptr1;
 void *reserved_ptr2;

} lzma_options_delta;
# 301 "/usr/include/lzma.h" 2 3 4
# 1 "/usr/include/lzma/lzma12.h" 1 3 4
# 58 "/usr/include/lzma/lzma12.h" 3 4
typedef enum {
 LZMA_MF_HC3 = 0x03,
# 70 "/usr/include/lzma/lzma12.h" 3 4
 LZMA_MF_HC4 = 0x04,
# 81 "/usr/include/lzma/lzma12.h" 3 4
 LZMA_MF_BT2 = 0x12,
# 90 "/usr/include/lzma/lzma12.h" 3 4
 LZMA_MF_BT3 = 0x13,
# 101 "/usr/include/lzma/lzma12.h" 3 4
 LZMA_MF_BT4 = 0x14
# 111 "/usr/include/lzma/lzma12.h" 3 4
} lzma_match_finder;
# 128 "/usr/include/lzma/lzma12.h" 3 4
extern lzma_bool lzma_mf_is_supported(lzma_match_finder match_finder)
  __attribute__((__nothrow__)) __attribute__((__const__));
# 138 "/usr/include/lzma/lzma12.h" 3 4
typedef enum {
 LZMA_MODE_FAST = 1,







 LZMA_MODE_NORMAL = 2







} lzma_mode;
# 170 "/usr/include/lzma/lzma12.h" 3 4
extern lzma_bool lzma_mode_is_supported(lzma_mode mode)
  __attribute__((__nothrow__)) __attribute__((__const__));
# 185 "/usr/include/lzma/lzma12.h" 3 4
typedef struct {
# 217 "/usr/include/lzma/lzma12.h" 3 4
 uint32_t dict_size;
# 240 "/usr/include/lzma/lzma12.h" 3 4
 const uint8_t *preset_dict;
# 254 "/usr/include/lzma/lzma12.h" 3 4
 uint32_t preset_dict_size;
# 281 "/usr/include/lzma/lzma12.h" 3 4
 uint32_t lc;
# 293 "/usr/include/lzma/lzma12.h" 3 4
 uint32_t lp;
# 316 "/usr/include/lzma/lzma12.h" 3 4
 uint32_t pb;





 lzma_mode mode;
# 342 "/usr/include/lzma/lzma12.h" 3 4
 uint32_t nice_len;


 lzma_match_finder mf;
# 375 "/usr/include/lzma/lzma12.h" 3 4
 uint32_t depth;
# 384 "/usr/include/lzma/lzma12.h" 3 4
 uint32_t reserved_int1;
 uint32_t reserved_int2;
 uint32_t reserved_int3;
 uint32_t reserved_int4;
 uint32_t reserved_int5;
 uint32_t reserved_int6;
 uint32_t reserved_int7;
 uint32_t reserved_int8;
 lzma_reserved_enum reserved_enum1;
 lzma_reserved_enum reserved_enum2;
 lzma_reserved_enum reserved_enum3;
 lzma_reserved_enum reserved_enum4;
 void *reserved_ptr1;
 void *reserved_ptr2;

} lzma_options_lzma;
# 419 "/usr/include/lzma/lzma12.h" 3 4
extern lzma_bool lzma_lzma_preset(
  lzma_options_lzma *options, uint32_t preset) __attribute__((__nothrow__));
# 302 "/usr/include/lzma.h" 2 3 4


# 1 "/usr/include/lzma/container.h" 1 3 4
# 66 "/usr/include/lzma/container.h" 3 4
typedef struct {







 uint32_t flags;




 uint32_t threads;
# 104 "/usr/include/lzma/container.h" 3 4
 uint64_t block_size;
# 135 "/usr/include/lzma/container.h" 3 4
 uint32_t timeout;







 uint32_t preset;







 const lzma_filter *filters;
# 160 "/usr/include/lzma/container.h" 3 4
 lzma_check check;
# 169 "/usr/include/lzma/container.h" 3 4
 lzma_reserved_enum reserved_enum1;
 lzma_reserved_enum reserved_enum2;
 lzma_reserved_enum reserved_enum3;
 uint32_t reserved_int1;
 uint32_t reserved_int2;
 uint32_t reserved_int3;
 uint32_t reserved_int4;
 uint64_t reserved_int5;
 uint64_t reserved_int6;
 uint64_t reserved_int7;
 uint64_t reserved_int8;
 void *reserved_ptr1;
 void *reserved_ptr2;
 void *reserved_ptr3;
 void *reserved_ptr4;

} lzma_mt;
# 199 "/usr/include/lzma/container.h" 3 4
extern uint64_t lzma_easy_encoder_memusage(uint32_t preset)
  __attribute__((__nothrow__)) __attribute__((__pure__));
# 215 "/usr/include/lzma/container.h" 3 4
extern uint64_t lzma_easy_decoder_memusage(uint32_t preset)
  __attribute__((__nothrow__)) __attribute__((__pure__));
# 258 "/usr/include/lzma/container.h" 3 4
extern lzma_ret lzma_easy_encoder(
  lzma_stream *strm, uint32_t preset, lzma_check check)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 291 "/usr/include/lzma/container.h" 3 4
extern lzma_ret lzma_easy_buffer_encode(
  uint32_t preset, lzma_check check,
  const lzma_allocator *allocator,
  const uint8_t *in, size_t in_size,
  uint8_t *out, size_t *out_pos, size_t out_size) __attribute__((__nothrow__));
# 314 "/usr/include/lzma/container.h" 3 4
extern lzma_ret lzma_stream_encoder(lzma_stream *strm,
  const lzma_filter *filters, lzma_check check)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 334 "/usr/include/lzma/container.h" 3 4
extern uint64_t lzma_stream_encoder_mt_memusage(
  const lzma_mt *options) __attribute__((__nothrow__)) __attribute__((__pure__));
# 357 "/usr/include/lzma/container.h" 3 4
extern lzma_ret lzma_stream_encoder_mt(
  lzma_stream *strm, const lzma_mt *options)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 382 "/usr/include/lzma/container.h" 3 4
extern lzma_ret lzma_alone_encoder(
  lzma_stream *strm, const lzma_options_lzma *options)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 409 "/usr/include/lzma/container.h" 3 4
extern size_t lzma_stream_buffer_bound(size_t uncompressed_size)
  __attribute__((__nothrow__));
# 439 "/usr/include/lzma/container.h" 3 4
extern lzma_ret lzma_stream_buffer_encode(
  lzma_filter *filters, lzma_check check,
  const lzma_allocator *allocator,
  const uint8_t *in, size_t in_size,
  uint8_t *out, size_t *out_pos, size_t out_size)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 536 "/usr/include/lzma/container.h" 3 4
extern lzma_ret lzma_stream_decoder(
  lzma_stream *strm, uint64_t memlimit, uint32_t flags)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 561 "/usr/include/lzma/container.h" 3 4
extern lzma_ret lzma_auto_decoder(
  lzma_stream *strm, uint64_t memlimit, uint32_t flags)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 584 "/usr/include/lzma/container.h" 3 4
extern lzma_ret lzma_alone_decoder(
  lzma_stream *strm, uint64_t memlimit)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 627 "/usr/include/lzma/container.h" 3 4
extern lzma_ret lzma_stream_buffer_decode(
  uint64_t *memlimit, uint32_t flags,
  const lzma_allocator *allocator,
  const uint8_t *in, size_t *in_pos, size_t in_size,
  uint8_t *out, size_t *out_pos, size_t out_size)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 305 "/usr/include/lzma.h" 2 3 4


# 1 "/usr/include/lzma/stream_flags.h" 1 3 4
# 33 "/usr/include/lzma/stream_flags.h" 3 4
typedef struct {
# 51 "/usr/include/lzma/stream_flags.h" 3 4
 uint32_t version;
# 69 "/usr/include/lzma/stream_flags.h" 3 4
 lzma_vli backward_size;
# 79 "/usr/include/lzma/stream_flags.h" 3 4
 lzma_check check;
# 90 "/usr/include/lzma/stream_flags.h" 3 4
 lzma_reserved_enum reserved_enum1;
 lzma_reserved_enum reserved_enum2;
 lzma_reserved_enum reserved_enum3;
 lzma_reserved_enum reserved_enum4;
 lzma_bool reserved_bool1;
 lzma_bool reserved_bool2;
 lzma_bool reserved_bool3;
 lzma_bool reserved_bool4;
 lzma_bool reserved_bool5;
 lzma_bool reserved_bool6;
 lzma_bool reserved_bool7;
 lzma_bool reserved_bool8;
 uint32_t reserved_int1;
 uint32_t reserved_int2;

} lzma_stream_flags;
# 122 "/usr/include/lzma/stream_flags.h" 3 4
extern lzma_ret lzma_stream_header_encode(
  const lzma_stream_flags *options, uint8_t *out)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 139 "/usr/include/lzma/stream_flags.h" 3 4
extern lzma_ret lzma_stream_footer_encode(
  const lzma_stream_flags *options, uint8_t *out)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 174 "/usr/include/lzma/stream_flags.h" 3 4
extern lzma_ret lzma_stream_header_decode(
  lzma_stream_flags *options, const uint8_t *in)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 201 "/usr/include/lzma/stream_flags.h" 3 4
extern lzma_ret lzma_stream_footer_decode(
  lzma_stream_flags *options, const uint8_t *in)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 221 "/usr/include/lzma/stream_flags.h" 3 4
extern lzma_ret lzma_stream_flags_compare(
  const lzma_stream_flags *a, const lzma_stream_flags *b)
  __attribute__((__nothrow__)) __attribute__((__pure__));
# 308 "/usr/include/lzma.h" 2 3 4
# 1 "/usr/include/lzma/block.h" 1 3 4
# 30 "/usr/include/lzma/block.h" 3 4
typedef struct {
# 52 "/usr/include/lzma/block.h" 3 4
 uint32_t version;
# 72 "/usr/include/lzma/block.h" 3 4
 uint32_t header_size;
# 93 "/usr/include/lzma/block.h" 3 4
 lzma_check check;
# 148 "/usr/include/lzma/block.h" 3 4
 lzma_vli compressed_size;
# 172 "/usr/include/lzma/block.h" 3 4
 lzma_vli uncompressed_size;
# 200 "/usr/include/lzma/block.h" 3 4
 lzma_filter *filters;
# 217 "/usr/include/lzma/block.h" 3 4
 uint8_t raw_check[64];
# 226 "/usr/include/lzma/block.h" 3 4
 void *reserved_ptr1;
 void *reserved_ptr2;
 void *reserved_ptr3;
 uint32_t reserved_int1;
 uint32_t reserved_int2;
 lzma_vli reserved_int3;
 lzma_vli reserved_int4;
 lzma_vli reserved_int5;
 lzma_vli reserved_int6;
 lzma_vli reserved_int7;
 lzma_vli reserved_int8;
 lzma_reserved_enum reserved_enum1;
 lzma_reserved_enum reserved_enum2;
 lzma_reserved_enum reserved_enum3;
 lzma_reserved_enum reserved_enum4;
# 261 "/usr/include/lzma/block.h" 3 4
 lzma_bool ignore_check;

 lzma_bool reserved_bool2;
 lzma_bool reserved_bool3;
 lzma_bool reserved_bool4;
 lzma_bool reserved_bool5;
 lzma_bool reserved_bool6;
 lzma_bool reserved_bool7;
 lzma_bool reserved_bool8;

} lzma_block;
# 309 "/usr/include/lzma/block.h" 3 4
extern lzma_ret lzma_block_header_size(lzma_block *block)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 331 "/usr/include/lzma/block.h" 3 4
extern lzma_ret lzma_block_header_encode(
  const lzma_block *block, uint8_t *out)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 376 "/usr/include/lzma/block.h" 3 4
extern lzma_ret lzma_block_header_decode(lzma_block *block,
  const lzma_allocator *allocator, const uint8_t *in)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 408 "/usr/include/lzma/block.h" 3 4
extern lzma_ret lzma_block_compressed_size(
  lzma_block *block, lzma_vli unpadded_size)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 424 "/usr/include/lzma/block.h" 3 4
extern lzma_vli lzma_block_unpadded_size(const lzma_block *block)
  __attribute__((__nothrow__)) __attribute__((__pure__));
# 437 "/usr/include/lzma/block.h" 3 4
extern lzma_vli lzma_block_total_size(const lzma_block *block)
  __attribute__((__nothrow__)) __attribute__((__pure__));
# 455 "/usr/include/lzma/block.h" 3 4
extern lzma_ret lzma_block_encoder(
  lzma_stream *strm, lzma_block *block)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 473 "/usr/include/lzma/block.h" 3 4
extern lzma_ret lzma_block_decoder(
  lzma_stream *strm, lzma_block *block)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 484 "/usr/include/lzma/block.h" 3 4
extern size_t lzma_block_buffer_bound(size_t uncompressed_size)
  __attribute__((__nothrow__));
# 525 "/usr/include/lzma/block.h" 3 4
extern lzma_ret lzma_block_buffer_encode(
  lzma_block *block, const lzma_allocator *allocator,
  const uint8_t *in, size_t in_size,
  uint8_t *out, size_t *out_pos, size_t out_size)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 544 "/usr/include/lzma/block.h" 3 4
extern lzma_ret lzma_block_uncomp_encode(lzma_block *block,
  const uint8_t *in, size_t in_size,
  uint8_t *out, size_t *out_pos, size_t out_size)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 577 "/usr/include/lzma/block.h" 3 4
extern lzma_ret lzma_block_buffer_decode(
  lzma_block *block, const lzma_allocator *allocator,
  const uint8_t *in, size_t *in_pos, size_t in_size,
  uint8_t *out, size_t *out_pos, size_t out_size)
  __attribute__((__nothrow__));
# 309 "/usr/include/lzma.h" 2 3 4
# 1 "/usr/include/lzma/index.h" 1 3 4
# 37 "/usr/include/lzma/index.h" 3 4
typedef struct lzma_index_s lzma_index;





typedef struct {
 struct {






  const lzma_stream_flags *flags;

  const void *reserved_ptr1;
  const void *reserved_ptr2;
  const void *reserved_ptr3;






  lzma_vli number;







  lzma_vli block_count;







  lzma_vli compressed_offset;







  lzma_vli uncompressed_offset;







  lzma_vli compressed_size;




  lzma_vli uncompressed_size;
# 108 "/usr/include/lzma/index.h" 3 4
  lzma_vli padding;

  lzma_vli reserved_vli1;
  lzma_vli reserved_vli2;
  lzma_vli reserved_vli3;
  lzma_vli reserved_vli4;
 } stream;

 struct {





  lzma_vli number_in_file;
# 132 "/usr/include/lzma/index.h" 3 4
  lzma_vli compressed_file_offset;
# 147 "/usr/include/lzma/index.h" 3 4
  lzma_vli uncompressed_file_offset;






  lzma_vli number_in_stream;







  lzma_vli compressed_stream_offset;







  lzma_vli uncompressed_stream_offset;
# 179 "/usr/include/lzma/index.h" 3 4
  lzma_vli uncompressed_size;
# 188 "/usr/include/lzma/index.h" 3 4
  lzma_vli unpadded_size;
# 197 "/usr/include/lzma/index.h" 3 4
  lzma_vli total_size;

  lzma_vli reserved_vli1;
  lzma_vli reserved_vli2;
  lzma_vli reserved_vli3;
  lzma_vli reserved_vli4;

  const void *reserved_ptr1;
  const void *reserved_ptr2;
  const void *reserved_ptr3;
  const void *reserved_ptr4;
 } block;






 union {
  const void *p;
  size_t s;
  lzma_vli v;
 } internal[6];
} lzma_index_iter;





typedef enum {
 LZMA_INDEX_ITER_ANY = 0,
# 238 "/usr/include/lzma/index.h" 3 4
 LZMA_INDEX_ITER_STREAM = 1,
# 249 "/usr/include/lzma/index.h" 3 4
 LZMA_INDEX_ITER_BLOCK = 2,
# 260 "/usr/include/lzma/index.h" 3 4
 LZMA_INDEX_ITER_NONEMPTY_BLOCK = 3







} lzma_index_iter_mode;
# 286 "/usr/include/lzma/index.h" 3 4
extern uint64_t lzma_index_memusage(
  lzma_vli streams, lzma_vli blocks) __attribute__((__nothrow__));
# 296 "/usr/include/lzma/index.h" 3 4
extern uint64_t lzma_index_memused(const lzma_index *i)
  __attribute__((__nothrow__));
# 306 "/usr/include/lzma/index.h" 3 4
extern lzma_index * lzma_index_init(const lzma_allocator *allocator)
  __attribute__((__nothrow__));







extern void lzma_index_end(
  lzma_index *i, const lzma_allocator *allocator) __attribute__((__nothrow__));
# 343 "/usr/include/lzma/index.h" 3 4
extern lzma_ret lzma_index_append(
  lzma_index *i, const lzma_allocator *allocator,
  lzma_vli unpadded_size, lzma_vli uncompressed_size)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 365 "/usr/include/lzma/index.h" 3 4
extern lzma_ret lzma_index_stream_flags(
  lzma_index *i, const lzma_stream_flags *stream_flags)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 380 "/usr/include/lzma/index.h" 3 4
extern uint32_t lzma_index_checks(const lzma_index *i)
  __attribute__((__nothrow__)) __attribute__((__pure__));
# 397 "/usr/include/lzma/index.h" 3 4
extern lzma_ret lzma_index_stream_padding(
  lzma_index *i, lzma_vli stream_padding)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));





extern lzma_vli lzma_index_stream_count(const lzma_index *i)
  __attribute__((__nothrow__)) __attribute__((__pure__));
# 415 "/usr/include/lzma/index.h" 3 4
extern lzma_vli lzma_index_block_count(const lzma_index *i)
  __attribute__((__nothrow__)) __attribute__((__pure__));







extern lzma_vli lzma_index_size(const lzma_index *i)
  __attribute__((__nothrow__)) __attribute__((__pure__));
# 435 "/usr/include/lzma/index.h" 3 4
extern lzma_vli lzma_index_stream_size(const lzma_index *i)
  __attribute__((__nothrow__)) __attribute__((__pure__));
# 445 "/usr/include/lzma/index.h" 3 4
extern lzma_vli lzma_index_total_size(const lzma_index *i)
  __attribute__((__nothrow__)) __attribute__((__pure__));
# 457 "/usr/include/lzma/index.h" 3 4
extern lzma_vli lzma_index_file_size(const lzma_index *i)
  __attribute__((__nothrow__)) __attribute__((__pure__));





extern lzma_vli lzma_index_uncompressed_size(const lzma_index *i)
  __attribute__((__nothrow__)) __attribute__((__pure__));
# 487 "/usr/include/lzma/index.h" 3 4
extern void lzma_index_iter_init(
  lzma_index_iter *iter, const lzma_index *i) __attribute__((__nothrow__));
# 497 "/usr/include/lzma/index.h" 3 4
extern void lzma_index_iter_rewind(lzma_index_iter *iter)
  __attribute__((__nothrow__));
# 514 "/usr/include/lzma/index.h" 3 4
extern lzma_bool lzma_index_iter_next(
  lzma_index_iter *iter, lzma_index_iter_mode mode)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 542 "/usr/include/lzma/index.h" 3 4
extern lzma_bool lzma_index_iter_locate(
  lzma_index_iter *iter, lzma_vli target) __attribute__((__nothrow__));
# 567 "/usr/include/lzma/index.h" 3 4
extern lzma_ret lzma_index_cat(lzma_index *dest, lzma_index *src,
  const lzma_allocator *allocator)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));







extern lzma_index * lzma_index_dup(
  const lzma_index *i, const lzma_allocator *allocator)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 595 "/usr/include/lzma/index.h" 3 4
extern lzma_ret lzma_index_encoder(
  lzma_stream *strm, const lzma_index *i)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 628 "/usr/include/lzma/index.h" 3 4
extern lzma_ret lzma_index_decoder(
  lzma_stream *strm, lzma_index **i, uint64_t memlimit)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 652 "/usr/include/lzma/index.h" 3 4
extern lzma_ret lzma_index_buffer_encode(const lzma_index *i,
  uint8_t *out, size_t *out_pos, size_t out_size) __attribute__((__nothrow__));
# 683 "/usr/include/lzma/index.h" 3 4
extern lzma_ret lzma_index_buffer_decode(lzma_index **i,
  uint64_t *memlimit, const lzma_allocator *allocator,
  const uint8_t *in, size_t *in_pos, size_t in_size)
  __attribute__((__nothrow__));
# 310 "/usr/include/lzma.h" 2 3 4
# 1 "/usr/include/lzma/index_hash.h" 1 3 4
# 25 "/usr/include/lzma/index_hash.h" 3 4
typedef struct lzma_index_hash_s lzma_index_hash;
# 39 "/usr/include/lzma/index_hash.h" 3 4
extern lzma_index_hash * lzma_index_hash_init(
  lzma_index_hash *index_hash, const lzma_allocator *allocator)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));





extern void lzma_index_hash_end(
  lzma_index_hash *index_hash, const lzma_allocator *allocator)
  __attribute__((__nothrow__));
# 65 "/usr/include/lzma/index_hash.h" 3 4
extern lzma_ret lzma_index_hash_append(lzma_index_hash *index_hash,
  lzma_vli unpadded_size, lzma_vli uncompressed_size)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));
# 95 "/usr/include/lzma/index_hash.h" 3 4
extern lzma_ret lzma_index_hash_decode(lzma_index_hash *index_hash,
  const uint8_t *in, size_t *in_pos, size_t in_size)
  __attribute__((__nothrow__)) __attribute__((__warn_unused_result__));







extern lzma_vli lzma_index_hash_size(
  const lzma_index_hash *index_hash)
  __attribute__((__nothrow__)) __attribute__((__pure__));
# 311 "/usr/include/lzma.h" 2 3 4


# 1 "/usr/include/lzma/hardware.h" 1 3 4
# 50 "/usr/include/lzma/hardware.h" 3 4
extern uint64_t lzma_physmem(void) __attribute__((__nothrow__));
# 64 "/usr/include/lzma/hardware.h" 3 4
extern uint32_t lzma_cputhreads(void) __attribute__((__nothrow__));
# 314 "/usr/include/lzma.h" 2 3 4
# 85 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 2


# 1 "/doner/libxml2/libxml2-4ea74a44/libxml2/buf.h" 1
# 22 "/doner/libxml2/libxml2-4ea74a44/libxml2/buf.h"

# 22 "/doner/libxml2/libxml2-4ea74a44/libxml2/buf.h"
xmlBufPtr xmlBufCreate(void);
xmlBufPtr xmlBufCreateSize(size_t size);
xmlBufPtr xmlBufCreateStatic(void *mem, size_t size);

int xmlBufSetAllocationScheme(xmlBufPtr buf,
                              xmlBufferAllocationScheme scheme);
int xmlBufGetAllocationScheme(xmlBufPtr buf);

void xmlBufFree(xmlBufPtr buf);
void xmlBufEmpty(xmlBufPtr buf);


int xmlBufGrow(xmlBufPtr buf, int len);
int xmlBufInflate(xmlBufPtr buf, size_t len);
int xmlBufResize(xmlBufPtr buf, size_t len);

int xmlBufAdd(xmlBufPtr buf, const xmlChar *str, int len);
int xmlBufAddHead(xmlBufPtr buf, const xmlChar *str, int len);
int xmlBufCat(xmlBufPtr buf, const xmlChar *str);
int xmlBufCCat(xmlBufPtr buf, const char *str);
int xmlBufWriteCHAR(xmlBufPtr buf, const xmlChar *string);
int xmlBufWriteChar(xmlBufPtr buf, const char *string);
int xmlBufWriteQuotedString(xmlBufPtr buf, const xmlChar *string);

size_t xmlBufAvail(const xmlBufPtr buf);
size_t xmlBufLength(const xmlBufPtr buf);

int xmlBufIsEmpty(const xmlBufPtr buf);
int xmlBufAddLen(xmlBufPtr buf, size_t len);
int xmlBufErase(xmlBufPtr buf, size_t len);




xmlChar * xmlBufDetach(xmlBufPtr buf);

size_t xmlBufDump(FILE *file, xmlBufPtr buf);

xmlBufPtr xmlBufFromBuffer(xmlBufferPtr buffer);
xmlBufferPtr xmlBufBackToBuffer(xmlBufPtr buf);
int xmlBufMergeBuffer(xmlBufPtr buf, xmlBufferPtr buffer);

int xmlBufResetInput(xmlBufPtr buf, xmlParserInputPtr input);
size_t xmlBufGetInputBase(xmlBufPtr buf, xmlParserInputPtr input);
int xmlBufSetInputBaseCur(xmlBufPtr buf, xmlParserInputPtr input,
                          size_t base, size_t cur);
# 88 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 2
# 1 "/doner/libxml2/libxml2-4ea74a44/libxml2/enc.h" 1
# 21 "/doner/libxml2/libxml2-4ea74a44/libxml2/enc.h"
int xmlCharEncFirstLineInt(xmlCharEncodingHandler *handler, xmlBufferPtr out,
                           xmlBufferPtr in, int len);
int xmlCharEncFirstLineInput(xmlParserInputBufferPtr input, int len);
int xmlCharEncInput(xmlParserInputBufferPtr input);
int xmlCharEncOutput(xmlOutputBufferPtr output, int init);
# 89 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 2

static void
xmlFatalErr(xmlParserCtxtPtr ctxt, xmlParserErrors error, const char *info);

static xmlParserCtxtPtr
xmlCreateEntityParserCtxtInternal(const xmlChar *URL, const xmlChar *ID,
                   const xmlChar *base, xmlParserCtxtPtr pctx);
# 123 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static int
xmlParserEntityCheck(xmlParserCtxtPtr ctxt, size_t size,
                     xmlEntityPtr ent)
{
    size_t consumed = 0;

    if ((ctxt == 
# 129 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 129 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) || (ctxt->options & XML_PARSE_HUGE))
        return (0);
    if (ctxt->lastError.code == XML_ERR_ENTITY_LOOP)
        return (1);
    if (size != 0) {



        if (size < 1000)
     return(0);




        if (ctxt->input != 
# 143 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 143 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              ) {
            consumed = ctxt->input->consumed +
                (ctxt->input->cur - ctxt->input->base);
        }
        consumed += ctxt->sizeentities;

        if ((size < 10 * consumed) &&
     (ctxt->nbentities * 3 < 10 * consumed))
            return (0);
    } else if (ent != 
# 152 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 152 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) {



        size = ent->checked;




        if (ctxt->input != 
# 161 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 161 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              ) {
            consumed = ctxt->input->consumed +
                (ctxt->input->cur - ctxt->input->base);
        }
        consumed += ctxt->sizeentities;





        if (size * 3 < consumed * 10)
            return (0);
    } else {



        return (0);
    }

    xmlFatalErr(ctxt, XML_ERR_ENTITY_LOOP, 
# 180 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                          ((void *)0)
# 180 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                              );
    return (1);
}
# 192 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
unsigned int xmlParserMaxDepth = 256;
# 216 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static const char *xmlW3CPIs[] = {
    "xml-stylesheet",
    "xml-model",
    
# 219 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
   ((void *)0)

# 220 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
};



static xmlEntityPtr xmlParseStringPEReference(xmlParserCtxtPtr ctxt,
                                              const xmlChar **str);

static xmlParserErrors
xmlParseExternalEntityPrivate(xmlDocPtr doc, xmlParserCtxtPtr oldctxt,
               xmlSAXHandlerPtr sax,
        void *user_data, int depth, const xmlChar *URL,
        const xmlChar *ID, xmlNodePtr *list);

static int
xmlCtxtUseOptionsInternal(xmlParserCtxtPtr ctxt, int options,
                          const char *encoding);

static void
xmlAddEntityReference(xmlEntityPtr ent, xmlNodePtr firstNode,
                      xmlNodePtr lastNode);


static xmlParserErrors
xmlParseBalancedChunkMemoryInternal(xmlParserCtxtPtr oldctxt,
        const xmlChar *string, void *user_data, xmlNodePtr *lst);

static int
xmlLoadEntityContent(xmlParserCtxtPtr ctxt, xmlEntityPtr entity);
# 263 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void
xmlErrAttributeDup(xmlParserCtxtPtr ctxt, const xmlChar * prefix,
                   const xmlChar * localname)
{
    if ((ctxt != 
# 267 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 267 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) && (ctxt->disableSAX != 0) &&
        (ctxt->instate == XML_PARSER_EOF))
 return;
    if (ctxt != 
# 270 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 270 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
 ctxt->errNo = XML_ERR_ATTRIBUTE_REDEFINED;

    if (prefix == 
# 273 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 273 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     )
        __xmlRaiseError(
# 274 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 274 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           , 
# 274 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                             ((void *)0)
# 274 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                 , 
# 274 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                   ((void *)0)
# 274 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                       , ctxt, 
# 274 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 274 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   , XML_FROM_PARSER,
                        XML_ERR_ATTRIBUTE_REDEFINED, XML_ERR_FATAL, 
# 275 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                                   ((void *)0)
# 275 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                                       , 0,
                        (const char *) localname, 
# 276 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                 ((void *)0)
# 276 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                     , 
# 276 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                       ((void *)0)
# 276 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                           , 0, 0,
                        "Attribute %s redefined\n", localname);
    else
        __xmlRaiseError(
# 279 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 279 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           , 
# 279 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                             ((void *)0)
# 279 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                 , 
# 279 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                   ((void *)0)
# 279 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                       , ctxt, 
# 279 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 279 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   , XML_FROM_PARSER,
                        XML_ERR_ATTRIBUTE_REDEFINED, XML_ERR_FATAL, 
# 280 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                                   ((void *)0)
# 280 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                                       , 0,
                        (const char *) prefix, (const char *) localname,
                        
# 282 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 282 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           , 0, 0, "Attribute %s:%s redefined\n", prefix,
                        localname);
    if (ctxt != 
# 284 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 284 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
 ctxt->wellFormed = 0;
 if (ctxt->recovery == 0)
     ctxt->disableSAX = 1;
    }
}
# 299 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void
xmlFatalErr(xmlParserCtxtPtr ctxt, xmlParserErrors error, const char *info)
{
    const char *errmsg;
    char errstr[129] = "";

    if ((ctxt != 
# 305 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 305 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) && (ctxt->disableSAX != 0) &&
        (ctxt->instate == XML_PARSER_EOF))
 return;
    switch (error) {
        case XML_ERR_INVALID_HEX_CHARREF:
            errmsg = "CharRef: invalid hexadecimal value";
            break;
        case XML_ERR_INVALID_DEC_CHARREF:
            errmsg = "CharRef: invalid decimal value";
            break;
        case XML_ERR_INVALID_CHARREF:
            errmsg = "CharRef: invalid value";
            break;
        case XML_ERR_INTERNAL_ERROR:
            errmsg = "internal error";
            break;
        case XML_ERR_PEREF_AT_EOF:
            errmsg = "PEReference at end of document";
            break;
        case XML_ERR_PEREF_IN_PROLOG:
            errmsg = "PEReference in prolog";
            break;
        case XML_ERR_PEREF_IN_EPILOG:
            errmsg = "PEReference in epilog";
            break;
        case XML_ERR_PEREF_NO_NAME:
            errmsg = "PEReference: no name";
            break;
        case XML_ERR_PEREF_SEMICOL_MISSING:
            errmsg = "PEReference: expecting ';'";
            break;
        case XML_ERR_ENTITY_LOOP:
            errmsg = "Detected an entity reference loop";
            break;
        case XML_ERR_ENTITY_NOT_STARTED:
            errmsg = "EntityValue: \" or ' expected";
            break;
        case XML_ERR_ENTITY_PE_INTERNAL:
            errmsg = "PEReferences forbidden in internal subset";
            break;
        case XML_ERR_ENTITY_NOT_FINISHED:
            errmsg = "EntityValue: \" or ' expected";
            break;
        case XML_ERR_ATTRIBUTE_NOT_STARTED:
            errmsg = "AttValue: \" or ' expected";
            break;
        case XML_ERR_LT_IN_ATTRIBUTE:
            errmsg = "Unescaped '<' not allowed in attributes values";
            break;
        case XML_ERR_LITERAL_NOT_STARTED:
            errmsg = "SystemLiteral \" or ' expected";
            break;
        case XML_ERR_LITERAL_NOT_FINISHED:
            errmsg = "Unfinished System or Public ID \" or ' expected";
            break;
        case XML_ERR_MISPLACED_CDATA_END:
            errmsg = "Sequence ']]>' not allowed in content";
            break;
        case XML_ERR_URI_REQUIRED:
            errmsg = "SYSTEM or PUBLIC, the URI is missing";
            break;
        case XML_ERR_PUBID_REQUIRED:
            errmsg = "PUBLIC, the Public Identifier is missing";
            break;
        case XML_ERR_HYPHEN_IN_COMMENT:
            errmsg = "Comment must not contain '--' (double-hyphen)";
            break;
        case XML_ERR_PI_NOT_STARTED:
            errmsg = "xmlParsePI : no target name";
            break;
        case XML_ERR_RESERVED_XML_NAME:
            errmsg = "Invalid PI name";
            break;
        case XML_ERR_NOTATION_NOT_STARTED:
            errmsg = "NOTATION: Name expected here";
            break;
        case XML_ERR_NOTATION_NOT_FINISHED:
            errmsg = "'>' required to close NOTATION declaration";
            break;
        case XML_ERR_VALUE_REQUIRED:
            errmsg = "Entity value required";
            break;
        case XML_ERR_URI_FRAGMENT:
            errmsg = "Fragment not allowed";
            break;
        case XML_ERR_ATTLIST_NOT_STARTED:
            errmsg = "'(' required to start ATTLIST enumeration";
            break;
        case XML_ERR_NMTOKEN_REQUIRED:
            errmsg = "NmToken expected in ATTLIST enumeration";
            break;
        case XML_ERR_ATTLIST_NOT_FINISHED:
            errmsg = "')' required to finish ATTLIST enumeration";
            break;
        case XML_ERR_MIXED_NOT_STARTED:
            errmsg = "MixedContentDecl : '|' or ')*' expected";
            break;
        case XML_ERR_PCDATA_REQUIRED:
            errmsg = "MixedContentDecl : '#PCDATA' expected";
            break;
        case XML_ERR_ELEMCONTENT_NOT_STARTED:
            errmsg = "ContentDecl : Name or '(' expected";
            break;
        case XML_ERR_ELEMCONTENT_NOT_FINISHED:
            errmsg = "ContentDecl : ',' '|' or ')' expected";
            break;
        case XML_ERR_PEREF_IN_INT_SUBSET:
            errmsg =
                "PEReference: forbidden within markup decl in internal subset";
            break;
        case XML_ERR_GT_REQUIRED:
            errmsg = "expected '>'";
            break;
        case XML_ERR_CONDSEC_INVALID:
            errmsg = "XML conditional section '[' expected";
            break;
        case XML_ERR_EXT_SUBSET_NOT_FINISHED:
            errmsg = "Content error in the external subset";
            break;
        case XML_ERR_CONDSEC_INVALID_KEYWORD:
            errmsg =
                "conditional section INCLUDE or IGNORE keyword expected";
            break;
        case XML_ERR_CONDSEC_NOT_FINISHED:
            errmsg = "XML conditional section not closed";
            break;
        case XML_ERR_XMLDECL_NOT_STARTED:
            errmsg = "Text declaration '<?xml' required";
            break;
        case XML_ERR_XMLDECL_NOT_FINISHED:
            errmsg = "parsing XML declaration: '?>' expected";
            break;
        case XML_ERR_EXT_ENTITY_STANDALONE:
            errmsg = "external parsed entities cannot be standalone";
            break;
        case XML_ERR_ENTITYREF_SEMICOL_MISSING:
            errmsg = "EntityRef: expecting ';'";
            break;
        case XML_ERR_DOCTYPE_NOT_FINISHED:
            errmsg = "DOCTYPE improperly terminated";
            break;
        case XML_ERR_LTSLASH_REQUIRED:
            errmsg = "EndTag: '</' not found";
            break;
        case XML_ERR_EQUAL_REQUIRED:
            errmsg = "expected '='";
            break;
        case XML_ERR_STRING_NOT_CLOSED:
            errmsg = "String not closed expecting \" or '";
            break;
        case XML_ERR_STRING_NOT_STARTED:
            errmsg = "String not started expecting ' or \"";
            break;
        case XML_ERR_ENCODING_NAME:
            errmsg = "Invalid XML encoding name";
            break;
        case XML_ERR_STANDALONE_VALUE:
            errmsg = "standalone accepts only 'yes' or 'no'";
            break;
        case XML_ERR_DOCUMENT_EMPTY:
            errmsg = "Document is empty";
            break;
        case XML_ERR_DOCUMENT_END:
            errmsg = "Extra content at the end of the document";
            break;
        case XML_ERR_NOT_WELL_BALANCED:
            errmsg = "chunk is not well balanced";
            break;
        case XML_ERR_EXTRA_CONTENT:
            errmsg = "extra content at the end of well balanced chunk";
            break;
        case XML_ERR_VERSION_MISSING:
            errmsg = "Malformed declaration expecting version";
            break;
        case XML_ERR_NAME_TOO_LONG:
            errmsg = "Name too long use XML_PARSE_HUGE option";
            break;





        default:
            errmsg = "Unregistered error message";
    }
    if (info == 
# 490 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 490 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
        snprintf(errstr, 128, "%s\n", errmsg);
    else
        snprintf(errstr, 128, "%s: %%s\n", errmsg);
    if (ctxt != 
# 494 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 494 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
 ctxt->errNo = error;
    __xmlRaiseError(
# 496 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 496 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       , 
# 496 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 496 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             , 
# 496 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                               ((void *)0)
# 496 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                   , ctxt, 
# 496 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                           ((void *)0)
# 496 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                               , XML_FROM_PARSER, error,
                    XML_ERR_FATAL, 
# 497 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                  ((void *)0)
# 497 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                      , 0, info, 
# 497 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                 ((void *)0)
# 497 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                     , 
# 497 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                       ((void *)0)
# 497 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                           , 0, 0, &errstr[0],
                    info);
    if (ctxt != 
# 499 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 499 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
 ctxt->wellFormed = 0;
 if (ctxt->recovery == 0)
     ctxt->disableSAX = 1;
    }
}
# 514 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void
xmlFatalErrMsg(xmlParserCtxtPtr ctxt, xmlParserErrors error,
               const char *msg)
{
    if ((ctxt != 
# 518 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 518 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) && (ctxt->disableSAX != 0) &&
        (ctxt->instate == XML_PARSER_EOF))
 return;
    if (ctxt != 
# 521 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 521 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
 ctxt->errNo = error;
    __xmlRaiseError(
# 523 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 523 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       , 
# 523 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 523 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             , 
# 523 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                               ((void *)0)
# 523 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                   , ctxt, 
# 523 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                           ((void *)0)
# 523 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                               , XML_FROM_PARSER, error,
                    XML_ERR_FATAL, 
# 524 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                  ((void *)0)
# 524 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                      , 0, 
# 524 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                           ((void *)0)
# 524 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                               , 
# 524 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                 ((void *)0)
# 524 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                     , 
# 524 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                       ((void *)0)
# 524 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                           , 0, 0, "%s", msg);
    if (ctxt != 
# 525 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 525 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
 ctxt->wellFormed = 0;
 if (ctxt->recovery == 0)
     ctxt->disableSAX = 1;
    }
}
# 542 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void
xmlWarningMsg(xmlParserCtxtPtr ctxt, xmlParserErrors error,
              const char *msg, const xmlChar *str1, const xmlChar *str2)
{
    xmlStructuredErrorFunc schannel = 
# 546 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                     ((void *)0)
# 546 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                         ;

    if ((ctxt != 
# 548 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 548 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) && (ctxt->disableSAX != 0) &&
        (ctxt->instate == XML_PARSER_EOF))
 return;
    if ((ctxt != 
# 551 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 551 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) && (ctxt->sax != 
# 551 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                       ((void *)0)
# 551 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                           ) &&
        (ctxt->sax->initialized == 0xDEEDBEAF))
        schannel = ctxt->sax->serror;
    if (ctxt != 
# 554 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 554 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
        __xmlRaiseError(schannel,
                    (ctxt->sax) ? ctxt->sax->warning : 
# 556 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                      ((void *)0)
# 556 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                          ,
                    ctxt->userData,
                    ctxt, 
# 558 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 558 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             , XML_FROM_PARSER, error,
                    XML_ERR_WARNING, 
# 559 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                    ((void *)0)
# 559 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                        , 0,
      (const char *) str1, (const char *) str2, 
# 560 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 560 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   , 0, 0,
      msg, (const char *) str1, (const char *) str2);
    } else {
        __xmlRaiseError(schannel, 
# 563 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                 ((void *)0)
# 563 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                     , 
# 563 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                       ((void *)0)
# 563 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                           ,
                    ctxt, 
# 564 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 564 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             , XML_FROM_PARSER, error,
                    XML_ERR_WARNING, 
# 565 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                    ((void *)0)
# 565 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                        , 0,
      (const char *) str1, (const char *) str2, 
# 566 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 566 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   , 0, 0,
      msg, (const char *) str1, (const char *) str2);
    }
}
# 580 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void
xmlValidityError(xmlParserCtxtPtr ctxt, xmlParserErrors error,
              const char *msg, const xmlChar *str1, const xmlChar *str2)
{
    xmlStructuredErrorFunc schannel = 
# 584 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                     ((void *)0)
# 584 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                         ;

    if ((ctxt != 
# 586 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 586 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) && (ctxt->disableSAX != 0) &&
        (ctxt->instate == XML_PARSER_EOF))
 return;
    if (ctxt != 
# 589 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 589 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
 ctxt->errNo = error;
 if ((ctxt->sax != 
# 591 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 591 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) && (ctxt->sax->initialized == 0xDEEDBEAF))
     schannel = ctxt->sax->serror;
    }
    if (ctxt != 
# 594 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 594 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
        __xmlRaiseError(schannel,
                    ctxt->vctxt.error, ctxt->vctxt.userData,
                    ctxt, 
# 597 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 597 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             , XML_FROM_DTD, error,
                    XML_ERR_ERROR, 
# 598 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                  ((void *)0)
# 598 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                      , 0, (const char *) str1,
      (const char *) str2, 
# 599 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 599 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              , 0, 0,
      msg, (const char *) str1, (const char *) str2);
 ctxt->valid = 0;
    } else {
        __xmlRaiseError(schannel, 
# 603 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                 ((void *)0)
# 603 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                     , 
# 603 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                       ((void *)0)
# 603 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                           ,
                    ctxt, 
# 604 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 604 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             , XML_FROM_DTD, error,
                    XML_ERR_ERROR, 
# 605 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                  ((void *)0)
# 605 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                      , 0, (const char *) str1,
      (const char *) str2, 
# 606 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 606 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              , 0, 0,
      msg, (const char *) str1, (const char *) str2);
    }
}
# 620 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void
xmlFatalErrMsgInt(xmlParserCtxtPtr ctxt, xmlParserErrors error,
                  const char *msg, int val)
{
    if ((ctxt != 
# 624 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 624 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) && (ctxt->disableSAX != 0) &&
        (ctxt->instate == XML_PARSER_EOF))
 return;
    if (ctxt != 
# 627 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 627 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
 ctxt->errNo = error;
    __xmlRaiseError(
# 629 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 629 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       , 
# 629 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 629 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             , 
# 629 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                               ((void *)0)
# 629 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                   ,
                    ctxt, 
# 630 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 630 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             , XML_FROM_PARSER, error, XML_ERR_FATAL,
                    
# 631 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 631 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       , 0, 
# 631 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 631 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                , 
# 631 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                  ((void *)0)
# 631 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                      , 
# 631 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                        ((void *)0)
# 631 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                            , val, 0, msg, val);
    if (ctxt != 
# 632 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 632 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
 ctxt->wellFormed = 0;
 if (ctxt->recovery == 0)
     ctxt->disableSAX = 1;
    }
}
# 650 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void
xmlFatalErrMsgStrIntStr(xmlParserCtxtPtr ctxt, xmlParserErrors error,
                  const char *msg, const xmlChar *str1, int val,
    const xmlChar *str2)
{
    if ((ctxt != 
# 655 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 655 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) && (ctxt->disableSAX != 0) &&
        (ctxt->instate == XML_PARSER_EOF))
 return;
    if (ctxt != 
# 658 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 658 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
 ctxt->errNo = error;
    __xmlRaiseError(
# 660 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 660 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       , 
# 660 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 660 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             , 
# 660 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                               ((void *)0)
# 660 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                   ,
                    ctxt, 
# 661 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 661 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             , XML_FROM_PARSER, error, XML_ERR_FATAL,
                    
# 662 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 662 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       , 0, (const char *) str1, (const char *) str2,
      
# 663 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
     ((void *)0)
# 663 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
         , val, 0, msg, str1, val, str2);
    if (ctxt != 
# 664 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 664 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
 ctxt->wellFormed = 0;
 if (ctxt->recovery == 0)
     ctxt->disableSAX = 1;
    }
}
# 680 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void
xmlFatalErrMsgStr(xmlParserCtxtPtr ctxt, xmlParserErrors error,
                  const char *msg, const xmlChar * val)
{
    if ((ctxt != 
# 684 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 684 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) && (ctxt->disableSAX != 0) &&
        (ctxt->instate == XML_PARSER_EOF))
 return;
    if (ctxt != 
# 687 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 687 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
 ctxt->errNo = error;
    __xmlRaiseError(
# 689 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 689 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       , 
# 689 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 689 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             , 
# 689 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                               ((void *)0)
# 689 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                   , ctxt, 
# 689 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                           ((void *)0)
# 689 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                               ,
                    XML_FROM_PARSER, error, XML_ERR_FATAL,
                    
# 691 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 691 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       , 0, (const char *) val, 
# 691 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                ((void *)0)
# 691 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                    , 
# 691 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                      ((void *)0)
# 691 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                          , 0, 0, msg,
                    val);
    if (ctxt != 
# 693 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 693 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
 ctxt->wellFormed = 0;
 if (ctxt->recovery == 0)
     ctxt->disableSAX = 1;
    }
}
# 709 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void
xmlErrMsgStr(xmlParserCtxtPtr ctxt, xmlParserErrors error,
                  const char *msg, const xmlChar * val)
{
    if ((ctxt != 
# 713 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 713 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) && (ctxt->disableSAX != 0) &&
        (ctxt->instate == XML_PARSER_EOF))
 return;
    if (ctxt != 
# 716 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 716 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
 ctxt->errNo = error;
    __xmlRaiseError(
# 718 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 718 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       , 
# 718 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 718 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             , 
# 718 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                               ((void *)0)
# 718 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                   , ctxt, 
# 718 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                           ((void *)0)
# 718 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                               ,
                    XML_FROM_PARSER, error, XML_ERR_ERROR,
                    
# 720 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 720 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       , 0, (const char *) val, 
# 720 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                ((void *)0)
# 720 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                    , 
# 720 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                      ((void *)0)
# 720 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                          , 0, 0, msg,
                    val);
}
# 734 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void
xmlNsErr(xmlParserCtxtPtr ctxt, xmlParserErrors error,
         const char *msg,
         const xmlChar * info1, const xmlChar * info2,
         const xmlChar * info3)
{
    if ((ctxt != 
# 740 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 740 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) && (ctxt->disableSAX != 0) &&
        (ctxt->instate == XML_PARSER_EOF))
 return;
    if (ctxt != 
# 743 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 743 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
 ctxt->errNo = error;
    __xmlRaiseError(
# 745 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 745 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       , 
# 745 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 745 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             , 
# 745 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                               ((void *)0)
# 745 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                   , ctxt, 
# 745 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                           ((void *)0)
# 745 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                               , XML_FROM_NAMESPACE, error,
                    XML_ERR_ERROR, 
# 746 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                  ((void *)0)
# 746 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                      , 0, (const char *) info1,
                    (const char *) info2, (const char *) info3, 0, 0, msg,
                    info1, info2, info3);
    if (ctxt != 
# 749 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 749 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
 ctxt->nsWellFormed = 0;
}
# 763 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void
xmlNsWarn(xmlParserCtxtPtr ctxt, xmlParserErrors error,
         const char *msg,
         const xmlChar * info1, const xmlChar * info2,
         const xmlChar * info3)
{
    if ((ctxt != 
# 769 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 769 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) && (ctxt->disableSAX != 0) &&
        (ctxt->instate == XML_PARSER_EOF))
 return;
    __xmlRaiseError(
# 772 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 772 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       , 
# 772 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 772 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             , 
# 772 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                               ((void *)0)
# 772 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                   , ctxt, 
# 772 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                           ((void *)0)
# 772 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                               , XML_FROM_NAMESPACE, error,
                    XML_ERR_WARNING, 
# 773 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                    ((void *)0)
# 773 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                        , 0, (const char *) info1,
                    (const char *) info2, (const char *) info3, 0, 0, msg,
                    info1, info2, info3);
}
# 794 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int
xmlHasFeature__internal_alias(xmlFeature feature)
{
    switch (feature) {
 case XML_WITH_THREAD:

     return(1);



        case XML_WITH_TREE:

            return(1);



        case XML_WITH_OUTPUT:

            return(1);



        case XML_WITH_PUSH:

            return(1);



        case XML_WITH_READER:

            return(1);



        case XML_WITH_PATTERN:

            return(1);



        case XML_WITH_WRITER:

            return(1);



        case XML_WITH_SAX1:

            return(1);



        case XML_WITH_FTP:

            return(1);



        case XML_WITH_HTTP:

            return(1);



        case XML_WITH_VALID:

            return(1);



        case XML_WITH_HTML:

            return(1);



        case XML_WITH_LEGACY:

            return(1);



        case XML_WITH_C14N:

            return(1);



        case XML_WITH_CATALOG:

            return(1);



        case XML_WITH_XPATH:

            return(1);



        case XML_WITH_XPTR:

            return(1);



        case XML_WITH_XINCLUDE:

            return(1);



        case XML_WITH_ICONV:

            return(1);



        case XML_WITH_ISO8859X:

            return(1);



        case XML_WITH_UNICODE:

            return(1);



        case XML_WITH_REGEXP:

            return(1);



        case XML_WITH_AUTOMATA:

            return(1);



        case XML_WITH_EXPR:

            return(1);



        case XML_WITH_SCHEMAS:

            return(1);



        case XML_WITH_SCHEMATRON:

            return(1);



        case XML_WITH_MODULES:

            return(1);



        case XML_WITH_DEBUG:

            return(1);



        case XML_WITH_DEBUG_MEM:



            return(0);

        case XML_WITH_DEBUG_RUN:



            return(0);

        case XML_WITH_ZLIB:

            return(1);



        case XML_WITH_LZMA:

            return(1);



        case XML_WITH_ICU:



            return(0);

        default:
     break;
     }
     return(0);
}
# 1014 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void
xmlDetectSAX2(xmlParserCtxtPtr ctxt) {
    if (ctxt == 
# 1016 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 1016 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) return;

    if ((ctxt->sax) && (ctxt->sax->initialized == 0xDEEDBEAF) &&
        ((ctxt->sax->startElementNs != 
# 1019 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                      ((void *)0)
# 1019 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                          ) ||
         (ctxt->sax->endElementNs != 
# 1020 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                    ((void *)0)
# 1020 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                        ))) ctxt->sax2 = 1;




    ctxt->str_xml = xmlDictLookup__internal_alias(ctxt->dict, (xmlChar *) "xml", 3);
    ctxt->str_xmlns = xmlDictLookup__internal_alias(ctxt->dict, (xmlChar *) "xmlns", 5);
    ctxt->str_xml_ns = xmlDictLookup__internal_alias(ctxt->dict, (const xmlChar *) "http://www.w3.org/XML/1998/namespace", 36);
    if ((ctxt->str_xml==
# 1028 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 1028 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ) || (ctxt->str_xmlns==
# 1028 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                  ((void *)0)
# 1028 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                      ) ||
  (ctxt->str_xml_ns == 
# 1029 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 1029 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          )) {
        xmlErrMemory__internal_alias(ctxt, 
# 1030 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 1030 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              );
    }
}

typedef struct _xmlDefAttrs xmlDefAttrs;
typedef xmlDefAttrs *xmlDefAttrsPtr;
struct _xmlDefAttrs {
    int nbAttrs;
    int maxAttrs;
    const xmlChar *values[5];
};
# 1059 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static xmlChar *
xmlAttrNormalizeSpace(const xmlChar *src, xmlChar *dst)
{
    if ((src == 
# 1062 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 1062 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) || (dst == 
# 1062 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                ((void *)0)
# 1062 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                    ))
        return(
# 1063 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 1063 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );

    while (*src == 0x20) src++;
    while (*src != 0) {
 if (*src == 0x20) {
     while (*src == 0x20) src++;
     if (*src != 0)
  *dst++ = 0x20;
 } else {
     *dst++ = *src++;
 }
    }
    *dst = 0;
    if (dst == src)
       return(
# 1077 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 1077 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 );
    return(dst);
}
# 1092 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static const xmlChar *
xmlAttrNormalizeSpace2(xmlParserCtxtPtr ctxt, xmlChar *src, int *len)
{
    int i;
    int remove_head = 0;
    int need_realloc = 0;
    const xmlChar *cur;

    if ((ctxt == 
# 1100 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 1100 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) || (src == 
# 1100 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                 ((void *)0)
# 1100 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                     ) || (len == 
# 1100 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                  ((void *)0)
# 1100 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                      ))
        return(
# 1101 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 1101 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );
    i = *len;
    if (i <= 0)
        return(
# 1104 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 1104 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );

    cur = src;
    while (*cur == 0x20) {
        cur++;
 remove_head++;
    }
    while (*cur != 0) {
 if (*cur == 0x20) {
     cur++;
     if ((*cur == 0x20) || (*cur == 0)) {
         need_realloc = 1;
  break;
     }
 } else
     cur++;
    }
    if (need_realloc) {
        xmlChar *ret;

 ret = xmlStrndup__internal_alias(src + remove_head, i - remove_head + 1);
 if (ret == 
# 1125 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 1125 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               ) {
     xmlErrMemory__internal_alias(ctxt, 
# 1126 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 1126 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           );
     return(
# 1127 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 1127 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               );
 }
 xmlAttrNormalizeSpace(ret, ret);
 *len = (int) strlen((const char *)ret);
        return(ret);
    } else if (remove_head) {
        *len -= remove_head;
        memmove(src, src + remove_head, 1 + *len);
 return(src);
    }
    return(
# 1137 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
          ((void *)0)
# 1137 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
              );
}
# 1149 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void
xmlAddDefAttrs(xmlParserCtxtPtr ctxt,
               const xmlChar *fullname,
               const xmlChar *fullattr,
               const xmlChar *value) {
    xmlDefAttrsPtr defaults;
    int len;
    const xmlChar *name;
    const xmlChar *prefix;




    if (ctxt->attsSpecial != 
# 1162 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 1162 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                ) {
        if (xmlHashLookup2__internal_alias(ctxt->attsSpecial, fullname, fullattr) != 
# 1163 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                                    ((void *)0)
# 1163 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                                        )
     return;
    }

    if (ctxt->attsDefault == 
# 1167 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 1167 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                ) {
        ctxt->attsDefault = xmlHashCreateDict__internal_alias(10, ctxt->dict);
 if (ctxt->attsDefault == 
# 1169 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 1169 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             )
     goto mem_error;
    }





    name = xmlSplitQName3__internal_alias(fullname, &len);
    if (name == 
# 1178 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 1178 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
        name = xmlDictLookup__internal_alias(ctxt->dict, fullname, -1);
 prefix = 
# 1180 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
         ((void *)0)
# 1180 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
             ;
    } else {
        name = xmlDictLookup__internal_alias(ctxt->dict, name, -1);
 prefix = xmlDictLookup__internal_alias(ctxt->dict, fullname, len);
    }




    defaults = xmlHashLookup2__internal_alias(ctxt->attsDefault, name, prefix);
    if (defaults == 
# 1190 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 1190 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) {
        defaults = (xmlDefAttrsPtr) xmlMalloc(sizeof(xmlDefAttrs) +
                    (4 * 5) * sizeof(const xmlChar *));
 if (defaults == 
# 1193 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 1193 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    )
     goto mem_error;
 defaults->nbAttrs = 0;
 defaults->maxAttrs = 4;
 if (xmlHashUpdateEntry2__internal_alias(ctxt->attsDefault, name, prefix,
                         defaults, 
# 1198 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                  ((void *)0)
# 1198 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                      ) < 0) {
     xmlFree(defaults);
     goto mem_error;
 }
    } else if (defaults->nbAttrs >= defaults->maxAttrs) {
        xmlDefAttrsPtr temp;

        temp = (xmlDefAttrsPtr) xmlRealloc(defaults, sizeof(xmlDefAttrs) +
         (2 * defaults->maxAttrs * 5) * sizeof(const xmlChar *));
 if (temp == 
# 1207 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 1207 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                )
     goto mem_error;
 defaults = temp;
 defaults->maxAttrs *= 2;
 if (xmlHashUpdateEntry2__internal_alias(ctxt->attsDefault, name, prefix,
                         defaults, 
# 1212 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                  ((void *)0)
# 1212 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                      ) < 0) {
     xmlFree(defaults);
     goto mem_error;
 }
    }





    name = xmlSplitQName3__internal_alias(fullattr, &len);
    if (name == 
# 1223 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 1223 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
        name = xmlDictLookup__internal_alias(ctxt->dict, fullattr, -1);
 prefix = 
# 1225 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
         ((void *)0)
# 1225 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
             ;
    } else {
        name = xmlDictLookup__internal_alias(ctxt->dict, name, -1);
 prefix = xmlDictLookup__internal_alias(ctxt->dict, fullattr, len);
    }

    defaults->values[5 * defaults->nbAttrs] = name;
    defaults->values[5 * defaults->nbAttrs + 1] = prefix;

    len = xmlStrlen__internal_alias(value);
    value = xmlDictLookup__internal_alias(ctxt->dict, value, len);
    defaults->values[5 * defaults->nbAttrs + 2] = value;
    defaults->values[5 * defaults->nbAttrs + 3] = value + len;
    if (ctxt->external)
        defaults->values[5 * defaults->nbAttrs + 4] = (xmlChar *) "external";
    else
        defaults->values[5 * defaults->nbAttrs + 4] = 
# 1241 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                     ((void *)0)
# 1241 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                         ;
    defaults->nbAttrs++;

    return;

mem_error:
    xmlErrMemory__internal_alias(ctxt, 
# 1247 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 1247 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          );
    return;
}
# 1260 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void
xmlAddSpecialAttr(xmlParserCtxtPtr ctxt,
    const xmlChar *fullname,
    const xmlChar *fullattr,
    int type)
{
    if (ctxt->attsSpecial == 
# 1266 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 1266 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                ) {
        ctxt->attsSpecial = xmlHashCreateDict__internal_alias(10, ctxt->dict);
 if (ctxt->attsSpecial == 
# 1268 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 1268 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             )
     goto mem_error;
    }

    if (xmlHashLookup2__internal_alias(ctxt->attsSpecial, fullname, fullattr) != 
# 1272 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                                ((void *)0)
# 1272 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                                    )
        return;

    xmlHashAddEntry2__internal_alias(ctxt->attsSpecial, fullname, fullattr,
                     (void *) (long) type);
    return;

mem_error:
    xmlErrMemory__internal_alias(ctxt, 
# 1280 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 1280 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          );
    return;
}






static void
xmlCleanSpecialAttrCallback(void *payload, void *data,
                            const xmlChar *fullname, const xmlChar *fullattr,
                            const xmlChar *unused __attribute__((unused))) {
    xmlParserCtxtPtr ctxt = (xmlParserCtxtPtr) data;

    if (((long) payload) == XML_ATTRIBUTE_CDATA) {
        xmlHashRemoveEntry2__internal_alias(ctxt->attsSpecial, fullname, fullattr, 
# 1296 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                                  ((void *)0)
# 1296 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                                      );
    }
}
# 1308 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void
xmlCleanSpecialAttr(xmlParserCtxtPtr ctxt)
{
    if (ctxt->attsSpecial == 
# 1311 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 1311 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                )
        return;

    xmlHashScanFull__internal_alias(ctxt->attsSpecial, xmlCleanSpecialAttrCallback, ctxt);

    if (xmlHashSize__internal_alias(ctxt->attsSpecial) == 0) {
        xmlHashFree__internal_alias(ctxt->attsSpecial, 
# 1317 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                      ((void *)0)
# 1317 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                          );
        ctxt->attsSpecial = 
# 1318 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 1318 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               ;
    }
    return;
}
# 1381 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int
xmlCheckLanguageID__internal_alias(const xmlChar * lang)
{
    const xmlChar *cur = lang, *nxt;

    if (cur == 
# 1386 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 1386 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
        return (0);
    if (((cur[0] == 'i') && (cur[1] == '-')) ||
        ((cur[0] == 'I') && (cur[1] == '-')) ||
        ((cur[0] == 'x') && (cur[1] == '-')) ||
        ((cur[0] == 'X') && (cur[1] == '-'))) {





        cur += 2;
        while (((cur[0] >= 'A') && (cur[0] <= 'Z')) ||
               ((cur[0] >= 'a') && (cur[0] <= 'z')))
            cur++;
        return(cur[0] == 0);
    }
    nxt = cur;
    while (((nxt[0] >= 'A') && (nxt[0] <= 'Z')) ||
           ((nxt[0] >= 'a') && (nxt[0] <= 'z')))
           nxt++;
    if (nxt - cur >= 4) {



        if ((nxt - cur > 8) || (nxt[0] != 0))
            return(0);
        return(1);
    }
    if (nxt - cur < 2)
        return(0);

    if (nxt[0] == 0)
        return(1);
    if (nxt[0] != '-')
        return(0);

    nxt++;
    cur = nxt;

    if ((nxt[0] >= '0') && (nxt[0] <= '9'))
        goto region_m49;

    while (((nxt[0] >= 'A') && (nxt[0] <= 'Z')) ||
           ((nxt[0] >= 'a') && (nxt[0] <= 'z')))
           nxt++;
    if (nxt - cur == 4)
        goto script;
    if (nxt - cur == 2)
        goto region;
    if ((nxt - cur >= 5) && (nxt - cur <= 8))
        goto variant;
    if (nxt - cur != 3)
        return(0);

    if (nxt[0] == 0)
        return(1);
    if (nxt[0] != '-')
        return(0);

    nxt++;
    cur = nxt;

    if ((nxt[0] >= '0') && (nxt[0] <= '9'))
        goto region_m49;

    while (((nxt[0] >= 'A') && (nxt[0] <= 'Z')) ||
           ((nxt[0] >= 'a') && (nxt[0] <= 'z')))
           nxt++;
    if (nxt - cur == 2)
        goto region;
    if ((nxt - cur >= 5) && (nxt - cur <= 8))
        goto variant;
    if (nxt - cur != 4)
        return(0);

script:
    if (nxt[0] == 0)
        return(1);
    if (nxt[0] != '-')
        return(0);

    nxt++;
    cur = nxt;

    if ((nxt[0] >= '0') && (nxt[0] <= '9'))
        goto region_m49;

    while (((nxt[0] >= 'A') && (nxt[0] <= 'Z')) ||
           ((nxt[0] >= 'a') && (nxt[0] <= 'z')))
           nxt++;

    if ((nxt - cur >= 5) && (nxt - cur <= 8))
        goto variant;
    if (nxt - cur != 2)
        return(0);

region:
    if (nxt[0] == 0)
        return(1);
    if (nxt[0] != '-')
        return(0);

    nxt++;
    cur = nxt;

    while (((nxt[0] >= 'A') && (nxt[0] <= 'Z')) ||
           ((nxt[0] >= 'a') && (nxt[0] <= 'z')))
           nxt++;

    if ((nxt - cur < 5) || (nxt - cur > 8))
        return(0);


variant:
    if (nxt[0] == 0)
        return(1);
    if (nxt[0] != '-')
        return(0);

    return (1);

region_m49:
    if (((nxt[1] >= '0') && (nxt[1] <= '9')) &&
        ((nxt[2] >= '0') && (nxt[2] <= '9'))) {
        nxt += 3;
        goto region;
    }
    return(0);
}







static xmlEntityPtr xmlParseStringEntityRef(xmlParserCtxtPtr ctxt,
                                            const xmlChar ** str);
# 1538 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static int
nsPush(xmlParserCtxtPtr ctxt, const xmlChar *prefix, const xmlChar *URL)
{
    if (ctxt->options & XML_PARSE_NSCLEAN) {
        int i;
 for (i = ctxt->nsNr - 2;i >= 0;i -= 2) {
     if (ctxt->nsTab[i] == prefix) {

         if (ctxt->nsTab[i + 1] == URL)
      return(-2);

  break;
     }
 }
    }
    if ((ctxt->nsMax == 0) || (ctxt->nsTab == 
# 1553 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                             ((void *)0)
# 1553 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                 )) {
 ctxt->nsMax = 10;
 ctxt->nsNr = 0;
 ctxt->nsTab = (const xmlChar **)
               xmlMalloc(ctxt->nsMax * sizeof(xmlChar *));
 if (ctxt->nsTab == 
# 1558 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 1558 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) {
     xmlErrMemory__internal_alias(ctxt, 
# 1559 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 1559 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           );
     ctxt->nsMax = 0;
            return (-1);
 }
    } else if (ctxt->nsNr >= ctxt->nsMax) {
        const xmlChar ** tmp;
        ctxt->nsMax *= 2;
        tmp = (const xmlChar **) xmlRealloc((char *) ctxt->nsTab,
        ctxt->nsMax * sizeof(ctxt->nsTab[0]));
        if (tmp == 
# 1568 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 1568 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) {
            xmlErrMemory__internal_alias(ctxt, 
# 1569 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                              ((void *)0)
# 1569 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                  );
     ctxt->nsMax /= 2;
            return (-1);
        }
 ctxt->nsTab = tmp;
    }
    ctxt->nsTab[ctxt->nsNr++] = prefix;
    ctxt->nsTab[ctxt->nsNr++] = URL;
    return (ctxt->nsNr);
}
# 1588 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static int
nsPop(xmlParserCtxtPtr ctxt, int nr)
{
    int i;

    if (ctxt->nsTab == 
# 1593 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 1593 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) return(0);
    if (ctxt->nsNr < nr) {
        (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())), "Pbm popping %d NS\n", nr);
        nr = ctxt->nsNr;
    }
    if (ctxt->nsNr <= 0)
        return (0);

    for (i = 0;i < nr;i++) {
         ctxt->nsNr--;
  ctxt->nsTab[ctxt->nsNr] = 
# 1603 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 1603 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               ;
    }
    return(nr);
}


static int
xmlCtxtGrowAttrs(xmlParserCtxtPtr ctxt, int nr) {
    const xmlChar **atts;
    int *attallocs;
    int maxatts;

    if (ctxt->atts == 
# 1615 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 1615 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) {
 maxatts = 55;
 atts = (const xmlChar **)
        xmlMalloc(maxatts * sizeof(xmlChar *));
 if (atts == 
# 1619 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 1619 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ) goto mem_error;
 ctxt->atts = atts;
 attallocs = (int *) xmlMalloc((maxatts / 5) * sizeof(int));
 if (attallocs == 
# 1622 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 1622 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) goto mem_error;
 ctxt->attallocs = attallocs;
 ctxt->maxatts = maxatts;
    } else if (nr + 5 > ctxt->maxatts) {
 maxatts = (nr + 5) * 2;
 atts = (const xmlChar **) xmlRealloc((void *) ctxt->atts,
         maxatts * sizeof(const xmlChar *));
 if (atts == 
# 1629 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 1629 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ) goto mem_error;
 ctxt->atts = atts;
 attallocs = (int *) xmlRealloc((void *) ctxt->attallocs,
                              (maxatts / 5) * sizeof(int));
 if (attallocs == 
# 1633 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 1633 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) goto mem_error;
 ctxt->attallocs = attallocs;
 ctxt->maxatts = maxatts;
    }
    return(ctxt->maxatts);
mem_error:
    xmlErrMemory__internal_alias(ctxt, 
# 1639 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 1639 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          );
    return(-1);
}
# 1652 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int
inputPush__internal_alias(xmlParserCtxtPtr ctxt, xmlParserInputPtr value)
{
    if ((ctxt == 
# 1655 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 1655 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) || (value == 
# 1655 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                   ((void *)0)
# 1655 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                       ))
        return(-1);
    if (ctxt->inputNr >= ctxt->inputMax) {
        ctxt->inputMax *= 2;
        ctxt->inputTab =
            (xmlParserInputPtr *) xmlRealloc(ctxt->inputTab,
                                             ctxt->inputMax *
                                             sizeof(ctxt->inputTab[0]));
        if (ctxt->inputTab == 
# 1663 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                             ((void *)0)
# 1663 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                 ) {
            xmlErrMemory__internal_alias(ctxt, 
# 1664 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                              ((void *)0)
# 1664 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                  );
     xmlFreeInputStream__internal_alias(value);
     ctxt->inputMax /= 2;
     value = 
# 1667 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 1667 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ;
            return (-1);
        }
    }
    ctxt->inputTab[ctxt->inputNr] = value;
    ctxt->input = value;
    return (ctxt->inputNr++);
}
# 1683 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlParserInputPtr
inputPop__internal_alias(xmlParserCtxtPtr ctxt)
{
    xmlParserInputPtr ret;

    if (ctxt == 
# 1688 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 1688 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
        return(
# 1689 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 1689 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );
    if (ctxt->inputNr <= 0)
        return (
# 1691 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 1691 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    ctxt->inputNr--;
    if (ctxt->inputNr > 0)
        ctxt->input = ctxt->inputTab[ctxt->inputNr - 1];
    else
        ctxt->input = 
# 1696 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 1696 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ;
    ret = ctxt->inputTab[ctxt->inputNr];
    ctxt->inputTab[ctxt->inputNr] = 
# 1698 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                   ((void *)0)
# 1698 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                       ;
    return (ret);
}
# 1710 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int
nodePush__internal_alias(xmlParserCtxtPtr ctxt, xmlNodePtr value)
{
    if (ctxt == 
# 1713 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 1713 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) return(0);
    if (ctxt->nodeNr >= ctxt->nodeMax) {
        xmlNodePtr *tmp;

 tmp = (xmlNodePtr *) xmlRealloc(ctxt->nodeTab,
                                      ctxt->nodeMax * 2 *
                                      sizeof(ctxt->nodeTab[0]));
        if (tmp == 
# 1720 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 1720 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) {
            xmlErrMemory__internal_alias(ctxt, 
# 1721 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                              ((void *)0)
# 1721 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                  );
            return (-1);
        }
        ctxt->nodeTab = tmp;
 ctxt->nodeMax *= 2;
    }
    if ((((unsigned int) ctxt->nodeNr) > xmlParserMaxDepth) &&
        ((ctxt->options & XML_PARSE_HUGE) == 0)) {
 xmlFatalErrMsgInt(ctxt, XML_ERR_INTERNAL_ERROR,
   "Excessive depth in document: %d use XML_PARSE_HUGE option\n",
     xmlParserMaxDepth);
 ctxt->instate = XML_PARSER_EOF;
 return(-1);
    }
    ctxt->nodeTab[ctxt->nodeNr] = value;
    ctxt->node = value;
    return (ctxt->nodeNr++);
}
# 1748 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlNodePtr
nodePop__internal_alias(xmlParserCtxtPtr ctxt)
{
    xmlNodePtr ret;

    if (ctxt == 
# 1753 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 1753 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) return(
# 1753 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 1753 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                );
    if (ctxt->nodeNr <= 0)
        return (
# 1755 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 1755 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    ctxt->nodeNr--;
    if (ctxt->nodeNr > 0)
        ctxt->node = ctxt->nodeTab[ctxt->nodeNr - 1];
    else
        ctxt->node = 
# 1760 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 1760 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ;
    ret = ctxt->nodeTab[ctxt->nodeNr];
    ctxt->nodeTab[ctxt->nodeNr] = 
# 1762 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                 ((void *)0)
# 1762 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                     ;
    return (ret);
}
# 1778 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static int
nameNsPush(xmlParserCtxtPtr ctxt, const xmlChar * value,
           const xmlChar *prefix, const xmlChar *URI, int nsNr)
{
    if (ctxt->nameNr >= ctxt->nameMax) {
        const xmlChar * *tmp;
        void **tmp2;
        ctxt->nameMax *= 2;
        tmp = (const xmlChar * *) xmlRealloc((xmlChar * *)ctxt->nameTab,
                                    ctxt->nameMax *
                                    sizeof(ctxt->nameTab[0]));
        if (tmp == 
# 1789 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 1789 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) {
     ctxt->nameMax /= 2;
     goto mem_error;
        }
 ctxt->nameTab = tmp;
        tmp2 = (void **) xmlRealloc((void * *)ctxt->pushTab,
                                    ctxt->nameMax * 3 *
                                    sizeof(ctxt->pushTab[0]));
        if (tmp2 == 
# 1797 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 1797 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) {
     ctxt->nameMax /= 2;
     goto mem_error;
        }
 ctxt->pushTab = tmp2;
    }
    ctxt->nameTab[ctxt->nameNr] = value;
    ctxt->name = value;
    ctxt->pushTab[ctxt->nameNr * 3] = (void *) prefix;
    ctxt->pushTab[ctxt->nameNr * 3 + 1] = (void *) URI;
    ctxt->pushTab[ctxt->nameNr * 3 + 2] = (void *) (long) nsNr;
    return (ctxt->nameNr++);
mem_error:
    xmlErrMemory__internal_alias(ctxt, 
# 1810 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 1810 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          );
    return (-1);
}
# 1821 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static const xmlChar *
nameNsPop(xmlParserCtxtPtr ctxt)
{
    const xmlChar *ret;

    if (ctxt->nameNr <= 0)
        return (
# 1827 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 1827 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    ctxt->nameNr--;
    if (ctxt->nameNr > 0)
        ctxt->name = ctxt->nameTab[ctxt->nameNr - 1];
    else
        ctxt->name = 
# 1832 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 1832 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ;
    ret = ctxt->nameTab[ctxt->nameNr];
    ctxt->nameTab[ctxt->nameNr] = 
# 1834 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                 ((void *)0)
# 1834 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                     ;
    return (ret);
}
# 1848 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int
namePush__internal_alias(xmlParserCtxtPtr ctxt, const xmlChar * value)
{
    if (ctxt == 
# 1851 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 1851 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) return (-1);

    if (ctxt->nameNr >= ctxt->nameMax) {
        const xmlChar * *tmp;
        tmp = (const xmlChar * *) xmlRealloc((xmlChar * *)ctxt->nameTab,
                                    ctxt->nameMax * 2 *
                                    sizeof(ctxt->nameTab[0]));
        if (tmp == 
# 1858 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 1858 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) {
     goto mem_error;
        }
 ctxt->nameTab = tmp;
        ctxt->nameMax *= 2;
    }
    ctxt->nameTab[ctxt->nameNr] = value;
    ctxt->name = value;
    return (ctxt->nameNr++);
mem_error:
    xmlErrMemory__internal_alias(ctxt, 
# 1868 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 1868 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          );
    return (-1);
}
# 1879 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
const xmlChar *
namePop__internal_alias(xmlParserCtxtPtr ctxt)
{
    const xmlChar *ret;

    if ((ctxt == 
# 1884 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 1884 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) || (ctxt->nameNr <= 0))
        return (
# 1885 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 1885 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    ctxt->nameNr--;
    if (ctxt->nameNr > 0)
        ctxt->name = ctxt->nameTab[ctxt->nameNr - 1];
    else
        ctxt->name = 
# 1890 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 1890 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ;
    ret = ctxt->nameTab[ctxt->nameNr];
    ctxt->nameTab[ctxt->nameNr] = 
# 1892 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                 ((void *)0)
# 1892 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                     ;
    return (ret);
}

static int spacePush(xmlParserCtxtPtr ctxt, int val) {
    if (ctxt->spaceNr >= ctxt->spaceMax) {
        int *tmp;

 ctxt->spaceMax *= 2;
        tmp = (int *) xmlRealloc(ctxt->spaceTab,
                          ctxt->spaceMax * sizeof(ctxt->spaceTab[0]));
        if (tmp == 
# 1903 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 1903 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) {
     xmlErrMemory__internal_alias(ctxt, 
# 1904 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 1904 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           );
     ctxt->spaceMax /=2;
     return(-1);
 }
 ctxt->spaceTab = tmp;
    }
    ctxt->spaceTab[ctxt->spaceNr] = val;
    ctxt->space = &ctxt->spaceTab[ctxt->spaceNr];
    return(ctxt->spaceNr++);
}

static int spacePop(xmlParserCtxtPtr ctxt) {
    int ret;
    if (ctxt->spaceNr <= 0) return(0);
    ctxt->spaceNr--;
    if (ctxt->spaceNr > 0)
 ctxt->space = &ctxt->spaceTab[ctxt->spaceNr - 1];
    else
        ctxt->space = &ctxt->spaceTab[0];
    ret = ctxt->spaceTab[ctxt->spaceNr];
    ctxt->spaceTab[ctxt->spaceNr] = -1;
    return(ret);
}
# 2014 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void xmlSHRINK (xmlParserCtxtPtr ctxt) {
    xmlParserInputShrink__internal_alias(ctxt->input);
    if ((*ctxt->input->cur == 0) &&
        (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0))
     xmlPopInput__internal_alias(ctxt);
  }





static void xmlGROW (xmlParserCtxtPtr ctxt) {
    if ((((ctxt->input->end - ctxt->input->cur) > 10000000) ||
         ((ctxt->input->cur - ctxt->input->base) > 10000000)) &&
         ((ctxt->input->buf) && (ctxt->input->buf->readcallback != xmlNop)) &&
        ((ctxt->options & XML_PARSE_HUGE) == 0)) {
        xmlFatalErr(ctxt, XML_ERR_INTERNAL_ERROR, "Huge input lookup");
        ctxt->instate = XML_PARSER_EOF;
    }
    xmlParserInputGrow__internal_alias(ctxt->input, 250);
    if ((ctxt->input->cur != 
# 2034 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 2034 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                ) && (*ctxt->input->cur == 0) &&
        (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0))
     xmlPopInput__internal_alias(ctxt);
}
# 2076 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int
xmlSkipBlankChars__internal_alias(xmlParserCtxtPtr ctxt) {
    int res = 0;





    if ((ctxt->inputNr == 1) && (ctxt->instate != XML_PARSER_DTD)) {
 const xmlChar *cur;



 cur = ctxt->input->cur;
 while ((((*cur) == 0x20) || ((0x9 <= (*cur)) && ((*cur) <= 0xa)) || ((*cur) == 0xd))) {
     if (*cur == '\n') {
  ctxt->input->line++; ctxt->input->col = 1;
     }
     cur++;
     res++;
     if (*cur == 0) {
  ctxt->input->cur = cur;
  xmlParserInputGrow__internal_alias(ctxt->input, 250);
  cur = ctxt->input->cur;
     }
 }
 ctxt->input->cur = cur;
    } else {
 int cur;
 do {
     cur = (*ctxt->input->cur);
     while ((((cur) == 0x20) || ((0x9 <= (cur)) && ((cur) <= 0xa)) || ((cur) == 0xd))) {
  xmlNextChar__internal_alias(ctxt);
  cur = (*ctxt->input->cur);
  res++;
     }
     while ((cur == 0) && (ctxt->inputNr > 1) &&
     (ctxt->instate != XML_PARSER_COMMENT)) {
  xmlPopInput__internal_alias(ctxt);
  cur = (*ctxt->input->cur);
     }



     if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt);
 } while ((((cur) < 0x100) ? ((((cur)) == 0x20) || ((0x9 <= ((cur))) && (((cur)) <= 0xa)) || (((cur)) == 0xd)) : 0));
    }
    return(res);
}
# 2141 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlChar
xmlPopInput__internal_alias(xmlParserCtxtPtr ctxt) {
    if ((ctxt == 
# 2143 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 2143 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) || (ctxt->inputNr <= 1)) return(0);
    if ((*(__xmlParserDebugEntities())))
 (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
  "Popping input %d\n", ctxt->inputNr);
    xmlFreeInputStream__internal_alias(inputPop__internal_alias(ctxt));
    if ((*ctxt->input->cur == 0) &&
        (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0))
     return(xmlPopInput__internal_alias(ctxt));
    return((*ctxt->input->cur));
}
# 2163 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int
xmlPushInput__internal_alias(xmlParserCtxtPtr ctxt, xmlParserInputPtr input) {
    int ret;
    if (input == 
# 2166 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 2166 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) return(-1);

    if ((*(__xmlParserDebugEntities()))) {
 if ((ctxt->input != 
# 2169 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 2169 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ) && (ctxt->input->filename))
     (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
      "%s(%d): ", ctxt->input->filename,
      ctxt->input->line);
 (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
  "Pushing input %d : %.30s\n", ctxt->inputNr+1, input->cur);
    }
    ret = inputPush__internal_alias(ctxt, input);
    if (ctxt->instate == XML_PARSER_EOF)
        return(-1);
    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    return(ret);
}
# 2198 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int
xmlParseCharRef__internal_alias(xmlParserCtxtPtr ctxt) {
    unsigned int val = 0;
    int count = 0;
    unsigned int outofrange = 0;




    if (((*ctxt->input->cur) == '&') && (ctxt->input->cur[(1)] == '#') &&
        (ctxt->input->cur[(2)] == 'x')) {
 do { ctxt->nbChars += (3),ctxt->input->cur += (3),ctxt->input->col+=(3); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
 while ((*ctxt->input->cur) != ';') {
     if (count++ > 20) {
  count = 0;
  if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
                if (ctxt->instate == XML_PARSER_EOF)
                    return(0);
     }
     if (((*ctxt->input->cur) >= '0') && ((*ctxt->input->cur) <= '9'))
         val = val * 16 + ((*ctxt->input->cur) - '0');
     else if (((*ctxt->input->cur) >= 'a') && ((*ctxt->input->cur) <= 'f') && (count < 20))
         val = val * 16 + ((*ctxt->input->cur) - 'a') + 10;
     else if (((*ctxt->input->cur) >= 'A') && ((*ctxt->input->cur) <= 'F') && (count < 20))
         val = val * 16 + ((*ctxt->input->cur) - 'A') + 10;
     else {
  xmlFatalErr(ctxt, XML_ERR_INVALID_HEX_CHARREF, 
# 2225 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                ((void *)0)
# 2225 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                    );
  val = 0;
  break;
     }
     if (val > 0x10FFFF)
         outofrange = val;

     xmlNextChar__internal_alias(ctxt);
     count++;
 }
 if ((*ctxt->input->cur) == ';') {

     ctxt->input->col++;
     ctxt->nbChars ++;
     ctxt->input->cur++;
 }
    } else if (((*ctxt->input->cur) == '&') && (ctxt->input->cur[(1)] == '#')) {
 do { ctxt->nbChars += (2),ctxt->input->cur += (2),ctxt->input->col+=(2); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
 while ((*ctxt->input->cur) != ';') {
     if (count++ > 20) {
  count = 0;
  if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
                if (ctxt->instate == XML_PARSER_EOF)
                    return(0);
     }
     if (((*ctxt->input->cur) >= '0') && ((*ctxt->input->cur) <= '9'))
         val = val * 10 + ((*ctxt->input->cur) - '0');
     else {
  xmlFatalErr(ctxt, XML_ERR_INVALID_DEC_CHARREF, 
# 2254 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                ((void *)0)
# 2254 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                    );
  val = 0;
  break;
     }
     if (val > 0x10FFFF)
         outofrange = val;

     xmlNextChar__internal_alias(ctxt);
     count++;
 }
 if ((*ctxt->input->cur) == ';') {

     ctxt->input->col++;
     ctxt->nbChars ++;
     ctxt->input->cur++;
 }
    } else {
        xmlFatalErr(ctxt, XML_ERR_INVALID_CHARREF, 
# 2271 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                  ((void *)0)
# 2271 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                      );
    }






    if (((((val) < 0x100) ? (((0x9 <= ((val))) && (((val)) <= 0xa)) || (((val)) == 0xd) || (0x20 <= ((val)))) : (((0x100 <= (val)) && ((val) <= 0xd7ff)) || ((0xe000 <= (val)) && ((val) <= 0xfffd)) || ((0x10000 <= (val)) && ((val) <= 0x10ffff)))) && (outofrange == 0))) {
        return(val);
    } else {
        xmlFatalErrMsgInt(ctxt, XML_ERR_INVALID_CHAR,
                          "xmlParseCharRef: invalid xmlChar value %d\n",
                   val);
    }
    return(0);
}
# 2307 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static int
xmlParseStringCharRef(xmlParserCtxtPtr ctxt, const xmlChar **str) {
    const xmlChar *ptr;
    xmlChar cur;
    unsigned int val = 0;
    unsigned int outofrange = 0;

    if ((str == 
# 2314 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 2314 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) || (*str == 
# 2314 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                 ((void *)0)
# 2314 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                     )) return(0);
    ptr = *str;
    cur = *ptr;
    if ((cur == '&') && (ptr[1] == '#') && (ptr[2] == 'x')) {
 ptr += 3;
 cur = *ptr;
 while (cur != ';') {
     if ((cur >= '0') && (cur <= '9'))
         val = val * 16 + (cur - '0');
     else if ((cur >= 'a') && (cur <= 'f'))
         val = val * 16 + (cur - 'a') + 10;
     else if ((cur >= 'A') && (cur <= 'F'))
         val = val * 16 + (cur - 'A') + 10;
     else {
  xmlFatalErr(ctxt, XML_ERR_INVALID_HEX_CHARREF, 
# 2328 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                ((void *)0)
# 2328 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                    );
  val = 0;
  break;
     }
     if (val > 0x10FFFF)
         outofrange = val;

     ptr++;
     cur = *ptr;
 }
 if (cur == ';')
     ptr++;
    } else if ((cur == '&') && (ptr[1] == '#')){
 ptr += 2;
 cur = *ptr;
 while (cur != ';') {
     if ((cur >= '0') && (cur <= '9'))
         val = val * 10 + (cur - '0');
     else {
  xmlFatalErr(ctxt, XML_ERR_INVALID_DEC_CHARREF, 
# 2347 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                ((void *)0)
# 2347 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                    );
  val = 0;
  break;
     }
     if (val > 0x10FFFF)
         outofrange = val;

     ptr++;
     cur = *ptr;
 }
 if (cur == ';')
     ptr++;
    } else {
 xmlFatalErr(ctxt, XML_ERR_INVALID_CHARREF, 
# 2360 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                           ((void *)0)
# 2360 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                               );
 return(0);
    }
    *str = ptr;






    if (((((val) < 0x100) ? (((0x9 <= ((val))) && (((val)) <= 0xa)) || (((val)) == 0xd) || (0x20 <= ((val)))) : (((0x100 <= (val)) && ((val) <= 0xd7ff)) || ((0xe000 <= (val)) && ((val) <= 0xfffd)) || ((0x10000 <= (val)) && ((val) <= 0x10ffff)))) && (outofrange == 0))) {
        return(val);
    } else {
        xmlFatalErrMsgInt(ctxt, XML_ERR_INVALID_CHAR,
     "xmlParseStringCharRef: invalid xmlChar value %d\n",
     val);
    }
    return(0);
}
# 2391 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void deallocblankswrapper (xmlChar *str) {xmlFree(str);}

static xmlParserInputPtr
xmlNewBlanksWrapperInputStream(xmlParserCtxtPtr ctxt, xmlEntityPtr entity) {
    xmlParserInputPtr input;
    xmlChar *buffer;
    size_t length;
    if (entity == 
# 2398 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 2398 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) {
 xmlFatalErr(ctxt, XML_ERR_INTERNAL_ERROR,
             "xmlNewBlanksWrapperInputStream entity\n");
 return(
# 2401 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 2401 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    if ((*(__xmlParserDebugEntities())))
 (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
  "new blanks wrapper for entity: %s\n", entity->name);
    input = xmlNewInputStream__internal_alias(ctxt);
    if (input == 
# 2407 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 2407 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
 return(
# 2408 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 2408 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    length = xmlStrlen__internal_alias(entity->name) + 5;
    buffer = xmlMallocAtomic(length);
    if (buffer == 
# 2412 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 2412 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) {
 xmlErrMemory__internal_alias(ctxt, 
# 2413 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 2413 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       );
        xmlFree(input);
 return(
# 2415 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 2415 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    buffer [0] = ' ';
    buffer [1] = '%';
    buffer [length-3] = ';';
    buffer [length-2] = ' ';
    buffer [length-1] = 0;
    memcpy(buffer + 2, entity->name, length - 5);
    input->free = deallocblankswrapper;
    input->base = buffer;
    input->cur = buffer;
    input->length = length;
    input->end = &buffer[length];
    return(input);
}
# 2463 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlParserHandlePEReference__internal_alias(xmlParserCtxtPtr ctxt) {
    const xmlChar *name;
    xmlEntityPtr entity = 
# 2466 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 2466 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             ;
    xmlParserInputPtr input;

    if ((*ctxt->input->cur) != '%') return;
    switch(ctxt->instate) {
 case XML_PARSER_CDATA_SECTION:
     return;
        case XML_PARSER_COMMENT:
     return;
 case XML_PARSER_START_TAG:
     return;
 case XML_PARSER_END_TAG:
     return;
        case XML_PARSER_EOF:
     xmlFatalErr(ctxt, XML_ERR_PEREF_AT_EOF, 
# 2480 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                            ((void *)0)
# 2480 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                );
     return;
        case XML_PARSER_PROLOG:
 case XML_PARSER_START:
 case XML_PARSER_MISC:
     xmlFatalErr(ctxt, XML_ERR_PEREF_IN_PROLOG, 
# 2485 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 2485 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   );
     return;
 case XML_PARSER_ENTITY_DECL:
        case XML_PARSER_CONTENT:
        case XML_PARSER_ATTRIBUTE_VALUE:
        case XML_PARSER_PI:
 case XML_PARSER_SYSTEM_LITERAL:
 case XML_PARSER_PUBLIC_LITERAL:

     return;
        case XML_PARSER_EPILOG:
     xmlFatalErr(ctxt, XML_ERR_PEREF_IN_EPILOG, 
# 2496 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 2496 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   );
     return;
 case XML_PARSER_ENTITY_VALUE:







     return;
        case XML_PARSER_DTD:







     if ((ctxt->external == 0) && (ctxt->inputNr == 1))
  return;
     if ((((ctxt->input->cur[(1)]) == 0x20) || ((0x9 <= (ctxt->input->cur[(1)])) && ((ctxt->input->cur[(1)]) <= 0xa)) || ((ctxt->input->cur[(1)]) == 0xd)) || ctxt->input->cur[(1)] == 0)
  return;
            break;
        case XML_PARSER_IGNORE:
            return;
    }

    xmlNextChar__internal_alias(ctxt);
    name = xmlParseName__internal_alias(ctxt);
    if ((*(__xmlParserDebugEntities())))
 (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
  "PEReference: %s\n", name);
    if (name == 
# 2529 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 2529 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
 xmlFatalErr(ctxt, XML_ERR_PEREF_NO_NAME, 
# 2530 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                         ((void *)0)
# 2530 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                             );
    } else {
 if ((*ctxt->input->cur) == ';') {
     xmlNextChar__internal_alias(ctxt);
     if ((ctxt->sax != 
# 2534 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 2534 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) && (ctxt->sax->getParameterEntity != 
# 2534 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                                 ((void *)0)
# 2534 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                                     ))
  entity = ctxt->sax->getParameterEntity(ctxt->userData, name);
     if (entity == 
# 2536 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 2536 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) {
# 2546 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
  if ((ctxt->standalone == 1) ||
      ((ctxt->hasExternalSubset == 0) &&
       (ctxt->hasPErefs == 0))) {
      xmlFatalErrMsgStr(ctxt, XML_ERR_UNDECLARED_ENTITY,
    "PEReference: %%%s; not found\n", name);
         } else {







      if ((ctxt->validate) && (ctxt->vctxt.error != 
# 2559 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                   ((void *)0)
# 2559 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                       )) {
          xmlValidityError(ctxt, XML_WAR_UNDECLARED_ENTITY,
                    "PEReference: %%%s; not found\n",
             name, 
# 2562 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 2562 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      );
      } else
          xmlWarningMsg(ctxt, XML_WAR_UNDECLARED_ENTITY,
                 "PEReference: %%%s; not found\n",
          name, 
# 2566 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 2566 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
      ctxt->valid = 0;
  }
     } else if (ctxt->input->free != deallocblankswrapper) {
      input = xmlNewBlanksWrapperInputStream(ctxt, entity);
      if (xmlPushInput__internal_alias(ctxt, input) < 0)
          return;
     } else {
         if ((entity->etype == XML_INTERNAL_PARAMETER_ENTITY) ||
      (entity->etype == XML_EXTERNAL_PARAMETER_ENTITY)) {
      xmlChar start[4];
      xmlCharEncoding enc;






      input = xmlNewEntityInputStream__internal_alias(ctxt, entity);
      if (xmlPushInput__internal_alias(ctxt, input) < 0)
          return;
# 2597 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
      if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);
                    if (ctxt->instate == XML_PARSER_EOF)
                        return;
      if ((ctxt->input->end - ctxt->input->cur)>=4) {
   start[0] = (*ctxt->input->cur);
   start[1] = ctxt->input->cur[(1)];
   start[2] = ctxt->input->cur[(2)];
   start[3] = ctxt->input->cur[(3)];
   enc = xmlDetectCharEncoding__internal_alias(start, 4);
   if (enc != XML_CHAR_ENCODING_NONE) {
       xmlSwitchEncoding__internal_alias(ctxt, enc);
   }
      }

      if ((entity->etype == XML_EXTERNAL_PARAMETER_ENTITY) &&
   (( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == '<' && ((unsigned char *) ctxt->input->cur)[ 1 ] == '?' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'x' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'm' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'l' )) &&
   ((((ctxt->input->cur[(5)]) == 0x20) || ((0x9 <= (ctxt->input->cur[(5)])) && ((ctxt->input->cur[(5)]) <= 0xa)) || ((ctxt->input->cur[(5)]) == 0xd)))) {
   xmlParseTextDecl__internal_alias(ctxt);
      }
  } else {
      xmlFatalErrMsgStr(ctxt, XML_ERR_ENTITY_IS_PARAMETER,
        "PEReference: %s is not a parameter entity\n",
          name);
  }
     }
 } else {
     xmlFatalErr(ctxt, XML_ERR_PEREF_SEMICOL_MISSING, 
# 2623 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                     ((void *)0)
# 2623 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                         );
 }
    }
}
# 2662 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlChar *
xmlStringLenDecodeEntities__internal_alias(xmlParserCtxtPtr ctxt, const xmlChar *str, int len,
        int what, xmlChar end, xmlChar end2, xmlChar end3) {
    xmlChar *buffer = 
# 2665 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 2665 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ;
    size_t buffer_size = 0;
    size_t nbchars = 0;

    xmlChar *current = 
# 2669 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 2669 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ;
    xmlChar *rep = 
# 2670 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 2670 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ;
    const xmlChar *last;
    xmlEntityPtr ent;
    int c,l;

    if ((ctxt == 
# 2675 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 2675 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) || (str == 
# 2675 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                 ((void *)0)
# 2675 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                     ) || (len < 0))
 return(
# 2676 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 2676 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    last = str + len;

    if (((ctxt->depth > 40) &&
         ((ctxt->options & XML_PARSE_HUGE) == 0)) ||
 (ctxt->depth > 1024)) {
 xmlFatalErr(ctxt, XML_ERR_ENTITY_LOOP, 
# 2682 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                       ((void *)0)
# 2682 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                           );
 return(
# 2683 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 2683 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }




    buffer_size = 300;
    buffer = (xmlChar *) xmlMallocAtomic(buffer_size);
    if (buffer == 
# 2691 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 2691 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) goto mem_error;





    if (str < last)
 c = xmlStringCurrentChar__internal_alias(ctxt, str, &l);
    else
        c = 0;
    while ((c != 0) && (c != end) &&
    (c != end2) && (c != end3)) {

 if (c == 0) break;
        if ((c == '&') && (str[1] == '#')) {
     int val = xmlParseStringCharRef(ctxt, &str);
     if (val != 0) {
  if (0 == 1) buffer[nbchars++] = (xmlChar) val; else nbchars += xmlCopyCharMultiByte__internal_alias(&buffer[nbchars],val);
     }
     if (nbchars + 100 > buffer_size) {
         { xmlChar *tmp; size_t new_size = buffer_size * 2 + 100; if (new_size < buffer_size) goto mem_error; tmp = (xmlChar *) xmlRealloc(buffer, new_size); if (tmp == 
# 2711 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 2711 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
        ) goto mem_error; buffer = tmp; buffer_size = new_size; };
     }
 } else if ((c == '&') && (what & 1)) {
     if ((*(__xmlParserDebugEntities())))
  (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
   "String decoding Entity Reference: %.30s\n",
   str);
     ent = xmlParseStringEntityRef(ctxt, &str);
     if ((ctxt->lastError.code == XML_ERR_ENTITY_LOOP) ||
         (ctxt->lastError.code == XML_ERR_INTERNAL_ERROR))
         goto int_error;
     if (ent != 
# 2722 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 2722 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
         ctxt->nbentities += ent->checked;
     if ((ent != 
# 2724 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 2724 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) &&
  (ent->etype == XML_INTERNAL_PREDEFINED_ENTITY)) {
  if (ent->content != 
# 2726 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 2726 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) {
      if (0 == 1) buffer[nbchars++] = (xmlChar) ent->content[0]; else nbchars += xmlCopyCharMultiByte__internal_alias(&buffer[nbchars],ent->content[0]);
      if (nbchars + 100 > buffer_size) {
   { xmlChar *tmp; size_t new_size = buffer_size * 2 + 100; if (new_size < buffer_size) goto mem_error; tmp = (xmlChar *) xmlRealloc(buffer, new_size); if (tmp == 
# 2729 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
  ((void *)0)
# 2729 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
  ) goto mem_error; buffer = tmp; buffer_size = new_size; };
      }
  } else {
      xmlFatalErrMsg(ctxt, XML_ERR_INTERNAL_ERROR,
       "predefined entity has no content\n");
  }
     } else if ((ent != 
# 2735 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 2735 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ) && (ent->content != 
# 2735 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                 ((void *)0)
# 2735 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                     )) {
  ctxt->depth++;
  rep = xmlStringDecodeEntities__internal_alias(ctxt, ent->content, what,
                         0, 0, 0);
  ctxt->depth--;

  if (rep != 
# 2741 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 2741 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ) {
      current = rep;
      while (*current != 0) {
   buffer[nbchars++] = *current++;
   if (nbchars + 100 > buffer_size) {
       if (xmlParserEntityCheck(ctxt, nbchars, ent))
    goto int_error;
       { xmlChar *tmp; size_t new_size = buffer_size * 2 + 100; if (new_size < buffer_size) goto mem_error; tmp = (xmlChar *) xmlRealloc(buffer, new_size); if (tmp == 
# 2748 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
      ((void *)0)
# 2748 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
      ) goto mem_error; buffer = tmp; buffer_size = new_size; };
   }
      }
      xmlFree(rep);
      rep = 
# 2752 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 2752 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               ;
  }
     } else if (ent != 
# 2754 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 2754 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) {
  int i = xmlStrlen__internal_alias(ent->name);
  const xmlChar *cur = ent->name;

  buffer[nbchars++] = '&';
  if (nbchars + i + 100 > buffer_size) {
      { xmlChar *tmp; size_t new_size = buffer_size * 2 + i + 100; if (new_size < buffer_size) goto mem_error; tmp = (xmlChar *) xmlRealloc(buffer, new_size); if (tmp == 
# 2760 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
     ((void *)0)
# 2760 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
     ) goto mem_error; buffer = tmp; buffer_size = new_size; };
  }
  for (;i > 0;i--)
      buffer[nbchars++] = *cur++;
  buffer[nbchars++] = ';';
     }
 } else if (c == '%' && (what & 2)) {
     if ((*(__xmlParserDebugEntities())))
  (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
   "String decoding PE Reference: %.30s\n", str);
     ent = xmlParseStringPEReference(ctxt, &str);
     if (ctxt->lastError.code == XML_ERR_ENTITY_LOOP)
         goto int_error;
     if (ent != 
# 2773 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 2773 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
         ctxt->nbentities += ent->checked;
     if (ent != 
# 2775 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 2775 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
                if (ent->content == 
# 2776 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                   ((void *)0)
# 2776 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                       ) {
      xmlLoadEntityContent(ctxt, ent);
  }
  ctxt->depth++;
  rep = xmlStringDecodeEntities__internal_alias(ctxt, ent->content, what,
                         0, 0, 0);
  ctxt->depth--;
  if (rep != 
# 2783 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 2783 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ) {
      current = rep;
      while (*current != 0) {
   buffer[nbchars++] = *current++;
   if (nbchars + 100 > buffer_size) {
       if (xmlParserEntityCheck(ctxt, nbchars, ent))
           goto int_error;
       { xmlChar *tmp; size_t new_size = buffer_size * 2 + 100; if (new_size < buffer_size) goto mem_error; tmp = (xmlChar *) xmlRealloc(buffer, new_size); if (tmp == 
# 2790 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
      ((void *)0)
# 2790 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
      ) goto mem_error; buffer = tmp; buffer_size = new_size; };
   }
      }
      xmlFree(rep);
      rep = 
# 2794 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 2794 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               ;
  }
     }
 } else {
     if (l == 1) buffer[nbchars++] = (xmlChar) c; else nbchars += xmlCopyCharMultiByte__internal_alias(&buffer[nbchars],c);
     str += l;
     if (nbchars + 100 > buffer_size) {
         { xmlChar *tmp; size_t new_size = buffer_size * 2 + 100; if (new_size < buffer_size) goto mem_error; tmp = (xmlChar *) xmlRealloc(buffer, new_size); if (tmp == 
# 2801 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 2801 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
        ) goto mem_error; buffer = tmp; buffer_size = new_size; };
     }
 }
 if (str < last)
     c = xmlStringCurrentChar__internal_alias(ctxt, str, &l);
 else
     c = 0;
    }
    buffer[nbchars] = 0;
    return(buffer);

mem_error:
    xmlErrMemory__internal_alias(ctxt, 
# 2813 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 2813 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          );
int_error:
    if (rep != 
# 2815 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 2815 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
        xmlFree(rep);
    if (buffer != 
# 2817 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 2817 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     )
        xmlFree(buffer);
    return(
# 2819 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
          ((void *)0)
# 2819 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
              );
}
# 2840 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlChar *
xmlStringDecodeEntities__internal_alias(xmlParserCtxtPtr ctxt, const xmlChar *str, int what,
          xmlChar end, xmlChar end2, xmlChar end3) {
    if ((ctxt == 
# 2843 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 2843 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) || (str == 
# 2843 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                 ((void *)0)
# 2843 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                     )) return(
# 2843 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 2843 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   );
    return(xmlStringLenDecodeEntities__internal_alias(ctxt, str, xmlStrlen__internal_alias(str), what,
           end, end2, end3));
}
# 2866 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static int areBlanks(xmlParserCtxtPtr ctxt, const xmlChar *str, int len,
                     int blank_chars) {
    int i, ret;
    xmlNodePtr lastChild;





    if (ctxt->sax->ignorableWhitespace == ctxt->sax->characters)
 return(0);




    if ((ctxt->space == 
# 2881 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 2881 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ) || (*(ctxt->space) == 1) ||
        (*(ctxt->space) == -2))
 return(0);




    if (blank_chars == 0) {
 for (i = 0;i < len;i++)
     if (!((((str[i]) == 0x20) || ((0x9 <= (str[i])) && ((str[i]) <= 0xa)) || ((str[i]) == 0xd)))) return(0);
    }




    if (ctxt->node == 
# 2896 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 2896 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) return(0);
    if (ctxt->myDoc != 
# 2897 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 2897 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) {
 ret = xmlIsMixedElement__internal_alias(ctxt->myDoc, ctxt->node->name);
        if (ret == 0) return(1);
        if (ret == 1) return(0);
    }




    if (((*ctxt->input->cur) != '<') && ((*ctxt->input->cur) != 0xD)) return(0);
    if ((ctxt->node->children == 
# 2907 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                ((void *)0)
# 2907 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                    ) &&
 ((*ctxt->input->cur) == '<') && (ctxt->input->cur[(1)] == '/')) return(0);

    lastChild = xmlGetLastChild__internal_alias(ctxt->node);
    if (lastChild == 
# 2911 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 2911 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ) {
        if ((ctxt->node->type != XML_ELEMENT_NODE) &&
            (ctxt->node->content != 
# 2913 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                   ((void *)0)
# 2913 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                       )) return(0);
    } else if (xmlNodeIsText__internal_alias(lastChild))
        return(0);
    else if ((ctxt->node->children != 
# 2916 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                     ((void *)0)
# 2916 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                         ) &&
             (xmlNodeIsText__internal_alias(ctxt->node->children)))
        return(0);
    return(1);
}
# 2947 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlChar *
xmlSplitQName__internal_alias(xmlParserCtxtPtr ctxt, const xmlChar *name, xmlChar **prefix) {
    xmlChar buf[100 + 5];
    xmlChar *buffer = 
# 2950 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 2950 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ;
    int len = 0;
    int max = 100;
    xmlChar *ret = 
# 2953 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 2953 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ;
    const xmlChar *cur = name;
    int c;

    if (prefix == 
# 2957 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 2957 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) return(
# 2957 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                              ((void *)0)
# 2957 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                  );
    *prefix = 
# 2958 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 2958 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ;

    if (cur == 
# 2960 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 2960 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) return(
# 2960 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 2960 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               );
# 2970 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
    if (cur[0] == ':')
 return(xmlStrdup__internal_alias(name));

    c = *cur++;
    while ((c != 0) && (c != ':') && (len < max)) {
 buf[len++] = c;
 c = *cur++;
    }
    if (len >= max) {




 max = len * 2;

 buffer = (xmlChar *) xmlMallocAtomic(max * sizeof(xmlChar));
 if (buffer == 
# 2986 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 2986 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
     xmlErrMemory__internal_alias(ctxt, 
# 2987 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 2987 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           );
     return(
# 2988 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 2988 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               );
 }
 memcpy(buffer, buf, len);
 while ((c != 0) && (c != ':')) {
     if (len + 10 > max) {
         xmlChar *tmp;

  max *= 2;
  tmp = (xmlChar *) xmlRealloc(buffer,
      max * sizeof(xmlChar));
  if (tmp == 
# 2998 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 2998 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ) {
      xmlFree(buffer);
      xmlErrMemory__internal_alias(ctxt, 
# 3000 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 3000 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            );
      return(
# 3001 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 3001 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                );
  }
  buffer = tmp;
     }
     buffer[len++] = c;
     c = *cur++;
 }
 buffer[len] = 0;
    }

    if ((c == ':') && (*cur == 0)) {
        if (buffer != 
# 3012 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 3012 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         )
     xmlFree(buffer);
 *prefix = 
# 3014 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
          ((void *)0)
# 3014 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
              ;
 return(xmlStrdup__internal_alias(name));
    }

    if (buffer == 
# 3018 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 3018 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     )
 ret = xmlStrndup__internal_alias(buf, len);
    else {
 ret = buffer;
 buffer = 
# 3022 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
         ((void *)0)
# 3022 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
             ;
 max = 100;
    }


    if (c == ':') {
 c = *cur;
        *prefix = ret;
 if (c == 0) {
     return(xmlStrndup__internal_alias((xmlChar *) "", 0));
 }
 len = 0;





 if (!(((c >= 0x61) && (c <= 0x7A)) ||
       ((c >= 0x41) && (c <= 0x5A)) ||
       (c == '_') || (c == ':'))) {
     int l;
     int first = xmlStringCurrentChar__internal_alias(ctxt, cur, &l);

     if (!((((first) < 0x100) ? (((0x41 <= ((first))) && (((first)) <= 0x5a)) || ((0x61 <= ((first))) && (((first)) <= 0x7a)) || ((0xc0 <= ((first))) && (((first)) <= 0xd6)) || ((0xd8 <= ((first))) && (((first)) <= 0xf6)) || (0xf8 <= ((first)))) : xmlCharInRange__internal_alias((first), &xmlIsBaseCharGroup)) || (((first) < 0x100) ? 0 : (((0x4e00 <= (first)) && ((first) <= 0x9fa5)) || ((first) == 0x3007) || ((0x3021 <= (first)) && ((first) <= 0x3029))))) && (first != '_')) {
  xmlFatalErrMsgStr(ctxt, XML_NS_ERR_QNAME,
       "Name %s is not XML Namespace compliant\n",
      name);
     }
 }
 cur++;

 while ((c != 0) && (len < max)) {
     buf[len++] = c;
     c = *cur++;
 }
 if (len >= max) {




     max = len * 2;

     buffer = (xmlChar *) xmlMallocAtomic(max * sizeof(xmlChar));
     if (buffer == 
# 3065 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 3065 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) {
         xmlErrMemory__internal_alias(ctxt, 
# 3066 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 3066 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               );
  return(
# 3067 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 3067 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
            );
     }
     memcpy(buffer, buf, len);
     while (c != 0) {
  if (len + 10 > max) {
      xmlChar *tmp;

      max *= 2;
      tmp = (xmlChar *) xmlRealloc(buffer,
          max * sizeof(xmlChar));
      if (tmp == 
# 3077 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 3077 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
   xmlErrMemory__internal_alias(ctxt, 
# 3078 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 3078 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         );
   xmlFree(buffer);
   return(
# 3080 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
         ((void *)0)
# 3080 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
             );
      }
      buffer = tmp;
  }
  buffer[len++] = c;
  c = *cur++;
     }
     buffer[len] = 0;
 }

 if (buffer == 
# 3090 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 3090 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
     ret = xmlStrndup__internal_alias(buf, len);
 else {
     ret = buffer;
 }
    }

    return(ret);
}
# 3131 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static int
xmlIsNameStartChar(xmlParserCtxtPtr ctxt, int c) {
    if ((ctxt->options & XML_PARSE_OLD10) == 0) {




 if ((c != ' ') && (c != '>') && (c != '/') &&
     (((c >= 'a') && (c <= 'z')) ||
      ((c >= 'A') && (c <= 'Z')) ||
      (c == '_') || (c == ':') ||
      ((c >= 0xC0) && (c <= 0xD6)) ||
      ((c >= 0xD8) && (c <= 0xF6)) ||
      ((c >= 0xF8) && (c <= 0x2FF)) ||
      ((c >= 0x370) && (c <= 0x37D)) ||
      ((c >= 0x37F) && (c <= 0x1FFF)) ||
      ((c >= 0x200C) && (c <= 0x200D)) ||
      ((c >= 0x2070) && (c <= 0x218F)) ||
      ((c >= 0x2C00) && (c <= 0x2FEF)) ||
      ((c >= 0x3001) && (c <= 0xD7FF)) ||
      ((c >= 0xF900) && (c <= 0xFDCF)) ||
      ((c >= 0xFDF0) && (c <= 0xFFFD)) ||
      ((c >= 0x10000) && (c <= 0xEFFFF))))
     return(1);
    } else {
        if (((((c) < 0x100) ? (((0x41 <= ((c))) && (((c)) <= 0x5a)) || ((0x61 <= ((c))) && (((c)) <= 0x7a)) || ((0xc0 <= ((c))) && (((c)) <= 0xd6)) || ((0xd8 <= ((c))) && (((c)) <= 0xf6)) || (0xf8 <= ((c)))) : xmlCharInRange__internal_alias((c), &xmlIsBaseCharGroup)) || (((c) < 0x100) ? 0 : (((0x4e00 <= (c)) && ((c) <= 0x9fa5)) || ((c) == 0x3007) || ((0x3021 <= (c)) && ((c) <= 0x3029))))) || (c == '_') || (c == ':'))
     return(1);
    }
    return(0);
}

static int
xmlIsNameChar(xmlParserCtxtPtr ctxt, int c) {
    if ((ctxt->options & XML_PARSE_OLD10) == 0) {




 if ((c != ' ') && (c != '>') && (c != '/') &&
     (((c >= 'a') && (c <= 'z')) ||
      ((c >= 'A') && (c <= 'Z')) ||
      ((c >= '0') && (c <= '9')) ||
      (c == '_') || (c == ':') ||
      (c == '-') || (c == '.') || (c == 0xB7) ||
      ((c >= 0xC0) && (c <= 0xD6)) ||
      ((c >= 0xD8) && (c <= 0xF6)) ||
      ((c >= 0xF8) && (c <= 0x2FF)) ||
      ((c >= 0x300) && (c <= 0x36F)) ||
      ((c >= 0x370) && (c <= 0x37D)) ||
      ((c >= 0x37F) && (c <= 0x1FFF)) ||
      ((c >= 0x200C) && (c <= 0x200D)) ||
      ((c >= 0x203F) && (c <= 0x2040)) ||
      ((c >= 0x2070) && (c <= 0x218F)) ||
      ((c >= 0x2C00) && (c <= 0x2FEF)) ||
      ((c >= 0x3001) && (c <= 0xD7FF)) ||
      ((c >= 0xF900) && (c <= 0xFDCF)) ||
      ((c >= 0xFDF0) && (c <= 0xFFFD)) ||
      ((c >= 0x10000) && (c <= 0xEFFFF))))
      return(1);
    } else {
        if ((((((c) < 0x100) ? (((0x41 <= ((c))) && (((c)) <= 0x5a)) || ((0x61 <= ((c))) && (((c)) <= 0x7a)) || ((0xc0 <= ((c))) && (((c)) <= 0xd6)) || ((0xd8 <= ((c))) && (((c)) <= 0xf6)) || (0xf8 <= ((c)))) : xmlCharInRange__internal_alias((c), &xmlIsBaseCharGroup)) || (((c) < 0x100) ? 0 : (((0x4e00 <= (c)) && ((c) <= 0x9fa5)) || ((c) == 0x3007) || ((0x3021 <= (c)) && ((c) <= 0x3029)))))) || ((((c) < 0x100) ? (((0x30 <= ((c))) && (((c)) <= 0x39))) : xmlCharInRange__internal_alias((c), &xmlIsDigitGroup))) ||
            (c == '.') || (c == '-') ||
     (c == '_') || (c == ':') ||
     ((((c) < 0x100) ? 0 : xmlCharInRange__internal_alias((c), &xmlIsCombiningGroup))) ||
     ((((c) < 0x100) ? ((((c)) == 0xb7)) : xmlCharInRange__internal_alias((c), &xmlIsExtenderGroup))))
     return(1);
    }
    return(0);
}

static xmlChar * xmlParseAttValueInternal(xmlParserCtxtPtr ctxt,
                                          int *len, int *alloc, int normalize);

static const xmlChar *
xmlParseNameComplex(xmlParserCtxtPtr ctxt) {
    int len = 0, l;
    int c;
    int count = 0;
# 3217 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    if (ctxt->instate == XML_PARSER_EOF)
        return(
# 3219 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 3219 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );
    c = xmlCurrentChar__internal_alias(ctxt, &l);
    if ((ctxt->options & XML_PARSE_OLD10) == 0) {




 if ((c == ' ') || (c == '>') || (c == '/') ||
     (!(((c >= 'a') && (c <= 'z')) ||
        ((c >= 'A') && (c <= 'Z')) ||
        (c == '_') || (c == ':') ||
        ((c >= 0xC0) && (c <= 0xD6)) ||
        ((c >= 0xD8) && (c <= 0xF6)) ||
        ((c >= 0xF8) && (c <= 0x2FF)) ||
        ((c >= 0x370) && (c <= 0x37D)) ||
        ((c >= 0x37F) && (c <= 0x1FFF)) ||
        ((c >= 0x200C) && (c <= 0x200D)) ||
        ((c >= 0x2070) && (c <= 0x218F)) ||
        ((c >= 0x2C00) && (c <= 0x2FEF)) ||
        ((c >= 0x3001) && (c <= 0xD7FF)) ||
        ((c >= 0xF900) && (c <= 0xFDCF)) ||
        ((c >= 0xFDF0) && (c <= 0xFFFD)) ||
        ((c >= 0x10000) && (c <= 0xEFFFF))))) {
     return(
# 3242 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 3242 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               );
 }
 len += l;
 do { if (*(ctxt->input->cur) == '\n') { ctxt->input->line++; ctxt->input->col = 1; } else ctxt->input->col++; ctxt->input->cur += l; if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); } while (0);
 c = xmlCurrentChar__internal_alias(ctxt, &l);
 while ((c != ' ') && (c != '>') && (c != '/') &&
        (((c >= 'a') && (c <= 'z')) ||
         ((c >= 'A') && (c <= 'Z')) ||
         ((c >= '0') && (c <= '9')) ||
         (c == '_') || (c == ':') ||
         (c == '-') || (c == '.') || (c == 0xB7) ||
         ((c >= 0xC0) && (c <= 0xD6)) ||
         ((c >= 0xD8) && (c <= 0xF6)) ||
         ((c >= 0xF8) && (c <= 0x2FF)) ||
         ((c >= 0x300) && (c <= 0x36F)) ||
         ((c >= 0x370) && (c <= 0x37D)) ||
         ((c >= 0x37F) && (c <= 0x1FFF)) ||
         ((c >= 0x200C) && (c <= 0x200D)) ||
         ((c >= 0x203F) && (c <= 0x2040)) ||
         ((c >= 0x2070) && (c <= 0x218F)) ||
         ((c >= 0x2C00) && (c <= 0x2FEF)) ||
         ((c >= 0x3001) && (c <= 0xD7FF)) ||
         ((c >= 0xF900) && (c <= 0xFDCF)) ||
         ((c >= 0xFDF0) && (c <= 0xFFFD)) ||
         ((c >= 0x10000) && (c <= 0xEFFFF))
  )) {
     if (count++ > 100) {
  count = 0;
  if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
                if (ctxt->instate == XML_PARSER_EOF)
                    return(
# 3272 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 3272 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              );
     }
     len += l;
     do { if (*(ctxt->input->cur) == '\n') { ctxt->input->line++; ctxt->input->col = 1; } else ctxt->input->col++; ctxt->input->cur += l; if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); } while (0);
     c = xmlCurrentChar__internal_alias(ctxt, &l);
 }
    } else {
 if ((c == ' ') || (c == '>') || (c == '/') ||
     (!((((c) < 0x100) ? (((0x41 <= ((c))) && (((c)) <= 0x5a)) || ((0x61 <= ((c))) && (((c)) <= 0x7a)) || ((0xc0 <= ((c))) && (((c)) <= 0xd6)) || ((0xd8 <= ((c))) && (((c)) <= 0xf6)) || (0xf8 <= ((c)))) : xmlCharInRange__internal_alias((c), &xmlIsBaseCharGroup)) || (((c) < 0x100) ? 0 : (((0x4e00 <= (c)) && ((c) <= 0x9fa5)) || ((c) == 0x3007) || ((0x3021 <= (c)) && ((c) <= 0x3029))))) && (c != '_') &&
      (c != ':'))) {
     return(
# 3282 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 3282 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               );
 }
 len += l;
 do { if (*(ctxt->input->cur) == '\n') { ctxt->input->line++; ctxt->input->col = 1; } else ctxt->input->col++; ctxt->input->cur += l; if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); } while (0);
 c = xmlCurrentChar__internal_alias(ctxt, &l);

 while ((c != ' ') && (c != '>') && (c != '/') &&
        ((((((c) < 0x100) ? (((0x41 <= ((c))) && (((c)) <= 0x5a)) || ((0x61 <= ((c))) && (((c)) <= 0x7a)) || ((0xc0 <= ((c))) && (((c)) <= 0xd6)) || ((0xd8 <= ((c))) && (((c)) <= 0xf6)) || (0xf8 <= ((c)))) : xmlCharInRange__internal_alias((c), &xmlIsBaseCharGroup)) || (((c) < 0x100) ? 0 : (((0x4e00 <= (c)) && ((c) <= 0x9fa5)) || ((c) == 0x3007) || ((0x3021 <= (c)) && ((c) <= 0x3029)))))) || ((((c) < 0x100) ? (((0x30 <= ((c))) && (((c)) <= 0x39))) : xmlCharInRange__internal_alias((c), &xmlIsDigitGroup))) ||
  (c == '.') || (c == '-') ||
  (c == '_') || (c == ':') ||
  ((((c) < 0x100) ? 0 : xmlCharInRange__internal_alias((c), &xmlIsCombiningGroup))) ||
  ((((c) < 0x100) ? ((((c)) == 0xb7)) : xmlCharInRange__internal_alias((c), &xmlIsExtenderGroup))))) {
     if (count++ > 100) {
  count = 0;
  if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
                if (ctxt->instate == XML_PARSER_EOF)
                    return(
# 3298 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 3298 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              );
     }
     len += l;
     do { if (*(ctxt->input->cur) == '\n') { ctxt->input->line++; ctxt->input->col = 1; } else ctxt->input->col++; ctxt->input->cur += l; if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); } while (0);
     c = xmlCurrentChar__internal_alias(ctxt, &l);
     if (c == 0) {
  count = 0;
  if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
                if (ctxt->instate == XML_PARSER_EOF)
                    return(
# 3307 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 3307 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              );
  c = xmlCurrentChar__internal_alias(ctxt, &l);
     }
 }
    }
    if ((len > 50000) &&
        ((ctxt->options & XML_PARSE_HUGE) == 0)) {
        xmlFatalErr(ctxt, XML_ERR_NAME_TOO_LONG, "Name");
        return(
# 3315 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 3315 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );
    }
    if ((*ctxt->input->cur == '\n') && (ctxt->input->cur[-1] == '\r'))
        return(xmlDictLookup__internal_alias(ctxt->dict, ctxt->input->cur - (len + 1), len));
    return(xmlDictLookup__internal_alias(ctxt->dict, ctxt->input->cur - len, len));
}
# 3338 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
const xmlChar *
xmlParseName__internal_alias(xmlParserCtxtPtr ctxt) {
    const xmlChar *in;
    const xmlChar *ret;
    int count = 0;

    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
# 3353 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
    in = ctxt->input->cur;
    if (((*in >= 0x61) && (*in <= 0x7A)) ||
 ((*in >= 0x41) && (*in <= 0x5A)) ||
 (*in == '_') || (*in == ':')) {
 in++;
 while (((*in >= 0x61) && (*in <= 0x7A)) ||
        ((*in >= 0x41) && (*in <= 0x5A)) ||
        ((*in >= 0x30) && (*in <= 0x39)) ||
        (*in == '_') || (*in == '-') ||
        (*in == ':') || (*in == '.'))
     in++;
 if ((*in > 0) && (*in < 0x80)) {
     count = in - ctxt->input->cur;
            if ((count > 50000) &&
                ((ctxt->options & XML_PARSE_HUGE) == 0)) {
                xmlFatalErr(ctxt, XML_ERR_NAME_TOO_LONG, "Name");
                return(
# 3369 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 3369 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          );
            }
     ret = xmlDictLookup__internal_alias(ctxt->dict, ctxt->input->cur, count);
     ctxt->input->cur = in;
     ctxt->nbChars += count;
     ctxt->input->col += count;
     if (ret == 
# 3375 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 3375 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
         xmlErrMemory__internal_alias(ctxt, 
# 3376 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 3376 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               );
     return(ret);
 }
    }

    return(xmlParseNameComplex(ctxt));
}

static const xmlChar *
xmlParseNCNameComplex(xmlParserCtxtPtr ctxt) {
    int len = 0, l;
    int c;
    int count = 0;
# 3397 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    c = xmlCurrentChar__internal_alias(ctxt, &l);
    if ((c == ' ') || (c == '>') || (c == '/') ||
 (!xmlIsNameStartChar(ctxt, c) || (c == ':'))) {
 return(
# 3401 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 3401 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }

    while ((c != ' ') && (c != '>') && (c != '/') &&
    (xmlIsNameChar(ctxt, c) && (c != ':'))) {
 if (count++ > 100) {
            if ((len > 50000) &&
                ((ctxt->options & XML_PARSE_HUGE) == 0)) {
                xmlFatalErr(ctxt, XML_ERR_NAME_TOO_LONG, "NCName");
                return(
# 3410 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 3410 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          );
            }
     count = 0;
     if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
            if (ctxt->instate == XML_PARSER_EOF)
                return(
# 3415 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 3415 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          );
 }
 len += l;
 do { if (*(ctxt->input->cur) == '\n') { ctxt->input->line++; ctxt->input->col = 1; } else ctxt->input->col++; ctxt->input->cur += l; if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); } while (0);
 c = xmlCurrentChar__internal_alias(ctxt, &l);
 if (c == 0) {
     count = 0;
     if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
            if (ctxt->instate == XML_PARSER_EOF)
                return(
# 3424 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 3424 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          );
     c = xmlCurrentChar__internal_alias(ctxt, &l);
 }
    }
    if ((len > 50000) &&
        ((ctxt->options & XML_PARSE_HUGE) == 0)) {
        xmlFatalErr(ctxt, XML_ERR_NAME_TOO_LONG, "NCName");
        return(
# 3431 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 3431 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );
    }
    return(xmlDictLookup__internal_alias(ctxt->dict, ctxt->input->cur - len, len));
}
# 3451 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static const xmlChar *
xmlParseNCName(xmlParserCtxtPtr ctxt) {
    const xmlChar *in;
    const xmlChar *ret;
    int count = 0;
# 3464 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
    in = ctxt->input->cur;
    if (((*in >= 0x61) && (*in <= 0x7A)) ||
 ((*in >= 0x41) && (*in <= 0x5A)) ||
 (*in == '_')) {
 in++;
 while (((*in >= 0x61) && (*in <= 0x7A)) ||
        ((*in >= 0x41) && (*in <= 0x5A)) ||
        ((*in >= 0x30) && (*in <= 0x39)) ||
        (*in == '_') || (*in == '-') ||
        (*in == '.'))
     in++;
 if ((*in > 0) && (*in < 0x80)) {
     count = in - ctxt->input->cur;
            if ((count > 50000) &&
                ((ctxt->options & XML_PARSE_HUGE) == 0)) {
                xmlFatalErr(ctxt, XML_ERR_NAME_TOO_LONG, "NCName");
                return(
# 3480 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 3480 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          );
            }
     ret = xmlDictLookup__internal_alias(ctxt->dict, ctxt->input->cur, count);
     ctxt->input->cur = in;
     ctxt->nbChars += count;
     ctxt->input->col += count;
     if (ret == 
# 3486 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 3486 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
         xmlErrMemory__internal_alias(ctxt, 
# 3487 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 3487 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               );
     }
     return(ret);
 }
    }
    return(xmlParseNCNameComplex(ctxt));
}
# 3506 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static const xmlChar *
xmlParseNameAndCompare(xmlParserCtxtPtr ctxt, xmlChar const *other) {
    register const xmlChar *cmp = other;
    register const xmlChar *in;
    const xmlChar *ret;

    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    if (ctxt->instate == XML_PARSER_EOF)
        return(
# 3514 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 3514 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );

    in = ctxt->input->cur;
    while (*in != 0 && *in == *cmp) {
 ++in;
 ++cmp;
 ctxt->input->col++;
    }
    if (*cmp == 0 && (*in == '>' || (((*in) == 0x20) || ((0x9 <= (*in)) && ((*in) <= 0xa)) || ((*in) == 0xd)))) {

 ctxt->input->cur = in;
 return (const xmlChar*) 1;
    }

    ret = xmlParseName__internal_alias (ctxt);

    if (ret == other) {
 return (const xmlChar*) 1;
    }
    return ret;
}
# 3554 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static xmlChar *
xmlParseStringName(xmlParserCtxtPtr ctxt, const xmlChar** str) {
    xmlChar buf[100 + 5];
    const xmlChar *cur = *str;
    int len = 0, l;
    int c;





    c = xmlStringCurrentChar__internal_alias(ctxt, cur, &l);
    if (!xmlIsNameStartChar(ctxt, c)) {
 return(
# 3567 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 3567 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }

    if (l == 1) buf[len++] = (xmlChar) c; else len += xmlCopyCharMultiByte__internal_alias(&buf[len],c);
    cur += l;
    c = xmlStringCurrentChar__internal_alias(ctxt, cur, &l);
    while (xmlIsNameChar(ctxt, c)) {
 if (l == 1) buf[len++] = (xmlChar) c; else len += xmlCopyCharMultiByte__internal_alias(&buf[len],c);
 cur += l;
 c = xmlStringCurrentChar__internal_alias(ctxt, cur, &l);
 if (len >= 100) {




     xmlChar *buffer;
     int max = len * 2;

     buffer = (xmlChar *) xmlMallocAtomic(max * sizeof(xmlChar));
     if (buffer == 
# 3586 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 3586 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) {
         xmlErrMemory__internal_alias(ctxt, 
# 3587 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 3587 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               );
  return(
# 3588 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 3588 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
            );
     }
     memcpy(buffer, buf, len);
     while (xmlIsNameChar(ctxt, c)) {
  if (len + 10 > max) {
      xmlChar *tmp;

                    if ((len > 50000) &&
                        ((ctxt->options & XML_PARSE_HUGE) == 0)) {
                        xmlFatalErr(ctxt, XML_ERR_NAME_TOO_LONG, "NCName");
   xmlFree(buffer);
                        return(
# 3599 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                              ((void *)0)
# 3599 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                  );
                    }
      max *= 2;
      tmp = (xmlChar *) xmlRealloc(buffer,
                               max * sizeof(xmlChar));
      if (tmp == 
# 3604 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 3604 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
   xmlErrMemory__internal_alias(ctxt, 
# 3605 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 3605 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         );
   xmlFree(buffer);
   return(
# 3607 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
         ((void *)0)
# 3607 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
             );
      }
      buffer = tmp;
  }
  if (l == 1) buffer[len++] = (xmlChar) c; else len += xmlCopyCharMultiByte__internal_alias(&buffer[len],c);
  cur += l;
  c = xmlStringCurrentChar__internal_alias(ctxt, cur, &l);
     }
     buffer[len] = 0;
     *str = cur;
     return(buffer);
 }
    }
    if ((len > 50000) &&
        ((ctxt->options & XML_PARSE_HUGE) == 0)) {
        xmlFatalErr(ctxt, XML_ERR_NAME_TOO_LONG, "NCName");
        return(
# 3623 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 3623 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );
    }
    *str = cur;
    return(xmlStrndup__internal_alias(buf, len));
}
# 3642 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlChar *
xmlParseNmtoken__internal_alias(xmlParserCtxtPtr ctxt) {
    xmlChar buf[100 + 5];
    int len = 0, l;
    int c;
    int count = 0;





    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    if (ctxt->instate == XML_PARSER_EOF)
        return(
# 3655 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 3655 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );
    c = xmlCurrentChar__internal_alias(ctxt, &l);

    while (xmlIsNameChar(ctxt, c)) {
 if (count++ > 100) {
     count = 0;
     if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
 }
 if (l == 1) buf[len++] = (xmlChar) c; else len += xmlCopyCharMultiByte__internal_alias(&buf[len],c);
 do { if (*(ctxt->input->cur) == '\n') { ctxt->input->line++; ctxt->input->col = 1; } else ctxt->input->col++; ctxt->input->cur += l; if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); } while (0);
 c = xmlCurrentChar__internal_alias(ctxt, &l);
 if (c == 0) {
     count = 0;
     if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
     if (ctxt->instate == XML_PARSER_EOF)
  return(
# 3670 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 3670 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
            );
            c = xmlCurrentChar__internal_alias(ctxt, &l);
 }
 if (len >= 100) {




     xmlChar *buffer;
     int max = len * 2;

     buffer = (xmlChar *) xmlMallocAtomic(max * sizeof(xmlChar));
     if (buffer == 
# 3682 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 3682 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) {
         xmlErrMemory__internal_alias(ctxt, 
# 3683 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 3683 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               );
  return(
# 3684 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 3684 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
            );
     }
     memcpy(buffer, buf, len);
     while (xmlIsNameChar(ctxt, c)) {
  if (count++ > 100) {
      count = 0;
      if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
                    if (ctxt->instate == XML_PARSER_EOF) {
                        xmlFree(buffer);
                        return(
# 3693 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                              ((void *)0)
# 3693 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                  );
                    }
  }
  if (len + 10 > max) {
      xmlChar *tmp;

                    if ((max > 50000) &&
                        ((ctxt->options & XML_PARSE_HUGE) == 0)) {
                        xmlFatalErr(ctxt, XML_ERR_NAME_TOO_LONG, "NmToken");
                        xmlFree(buffer);
                        return(
# 3703 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                              ((void *)0)
# 3703 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                  );
                    }
      max *= 2;
      tmp = (xmlChar *) xmlRealloc(buffer,
                               max * sizeof(xmlChar));
      if (tmp == 
# 3708 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 3708 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
   xmlErrMemory__internal_alias(ctxt, 
# 3709 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 3709 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         );
   xmlFree(buffer);
   return(
# 3711 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
         ((void *)0)
# 3711 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
             );
      }
      buffer = tmp;
  }
  if (l == 1) buffer[len++] = (xmlChar) c; else len += xmlCopyCharMultiByte__internal_alias(&buffer[len],c);
  do { if (*(ctxt->input->cur) == '\n') { ctxt->input->line++; ctxt->input->col = 1; } else ctxt->input->col++; ctxt->input->cur += l; if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); } while (0);
  c = xmlCurrentChar__internal_alias(ctxt, &l);
     }
     buffer[len] = 0;
     return(buffer);
 }
    }
    if (len == 0)
        return(
# 3724 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 3724 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );
    if ((len > 50000) &&
        ((ctxt->options & XML_PARSE_HUGE) == 0)) {
        xmlFatalErr(ctxt, XML_ERR_NAME_TOO_LONG, "NmToken");
        return(
# 3728 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 3728 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );
    }
    return(xmlStrndup__internal_alias(buf, len));
}
# 3746 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlChar *
xmlParseEntityValue__internal_alias(xmlParserCtxtPtr ctxt, xmlChar **orig) {
    xmlChar *buf = 
# 3748 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 3748 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ;
    int len = 0;
    int size = 100;
    int c, l;
    xmlChar stop;
    xmlChar *ret = 
# 3753 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 3753 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ;
    const xmlChar *cur = 
# 3754 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 3754 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ;
    xmlParserInputPtr input;

    if ((*ctxt->input->cur) == '"') stop = '"';
    else if ((*ctxt->input->cur) == '\'') stop = '\'';
    else {
 xmlFatalErr(ctxt, XML_ERR_ENTITY_NOT_STARTED, 
# 3760 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                              ((void *)0)
# 3760 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                  );
 return(
# 3761 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 3761 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    buf = (xmlChar *) xmlMallocAtomic(size * sizeof(xmlChar));
    if (buf == 
# 3764 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 3764 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
 xmlErrMemory__internal_alias(ctxt, 
# 3765 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 3765 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       );
 return(
# 3766 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 3766 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }





    ctxt->instate = XML_PARSER_ENTITY_VALUE;
    input = ctxt->input;
    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    if (ctxt->instate == XML_PARSER_EOF) {
        xmlFree(buf);
        return(
# 3778 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 3778 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );
    }
    xmlNextChar__internal_alias(ctxt);
    c = xmlCurrentChar__internal_alias(ctxt, &l);
# 3791 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
    while ((((((c) < 0x100) ? (((0x9 <= ((c))) && (((c)) <= 0xa)) || (((c)) == 0xd) || (0x20 <= ((c)))) : (((0x100 <= (c)) && ((c) <= 0xd7ff)) || ((0xe000 <= (c)) && ((c) <= 0xfffd)) || ((0x10000 <= (c)) && ((c) <= 0x10ffff))))) && ((c != stop) ||
     (ctxt->input != input))) && (ctxt->instate != XML_PARSER_EOF)) {
 if (len + 5 >= size) {
     xmlChar *tmp;

     size *= 2;
     tmp = (xmlChar *) xmlRealloc(buf, size * sizeof(xmlChar));
     if (tmp == 
# 3798 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 3798 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
  xmlErrMemory__internal_alias(ctxt, 
# 3799 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 3799 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        );
  xmlFree(buf);
  return(
# 3801 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 3801 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
            );
     }
     buf = tmp;
 }
 if (l == 1) buf[len++] = (xmlChar) c; else len += xmlCopyCharMultiByte__internal_alias(&buf[len],c);
 do { if (*(ctxt->input->cur) == '\n') { ctxt->input->line++; ctxt->input->col = 1; } else ctxt->input->col++; ctxt->input->cur += l; if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); } while (0);



 while (((*ctxt->input->cur) == 0) && (ctxt->inputNr > 1))
     xmlPopInput__internal_alias(ctxt);

 if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
 c = xmlCurrentChar__internal_alias(ctxt, &l);
 if (c == 0) {
     if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
     c = xmlCurrentChar__internal_alias(ctxt, &l);
 }
    }
    buf[len] = 0;
    if (ctxt->instate == XML_PARSER_EOF) {
        xmlFree(buf);
        return(
# 3823 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 3823 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );
    }






    cur = buf;
    while (*cur != 0) {
 if ((*cur == '%') || ((*cur == '&') && (cur[1] != '#'))) {
     xmlChar *name;
     xmlChar tmp = *cur;

     cur++;
     name = xmlParseStringName(ctxt, &cur);
            if ((name == 
# 3839 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 3839 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ) || (*cur != ';')) {
  xmlFatalErrMsgInt(ctxt, XML_ERR_ENTITY_CHAR_ERROR,
     "EntityValue: '%c' forbidden except for entities references\n",
                           tmp);
     }
     if ((tmp == '%') && (ctxt->inSubset == 1) &&
  (ctxt->inputNr == 1)) {
  xmlFatalErr(ctxt, XML_ERR_ENTITY_PE_INTERNAL, 
# 3846 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 3846 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   );
     }
     if (name != 
# 3848 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 3848 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    )
  xmlFree(name);
     if (*cur == 0)
         break;
 }
 cur++;
    }




    if (c != stop) {
 xmlFatalErr(ctxt, XML_ERR_ENTITY_NOT_FINISHED, 
# 3860 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 3860 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   );
 xmlFree(buf);
    } else {
 xmlNextChar__internal_alias(ctxt);






 ret = xmlStringDecodeEntities__internal_alias(ctxt, buf, 2,
          0, 0, 0);
 if (orig != 
# 3872 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 3872 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                )
     *orig = buf;
 else
     xmlFree(buf);
    }

    return(ret);
}
# 3893 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static xmlChar *
xmlParseAttValueComplex(xmlParserCtxtPtr ctxt, int *attlen, int normalize) {
    xmlChar limit = 0;
    xmlChar *buf = 
# 3896 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 3896 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ;
    xmlChar *rep = 
# 3897 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 3897 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ;
    size_t len = 0;
    size_t buf_size = 0;
    int c, l, in_space = 0;
    xmlChar *current = 
# 3901 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 3901 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ;
    xmlEntityPtr ent;

    if (ctxt->input->cur[(0)] == '"') {
 ctxt->instate = XML_PARSER_ATTRIBUTE_VALUE;
 limit = '"';
        xmlNextChar__internal_alias(ctxt);
    } else if (ctxt->input->cur[(0)] == '\'') {
 limit = '\'';
 ctxt->instate = XML_PARSER_ATTRIBUTE_VALUE;
        xmlNextChar__internal_alias(ctxt);
    } else {
 xmlFatalErr(ctxt, XML_ERR_ATTRIBUTE_NOT_STARTED, 
# 3913 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                 ((void *)0)
# 3913 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                     );
 return(
# 3914 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 3914 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }




    buf_size = 100;
    buf = (xmlChar *) xmlMallocAtomic(buf_size);
    if (buf == 
# 3922 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 3922 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) goto mem_error;




    c = xmlCurrentChar__internal_alias(ctxt, &l);
    while (((ctxt->input->cur[(0)] != limit) &&
            ((((c) < 0x100) ? (((0x9 <= ((c))) && (((c)) <= 0xa)) || (((c)) == 0xd) || (0x20 <= ((c)))) : (((0x100 <= (c)) && ((c) <= 0xd7ff)) || ((0xe000 <= (c)) && ((c) <= 0xfffd)) || ((0x10000 <= (c)) && ((c) <= 0x10ffff))))) && (c != '<')) &&
            (ctxt->instate != XML_PARSER_EOF)) {




        if ((len > 10000000) &&
            ((ctxt->options & XML_PARSE_HUGE) == 0)) {
            xmlFatalErrMsg(ctxt, XML_ERR_ATTRIBUTE_NOT_FINISHED,
                           "AttValue lenght too long\n");
            goto mem_error;
        }
 if (c == 0) break;
 if (c == '&') {
     in_space = 0;
     if (ctxt->input->cur[(1)] == '#') {
  int val = xmlParseCharRef__internal_alias(ctxt);

  if (val == '&') {
      if (ctxt->replaceEntities) {
   if (len + 10 > buf_size) {
       { xmlChar *tmp; size_t new_size = buf_size * 2 + 10; if (new_size < buf_size) goto mem_error; tmp = (xmlChar *) xmlRealloc(buf, new_size); if (tmp == 
# 3950 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
      ((void *)0)
# 3950 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
      ) goto mem_error; buf = tmp; buf_size = new_size; };
   }
   buf[len++] = '&';
      } else {




   if (len + 10 > buf_size) {
       { xmlChar *tmp; size_t new_size = buf_size * 2 + 10; if (new_size < buf_size) goto mem_error; tmp = (xmlChar *) xmlRealloc(buf, new_size); if (tmp == 
# 3959 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
      ((void *)0)
# 3959 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
      ) goto mem_error; buf = tmp; buf_size = new_size; };
   }
   buf[len++] = '&';
   buf[len++] = '#';
   buf[len++] = '3';
   buf[len++] = '8';
   buf[len++] = ';';
      }
  } else if (val != 0) {
      if (len + 10 > buf_size) {
   { xmlChar *tmp; size_t new_size = buf_size * 2 + 10; if (new_size < buf_size) goto mem_error; tmp = (xmlChar *) xmlRealloc(buf, new_size); if (tmp == 
# 3969 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
  ((void *)0)
# 3969 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
  ) goto mem_error; buf = tmp; buf_size = new_size; };
      }
      len += xmlCopyChar__internal_alias(0, &buf[len], val);
  }
     } else {
  ent = xmlParseEntityRef__internal_alias(ctxt);
  ctxt->nbentities++;
  if (ent != 
# 3976 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 3976 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                )
      ctxt->nbentities += ent->owner;
  if ((ent != 
# 3978 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 3978 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ) &&
      (ent->etype == XML_INTERNAL_PREDEFINED_ENTITY)) {
      if (len + 10 > buf_size) {
   { xmlChar *tmp; size_t new_size = buf_size * 2 + 10; if (new_size < buf_size) goto mem_error; tmp = (xmlChar *) xmlRealloc(buf, new_size); if (tmp == 
# 3981 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
  ((void *)0)
# 3981 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
  ) goto mem_error; buf = tmp; buf_size = new_size; };
      }
      if ((ctxt->replaceEntities == 0) &&
          (ent->content[0] == '&')) {
   buf[len++] = '&';
   buf[len++] = '#';
   buf[len++] = '3';
   buf[len++] = '8';
   buf[len++] = ';';
      } else {
   buf[len++] = ent->content[0];
      }
  } else if ((ent != 
# 3993 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 3993 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ) &&
             (ctxt->replaceEntities != 0)) {
      if (ent->etype != XML_INTERNAL_PREDEFINED_ENTITY) {
   rep = xmlStringDecodeEntities__internal_alias(ctxt, ent->content,
            1,
            0, 0, 0);
   if (rep != 
# 3999 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 3999 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ) {
       current = rep;
       while (*current != 0) {
                                if ((*current == 0xD) || (*current == 0xA) ||
                                    (*current == 0x9)) {
                                    buf[len++] = 0x20;
                                    current++;
                                } else
                                    buf[len++] = *current++;
    if (len + 10 > buf_size) {
        { xmlChar *tmp; size_t new_size = buf_size * 2 + 10; if (new_size < buf_size) goto mem_error; tmp = (xmlChar *) xmlRealloc(buf, new_size); if (tmp == 
# 4009 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 4009 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
       ) goto mem_error; buf = tmp; buf_size = new_size; };
    }
       }
       xmlFree(rep);
       rep = 
# 4013 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 4013 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ;
   }
      } else {
   if (len + 10 > buf_size) {
       { xmlChar *tmp; size_t new_size = buf_size * 2 + 10; if (new_size < buf_size) goto mem_error; tmp = (xmlChar *) xmlRealloc(buf, new_size); if (tmp == 
# 4017 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
      ((void *)0)
# 4017 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
      ) goto mem_error; buf = tmp; buf_size = new_size; };
   }
   if (ent->content != 
# 4019 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 4019 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          )
       buf[len++] = ent->content[0];
      }
  } else if (ent != 
# 4022 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 4022 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) {
      int i = xmlStrlen__internal_alias(ent->name);
      const xmlChar *cur = ent->name;





      if ((ent->etype != XML_INTERNAL_PREDEFINED_ENTITY) &&
   (ent->content != 
# 4031 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 4031 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       )) {
   rep = xmlStringDecodeEntities__internal_alias(ctxt, ent->content,
        1, 0, 0, 0);
   if (rep != 
# 4034 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 4034 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ) {
       xmlFree(rep);
       rep = 
# 4036 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 4036 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ;
   }
      }




      buf[len++] = '&';
      while (len + i + 10 > buf_size) {
   { xmlChar *tmp; size_t new_size = buf_size * 2 + i + 10; if (new_size < buf_size) goto mem_error; tmp = (xmlChar *) xmlRealloc(buf, new_size); if (tmp == 
# 4045 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
  ((void *)0)
# 4045 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
  ) goto mem_error; buf = tmp; buf_size = new_size; };
      }
      for (;i > 0;i--)
   buf[len++] = *cur++;
      buf[len++] = ';';
  }
     }
 } else {
     if ((c == 0x20) || (c == 0xD) || (c == 0xA) || (c == 0x9)) {
         if ((len != 0) || (!normalize)) {
      if ((!normalize) || (!in_space)) {
   if (l == 1) buf[len++] = (xmlChar) 0x20; else len += xmlCopyCharMultiByte__internal_alias(&buf[len],0x20);
   while (len + 10 > buf_size) {
       { xmlChar *tmp; size_t new_size = buf_size * 2 + 10; if (new_size < buf_size) goto mem_error; tmp = (xmlChar *) xmlRealloc(buf, new_size); if (tmp == 
# 4058 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
      ((void *)0)
# 4058 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
      ) goto mem_error; buf = tmp; buf_size = new_size; };
   }
      }
      in_space = 1;
  }
     } else {
         in_space = 0;
  if (l == 1) buf[len++] = (xmlChar) c; else len += xmlCopyCharMultiByte__internal_alias(&buf[len],c);
  if (len + 10 > buf_size) {
      { xmlChar *tmp; size_t new_size = buf_size * 2 + 10; if (new_size < buf_size) goto mem_error; tmp = (xmlChar *) xmlRealloc(buf, new_size); if (tmp == 
# 4067 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
     ((void *)0)
# 4067 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
     ) goto mem_error; buf = tmp; buf_size = new_size; };
  }
     }
     do { if (*(ctxt->input->cur) == '\n') { ctxt->input->line++; ctxt->input->col = 1; } else ctxt->input->col++; ctxt->input->cur += l; if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); } while (0);
 }
 if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
 c = xmlCurrentChar__internal_alias(ctxt, &l);
    }
    if (ctxt->instate == XML_PARSER_EOF)
        goto error;

    if ((in_space) && (normalize)) {
        while (buf[len - 1] == 0x20) len--;
    }
    buf[len] = 0;
    if ((*ctxt->input->cur) == '<') {
 xmlFatalErr(ctxt, XML_ERR_LT_IN_ATTRIBUTE, 
# 4083 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                           ((void *)0)
# 4083 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                               );
    } else if ((*ctxt->input->cur) != limit) {
 if ((c != 0) && (!(((c) < 0x100) ? (((0x9 <= ((c))) && (((c)) <= 0xa)) || (((c)) == 0xd) || (0x20 <= ((c)))) : (((0x100 <= (c)) && ((c) <= 0xd7ff)) || ((0xe000 <= (c)) && ((c) <= 0xfffd)) || ((0x10000 <= (c)) && ((c) <= 0x10ffff)))))) {
     xmlFatalErrMsg(ctxt, XML_ERR_INVALID_CHAR,
      "invalid character in attribute value\n");
 } else {
     xmlFatalErrMsg(ctxt, XML_ERR_ATTRIBUTE_NOT_FINISHED,
      "AttValue: ' expected\n");
        }
    } else
 xmlNextChar__internal_alias(ctxt);





    if (len >= 0x7fffffff) {
        xmlFatalErrMsg(ctxt, XML_ERR_ATTRIBUTE_NOT_FINISHED,
                       "AttValue lenght too long\n");
        goto mem_error;
    }

    if (attlen != 
# 4105 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 4105 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) *attlen = (int) len;
    return(buf);

mem_error:
    xmlErrMemory__internal_alias(ctxt, 
# 4109 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 4109 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          );
error:
    if (buf != 
# 4111 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 4111 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
        xmlFree(buf);
    if (rep != 
# 4113 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 4113 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
        xmlFree(rep);
    return(
# 4115 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
          ((void *)0)
# 4115 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
              );
}
# 4152 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlChar *
xmlParseAttValue__internal_alias(xmlParserCtxtPtr ctxt) {
    if ((ctxt == 
# 4154 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 4154 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) || (ctxt->input == 
# 4154 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                         ((void *)0)
# 4154 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                             )) return(
# 4154 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                       ((void *)0)
# 4154 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                           );
    return(xmlParseAttValueInternal(ctxt, 
# 4155 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                         ((void *)0)
# 4155 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                             , 
# 4155 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 4155 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   , 0));
}
# 4169 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlChar *
xmlParseSystemLiteral__internal_alias(xmlParserCtxtPtr ctxt) {
    xmlChar *buf = 
# 4171 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 4171 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ;
    int len = 0;
    int size = 100;
    int cur, l;
    xmlChar stop;
    int state = ctxt->instate;
    int count = 0;

    if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;
    if ((*ctxt->input->cur) == '"') {
        xmlNextChar__internal_alias(ctxt);
 stop = '"';
    } else if ((*ctxt->input->cur) == '\'') {
        xmlNextChar__internal_alias(ctxt);
 stop = '\'';
    } else {
 xmlFatalErr(ctxt, XML_ERR_LITERAL_NOT_STARTED, 
# 4187 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 4187 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   );
 return(
# 4188 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 4188 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }

    buf = (xmlChar *) xmlMallocAtomic(size * sizeof(xmlChar));
    if (buf == 
# 4192 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 4192 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
        xmlErrMemory__internal_alias(ctxt, 
# 4193 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 4193 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              );
 return(
# 4194 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 4194 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    ctxt->instate = XML_PARSER_SYSTEM_LITERAL;
    cur = xmlCurrentChar__internal_alias(ctxt, &l);
    while (((((cur) < 0x100) ? (((0x9 <= ((cur))) && (((cur)) <= 0xa)) || (((cur)) == 0xd) || (0x20 <= ((cur)))) : (((0x100 <= (cur)) && ((cur) <= 0xd7ff)) || ((0xe000 <= (cur)) && ((cur) <= 0xfffd)) || ((0x10000 <= (cur)) && ((cur) <= 0x10ffff))))) && (cur != stop)) {
 if (len + 5 >= size) {
     xmlChar *tmp;

            if ((size > 50000) &&
                ((ctxt->options & XML_PARSE_HUGE) == 0)) {
                xmlFatalErr(ctxt, XML_ERR_NAME_TOO_LONG, "SystemLiteral");
                xmlFree(buf);
  ctxt->instate = (xmlParserInputState) state;
                return(
# 4207 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 4207 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          );
            }
     size *= 2;
     tmp = (xmlChar *) xmlRealloc(buf, size * sizeof(xmlChar));
     if (tmp == 
# 4211 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 4211 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
         xmlFree(buf);
  xmlErrMemory__internal_alias(ctxt, 
# 4213 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 4213 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        );
  ctxt->instate = (xmlParserInputState) state;
  return(
# 4215 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 4215 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
            );
     }
     buf = tmp;
 }
 count++;
 if (count > 50) {
     if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
     count = 0;
            if (ctxt->instate == XML_PARSER_EOF) {
         xmlFree(buf);
  return(
# 4225 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 4225 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
            );
            }
 }
 if (l == 1) buf[len++] = (xmlChar) cur; else len += xmlCopyCharMultiByte__internal_alias(&buf[len],cur);
 do { if (*(ctxt->input->cur) == '\n') { ctxt->input->line++; ctxt->input->col = 1; } else ctxt->input->col++; ctxt->input->cur += l; if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); } while (0);
 cur = xmlCurrentChar__internal_alias(ctxt, &l);
 if (cur == 0) {
     if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
     if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;
     cur = xmlCurrentChar__internal_alias(ctxt, &l);
 }
    }
    buf[len] = 0;
    ctxt->instate = (xmlParserInputState) state;
    if (!(((cur) < 0x100) ? (((0x9 <= ((cur))) && (((cur)) <= 0xa)) || (((cur)) == 0xd) || (0x20 <= ((cur)))) : (((0x100 <= (cur)) && ((cur) <= 0xd7ff)) || ((0xe000 <= (cur)) && ((cur) <= 0xfffd)) || ((0x10000 <= (cur)) && ((cur) <= 0x10ffff))))) {
 xmlFatalErr(ctxt, XML_ERR_LITERAL_NOT_FINISHED, 
# 4240 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                ((void *)0)
# 4240 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                    );
    } else {
 xmlNextChar__internal_alias(ctxt);
    }
    return(buf);
}
# 4258 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlChar *
xmlParsePubidLiteral__internal_alias(xmlParserCtxtPtr ctxt) {
    xmlChar *buf = 
# 4260 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 4260 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ;
    int len = 0;
    int size = 100;
    xmlChar cur;
    xmlChar stop;
    int count = 0;
    xmlParserInputState oldstate = ctxt->instate;

    if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;
    if ((*ctxt->input->cur) == '"') {
        xmlNextChar__internal_alias(ctxt);
 stop = '"';
    } else if ((*ctxt->input->cur) == '\'') {
        xmlNextChar__internal_alias(ctxt);
 stop = '\'';
    } else {
 xmlFatalErr(ctxt, XML_ERR_LITERAL_NOT_STARTED, 
# 4276 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 4276 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   );
 return(
# 4277 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 4277 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    buf = (xmlChar *) xmlMallocAtomic(size * sizeof(xmlChar));
    if (buf == 
# 4280 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 4280 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
 xmlErrMemory__internal_alias(ctxt, 
# 4281 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 4281 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       );
 return(
# 4282 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 4282 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    ctxt->instate = XML_PARSER_PUBLIC_LITERAL;
    cur = (*ctxt->input->cur);
    while (((xmlIsPubidChar_tab[(cur)])) && (cur != stop)) {
 if (len + 1 >= size) {
     xmlChar *tmp;

            if ((size > 50000) &&
                ((ctxt->options & XML_PARSE_HUGE) == 0)) {
                xmlFatalErr(ctxt, XML_ERR_NAME_TOO_LONG, "Public ID");
                xmlFree(buf);
                return(
# 4294 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 4294 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          );
            }
     size *= 2;
     tmp = (xmlChar *) xmlRealloc(buf, size * sizeof(xmlChar));
     if (tmp == 
# 4298 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 4298 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
  xmlErrMemory__internal_alias(ctxt, 
# 4299 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 4299 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        );
  xmlFree(buf);
  return(
# 4301 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 4301 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
            );
     }
     buf = tmp;
 }
 buf[len++] = cur;
 count++;
 if (count > 50) {
     if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
     count = 0;
            if (ctxt->instate == XML_PARSER_EOF) {
  xmlFree(buf);
  return(
# 4312 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 4312 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
            );
            }
 }
 xmlNextChar__internal_alias(ctxt);
 cur = (*ctxt->input->cur);
 if (cur == 0) {
     if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
     if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;
     cur = (*ctxt->input->cur);
 }
    }
    buf[len] = 0;
    if (cur != stop) {
 xmlFatalErr(ctxt, XML_ERR_LITERAL_NOT_FINISHED, 
# 4325 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                ((void *)0)
# 4325 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                    );
    } else {
 xmlNextChar__internal_alias(ctxt);
    }
    ctxt->instate = oldstate;
    return(buf);
}

static void xmlParseCharDataComplex(xmlParserCtxtPtr ctxt, int cdata);




static const unsigned char test_char_data[256] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x00, 0x27,
    0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,
    0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
    0x38, 0x39, 0x3A, 0x3B, 0x00, 0x3D, 0x3E, 0x3F,
    0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,
    0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,
    0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57,
    0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x00, 0x5E, 0x5F,
    0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,
    0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,
    0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,
    0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
# 4389 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlParseCharData__internal_alias(xmlParserCtxtPtr ctxt, int cdata) {
    const xmlChar *in;
    int nbchar = 0;
    int line = ctxt->input->line;
    int col = ctxt->input->col;
    int ccol;

    if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;
    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;




    if (!cdata) {
 in = ctxt->input->cur;
 do {
get_more_space:
     while (*in == 0x20) { in++; ctxt->input->col++; }
     if (*in == 0xA) {
  do {
      ctxt->input->line++; ctxt->input->col = 1;
      in++;
  } while (*in == 0xA);
  goto get_more_space;
     }
     if (*in == '<') {
  nbchar = in - ctxt->input->cur;
  if (nbchar > 0) {
      const xmlChar *tmp = ctxt->input->cur;
      ctxt->input->cur = in;

      if ((ctxt->sax != 
# 4421 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 4421 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ) &&
          (ctxt->sax->ignorableWhitespace !=
           ctxt->sax->characters)) {
   if (areBlanks(ctxt, tmp, nbchar, 1)) {
       if (ctxt->sax->ignorableWhitespace != 
# 4425 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                            ((void *)0)
# 4425 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                )
    ctxt->sax->ignorableWhitespace(ctxt->userData,
             tmp, nbchar);
   } else {
       if (ctxt->sax->characters != 
# 4429 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                   ((void *)0)
# 4429 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                       )
    ctxt->sax->characters(ctxt->userData,
            tmp, nbchar);
       if (*ctxt->space == -1)
           *ctxt->space = -2;
   }
      } else if ((ctxt->sax != 
# 4435 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                              ((void *)0)
# 4435 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                  ) &&
                 (ctxt->sax->characters != 
# 4436 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                          ((void *)0)
# 4436 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                              )) {
   ctxt->sax->characters(ctxt->userData,
           tmp, nbchar);
      }
  }
  return;
     }

get_more:
            ccol = ctxt->input->col;
     while (test_char_data[*in]) {
  in++;
  ccol++;
     }
     ctxt->input->col = ccol;
     if (*in == 0xA) {
  do {
      ctxt->input->line++; ctxt->input->col = 1;
      in++;
  } while (*in == 0xA);
  goto get_more;
     }
     if (*in == ']') {
  if ((in[1] == ']') && (in[2] == '>')) {
      xmlFatalErr(ctxt, XML_ERR_MISPLACED_CDATA_END, 
# 4460 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                    ((void *)0)
# 4460 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                        );
      ctxt->input->cur = in;
      return;
  }
  in++;
  ctxt->input->col++;
  goto get_more;
     }
     nbchar = in - ctxt->input->cur;
     if (nbchar > 0) {
  if ((ctxt->sax != 
# 4470 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 4470 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) &&
      (ctxt->sax->ignorableWhitespace !=
       ctxt->sax->characters) &&
      ((((*ctxt->input->cur) == 0x20) || ((0x9 <= (*ctxt->input->cur)) && ((*ctxt->input->cur) <= 0xa)) || ((*ctxt->input->cur) == 0xd)))) {
      const xmlChar *tmp = ctxt->input->cur;
      ctxt->input->cur = in;

      if (areBlanks(ctxt, tmp, nbchar, 0)) {
          if (ctxt->sax->ignorableWhitespace != 
# 4478 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 4478 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   )
       ctxt->sax->ignorableWhitespace(ctxt->userData,
          tmp, nbchar);
      } else {
          if (ctxt->sax->characters != 
# 4482 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                      ((void *)0)
# 4482 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                          )
       ctxt->sax->characters(ctxt->userData,
        tmp, nbchar);
   if (*ctxt->space == -1)
       *ctxt->space = -2;
      }
                    line = ctxt->input->line;
                    col = ctxt->input->col;
  } else if (ctxt->sax != 
# 4490 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 4490 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             ) {
      if (ctxt->sax->characters != 
# 4491 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                  ((void *)0)
# 4491 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                      )
   ctxt->sax->characters(ctxt->userData,
           ctxt->input->cur, nbchar);
                    line = ctxt->input->line;
                    col = ctxt->input->col;
  }

                if (ctxt->instate != XML_PARSER_CONTENT)
                    return;
     }
     ctxt->input->cur = in;
     if (*in == 0xD) {
  in++;
  if (*in == 0xA) {
      ctxt->input->cur = in;
      in++;
      ctxt->input->line++; ctxt->input->col = 1;
      continue;
  }
  in--;
     }
     if (*in == '<') {
  return;
     }
     if (*in == '&') {
  return;
     }
     if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;
     if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
            if (ctxt->instate == XML_PARSER_EOF)
  return;
     in = ctxt->input->cur;
 } while (((*in >= 0x20) && (*in <= 0x7F)) || (*in == 0x09));
 nbchar = 0;
    }
    ctxt->input->line = line;
    ctxt->input->col = col;
    xmlParseCharDataComplex(ctxt, cdata);
}
# 4540 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void
xmlParseCharDataComplex(xmlParserCtxtPtr ctxt, int cdata) {
    xmlChar buf[300 + 5];
    int nbchar = 0;
    int cur, l;
    int count = 0;

    if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;
    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    cur = xmlCurrentChar__internal_alias(ctxt, &l);
    while ((cur != '<') &&
           (cur != '&') &&
    ((((cur) < 0x100) ? (((0x9 <= ((cur))) && (((cur)) <= 0xa)) || (((cur)) == 0xd) || (0x20 <= ((cur)))) : (((0x100 <= (cur)) && ((cur) <= 0xd7ff)) || ((0xe000 <= (cur)) && ((cur) <= 0xfffd)) || ((0x10000 <= (cur)) && ((cur) <= 0x10ffff)))))) {
 if ((cur == ']') && (ctxt->input->cur[(1)] == ']') &&
     (ctxt->input->cur[(2)] == '>')) {
     if (cdata) break;
     else {
  xmlFatalErr(ctxt, XML_ERR_MISPLACED_CDATA_END, 
# 4557 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                ((void *)0)
# 4557 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                    );
     }
 }
 if (l == 1) buf[nbchar++] = (xmlChar) cur; else nbchar += xmlCopyCharMultiByte__internal_alias(&buf[nbchar],cur);
 if (nbchar >= 300) {
     buf[nbchar] = 0;




     if ((ctxt->sax != 
# 4567 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 4567 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) && (!ctxt->disableSAX)) {
  if (areBlanks(ctxt, buf, nbchar, 0)) {
      if (ctxt->sax->ignorableWhitespace != 
# 4569 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                           ((void *)0)
# 4569 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                               )
   ctxt->sax->ignorableWhitespace(ctxt->userData,
                                  buf, nbchar);
  } else {
      if (ctxt->sax->characters != 
# 4573 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                  ((void *)0)
# 4573 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                      )
   ctxt->sax->characters(ctxt->userData, buf, nbchar);
      if ((ctxt->sax->characters !=
           ctxt->sax->ignorableWhitespace) &&
   (*ctxt->space == -1))
   *ctxt->space = -2;
  }
     }
     nbchar = 0;

            if (ctxt->instate != XML_PARSER_CONTENT)
                return;
 }
 count++;
 if (count > 50) {
     if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
     count = 0;
            if (ctxt->instate == XML_PARSER_EOF)
  return;
 }
 do { if (*(ctxt->input->cur) == '\n') { ctxt->input->line++; ctxt->input->col = 1; } else ctxt->input->col++; ctxt->input->cur += l; if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); } while (0);
 cur = xmlCurrentChar__internal_alias(ctxt, &l);
    }
    if (nbchar != 0) {
        buf[nbchar] = 0;



 if ((ctxt->sax != 
# 4601 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 4601 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) && (!ctxt->disableSAX)) {
     if (areBlanks(ctxt, buf, nbchar, 0)) {
  if (ctxt->sax->ignorableWhitespace != 
# 4603 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                       ((void *)0)
# 4603 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                           )
      ctxt->sax->ignorableWhitespace(ctxt->userData, buf, nbchar);
     } else {
  if (ctxt->sax->characters != 
# 4606 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                              ((void *)0)
# 4606 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                  )
      ctxt->sax->characters(ctxt->userData, buf, nbchar);
  if ((ctxt->sax->characters != ctxt->sax->ignorableWhitespace) &&
      (*ctxt->space == -1))
      *ctxt->space = -2;
     }
 }
    }
    if ((cur != 0) && (!(((cur) < 0x100) ? (((0x9 <= ((cur))) && (((cur)) <= 0xa)) || (((cur)) == 0xd) || (0x20 <= ((cur)))) : (((0x100 <= (cur)) && ((cur) <= 0xd7ff)) || ((0xe000 <= (cur)) && ((cur) <= 0xfffd)) || ((0x10000 <= (cur)) && ((cur) <= 0x10ffff)))))) {

        xmlFatalErrMsgInt(ctxt, XML_ERR_INVALID_CHAR,
                          "PCDATA invalid Char value %d\n",
                   cur);
 do { if (*(ctxt->input->cur) == '\n') { ctxt->input->line++; ctxt->input->col = 1; } else ctxt->input->col++; ctxt->input->cur += l; if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); } while (0);
    }
}
# 4645 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlChar *
xmlParseExternalID__internal_alias(xmlParserCtxtPtr ctxt, xmlChar **publicID, int strict) {
    xmlChar *URI = 
# 4647 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 4647 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ;

    if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;

    *publicID = 
# 4651 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 4651 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ;
    if (( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == 'S' && ((unsigned char *) ctxt->input->cur)[ 1 ] == 'Y' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'S' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'T' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'E' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'M' )) {
        do { ctxt->nbChars += (6),ctxt->input->cur += (6),ctxt->input->col+=(6); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 if (!((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd))) {
     xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
                    "Space required after 'SYSTEM'\n");
 }
        xmlSkipBlankChars__internal_alias(ctxt);
 URI = xmlParseSystemLiteral__internal_alias(ctxt);
 if (URI == 
# 4660 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 4660 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               ) {
     xmlFatalErr(ctxt, XML_ERR_URI_REQUIRED, 
# 4661 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                            ((void *)0)
# 4661 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                );
        }
    } else if (( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == 'P' && ((unsigned char *) ctxt->input->cur)[ 1 ] == 'U' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'B' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'L' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'I' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'C' )) {
        do { ctxt->nbChars += (6),ctxt->input->cur += (6),ctxt->input->col+=(6); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 if (!((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd))) {
     xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
      "Space required after 'PUBLIC'\n");
 }
        xmlSkipBlankChars__internal_alias(ctxt);
 *publicID = xmlParsePubidLiteral__internal_alias(ctxt);
 if (*publicID == 
# 4671 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 4671 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) {
     xmlFatalErr(ctxt, XML_ERR_PUBID_REQUIRED, 
# 4672 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                              ((void *)0)
# 4672 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                  );
 }
 if (strict) {



     if (!((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd))) {
  xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
   "Space required after the Public Identifier\n");
     }
 } else {





     const xmlChar *ptr;
     if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;

     ptr = ctxt->input->cur;
     if (!(((*ptr) == 0x20) || ((0x9 <= (*ptr)) && ((*ptr) <= 0xa)) || ((*ptr) == 0xd))) return(
# 4692 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                   ((void *)0)
# 4692 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                       );

     while ((((*ptr) == 0x20) || ((0x9 <= (*ptr)) && ((*ptr) <= 0xa)) || ((*ptr) == 0xd))) ptr++;
     if ((*ptr != '\'') && (*ptr != '"')) return(
# 4695 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                ((void *)0)
# 4695 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                    );
 }
        xmlSkipBlankChars__internal_alias(ctxt);
 URI = xmlParseSystemLiteral__internal_alias(ctxt);
 if (URI == 
# 4699 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 4699 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               ) {
     xmlFatalErr(ctxt, XML_ERR_URI_REQUIRED, 
# 4700 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                            ((void *)0)
# 4700 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                );
        }
    }
    return(URI);
}
# 4720 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void
xmlParseCommentComplex(xmlParserCtxtPtr ctxt, xmlChar *buf,
                       size_t len, size_t size) {
    int q, ql;
    int r, rl;
    int cur, l;
    size_t count = 0;
    int inputid;

    inputid = ctxt->input->id;

    if (buf == 
# 4731 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 4731 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
        len = 0;
 size = 100;
 buf = (xmlChar *) xmlMallocAtomic(size * sizeof(xmlChar));
 if (buf == 
# 4735 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 4735 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               ) {
     xmlErrMemory__internal_alias(ctxt, 
# 4736 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 4736 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           );
     return;
 }
    }
    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    q = xmlCurrentChar__internal_alias(ctxt, &ql);
    if (q == 0)
        goto not_terminated;
    if (!(((q) < 0x100) ? (((0x9 <= ((q))) && (((q)) <= 0xa)) || (((q)) == 0xd) || (0x20 <= ((q)))) : (((0x100 <= (q)) && ((q) <= 0xd7ff)) || ((0xe000 <= (q)) && ((q) <= 0xfffd)) || ((0x10000 <= (q)) && ((q) <= 0x10ffff))))) {
        xmlFatalErrMsgInt(ctxt, XML_ERR_INVALID_CHAR,
                          "xmlParseComment: invalid xmlChar value %d\n",
                   q);
 xmlFree (buf);
 return;
    }
    do { if (*(ctxt->input->cur) == '\n') { ctxt->input->line++; ctxt->input->col = 1; } else ctxt->input->col++; ctxt->input->cur += ql; if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); } while (0);
    r = xmlCurrentChar__internal_alias(ctxt, &rl);
    if (r == 0)
        goto not_terminated;
    if (!(((r) < 0x100) ? (((0x9 <= ((r))) && (((r)) <= 0xa)) || (((r)) == 0xd) || (0x20 <= ((r)))) : (((0x100 <= (r)) && ((r) <= 0xd7ff)) || ((0xe000 <= (r)) && ((r) <= 0xfffd)) || ((0x10000 <= (r)) && ((r) <= 0x10ffff))))) {
        xmlFatalErrMsgInt(ctxt, XML_ERR_INVALID_CHAR,
                          "xmlParseComment: invalid xmlChar value %d\n",
                   q);
 xmlFree (buf);
 return;
    }
    do { if (*(ctxt->input->cur) == '\n') { ctxt->input->line++; ctxt->input->col = 1; } else ctxt->input->col++; ctxt->input->cur += rl; if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); } while (0);
    cur = xmlCurrentChar__internal_alias(ctxt, &l);
    if (cur == 0)
        goto not_terminated;
    while ((((cur) < 0x100) ? (((0x9 <= ((cur))) && (((cur)) <= 0xa)) || (((cur)) == 0xd) || (0x20 <= ((cur)))) : (((0x100 <= (cur)) && ((cur) <= 0xd7ff)) || ((0xe000 <= (cur)) && ((cur) <= 0xfffd)) || ((0x10000 <= (cur)) && ((cur) <= 0x10ffff)))) &&
           ((cur != '>') ||
     (r != '-') || (q != '-'))) {
 if ((r == '-') && (q == '-')) {
     xmlFatalErr(ctxt, XML_ERR_HYPHEN_IN_COMMENT, 
# 4770 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                 ((void *)0)
# 4770 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                     );
 }
        if ((len > 10000000) &&
            ((ctxt->options & XML_PARSE_HUGE) == 0)) {
            xmlFatalErrMsgStr(ctxt, XML_ERR_COMMENT_NOT_FINISHED,
                         "Comment too big found", 
# 4775 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                 ((void *)0)
# 4775 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                     );
            xmlFree (buf);
            return;
        }
 if (len + 5 >= size) {
     xmlChar *new_buf;
            size_t new_size;

     new_size = size * 2;
     new_buf = (xmlChar *) xmlRealloc(buf, new_size);
     if (new_buf == 
# 4785 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 4785 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) {
  xmlFree (buf);
  xmlErrMemory__internal_alias(ctxt, 
# 4787 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 4787 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        );
  return;
     }
     buf = new_buf;
            size = new_size;
 }
 if (ql == 1) buf[len++] = (xmlChar) q; else len += xmlCopyCharMultiByte__internal_alias(&buf[len],q);
 q = r;
 ql = rl;
 r = cur;
 rl = l;

 count++;
 if (count > 50) {
     if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
     count = 0;
            if (ctxt->instate == XML_PARSER_EOF) {
  xmlFree(buf);
  return;
            }
 }
 do { if (*(ctxt->input->cur) == '\n') { ctxt->input->line++; ctxt->input->col = 1; } else ctxt->input->col++; ctxt->input->cur += l; if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); } while (0);
 cur = xmlCurrentChar__internal_alias(ctxt, &l);
 if (cur == 0) {
     if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;
     if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
     cur = xmlCurrentChar__internal_alias(ctxt, &l);
 }
    }
    buf[len] = 0;
    if (cur == 0) {
 xmlFatalErrMsgStr(ctxt, XML_ERR_COMMENT_NOT_FINISHED,
                      "Comment not terminated \n<!--%.50s\n", buf);
    } else if (!(((cur) < 0x100) ? (((0x9 <= ((cur))) && (((cur)) <= 0xa)) || (((cur)) == 0xd) || (0x20 <= ((cur)))) : (((0x100 <= (cur)) && ((cur) <= 0xd7ff)) || ((0xe000 <= (cur)) && ((cur) <= 0xfffd)) || ((0x10000 <= (cur)) && ((cur) <= 0x10ffff))))) {
        xmlFatalErrMsgInt(ctxt, XML_ERR_INVALID_CHAR,
                          "xmlParseComment: invalid xmlChar value %d\n",
                   cur);
    } else {
 if (inputid != ctxt->input->id) {
     xmlFatalErrMsg(ctxt, XML_ERR_ENTITY_BOUNDARY,
  "Comment doesn't start and stop in the same entity\n");
 }
        xmlNextChar__internal_alias(ctxt);
 if ((ctxt->sax != 
# 4830 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 4830 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) && (ctxt->sax->comment != 
# 4830 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                  ((void *)0)
# 4830 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                      ) &&
     (!ctxt->disableSAX))
     ctxt->sax->comment(ctxt->userData, buf);
    }
    xmlFree(buf);
    return;
not_terminated:
    xmlFatalErrMsgStr(ctxt, XML_ERR_COMMENT_NOT_FINISHED,
    "Comment not terminated\n", 
# 4838 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                               ((void *)0)
# 4838 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                   );
    xmlFree(buf);
    return;
}
# 4853 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlParseComment__internal_alias(xmlParserCtxtPtr ctxt) {
    xmlChar *buf = 
# 4855 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 4855 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ;
    size_t size = 100;
    size_t len = 0;
    xmlParserInputState state;
    const xmlChar *in;
    size_t nbchar = 0;
    int ccol;
    int inputid;




    if (((*ctxt->input->cur) != '<') || (ctxt->input->cur[(1)] != '!') ||
        (ctxt->input->cur[(2)] != '-') || (ctxt->input->cur[(3)] != '-')) return;
    state = ctxt->instate;
    ctxt->instate = XML_PARSER_COMMENT;
    inputid = ctxt->input->id;
    do { ctxt->nbChars += (4),ctxt->input->cur += (4),ctxt->input->col+=(4); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
    if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;
    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;





    in = ctxt->input->cur;
    do {
 if (*in == 0xA) {
     do {
  ctxt->input->line++; ctxt->input->col = 1;
  in++;
     } while (*in == 0xA);
 }
get_more:
        ccol = ctxt->input->col;
 while (((*in > '-') && (*in <= 0x7F)) ||
        ((*in >= 0x20) && (*in < '-')) ||
        (*in == 0x09)) {
      in++;
      ccol++;
 }
 ctxt->input->col = ccol;
 if (*in == 0xA) {
     do {
  ctxt->input->line++; ctxt->input->col = 1;
  in++;
     } while (*in == 0xA);
     goto get_more;
 }
 nbchar = in - ctxt->input->cur;



 if (nbchar > 0) {
     if ((ctxt->sax != 
# 4909 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 4909 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) &&
  (ctxt->sax->comment != 
# 4910 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 4910 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            )) {
  if (buf == 
# 4911 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 4911 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ) {
      if ((*in == '-') && (in[1] == '-'))
          size = nbchar + 1;
      else
          size = 100 + nbchar;
      buf = (xmlChar *) xmlMallocAtomic(size * sizeof(xmlChar));
      if (buf == 
# 4917 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 4917 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
          xmlErrMemory__internal_alias(ctxt, 
# 4918 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 4918 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                );
   ctxt->instate = state;
   return;
      }
      len = 0;
  } else if (len + nbchar + 1 >= size) {
      xmlChar *new_buf;
      size += len + nbchar + 100;
      new_buf = (xmlChar *) xmlRealloc(buf,
                                       size * sizeof(xmlChar));
      if (new_buf == 
# 4928 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 4928 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ) {
          xmlFree (buf);
   xmlErrMemory__internal_alias(ctxt, 
# 4930 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 4930 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         );
   ctxt->instate = state;
   return;
      }
      buf = new_buf;
  }
  memcpy(&buf[len], ctxt->input->cur, nbchar);
  len += nbchar;
  buf[len] = 0;
     }
 }
        if ((len > 10000000) &&
            ((ctxt->options & XML_PARSE_HUGE) == 0)) {
            xmlFatalErrMsgStr(ctxt, XML_ERR_COMMENT_NOT_FINISHED,
                         "Comment too big found", 
# 4944 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                 ((void *)0)
# 4944 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                     );
            xmlFree (buf);
            return;
        }
 ctxt->input->cur = in;
 if (*in == 0xA) {
     in++;
     ctxt->input->line++; ctxt->input->col = 1;
 }
 if (*in == 0xD) {
     in++;
     if (*in == 0xA) {
  ctxt->input->cur = in;
  in++;
  ctxt->input->line++; ctxt->input->col = 1;
  continue;
     }
     in--;
 }
 if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;
 if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
        if (ctxt->instate == XML_PARSER_EOF) {
            xmlFree(buf);
            return;
        }
 in = ctxt->input->cur;
 if (*in == '-') {
     if (in[1] == '-') {
         if (in[2] == '>') {
      if (ctxt->input->id != inputid) {
   xmlFatalErrMsg(ctxt, XML_ERR_ENTITY_BOUNDARY,
   "comment doesn't start and stop in the same entity\n");
      }
      do { ctxt->nbChars += (3),ctxt->input->cur += (3),ctxt->input->col+=(3); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
      if ((ctxt->sax != 
# 4978 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 4978 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ) && (ctxt->sax->comment != 
# 4978 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                       ((void *)0)
# 4978 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                           ) &&
          (!ctxt->disableSAX)) {
   if (buf != 
# 4980 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 4980 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 )
       ctxt->sax->comment(ctxt->userData, buf);
   else
       ctxt->sax->comment(ctxt->userData, (xmlChar *) "");
      }
      if (buf != 
# 4985 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 4985 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    )
          xmlFree(buf);
      ctxt->instate = state;
      return;
  }
  if (buf != 
# 4990 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 4990 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ) {
      xmlFatalErrMsgStr(ctxt, XML_ERR_HYPHEN_IN_COMMENT,
                        "Double hyphen within comment: "
                                      "<!--%.50s\n",
          buf);
  } else
      xmlFatalErrMsgStr(ctxt, XML_ERR_HYPHEN_IN_COMMENT,
                        "Double hyphen within comment\n", 
# 4997 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                         ((void *)0)
# 4997 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                             );
  in++;
  ctxt->input->col++;
     }
     in++;
     ctxt->input->col++;
     goto get_more;
 }
    } while (((*in >= 0x20) && (*in <= 0x7F)) || (*in == 0x09));
    xmlParseCommentComplex(ctxt, buf, len, size);
    ctxt->instate = state;
    return;
}
# 5023 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
const xmlChar *
xmlParsePITarget__internal_alias(xmlParserCtxtPtr ctxt) {
    const xmlChar *name;

    name = xmlParseName__internal_alias(ctxt);
    if ((name != 
# 5028 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 5028 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) &&
        ((name[0] == 'x') || (name[0] == 'X')) &&
        ((name[1] == 'm') || (name[1] == 'M')) &&
        ((name[2] == 'l') || (name[2] == 'L'))) {
 int i;
 if ((name[0] == 'x') && (name[1] == 'm') &&
     (name[2] == 'l') && (name[3] == 0)) {
     xmlFatalErrMsg(ctxt, XML_ERR_RESERVED_XML_NAME,
   "XML declaration allowed only at the start of the document\n");
     return(name);
 } else if (name[3] == 0) {
     xmlFatalErr(ctxt, XML_ERR_RESERVED_XML_NAME, 
# 5039 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                 ((void *)0)
# 5039 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                     );
     return(name);
 }
 for (i = 0;;i++) {
     if (xmlW3CPIs[i] == 
# 5043 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 5043 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ) break;
     if (xmlStrEqual__internal_alias(name, (const xmlChar *)xmlW3CPIs[i]))
         return(name);
 }
 xmlWarningMsg(ctxt, XML_ERR_RESERVED_XML_NAME,
        "xmlParsePITarget: invalid name prefix 'xml'\n",
        
# 5049 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 5049 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           , 
# 5049 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 5049 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 );
    }
    if ((name != 
# 5051 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 5051 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) && (xmlStrchr__internal_alias(name, ':') != 
# 5051 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                  ((void *)0)
# 5051 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                      )) {
 xmlNsErr(ctxt, XML_NS_ERR_COLON,
   "colon are forbidden from PI names '%s'\n", name, 
# 5053 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                    ((void *)0)
# 5053 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                        , 
# 5053 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                          ((void *)0)
# 5053 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                              );
    }
    return(name);
}
# 5074 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void
xmlParseCatalogPI(xmlParserCtxtPtr ctxt, const xmlChar *catalog) {
    xmlChar *URL = 
# 5076 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 5076 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ;
    const xmlChar *tmp, *base;
    xmlChar marker;

    tmp = catalog;
    while ((((*tmp) == 0x20) || ((0x9 <= (*tmp)) && ((*tmp) <= 0xa)) || ((*tmp) == 0xd))) tmp++;
    if (xmlStrncmp__internal_alias(tmp, (xmlChar *)"catalog", 7))
 goto error;
    tmp += 7;
    while ((((*tmp) == 0x20) || ((0x9 <= (*tmp)) && ((*tmp) <= 0xa)) || ((*tmp) == 0xd))) tmp++;
    if (*tmp != '=') {
 return;
    }
    tmp++;
    while ((((*tmp) == 0x20) || ((0x9 <= (*tmp)) && ((*tmp) <= 0xa)) || ((*tmp) == 0xd))) tmp++;
    marker = *tmp;
    if ((marker != '\'') && (marker != '"'))
 goto error;
    tmp++;
    base = tmp;
    while ((*tmp != 0) && (*tmp != marker)) tmp++;
    if (*tmp == 0)
 goto error;
    URL = xmlStrndup__internal_alias(base, tmp - base);
    tmp++;
    while ((((*tmp) == 0x20) || ((0x9 <= (*tmp)) && ((*tmp) <= 0xa)) || ((*tmp) == 0xd))) tmp++;
    if (*tmp != 0)
 goto error;

    if (URL != 
# 5105 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 5105 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
 ctxt->catalogs = xmlCatalogAddLocal__internal_alias(ctxt->catalogs, URL);
 xmlFree(URL);
    }
    return;

error:
    xmlWarningMsg(ctxt, XML_WAR_CATALOG_PI,
           "Catalog PI syntax error: %s\n",
    catalog, 
# 5114 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 5114 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                );
    if (URL != 
# 5115 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 5115 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
 xmlFree(URL);
}
# 5131 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlParsePI__internal_alias(xmlParserCtxtPtr ctxt) {
    xmlChar *buf = 
# 5133 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 5133 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ;
    size_t len = 0;
    size_t size = 100;
    int cur, l;
    const xmlChar *target;
    xmlParserInputState state;
    int count = 0;

    if (((*ctxt->input->cur) == '<') && (ctxt->input->cur[(1)] == '?')) {
 xmlParserInputPtr input = ctxt->input;
 state = ctxt->instate;
        ctxt->instate = XML_PARSER_PI;



 do { ctxt->nbChars += (2),ctxt->input->cur += (2),ctxt->input->col+=(2); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;





        target = xmlParsePITarget__internal_alias(ctxt);
 if (target != 
# 5156 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 5156 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
     if (((*ctxt->input->cur) == '?') && (ctxt->input->cur[(1)] == '>')) {
  if (input != ctxt->input) {
      xmlFatalErrMsg(ctxt, XML_ERR_ENTITY_BOUNDARY,
     "PI declaration doesn't start and stop in the same entity\n");
  }
  do { ctxt->nbChars += (2),ctxt->input->cur += (2),ctxt->input->col+=(2); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);




  if ((ctxt->sax) && (!ctxt->disableSAX) &&
      (ctxt->sax->processingInstruction != 
# 5168 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                          ((void *)0)
# 5168 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                              ))
      ctxt->sax->processingInstruction(ctxt->userData,
                                       target, 
# 5170 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                              ((void *)0)
# 5170 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                  );
  if (ctxt->instate != XML_PARSER_EOF)
      ctxt->instate = state;
  return;
     }
     buf = (xmlChar *) xmlMallocAtomic(size * sizeof(xmlChar));
     if (buf == 
# 5176 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 5176 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
  xmlErrMemory__internal_alias(ctxt, 
# 5177 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 5177 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        );
  ctxt->instate = state;
  return;
     }
     cur = (*ctxt->input->cur);
     if (!(((cur) < 0x100) ? ((((cur)) == 0x20) || ((0x9 <= ((cur))) && (((cur)) <= 0xa)) || (((cur)) == 0xd)) : 0)) {
  xmlFatalErrMsgStr(ctxt, XML_ERR_SPACE_REQUIRED,
     "ParsePI: PI %s space expected\n", target);
     }
            xmlSkipBlankChars__internal_alias(ctxt);
     cur = xmlCurrentChar__internal_alias(ctxt, &l);
     while ((((cur) < 0x100) ? (((0x9 <= ((cur))) && (((cur)) <= 0xa)) || (((cur)) == 0xd) || (0x20 <= ((cur)))) : (((0x100 <= (cur)) && ((cur) <= 0xd7ff)) || ((0xe000 <= (cur)) && ((cur) <= 0xfffd)) || ((0x10000 <= (cur)) && ((cur) <= 0x10ffff)))) &&
     ((cur != '?') || (ctxt->input->cur[(1)] != '>'))) {
  if (len + 5 >= size) {
      xmlChar *tmp;
                    size_t new_size = size * 2;
      tmp = (xmlChar *) xmlRealloc(buf, new_size);
      if (tmp == 
# 5194 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 5194 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
   xmlErrMemory__internal_alias(ctxt, 
# 5195 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 5195 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         );
   xmlFree(buf);
   ctxt->instate = state;
   return;
      }
      buf = tmp;
                    size = new_size;
  }
  count++;
  if (count > 50) {
      if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
                    if (ctxt->instate == XML_PARSER_EOF) {
                        xmlFree(buf);
                        return;
                    }
      count = 0;
                    if ((len > 10000000) &&
                        ((ctxt->options & XML_PARSE_HUGE) == 0)) {
                        xmlFatalErrMsgStr(ctxt, XML_ERR_PI_NOT_FINISHED,
                                          "PI %s too big found", target);
                        xmlFree(buf);
                        ctxt->instate = state;
                        return;
                    }
  }
  if (l == 1) buf[len++] = (xmlChar) cur; else len += xmlCopyCharMultiByte__internal_alias(&buf[len],cur);
  do { if (*(ctxt->input->cur) == '\n') { ctxt->input->line++; ctxt->input->col = 1; } else ctxt->input->col++; ctxt->input->cur += l; if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); } while (0);
  cur = xmlCurrentChar__internal_alias(ctxt, &l);
  if (cur == 0) {
      if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;
      if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
      cur = xmlCurrentChar__internal_alias(ctxt, &l);
  }
     }
            if ((len > 10000000) &&
                ((ctxt->options & XML_PARSE_HUGE) == 0)) {
                xmlFatalErrMsgStr(ctxt, XML_ERR_PI_NOT_FINISHED,
                                  "PI %s too big found", target);
                xmlFree(buf);
                ctxt->instate = state;
                return;
            }
     buf[len] = 0;
     if (cur != '?') {
  xmlFatalErrMsgStr(ctxt, XML_ERR_PI_NOT_FINISHED,
        "ParsePI: PI %s never end ...\n", target);
     } else {
  if (input != ctxt->input) {
      xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
     "PI declaration doesn't start and stop in the same entity\n");
  }
  do { ctxt->nbChars += (2),ctxt->input->cur += (2),ctxt->input->col+=(2); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);


  if (((state == XML_PARSER_MISC) ||
              (state == XML_PARSER_START)) &&
      (xmlStrEqual__internal_alias(target, (const xmlChar *) "oasis-xml-catalog"))) {
      xmlCatalogAllow allow = xmlCatalogGetDefaults__internal_alias();
      if ((allow == XML_CATA_ALLOW_DOCUMENT) ||
   (allow == XML_CATA_ALLOW_ALL))
   xmlParseCatalogPI(ctxt, buf);
  }






  if ((ctxt->sax) && (!ctxt->disableSAX) &&
      (ctxt->sax->processingInstruction != 
# 5264 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                          ((void *)0)
# 5264 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                              ))
      ctxt->sax->processingInstruction(ctxt->userData,
                                       target, buf);
     }
     xmlFree(buf);
 } else {
     xmlFatalErr(ctxt, XML_ERR_PI_NOT_STARTED, 
# 5270 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                              ((void *)0)
# 5270 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                  );
 }
 if (ctxt->instate != XML_PARSER_EOF)
     ctxt->instate = state;
    }
}
# 5293 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlParseNotationDecl__internal_alias(xmlParserCtxtPtr ctxt) {
    const xmlChar *name;
    xmlChar *Pubid;
    xmlChar *Systemid;

    if (( ( ( ( ( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == '<' && ((unsigned char *) ctxt->input->cur)[ 1 ] == '!' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'N' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'O' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'T' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'A' ) && ((unsigned char *) ctxt->input->cur)[ 6 ] == 'T' ) && ((unsigned char *) ctxt->input->cur)[ 7 ] == 'I' ) && ((unsigned char *) ctxt->input->cur)[ 8 ] == 'O' ) && ((unsigned char *) ctxt->input->cur)[ 9 ] == 'N' )) {
 xmlParserInputPtr input = ctxt->input;
 if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;
 do { ctxt->nbChars += (10),ctxt->input->cur += (10),ctxt->input->col+=(10); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 if (!((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd))) {
     xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
      "Space required after '<!NOTATION'\n");
     return;
 }
 xmlSkipBlankChars__internal_alias(ctxt);

        name = xmlParseName__internal_alias(ctxt);
 if (name == 
# 5311 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 5311 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ) {
     xmlFatalErr(ctxt, XML_ERR_NOTATION_NOT_STARTED, 
# 5312 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                    ((void *)0)
# 5312 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                        );
     return;
 }
 if (!((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd))) {
     xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
       "Space required after the NOTATION name'\n");
     return;
 }
 if (xmlStrchr__internal_alias(name, ':') != 
# 5320 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 5320 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                ) {
     xmlNsErr(ctxt, XML_NS_ERR_COLON,
       "colon are forbidden from notation names '%s'\n",
       name, 
# 5323 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 5323 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                , 
# 5323 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 5323 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      );
 }
 xmlSkipBlankChars__internal_alias(ctxt);




 Systemid = xmlParseExternalID__internal_alias(ctxt, &Pubid, 0);
 xmlSkipBlankChars__internal_alias(ctxt);

 if ((*ctxt->input->cur) == '>') {
     if (input != ctxt->input) {
  xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
 "Notation declaration doesn't start and stop in the same entity\n");
     }
     xmlNextChar__internal_alias(ctxt);
     if ((ctxt->sax != 
# 5339 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 5339 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) && (!ctxt->disableSAX) &&
  (ctxt->sax->notationDecl != 
# 5340 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                             ((void *)0)
# 5340 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                 ))
  ctxt->sax->notationDecl(ctxt->userData, name, Pubid, Systemid);
 } else {
     xmlFatalErr(ctxt, XML_ERR_NOTATION_NOT_FINISHED, 
# 5343 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                     ((void *)0)
# 5343 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                         );
 }
 if (Systemid != 
# 5345 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 5345 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) xmlFree(Systemid);
 if (Pubid != 
# 5346 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 5346 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ) xmlFree(Pubid);
    }
}
# 5372 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlParseEntityDecl__internal_alias(xmlParserCtxtPtr ctxt) {
    const xmlChar *name = 
# 5374 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 5374 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             ;
    xmlChar *value = 
# 5375 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 5375 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ;
    xmlChar *URI = 
# 5376 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 5376 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      , *literal = 
# 5376 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                   ((void *)0)
# 5376 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                       ;
    const xmlChar *ndata = 
# 5377 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 5377 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              ;
    int isParameter = 0;
    xmlChar *orig = 
# 5379 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 5379 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ;
    int skipped;


    if (( ( ( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == '<' && ((unsigned char *) ctxt->input->cur)[ 1 ] == '!' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'E' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'N' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'T' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'I' ) && ((unsigned char *) ctxt->input->cur)[ 6 ] == 'T' ) && ((unsigned char *) ctxt->input->cur)[ 7 ] == 'Y' )) {
 xmlParserInputPtr input = ctxt->input;
 if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;
 do { ctxt->nbChars += (8),ctxt->input->cur += (8),ctxt->input->col+=(8); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 skipped = xmlSkipBlankChars__internal_alias(ctxt);
 if (skipped == 0) {
     xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
      "Space required after '<!ENTITY'\n");
 }

 if ((*ctxt->input->cur) == '%') {
     xmlNextChar__internal_alias(ctxt);
     skipped = xmlSkipBlankChars__internal_alias(ctxt);
     if (skipped == 0) {
  xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
          "Space required after '%'\n");
     }
     isParameter = 1;
 }

        name = xmlParseName__internal_alias(ctxt);
 if (name == 
# 5404 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 5404 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ) {
     xmlFatalErrMsg(ctxt, XML_ERR_NAME_REQUIRED,
                    "xmlParseEntityDecl: no name\n");
            return;
 }
 if (xmlStrchr__internal_alias(name, ':') != 
# 5409 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 5409 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                ) {
     xmlNsErr(ctxt, XML_NS_ERR_COLON,
       "colon are forbidden from entities names '%s'\n",
       name, 
# 5412 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 5412 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                , 
# 5412 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 5412 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      );
 }
        skipped = xmlSkipBlankChars__internal_alias(ctxt);
 if (skipped == 0) {
     xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
      "Space required after the entity name\n");
 }

 ctxt->instate = XML_PARSER_ENTITY_DECL;



 if (isParameter) {
     if (((*ctxt->input->cur) == '"') || ((*ctxt->input->cur) == '\'')) {
         value = xmlParseEntityValue__internal_alias(ctxt, &orig);
  if (value) {
      if ((ctxt->sax != 
# 5428 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 5428 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ) &&
   (!ctxt->disableSAX) && (ctxt->sax->entityDecl != 
# 5429 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                   ((void *)0)
# 5429 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                       ))
   ctxt->sax->entityDecl(ctxt->userData, name,
                      XML_INTERNAL_PARAMETER_ENTITY,
        
# 5432 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 5432 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           , 
# 5432 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 5432 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 , value);
  }
     } else {
         URI = xmlParseExternalID__internal_alias(ctxt, &literal, 1);
  if ((URI == 
# 5436 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 5436 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ) && (literal == 
# 5436 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                  ((void *)0)
# 5436 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                      )) {
      xmlFatalErr(ctxt, XML_ERR_VALUE_REQUIRED, 
# 5437 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 5437 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   );
  }
  if (URI) {
      xmlURIPtr uri;

      uri = xmlParseURI__internal_alias((const char *) URI);
      if (uri == 
# 5443 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 5443 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
          xmlErrMsgStr(ctxt, XML_ERR_INVALID_URI,
         "Invalid URI: %s\n", URI);





      } else {
   if (uri->fragment != 
# 5452 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 5452 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ) {




       xmlFatalErr(ctxt, XML_ERR_URI_FRAGMENT, 
# 5457 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                              ((void *)0)
# 5457 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                  );
   } else {
       if ((ctxt->sax != 
# 5459 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 5459 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ) &&
    (!ctxt->disableSAX) &&
    (ctxt->sax->entityDecl != 
# 5461 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                             ((void *)0)
# 5461 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                 ))
    ctxt->sax->entityDecl(ctxt->userData, name,
         XML_EXTERNAL_PARAMETER_ENTITY,
         literal, URI, 
# 5464 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 5464 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          );
   }
   xmlFreeURI__internal_alias(uri);
      }
  }
     }
 } else {
     if (((*ctxt->input->cur) == '"') || ((*ctxt->input->cur) == '\'')) {
         value = xmlParseEntityValue__internal_alias(ctxt, &orig);
  if ((ctxt->sax != 
# 5473 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 5473 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) &&
      (!ctxt->disableSAX) && (ctxt->sax->entityDecl != 
# 5474 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                      ((void *)0)
# 5474 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                          ))
      ctxt->sax->entityDecl(ctxt->userData, name,
    XML_INTERNAL_GENERAL_ENTITY,
    
# 5477 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
   ((void *)0)
# 5477 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
       , 
# 5477 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
         ((void *)0)
# 5477 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
             , value);



  if ((ctxt->myDoc == 
# 5481 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 5481 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) ||
      (xmlStrEqual__internal_alias(ctxt->myDoc->version, (xmlChar *) "SAX compatibility mode document"))) {
      if (ctxt->myDoc == 
# 5483 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 5483 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ) {
   ctxt->myDoc = xmlNewDoc__internal_alias((xmlChar *) "SAX compatibility mode document");
   if (ctxt->myDoc == 
# 5485 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 5485 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) {
       xmlErrMemory__internal_alias(ctxt, "New Doc failed");
       return;
   }
   ctxt->myDoc->properties = XML_DOC_INTERNAL;
      }
      if (ctxt->myDoc->intSubset == 
# 5491 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                   ((void *)0)
# 5491 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                       )
   ctxt->myDoc->intSubset = xmlNewDtd__internal_alias(ctxt->myDoc,
         (xmlChar *) "fake", 
# 5493 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 5493 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             , 
# 5493 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                               ((void *)0)
# 5493 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                   );

      xmlSAX2EntityDecl__internal_alias(ctxt, name, XML_INTERNAL_GENERAL_ENTITY,
                 
# 5496 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 5496 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    , 
# 5496 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 5496 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          , value);
  }
     } else {
         URI = xmlParseExternalID__internal_alias(ctxt, &literal, 1);
  if ((URI == 
# 5500 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 5500 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ) && (literal == 
# 5500 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                  ((void *)0)
# 5500 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                      )) {
      xmlFatalErr(ctxt, XML_ERR_VALUE_REQUIRED, 
# 5501 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 5501 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   );
  }
  if (URI) {
      xmlURIPtr uri;

      uri = xmlParseURI__internal_alias((const char *)URI);
      if (uri == 
# 5507 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 5507 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
          xmlErrMsgStr(ctxt, XML_ERR_INVALID_URI,
         "Invalid URI: %s\n", URI);





      } else {
   if (uri->fragment != 
# 5516 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 5516 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ) {




       xmlFatalErr(ctxt, XML_ERR_URI_FRAGMENT, 
# 5521 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                              ((void *)0)
# 5521 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                  );
   }
   xmlFreeURI__internal_alias(uri);
      }
  }
  if (((*ctxt->input->cur) != '>') && (!((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd)))) {
      xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
       "Space required before 'NDATA'\n");
  }
  xmlSkipBlankChars__internal_alias(ctxt);
  if (( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == 'N' && ((unsigned char *) ctxt->input->cur)[ 1 ] == 'D' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'A' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'T' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'A' )) {
      do { ctxt->nbChars += (5),ctxt->input->cur += (5),ctxt->input->col+=(5); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
      if (!((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd))) {
   xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
           "Space required after 'NDATA'\n");
      }
      xmlSkipBlankChars__internal_alias(ctxt);
      ndata = xmlParseName__internal_alias(ctxt);
      if ((ctxt->sax != 
# 5539 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 5539 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ) && (!ctxt->disableSAX) &&
          (ctxt->sax->unparsedEntityDecl != 
# 5540 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                           ((void *)0)
# 5540 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                               ))
   ctxt->sax->unparsedEntityDecl(ctxt->userData, name,
        literal, URI, ndata);
  } else {
      if ((ctxt->sax != 
# 5544 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 5544 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ) &&
          (!ctxt->disableSAX) && (ctxt->sax->entityDecl != 
# 5545 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                          ((void *)0)
# 5545 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                              ))
   ctxt->sax->entityDecl(ctxt->userData, name,
        XML_EXTERNAL_GENERAL_PARSED_ENTITY,
        literal, URI, 
# 5548 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 5548 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         );




      if ((ctxt->replaceEntities != 0) &&
   ((ctxt->myDoc == 
# 5554 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 5554 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) ||
   (xmlStrEqual__internal_alias(ctxt->myDoc->version, (xmlChar *) "SAX compatibility mode document")))) {
   if (ctxt->myDoc == 
# 5556 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 5556 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) {
       ctxt->myDoc = xmlNewDoc__internal_alias((xmlChar *) "SAX compatibility mode document");
       if (ctxt->myDoc == 
# 5558 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 5558 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             ) {
           xmlErrMemory__internal_alias(ctxt, "New Doc failed");
    return;
       }
       ctxt->myDoc->properties = XML_DOC_INTERNAL;
   }

   if (ctxt->myDoc->intSubset == 
# 5565 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                ((void *)0)
# 5565 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                    )
       ctxt->myDoc->intSubset = xmlNewDtd__internal_alias(ctxt->myDoc,
      (xmlChar *) "fake", 
# 5567 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 5567 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          , 
# 5567 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 5567 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                );
   xmlSAX2EntityDecl__internal_alias(ctxt, name,
              XML_EXTERNAL_GENERAL_PARSED_ENTITY,
              literal, URI, 
# 5570 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 5570 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               );
      }
  }
     }
 }
 xmlSkipBlankChars__internal_alias(ctxt);
 if ((*ctxt->input->cur) != '>') {
     xmlFatalErrMsgStr(ctxt, XML_ERR_ENTITY_NOT_FINISHED,
             "xmlParseEntityDecl: entity %s not terminated\n", name);
 } else {
     if (input != ctxt->input) {
  xmlFatalErrMsg(ctxt, XML_ERR_ENTITY_BOUNDARY,
 "Entity declaration doesn't start and stop in the same entity\n");
     }
     xmlNextChar__internal_alias(ctxt);
 }
 if (orig != 
# 5586 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 5586 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ) {



     xmlEntityPtr cur = 
# 5590 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 5590 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ;

     if (isParameter) {
         if ((ctxt->sax != 
# 5593 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 5593 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              ) &&
      (ctxt->sax->getParameterEntity != 
# 5594 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                       ((void *)0)
# 5594 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                           ))
      cur = ctxt->sax->getParameterEntity(ctxt->userData, name);
     } else {
         if ((ctxt->sax != 
# 5597 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 5597 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              ) &&
      (ctxt->sax->getEntity != 
# 5598 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                              ((void *)0)
# 5598 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                  ))
      cur = ctxt->sax->getEntity(ctxt->userData, name);
  if ((cur == 
# 5600 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 5600 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ) && (ctxt->userData==ctxt)) {
      cur = xmlSAX2GetEntity__internal_alias(ctxt, name);
  }
     }
            if (cur != 
# 5604 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 5604 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) {
         if (cur->orig != 
# 5605 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 5605 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             )
      xmlFree(orig);
  else
      cur->orig = orig;
     } else
  xmlFree(orig);
 }
 if (value != 
# 5612 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 5612 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ) xmlFree(value);
 if (URI != 
# 5613 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 5613 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               ) xmlFree(URI);
 if (literal != 
# 5614 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 5614 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) xmlFree(literal);
    }
}
# 5647 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int
xmlParseDefaultDecl__internal_alias(xmlParserCtxtPtr ctxt, xmlChar **value) {
    int val;
    xmlChar *ret;

    *value = 
# 5652 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 5652 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ;
    if (( ( ( ( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == '#' && ((unsigned char *) ctxt->input->cur)[ 1 ] == 'R' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'E' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'Q' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'U' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'I' ) && ((unsigned char *) ctxt->input->cur)[ 6 ] == 'R' ) && ((unsigned char *) ctxt->input->cur)[ 7 ] == 'E' ) && ((unsigned char *) ctxt->input->cur)[ 8 ] == 'D' )) {
 do { ctxt->nbChars += (9),ctxt->input->cur += (9),ctxt->input->col+=(9); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 return(XML_ATTRIBUTE_REQUIRED);
    }
    if (( ( ( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == '#' && ((unsigned char *) ctxt->input->cur)[ 1 ] == 'I' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'M' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'P' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'L' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'I' ) && ((unsigned char *) ctxt->input->cur)[ 6 ] == 'E' ) && ((unsigned char *) ctxt->input->cur)[ 7 ] == 'D' )) {
 do { ctxt->nbChars += (8),ctxt->input->cur += (8),ctxt->input->col+=(8); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 return(XML_ATTRIBUTE_IMPLIED);
    }
    val = XML_ATTRIBUTE_NONE;
    if (( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == '#' && ((unsigned char *) ctxt->input->cur)[ 1 ] == 'F' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'I' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'X' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'E' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'D' )) {
 do { ctxt->nbChars += (6),ctxt->input->cur += (6),ctxt->input->col+=(6); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 val = XML_ATTRIBUTE_FIXED;
 if (!((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd))) {
     xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
      "Space required after '#FIXED'\n");
 }
 xmlSkipBlankChars__internal_alias(ctxt);
    }
    ret = xmlParseAttValue__internal_alias(ctxt);
    ctxt->instate = XML_PARSER_DTD;
    if (ret == 
# 5673 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 5673 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
 xmlFatalErrMsg(ctxt, (xmlParserErrors)ctxt->errNo,
         "Attribute default value declaration error\n");
    } else
        *value = ret;
    return(val);
}
# 5698 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlEnumerationPtr
xmlParseNotationType__internal_alias(xmlParserCtxtPtr ctxt) {
    const xmlChar *name;
    xmlEnumerationPtr ret = 
# 5701 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 5701 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               , last = 
# 5701 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                        ((void *)0)
# 5701 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                            , cur, tmp;

    if ((*ctxt->input->cur) != '(') {
 xmlFatalErr(ctxt, XML_ERR_NOTATION_NOT_STARTED, 
# 5704 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                ((void *)0)
# 5704 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                    );
 return(
# 5705 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 5705 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;
    do {
        xmlNextChar__internal_alias(ctxt);
 xmlSkipBlankChars__internal_alias(ctxt);
        name = xmlParseName__internal_alias(ctxt);
 if (name == 
# 5712 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 5712 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ) {
     xmlFatalErrMsg(ctxt, XML_ERR_NAME_REQUIRED,
      "Name expected in NOTATION declaration\n");
            xmlFreeEnumeration__internal_alias(ret);
     return(
# 5716 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 5716 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               );
 }
 tmp = ret;
 while (tmp != 
# 5719 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 5719 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
     if (xmlStrEqual__internal_alias(name, tmp->name)) {
  xmlValidityError(ctxt, XML_DTD_DUP_TOKEN,
   "standalone: attribute notation value token %s duplicated\n",
     name, 
# 5723 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
          ((void *)0)
# 5723 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
              );
  if (!xmlDictOwns__internal_alias(ctxt->dict, name))
      xmlFree((xmlChar *) name);
  break;
     }
     tmp = tmp->next;
 }
 if (tmp == 
# 5730 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 5730 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               ) {
     cur = xmlCreateEnumeration__internal_alias(name);
     if (cur == 
# 5732 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 5732 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
                xmlFreeEnumeration__internal_alias(ret);
                return(
# 5734 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 5734 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          );
            }
     if (last == 
# 5736 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 5736 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) ret = last = cur;
     else {
  last->next = cur;
  last = cur;
     }
 }
 xmlSkipBlankChars__internal_alias(ctxt);
    } while ((*ctxt->input->cur) == '|');
    if ((*ctxt->input->cur) != ')') {
 xmlFatalErr(ctxt, XML_ERR_NOTATION_NOT_FINISHED, 
# 5745 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                 ((void *)0)
# 5745 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                     );
        xmlFreeEnumeration__internal_alias(ret);
 return(
# 5747 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 5747 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    xmlNextChar__internal_alias(ctxt);
    return(ret);
}
# 5768 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlEnumerationPtr
xmlParseEnumerationType__internal_alias(xmlParserCtxtPtr ctxt) {
    xmlChar *name;
    xmlEnumerationPtr ret = 
# 5771 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 5771 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               , last = 
# 5771 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                        ((void *)0)
# 5771 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                            , cur, tmp;

    if ((*ctxt->input->cur) != '(') {
 xmlFatalErr(ctxt, XML_ERR_ATTLIST_NOT_STARTED, 
# 5774 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 5774 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   );
 return(
# 5775 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 5775 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;
    do {
        xmlNextChar__internal_alias(ctxt);
 xmlSkipBlankChars__internal_alias(ctxt);
        name = xmlParseNmtoken__internal_alias(ctxt);
 if (name == 
# 5782 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 5782 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ) {
     xmlFatalErr(ctxt, XML_ERR_NMTOKEN_REQUIRED, 
# 5783 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                ((void *)0)
# 5783 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                    );
     return(ret);
 }
 tmp = ret;
 while (tmp != 
# 5787 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 5787 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
     if (xmlStrEqual__internal_alias(name, tmp->name)) {
  xmlValidityError(ctxt, XML_DTD_DUP_TOKEN,
   "standalone: attribute enumeration value token %s duplicated\n",
     name, 
# 5791 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
          ((void *)0)
# 5791 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
              );
  if (!xmlDictOwns__internal_alias(ctxt->dict, name))
      xmlFree(name);
  break;
     }
     tmp = tmp->next;
 }
 if (tmp == 
# 5798 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 5798 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               ) {
     cur = xmlCreateEnumeration__internal_alias(name);
     if (!xmlDictOwns__internal_alias(ctxt->dict, name))
  xmlFree(name);
     if (cur == 
# 5802 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 5802 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
                xmlFreeEnumeration__internal_alias(ret);
                return(
# 5804 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 5804 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          );
            }
     if (last == 
# 5806 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 5806 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) ret = last = cur;
     else {
  last->next = cur;
  last = cur;
     }
 }
 xmlSkipBlankChars__internal_alias(ctxt);
    } while ((*ctxt->input->cur) == '|');
    if ((*ctxt->input->cur) != ')') {
 xmlFatalErr(ctxt, XML_ERR_ATTLIST_NOT_FINISHED, 
# 5815 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                ((void *)0)
# 5815 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                    );
 return(ret);
    }
    xmlNextChar__internal_alias(ctxt);
    return(ret);
}
# 5837 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int
xmlParseEnumeratedType__internal_alias(xmlParserCtxtPtr ctxt, xmlEnumerationPtr *tree) {
    if (( ( ( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == 'N' && ((unsigned char *) ctxt->input->cur)[ 1 ] == 'O' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'T' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'A' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'T' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'I' ) && ((unsigned char *) ctxt->input->cur)[ 6 ] == 'O' ) && ((unsigned char *) ctxt->input->cur)[ 7 ] == 'N' )) {
 do { ctxt->nbChars += (8),ctxt->input->cur += (8),ctxt->input->col+=(8); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 if (!((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd))) {
     xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
      "Space required after 'NOTATION'\n");
     return(0);
 }
        xmlSkipBlankChars__internal_alias(ctxt);
 *tree = xmlParseNotationType__internal_alias(ctxt);
 if (*tree == 
# 5848 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 5848 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ) return(0);
 return(XML_ATTRIBUTE_NOTATION);
    }
    *tree = xmlParseEnumerationType__internal_alias(ctxt);
    if (*tree == 
# 5852 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 5852 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) return(0);
    return(XML_ATTRIBUTE_ENUMERATION);
}
# 5901 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int
xmlParseAttributeType__internal_alias(xmlParserCtxtPtr ctxt, xmlEnumerationPtr *tree) {
    if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;
    if (( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == 'C' && ((unsigned char *) ctxt->input->cur)[ 1 ] == 'D' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'A' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'T' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'A' )) {
 do { ctxt->nbChars += (5),ctxt->input->cur += (5),ctxt->input->col+=(5); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 return(XML_ATTRIBUTE_CDATA);
     } else if (( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == 'I' && ((unsigned char *) ctxt->input->cur)[ 1 ] == 'D' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'R' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'E' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'F' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'S' )) {
 do { ctxt->nbChars += (6),ctxt->input->cur += (6),ctxt->input->col+=(6); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 return(XML_ATTRIBUTE_IDREFS);
     } else if (( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == 'I' && ((unsigned char *) ctxt->input->cur)[ 1 ] == 'D' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'R' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'E' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'F' )) {
 do { ctxt->nbChars += (5),ctxt->input->cur += (5),ctxt->input->col+=(5); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 return(XML_ATTRIBUTE_IDREF);
     } else if (((*ctxt->input->cur) == 'I') && (ctxt->input->cur[(1)] == 'D')) {
        do { ctxt->nbChars += (2),ctxt->input->cur += (2),ctxt->input->col+=(2); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 return(XML_ATTRIBUTE_ID);
     } else if (( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == 'E' && ((unsigned char *) ctxt->input->cur)[ 1 ] == 'N' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'T' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'I' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'T' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'Y' )) {
 do { ctxt->nbChars += (6),ctxt->input->cur += (6),ctxt->input->col+=(6); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 return(XML_ATTRIBUTE_ENTITY);
     } else if (( ( ( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == 'E' && ((unsigned char *) ctxt->input->cur)[ 1 ] == 'N' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'T' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'I' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'T' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'I' ) && ((unsigned char *) ctxt->input->cur)[ 6 ] == 'E' ) && ((unsigned char *) ctxt->input->cur)[ 7 ] == 'S' )) {
 do { ctxt->nbChars += (8),ctxt->input->cur += (8),ctxt->input->col+=(8); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 return(XML_ATTRIBUTE_ENTITIES);
     } else if (( ( ( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == 'N' && ((unsigned char *) ctxt->input->cur)[ 1 ] == 'M' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'T' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'O' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'K' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'E' ) && ((unsigned char *) ctxt->input->cur)[ 6 ] == 'N' ) && ((unsigned char *) ctxt->input->cur)[ 7 ] == 'S' )) {
 do { ctxt->nbChars += (8),ctxt->input->cur += (8),ctxt->input->col+=(8); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 return(XML_ATTRIBUTE_NMTOKENS);
     } else if (( ( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == 'N' && ((unsigned char *) ctxt->input->cur)[ 1 ] == 'M' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'T' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'O' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'K' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'E' ) && ((unsigned char *) ctxt->input->cur)[ 6 ] == 'N' )) {
 do { ctxt->nbChars += (7),ctxt->input->cur += (7),ctxt->input->col+=(7); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 return(XML_ATTRIBUTE_NMTOKEN);
     }
     return(xmlParseEnumeratedType__internal_alias(ctxt, tree));
}
# 5943 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlParseAttributeListDecl__internal_alias(xmlParserCtxtPtr ctxt) {
    const xmlChar *elemName;
    const xmlChar *attrName;
    xmlEnumerationPtr tree;

    if (( ( ( ( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == '<' && ((unsigned char *) ctxt->input->cur)[ 1 ] == '!' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'A' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'T' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'T' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'L' ) && ((unsigned char *) ctxt->input->cur)[ 6 ] == 'I' ) && ((unsigned char *) ctxt->input->cur)[ 7 ] == 'S' ) && ((unsigned char *) ctxt->input->cur)[ 8 ] == 'T' )) {
 xmlParserInputPtr input = ctxt->input;

 do { ctxt->nbChars += (9),ctxt->input->cur += (9),ctxt->input->col+=(9); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 if (!((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd))) {
     xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
                   "Space required after '<!ATTLIST'\n");
 }
        xmlSkipBlankChars__internal_alias(ctxt);
        elemName = xmlParseName__internal_alias(ctxt);
 if (elemName == 
# 5959 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 5959 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
     xmlFatalErrMsg(ctxt, XML_ERR_NAME_REQUIRED,
      "ATTLIST: no name for Element\n");
     return;
 }
 xmlSkipBlankChars__internal_alias(ctxt);
 if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
 while (((*ctxt->input->cur) != '>') && (ctxt->instate != XML_PARSER_EOF)) {
     const xmlChar *check = ctxt->input->cur;
     int type;
     int def;
     xmlChar *defaultValue = 
# 5970 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 5970 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                ;

     if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
            tree = 
# 5973 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 5973 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ;
     attrName = xmlParseName__internal_alias(ctxt);
     if (attrName == 
# 5975 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 5975 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ) {
  xmlFatalErrMsg(ctxt, XML_ERR_NAME_REQUIRED,
          "ATTLIST: no name for Attribute\n");
  break;
     }
     if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
     if (!((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd))) {
  xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
          "Space required after the attribute name\n");
  break;
     }
     xmlSkipBlankChars__internal_alias(ctxt);

     type = xmlParseAttributeType__internal_alias(ctxt, &tree);
     if (type <= 0) {
         break;
     }

     if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
     if (!((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd))) {
  xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
          "Space required after the attribute type\n");
         if (tree != 
# 5997 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 5997 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        )
      xmlFreeEnumeration__internal_alias(tree);
  break;
     }
     xmlSkipBlankChars__internal_alias(ctxt);

     def = xmlParseDefaultDecl__internal_alias(ctxt, &defaultValue);
     if (def <= 0) {
                if (defaultValue != 
# 6005 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                   ((void *)0)
# 6005 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                       )
      xmlFree(defaultValue);
         if (tree != 
# 6007 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 6007 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        )
      xmlFreeEnumeration__internal_alias(tree);
         break;
     }
     if ((type != XML_ATTRIBUTE_CDATA) && (defaultValue != 
# 6011 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                          ((void *)0)
# 6011 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                              ))
         xmlAttrNormalizeSpace(defaultValue, defaultValue);

     if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
            if ((*ctxt->input->cur) != '>') {
  if (!((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd))) {
      xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
   "Space required after the attribute default value\n");
      if (defaultValue != 
# 6019 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 6019 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             )
   xmlFree(defaultValue);
      if (tree != 
# 6021 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 6021 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     )
   xmlFreeEnumeration__internal_alias(tree);
      break;
  }
  xmlSkipBlankChars__internal_alias(ctxt);
     }
     if (check == ctxt->input->cur) {
  xmlFatalErr(ctxt, XML_ERR_INTERNAL_ERROR,
              "in xmlParseAttributeListDecl\n");
  if (defaultValue != 
# 6030 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 6030 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         )
      xmlFree(defaultValue);
         if (tree != 
# 6032 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 6032 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        )
      xmlFreeEnumeration__internal_alias(tree);
  break;
     }
     if ((ctxt->sax != 
# 6036 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 6036 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) && (!ctxt->disableSAX) &&
  (ctxt->sax->attributeDecl != 
# 6037 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                              ((void *)0)
# 6037 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                  ))
  ctxt->sax->attributeDecl(ctxt->userData, elemName, attrName,
                         type, def, defaultValue, tree);
     else if (tree != 
# 6040 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 6040 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         )
  xmlFreeEnumeration__internal_alias(tree);

     if ((ctxt->sax2) && (defaultValue != 
# 6043 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                         ((void *)0)
# 6043 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                             ) &&
         (def != XML_ATTRIBUTE_IMPLIED) &&
  (def != XML_ATTRIBUTE_REQUIRED)) {
  xmlAddDefAttrs(ctxt, elemName, attrName, defaultValue);
     }
     if (ctxt->sax2) {
  xmlAddSpecialAttr(ctxt, elemName, attrName, type);
     }
     if (defaultValue != 
# 6051 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 6051 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            )
         xmlFree(defaultValue);
     if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
 }
 if ((*ctxt->input->cur) == '>') {
     if (input != ctxt->input) {
  xmlValidityError(ctxt, XML_ERR_ENTITY_BOUNDARY,
    "Attribute list declaration doesn't start and stop in the same entity\n",
                                 
# 6059 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                ((void *)0)
# 6059 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                    , 
# 6059 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                      ((void *)0)
# 6059 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                          );
     }
     xmlNextChar__internal_alias(ctxt);
 }
    }
}
# 6085 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlElementContentPtr
xmlParseElementMixedContentDecl__internal_alias(xmlParserCtxtPtr ctxt, int inputchk) {
    xmlElementContentPtr ret = 
# 6087 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                              ((void *)0)
# 6087 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                  , cur = 
# 6087 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                          ((void *)0)
# 6087 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                              , n;
    const xmlChar *elem = 
# 6088 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 6088 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             ;

    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    if (( ( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == '#' && ((unsigned char *) ctxt->input->cur)[ 1 ] == 'P' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'C' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'D' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'A' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'T' ) && ((unsigned char *) ctxt->input->cur)[ 6 ] == 'A' )) {
 do { ctxt->nbChars += (7),ctxt->input->cur += (7),ctxt->input->col+=(7); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 xmlSkipBlankChars__internal_alias(ctxt);
 if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;
 if ((*ctxt->input->cur) == ')') {
     if ((ctxt->validate) && (ctxt->input->id != inputchk)) {
  xmlValidityError(ctxt, XML_ERR_ENTITY_BOUNDARY,
"Element content declaration doesn't start and stop in the same entity\n",
                                 
# 6099 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                ((void *)0)
# 6099 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                    , 
# 6099 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                      ((void *)0)
# 6099 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                          );
     }
     xmlNextChar__internal_alias(ctxt);
     ret = xmlNewDocElementContent__internal_alias(ctxt->myDoc, 
# 6102 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 6102 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   , XML_ELEMENT_CONTENT_PCDATA);
     if (ret == 
# 6103 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 6103 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
         return(
# 6104 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 6104 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
     if ((*ctxt->input->cur) == '*') {
  ret->ocur = XML_ELEMENT_CONTENT_MULT;
  xmlNextChar__internal_alias(ctxt);
     }
     return(ret);
 }
 if (((*ctxt->input->cur) == '(') || ((*ctxt->input->cur) == '|')) {
     ret = cur = xmlNewDocElementContent__internal_alias(ctxt->myDoc, 
# 6112 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                     ((void *)0)
# 6112 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                         , XML_ELEMENT_CONTENT_PCDATA);
     if (ret == 
# 6113 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 6113 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) return(
# 6113 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 6113 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                );
 }
 while (((*ctxt->input->cur) == '|') && (ctxt->instate != XML_PARSER_EOF)) {
     xmlNextChar__internal_alias(ctxt);
     if (elem == 
# 6117 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 6117 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
         ret = xmlNewDocElementContent__internal_alias(ctxt->myDoc, 
# 6118 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                   ((void *)0)
# 6118 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                       , XML_ELEMENT_CONTENT_OR);
  if (ret == 
# 6119 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 6119 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ) return(
# 6119 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 6119 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             );
  ret->c1 = cur;
  if (cur != 
# 6121 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 6121 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                )
      cur->parent = ret;
  cur = ret;
     } else {
         n = xmlNewDocElementContent__internal_alias(ctxt->myDoc, 
# 6125 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                 ((void *)0)
# 6125 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                     , XML_ELEMENT_CONTENT_OR);
  if (n == 
# 6126 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
          ((void *)0)
# 6126 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
              ) return(
# 6126 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 6126 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           );
  n->c1 = xmlNewDocElementContent__internal_alias(ctxt->myDoc, elem, XML_ELEMENT_CONTENT_ELEMENT);
  if (n->c1 != 
# 6128 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 6128 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
      n->c1->parent = n;
         cur->c2 = n;
  if (n != 
# 6131 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
          ((void *)0)
# 6131 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
              )
      n->parent = cur;
  cur = n;
     }
     xmlSkipBlankChars__internal_alias(ctxt);
     elem = xmlParseName__internal_alias(ctxt);
     if (elem == 
# 6137 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 6137 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
  xmlFatalErrMsg(ctxt, XML_ERR_NAME_REQUIRED,
   "xmlParseElementMixedContentDecl : Name expected\n");
  xmlFreeDocElementContent__internal_alias(ctxt->myDoc, cur);
  return(
# 6141 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 6141 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
            );
     }
     xmlSkipBlankChars__internal_alias(ctxt);
     if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
 }
 if (((*ctxt->input->cur) == ')') && (ctxt->input->cur[(1)] == '*')) {
     if (elem != 
# 6147 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 6147 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
  cur->c2 = xmlNewDocElementContent__internal_alias(ctxt->myDoc, elem,
                                 XML_ELEMENT_CONTENT_ELEMENT);
  if (cur->c2 != 
# 6150 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 6150 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    )
      cur->c2->parent = cur;
            }
            if (ret != 
# 6153 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 6153 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          )
                ret->ocur = XML_ELEMENT_CONTENT_MULT;
     if ((ctxt->validate) && (ctxt->input->id != inputchk)) {
  xmlValidityError(ctxt, XML_ERR_ENTITY_BOUNDARY,
"Element content declaration doesn't start and stop in the same entity\n",
     
# 6158 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
    ((void *)0)
# 6158 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
        , 
# 6158 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
          ((void *)0)
# 6158 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
              );
     }
     do { ctxt->nbChars += (2),ctxt->input->cur += (2),ctxt->input->col+=(2); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 } else {
     xmlFreeDocElementContent__internal_alias(ctxt->myDoc, ret);
     xmlFatalErr(ctxt, XML_ERR_MIXED_NOT_STARTED, 
# 6163 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                 ((void *)0)
# 6163 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                     );
     return(
# 6164 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 6164 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               );
 }

    } else {
 xmlFatalErr(ctxt, XML_ERR_PCDATA_REQUIRED, 
# 6168 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                           ((void *)0)
# 6168 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                               );
    }
    return(ret);
}
# 6205 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static xmlElementContentPtr
xmlParseElementChildrenContentDeclPriv(xmlParserCtxtPtr ctxt, int inputchk,
                                       int depth) {
    xmlElementContentPtr ret = 
# 6208 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                              ((void *)0)
# 6208 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                  , cur = 
# 6208 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                          ((void *)0)
# 6208 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                              , last = 
# 6208 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                       ((void *)0)
# 6208 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                           , op = 
# 6208 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                                  ((void *)0)
# 6208 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                                      ;
    const xmlChar *elem;
    xmlChar type = 0;

    if (((depth > 128) && ((ctxt->options & XML_PARSE_HUGE) == 0)) ||
        (depth > 2048)) {
        xmlFatalErrMsgInt(ctxt, XML_ERR_ELEMCONTENT_NOT_FINISHED,
"xmlParseElementChildrenContentDecl : depth %d too deep, use XML_PARSE_HUGE\n",
                          depth);
 return(
# 6217 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 6217 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    xmlSkipBlankChars__internal_alias(ctxt);
    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    if ((*ctxt->input->cur) == '(') {
 int inputid = ctxt->input->id;


 xmlNextChar__internal_alias(ctxt);
 xmlSkipBlankChars__internal_alias(ctxt);
        cur = ret = xmlParseElementChildrenContentDeclPriv(ctxt, inputid,
                                                           depth + 1);
 xmlSkipBlankChars__internal_alias(ctxt);
 if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    } else {
 elem = xmlParseName__internal_alias(ctxt);
 if (elem == 
# 6233 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 6233 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ) {
     xmlFatalErr(ctxt, XML_ERR_ELEMCONTENT_NOT_STARTED, 
# 6234 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                       ((void *)0)
# 6234 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                           );
     return(
# 6235 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 6235 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               );
 }
        cur = ret = xmlNewDocElementContent__internal_alias(ctxt->myDoc, elem, XML_ELEMENT_CONTENT_ELEMENT);
 if (cur == 
# 6238 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 6238 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               ) {
     xmlErrMemory__internal_alias(ctxt, 
# 6239 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 6239 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           );
     return(
# 6240 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 6240 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               );
 }
 if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
 if ((*ctxt->input->cur) == '?') {
     cur->ocur = XML_ELEMENT_CONTENT_OPT;
     xmlNextChar__internal_alias(ctxt);
 } else if ((*ctxt->input->cur) == '*') {
     cur->ocur = XML_ELEMENT_CONTENT_MULT;
     xmlNextChar__internal_alias(ctxt);
 } else if ((*ctxt->input->cur) == '+') {
     cur->ocur = XML_ELEMENT_CONTENT_PLUS;
     xmlNextChar__internal_alias(ctxt);
 } else {
     cur->ocur = XML_ELEMENT_CONTENT_ONCE;
 }
 if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    }
    xmlSkipBlankChars__internal_alias(ctxt);
    if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;
    while (((*ctxt->input->cur) != ')') && (ctxt->instate != XML_PARSER_EOF)) {



        if ((*ctxt->input->cur) == ',') {
     if (type == 0) type = (*ctxt->input->cur);




     else if (type != (*ctxt->input->cur)) {
  xmlFatalErrMsgInt(ctxt, XML_ERR_SEPARATOR_REQUIRED,
      "xmlParseElementChildrenContentDecl : '%c' expected\n",
                    type);
  if ((last != 
# 6273 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 6273 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) && (last != ret))
      xmlFreeDocElementContent__internal_alias(ctxt->myDoc, last);
  if (ret != 
# 6275 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 6275 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                )
      xmlFreeDocElementContent__internal_alias(ctxt->myDoc, ret);
  return(
# 6277 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 6277 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
            );
     }
     xmlNextChar__internal_alias(ctxt);

     op = xmlNewDocElementContent__internal_alias(ctxt->myDoc, 
# 6281 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                              ((void *)0)
# 6281 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                  , XML_ELEMENT_CONTENT_SEQ);
     if (op == 
# 6282 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 6282 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
  if ((last != 
# 6283 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 6283 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) && (last != ret))
      xmlFreeDocElementContent__internal_alias(ctxt->myDoc, last);
         xmlFreeDocElementContent__internal_alias(ctxt->myDoc, ret);
  return(
# 6286 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 6286 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
            );
     }
     if (last == 
# 6288 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 6288 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
  op->c1 = ret;
  if (ret != 
# 6290 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 6290 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                )
      ret->parent = op;
  ret = cur = op;
     } else {
         cur->c2 = op;
  if (op != 
# 6295 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 6295 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               )
      op->parent = cur;
  op->c1 = last;
  if (last != 
# 6298 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 6298 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 )
      last->parent = op;
  cur =op;
  last = 
# 6301 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 6301 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
            ;
     }
 } else if ((*ctxt->input->cur) == '|') {
     if (type == 0) type = (*ctxt->input->cur);




     else if (type != (*ctxt->input->cur)) {
  xmlFatalErrMsgInt(ctxt, XML_ERR_SEPARATOR_REQUIRED,
      "xmlParseElementChildrenContentDecl : '%c' expected\n",
      type);
  if ((last != 
# 6313 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 6313 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) && (last != ret))
      xmlFreeDocElementContent__internal_alias(ctxt->myDoc, last);
  if (ret != 
# 6315 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 6315 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                )
      xmlFreeDocElementContent__internal_alias(ctxt->myDoc, ret);
  return(
# 6317 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 6317 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
            );
     }
     xmlNextChar__internal_alias(ctxt);

     op = xmlNewDocElementContent__internal_alias(ctxt->myDoc, 
# 6321 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                              ((void *)0)
# 6321 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                  , XML_ELEMENT_CONTENT_OR);
     if (op == 
# 6322 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 6322 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
  if ((last != 
# 6323 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 6323 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) && (last != ret))
      xmlFreeDocElementContent__internal_alias(ctxt->myDoc, last);
  if (ret != 
# 6325 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 6325 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                )
      xmlFreeDocElementContent__internal_alias(ctxt->myDoc, ret);
  return(
# 6327 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 6327 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
            );
     }
     if (last == 
# 6329 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 6329 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
  op->c1 = ret;
  if (ret != 
# 6331 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 6331 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                )
      ret->parent = op;
  ret = cur = op;
     } else {
         cur->c2 = op;
  if (op != 
# 6336 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 6336 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               )
      op->parent = cur;
  op->c1 = last;
  if (last != 
# 6339 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 6339 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 )
      last->parent = op;
  cur =op;
  last = 
# 6342 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 6342 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
            ;
     }
 } else {
     xmlFatalErr(ctxt, XML_ERR_ELEMCONTENT_NOT_FINISHED, 
# 6345 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                        ((void *)0)
# 6345 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                            );
     if ((last != 
# 6346 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 6346 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) && (last != ret))
         xmlFreeDocElementContent__internal_alias(ctxt->myDoc, last);
     if (ret != 
# 6348 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 6348 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
  xmlFreeDocElementContent__internal_alias(ctxt->myDoc, ret);
     return(
# 6350 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 6350 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               );
 }
 if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
 xmlSkipBlankChars__internal_alias(ctxt);
 if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
 if ((*ctxt->input->cur) == '(') {
     int inputid = ctxt->input->id;

     xmlNextChar__internal_alias(ctxt);
     xmlSkipBlankChars__internal_alias(ctxt);
     last = xmlParseElementChildrenContentDeclPriv(ctxt, inputid,
                                                          depth + 1);
     xmlSkipBlankChars__internal_alias(ctxt);
 } else {
     elem = xmlParseName__internal_alias(ctxt);
     if (elem == 
# 6365 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 6365 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
  xmlFatalErr(ctxt, XML_ERR_ELEMCONTENT_NOT_STARTED, 
# 6366 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                    ((void *)0)
# 6366 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                        );
  if (ret != 
# 6367 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 6367 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                )
      xmlFreeDocElementContent__internal_alias(ctxt->myDoc, ret);
  return(
# 6369 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 6369 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
            );
     }
     last = xmlNewDocElementContent__internal_alias(ctxt->myDoc, elem, XML_ELEMENT_CONTENT_ELEMENT);
     if (last == 
# 6372 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 6372 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
  if (ret != 
# 6373 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 6373 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                )
      xmlFreeDocElementContent__internal_alias(ctxt->myDoc, ret);
  return(
# 6375 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 6375 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
            );
     }
     if ((*ctxt->input->cur) == '?') {
  last->ocur = XML_ELEMENT_CONTENT_OPT;
  xmlNextChar__internal_alias(ctxt);
     } else if ((*ctxt->input->cur) == '*') {
  last->ocur = XML_ELEMENT_CONTENT_MULT;
  xmlNextChar__internal_alias(ctxt);
     } else if ((*ctxt->input->cur) == '+') {
  last->ocur = XML_ELEMENT_CONTENT_PLUS;
  xmlNextChar__internal_alias(ctxt);
     } else {
  last->ocur = XML_ELEMENT_CONTENT_ONCE;
     }
 }
 xmlSkipBlankChars__internal_alias(ctxt);
 if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    }
    if ((cur != 
# 6393 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 6393 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) && (last != 
# 6393 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                 ((void *)0)
# 6393 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                     )) {
        cur->c2 = last;
 if (last != 
# 6395 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 6395 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                )
     last->parent = cur;
    }
    if ((ctxt->validate) && (ctxt->input->id != inputchk)) {
 xmlValidityError(ctxt, XML_ERR_ENTITY_BOUNDARY,
"Element content declaration doesn't start and stop in the same entity\n",
    
# 6401 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
   ((void *)0)
# 6401 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
       , 
# 6401 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
         ((void *)0)
# 6401 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
             );
    }
    xmlNextChar__internal_alias(ctxt);
    if ((*ctxt->input->cur) == '?') {
 if (ret != 
# 6405 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 6405 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               ) {
     if ((ret->ocur == XML_ELEMENT_CONTENT_PLUS) ||
         (ret->ocur == XML_ELEMENT_CONTENT_MULT))
         ret->ocur = XML_ELEMENT_CONTENT_MULT;
     else
         ret->ocur = XML_ELEMENT_CONTENT_OPT;
 }
 xmlNextChar__internal_alias(ctxt);
    } else if ((*ctxt->input->cur) == '*') {
 if (ret != 
# 6414 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 6414 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               ) {
     ret->ocur = XML_ELEMENT_CONTENT_MULT;
     cur = ret;




     while ((cur != 
# 6421 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 6421 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) && (cur->type == XML_ELEMENT_CONTENT_OR)) {
  if ((cur->c1 != 
# 6422 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 6422 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) &&
             ((cur->c1->ocur == XML_ELEMENT_CONTENT_OPT) ||
       (cur->c1->ocur == XML_ELEMENT_CONTENT_MULT)))
      cur->c1->ocur = XML_ELEMENT_CONTENT_ONCE;
  if ((cur->c2 != 
# 6426 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 6426 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) &&
             ((cur->c2->ocur == XML_ELEMENT_CONTENT_OPT) ||
       (cur->c2->ocur == XML_ELEMENT_CONTENT_MULT)))
      cur->c2->ocur = XML_ELEMENT_CONTENT_ONCE;
  cur = cur->c2;
     }
 }
 xmlNextChar__internal_alias(ctxt);
    } else if ((*ctxt->input->cur) == '+') {
 if (ret != 
# 6435 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 6435 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               ) {
     int found = 0;

     if ((ret->ocur == XML_ELEMENT_CONTENT_OPT) ||
         (ret->ocur == XML_ELEMENT_CONTENT_MULT))
         ret->ocur = XML_ELEMENT_CONTENT_MULT;
     else
         ret->ocur = XML_ELEMENT_CONTENT_PLUS;





     while ((cur != 
# 6448 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 6448 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) && (cur->type == XML_ELEMENT_CONTENT_OR)) {
  if ((cur->c1 != 
# 6449 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 6449 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) &&
             ((cur->c1->ocur == XML_ELEMENT_CONTENT_OPT) ||
       (cur->c1->ocur == XML_ELEMENT_CONTENT_MULT))) {
      cur->c1->ocur = XML_ELEMENT_CONTENT_ONCE;
      found = 1;
  }
  if ((cur->c2 != 
# 6455 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 6455 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) &&
             ((cur->c2->ocur == XML_ELEMENT_CONTENT_OPT) ||
       (cur->c2->ocur == XML_ELEMENT_CONTENT_MULT))) {
      cur->c2->ocur = XML_ELEMENT_CONTENT_ONCE;
      found = 1;
  }
  cur = cur->c2;
     }
     if (found)
  ret->ocur = XML_ELEMENT_CONTENT_MULT;
 }
 xmlNextChar__internal_alias(ctxt);
    }
    return(ret);
}
# 6501 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlElementContentPtr
xmlParseElementChildrenContentDecl__internal_alias(xmlParserCtxtPtr ctxt, int inputchk) {

    return(xmlParseElementChildrenContentDeclPriv(ctxt, inputchk, 1));
}
# 6521 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int
xmlParseElementContentDecl__internal_alias(xmlParserCtxtPtr ctxt, const xmlChar *name,
                           xmlElementContentPtr *result) {

    xmlElementContentPtr tree = 
# 6525 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                               ((void *)0)
# 6525 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                   ;
    int inputid = ctxt->input->id;
    int res;

    *result = 
# 6529 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 6529 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ;

    if ((*ctxt->input->cur) != '(') {
 xmlFatalErrMsgStr(ctxt, XML_ERR_ELEMCONTENT_NOT_STARTED,
  "xmlParseElementContentDecl : %s '(' expected\n", name);
 return(-1);
    }
    xmlNextChar__internal_alias(ctxt);
    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    if (ctxt->instate == XML_PARSER_EOF)
        return(-1);
    xmlSkipBlankChars__internal_alias(ctxt);
    if (( ( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == '#' && ((unsigned char *) ctxt->input->cur)[ 1 ] == 'P' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'C' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'D' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'A' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'T' ) && ((unsigned char *) ctxt->input->cur)[ 6 ] == 'A' )) {
        tree = xmlParseElementMixedContentDecl__internal_alias(ctxt, inputid);
 res = XML_ELEMENT_TYPE_MIXED;
    } else {
        tree = xmlParseElementChildrenContentDeclPriv(ctxt, inputid, 1);
 res = XML_ELEMENT_TYPE_ELEMENT;
    }
    xmlSkipBlankChars__internal_alias(ctxt);
    *result = tree;
    return(res);
}
# 6566 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int
xmlParseElementDecl__internal_alias(xmlParserCtxtPtr ctxt) {
    const xmlChar *name;
    int ret = -1;
    xmlElementContentPtr content = 
# 6570 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                   ((void *)0)
# 6570 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                       ;


    if (( ( ( ( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == '<' && ((unsigned char *) ctxt->input->cur)[ 1 ] == '!' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'E' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'L' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'E' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'M' ) && ((unsigned char *) ctxt->input->cur)[ 6 ] == 'E' ) && ((unsigned char *) ctxt->input->cur)[ 7 ] == 'N' ) && ((unsigned char *) ctxt->input->cur)[ 8 ] == 'T' )) {
 xmlParserInputPtr input = ctxt->input;

 do { ctxt->nbChars += (9),ctxt->input->cur += (9),ctxt->input->col+=(9); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 if (!((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd))) {
     xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
             "Space required after 'ELEMENT'\n");
 }
        xmlSkipBlankChars__internal_alias(ctxt);
        name = xmlParseName__internal_alias(ctxt);
 if (name == 
# 6583 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 6583 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ) {
     xmlFatalErrMsg(ctxt, XML_ERR_NAME_REQUIRED,
      "xmlParseElementDecl: no name for Element\n");
     return(-1);
 }
 while (((*ctxt->input->cur) == 0) && (ctxt->inputNr > 1))
     xmlPopInput__internal_alias(ctxt);
 if (!((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd))) {
     xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
      "Space required after the element name\n");
 }
        xmlSkipBlankChars__internal_alias(ctxt);
 if (( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == 'E' && ((unsigned char *) ctxt->input->cur)[ 1 ] == 'M' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'P' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'T' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'Y' )) {
     do { ctxt->nbChars += (5),ctxt->input->cur += (5),ctxt->input->col+=(5); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);



     ret = XML_ELEMENT_TYPE_EMPTY;
 } else if (((*ctxt->input->cur) == 'A') && (ctxt->input->cur[(1)] == 'N') &&
            (ctxt->input->cur[(2)] == 'Y')) {
     do { ctxt->nbChars += (3),ctxt->input->cur += (3),ctxt->input->col+=(3); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);



     ret = XML_ELEMENT_TYPE_ANY;
 } else if ((*ctxt->input->cur) == '(') {
     ret = xmlParseElementContentDecl__internal_alias(ctxt, name, &content);
 } else {



     if (((*ctxt->input->cur) == '%') && (ctxt->external == 0) &&
         (ctxt->inputNr == 1)) {
  xmlFatalErrMsg(ctxt, XML_ERR_PEREF_IN_INT_SUBSET,
   "PEReference: forbidden within markup decl in internal subset\n");
     } else {
  xmlFatalErrMsg(ctxt, XML_ERR_ELEMCONTENT_NOT_STARTED,
        "xmlParseElementDecl: 'EMPTY', 'ANY' or '(' expected\n");
            }
     return(-1);
 }

 xmlSkipBlankChars__internal_alias(ctxt);



 while (((*ctxt->input->cur) == 0) && (ctxt->inputNr > 1))
     xmlPopInput__internal_alias(ctxt);
 xmlSkipBlankChars__internal_alias(ctxt);

 if ((*ctxt->input->cur) != '>') {
     xmlFatalErr(ctxt, XML_ERR_GT_REQUIRED, 
# 6634 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                           ((void *)0)
# 6634 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                               );
     if (content != 
# 6635 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 6635 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) {
  xmlFreeDocElementContent__internal_alias(ctxt->myDoc, content);
     }
 } else {
     if (input != ctxt->input) {
  xmlFatalErrMsg(ctxt, XML_ERR_ENTITY_BOUNDARY,
    "Element declaration doesn't start and stop in the same entity\n");
     }

     xmlNextChar__internal_alias(ctxt);
     if ((ctxt->sax != 
# 6645 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 6645 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) && (!ctxt->disableSAX) &&
  (ctxt->sax->elementDecl != 
# 6646 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 6646 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                )) {
  if (content != 
# 6647 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 6647 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    )
      content->parent = 
# 6648 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 6648 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ;
         ctxt->sax->elementDecl(ctxt->userData, name, ret,
                         content);
  if ((content != 
# 6651 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 6651 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) && (content->parent == 
# 6651 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                              ((void *)0)
# 6651 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                  )) {






      xmlFreeDocElementContent__internal_alias(ctxt->myDoc, content);
  }
     } else if (content != 
# 6660 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 6660 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              ) {
  xmlFreeDocElementContent__internal_alias(ctxt->myDoc, content);
     }
 }
    }
    return(ret);
}
# 6679 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void
xmlParseConditionalSections(xmlParserCtxtPtr ctxt) {
    int id = ctxt->input->id;

    do { ctxt->nbChars += (3),ctxt->input->cur += (3),ctxt->input->col+=(3); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
    xmlSkipBlankChars__internal_alias(ctxt);
    if (( ( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == 'I' && ((unsigned char *) ctxt->input->cur)[ 1 ] == 'N' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'C' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'L' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'U' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'D' ) && ((unsigned char *) ctxt->input->cur)[ 6 ] == 'E' )) {
 do { ctxt->nbChars += (7),ctxt->input->cur += (7),ctxt->input->col+=(7); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 xmlSkipBlankChars__internal_alias(ctxt);
 if ((*ctxt->input->cur) != '[') {
     xmlFatalErr(ctxt, XML_ERR_CONDSEC_INVALID, 
# 6689 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 6689 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   );
 } else {
     if (ctxt->input->id != id) {
  xmlValidityError(ctxt, XML_ERR_ENTITY_BOUNDARY,
     "All markup of the conditional section is not in the same entity\n",
         
# 6694 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 6694 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
            , 
# 6694 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 6694 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );
     }
     xmlNextChar__internal_alias(ctxt);
 }
 if ((*(__xmlParserDebugEntities()))) {
     if ((ctxt->input != 
# 6699 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 6699 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ) && (ctxt->input->filename))
  (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
   "%s(%d): ", ctxt->input->filename,
   ctxt->input->line);
     (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
      "Entering INCLUDE Conditional Section\n");
 }

 while ((((*ctxt->input->cur) != 0) && (((*ctxt->input->cur) != ']') || (ctxt->input->cur[(1)] != ']') ||
         (ctxt->input->cur[(2)] != '>'))) && (ctxt->instate != XML_PARSER_EOF)) {
     const xmlChar *check = ctxt->input->cur;
     unsigned int cons = ctxt->input->consumed;

     if (((*ctxt->input->cur) == '<') && (ctxt->input->cur[(1)] == '!') && (ctxt->input->cur[(2)] == '[')) {
  xmlParseConditionalSections(ctxt);
     } else if (((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd))) {
  xmlNextChar__internal_alias(ctxt);
     } else if ((*ctxt->input->cur) == '%') {
  xmlParsePEReference__internal_alias(ctxt);
     } else
  xmlParseMarkupDecl__internal_alias(ctxt);




     while (((*ctxt->input->cur) == 0) && (ctxt->inputNr > 1))
  xmlPopInput__internal_alias(ctxt);

     if ((ctxt->input->cur == check) && (cons == ctxt->input->consumed)) {
  xmlFatalErr(ctxt, XML_ERR_EXT_SUBSET_NOT_FINISHED, 
# 6728 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                    ((void *)0)
# 6728 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                        );
  break;
     }
 }
 if ((*(__xmlParserDebugEntities()))) {
     if ((ctxt->input != 
# 6733 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 6733 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ) && (ctxt->input->filename))
  (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
   "%s(%d): ", ctxt->input->filename,
   ctxt->input->line);
     (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
      "Leaving INCLUDE Conditional Section\n");
 }

    } else if (( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == 'I' && ((unsigned char *) ctxt->input->cur)[ 1 ] == 'G' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'N' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'O' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'R' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'E' )) {
 int state;
 xmlParserInputState instate;
 int depth = 0;

 do { ctxt->nbChars += (6),ctxt->input->cur += (6),ctxt->input->col+=(6); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 xmlSkipBlankChars__internal_alias(ctxt);
 if ((*ctxt->input->cur) != '[') {
     xmlFatalErr(ctxt, XML_ERR_CONDSEC_INVALID, 
# 6749 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 6749 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   );
 } else {
     if (ctxt->input->id != id) {
  xmlValidityError(ctxt, XML_ERR_ENTITY_BOUNDARY,
     "All markup of the conditional section is not in the same entity\n",
         
# 6754 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 6754 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
            , 
# 6754 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 6754 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );
     }
     xmlNextChar__internal_alias(ctxt);
 }
 if ((*(__xmlParserDebugEntities()))) {
     if ((ctxt->input != 
# 6759 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 6759 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ) && (ctxt->input->filename))
  (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
   "%s(%d): ", ctxt->input->filename,
   ctxt->input->line);
     (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
      "Entering IGNORE Conditional Section\n");
 }





 state = ctxt->disableSAX;
 instate = ctxt->instate;
 if (ctxt->recovery == 0) ctxt->disableSAX = 1;
 ctxt->instate = XML_PARSER_IGNORE;

 while (((depth >= 0) && ((*ctxt->input->cur) != 0)) &&
               (ctxt->instate != XML_PARSER_EOF)) {
   if (((*ctxt->input->cur) == '<') && (ctxt->input->cur[(1)] == '!') && (ctxt->input->cur[(2)] == '[')) {
     depth++;
     do { ctxt->nbChars += (3),ctxt->input->cur += (3),ctxt->input->col+=(3); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
     continue;
   }
   if (((*ctxt->input->cur) == ']') && (ctxt->input->cur[(1)] == ']') && (ctxt->input->cur[(2)] == '>')) {
     if (--depth >= 0) do { ctxt->nbChars += (3),ctxt->input->cur += (3),ctxt->input->col+=(3); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
     continue;
   }
   xmlNextChar__internal_alias(ctxt);
   continue;
 }

 ctxt->disableSAX = state;
 ctxt->instate = instate;

 if ((*(__xmlParserDebugEntities()))) {
     if ((ctxt->input != 
# 6795 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 6795 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ) && (ctxt->input->filename))
  (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
   "%s(%d): ", ctxt->input->filename,
   ctxt->input->line);
     (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
      "Leaving IGNORE Conditional Section\n");
 }

    } else {
 xmlFatalErr(ctxt, XML_ERR_CONDSEC_INVALID_KEYWORD, 
# 6804 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                   ((void *)0)
# 6804 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                       );
    }

    if ((*ctxt->input->cur) == 0)
        if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;

    if ((*ctxt->input->cur) == 0) {
 xmlFatalErr(ctxt, XML_ERR_CONDSEC_NOT_FINISHED, 
# 6811 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                ((void *)0)
# 6811 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                    );
    } else {
 if (ctxt->input->id != id) {
     xmlValidityError(ctxt, XML_ERR_ENTITY_BOUNDARY,
 "All markup of the conditional section is not in the same entity\n",
     
# 6816 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
    ((void *)0)
# 6816 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
        , 
# 6816 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
          ((void *)0)
# 6816 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
              );
 }
        do { ctxt->nbChars += (3),ctxt->input->cur += (3),ctxt->input->col+=(3); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
    }
}
# 6844 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlParseMarkupDecl__internal_alias(xmlParserCtxtPtr ctxt) {
    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    if ((*ctxt->input->cur) == '<') {
        if (ctxt->input->cur[(1)] == '!') {
     switch (ctxt->input->cur[(2)]) {
         case 'E':
      if (ctxt->input->cur[(3)] == 'L')
   xmlParseElementDecl__internal_alias(ctxt);
      else if (ctxt->input->cur[(3)] == 'N')
   xmlParseEntityDecl__internal_alias(ctxt);
      break;
         case 'A':
      xmlParseAttributeListDecl__internal_alias(ctxt);
      break;
         case 'N':
      xmlParseNotationDecl__internal_alias(ctxt);
      break;
         case '-':
      xmlParseComment__internal_alias(ctxt);
      break;
  default:

      break;
     }
 } else if (ctxt->input->cur[(1)] == '?') {
     xmlParsePI__internal_alias(ctxt);
 }
    }




    if ((ctxt->external == 0) && (ctxt->inputNr == 1))
 xmlParsePEReference__internal_alias(ctxt);





    if ((ctxt->external == 0) && (ctxt->inputNr > 1)) {
        if (((*ctxt->input->cur) == '<') && (ctxt->input->cur[(1)] == '!') && (ctxt->input->cur[(2)] == '[')) {
     xmlParseConditionalSections(ctxt);
 }
    }

    ctxt->instate = XML_PARSER_DTD;
}
# 6902 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlParseTextDecl__internal_alias(xmlParserCtxtPtr ctxt) {
    xmlChar *version;
    const xmlChar *encoding;




    if ((( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == '<' && ((unsigned char *) ctxt->input->cur)[ 1 ] == '?' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'x' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'm' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'l' )) && ((((ctxt->input->cur[(5)]) == 0x20) || ((0x9 <= (ctxt->input->cur[(5)])) && ((ctxt->input->cur[(5)]) <= 0xa)) || ((ctxt->input->cur[(5)]) == 0xd)))) {
 do { ctxt->nbChars += (5),ctxt->input->cur += (5),ctxt->input->col+=(5); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
    } else {
 xmlFatalErr(ctxt, XML_ERR_XMLDECL_NOT_STARTED, 
# 6913 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 6913 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   );
 return;
    }

    if (!((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd))) {
 xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
         "Space needed after '<?xml'\n");
    }
    xmlSkipBlankChars__internal_alias(ctxt);




    version = xmlParseVersionInfo__internal_alias(ctxt);
    if (version == 
# 6927 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 6927 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      )
 version = xmlCharStrdup__internal_alias("1.0");
    else {
 if (!((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd))) {
     xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
             "Space needed here\n");
 }
    }
    ctxt->input->version = version;




    encoding = xmlParseEncodingDecl__internal_alias(ctxt);
    if (ctxt->errNo == XML_ERR_UNSUPPORTED_ENCODING) {



        return;
    }
    if ((encoding == 
# 6947 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 6947 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ) && (ctxt->errNo == XML_ERR_OK)) {
 xmlFatalErrMsg(ctxt, XML_ERR_MISSING_ENCODING,
         "Missing encoding in text declaration\n");
    }

    xmlSkipBlankChars__internal_alias(ctxt);
    if (((*ctxt->input->cur) == '?') && (ctxt->input->cur[(1)] == '>')) {
        do { ctxt->nbChars += (2),ctxt->input->cur += (2),ctxt->input->col+=(2); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
    } else if ((*ctxt->input->cur) == '>') {

 xmlFatalErr(ctxt, XML_ERR_XMLDECL_NOT_FINISHED, 
# 6957 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                ((void *)0)
# 6957 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                    );
 xmlNextChar__internal_alias(ctxt);
    } else {
 xmlFatalErr(ctxt, XML_ERR_XMLDECL_NOT_FINISHED, 
# 6960 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                ((void *)0)
# 6960 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                    );
 while ((*ctxt->input->cur) && (*(ctxt->input->cur) != '>')) (ctxt->input->cur)++;
 xmlNextChar__internal_alias(ctxt);
    }
}
# 6978 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlParseExternalSubset__internal_alias(xmlParserCtxtPtr ctxt, const xmlChar *ExternalID,
                       const xmlChar *SystemID) {
    xmlDetectSAX2(ctxt);
    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;

    if ((ctxt->encoding == 
# 6984 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 6984 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              ) &&
        (ctxt->input->end - ctxt->input->cur >= 4)) {
        xmlChar start[4];
 xmlCharEncoding enc;

 start[0] = (*ctxt->input->cur);
 start[1] = ctxt->input->cur[(1)];
 start[2] = ctxt->input->cur[(2)];
 start[3] = ctxt->input->cur[(3)];
 enc = xmlDetectCharEncoding__internal_alias(start, 4);
 if (enc != XML_CHAR_ENCODING_NONE)
     xmlSwitchEncoding__internal_alias(ctxt, enc);
    }

    if (( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == '<' && ((unsigned char *) ctxt->input->cur)[ 1 ] == '?' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'x' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'm' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'l' )) {
 xmlParseTextDecl__internal_alias(ctxt);
 if (ctxt->errNo == XML_ERR_UNSUPPORTED_ENCODING) {



     ctxt->instate = XML_PARSER_EOF;
     return;
 }
    }
    if (ctxt->myDoc == 
# 7008 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 7008 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) {
        ctxt->myDoc = xmlNewDoc__internal_alias((xmlChar *) "1.0");
 if (ctxt->myDoc == 
# 7010 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 7010 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) {
     xmlErrMemory__internal_alias(ctxt, "New Doc failed");
     return;
 }
 ctxt->myDoc->properties = XML_DOC_INTERNAL;
    }
    if ((ctxt->myDoc != 
# 7016 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 7016 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ) && (ctxt->myDoc->intSubset == 
# 7016 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                           ((void *)0)
# 7016 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                               ))
        xmlCreateIntSubset__internal_alias(ctxt->myDoc, 
# 7017 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                       ((void *)0)
# 7017 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                           , ExternalID, SystemID);

    ctxt->instate = XML_PARSER_DTD;
    ctxt->external = 1;
    while ((((*ctxt->input->cur) == '<') && (ctxt->input->cur[(1)] == '?')) ||
           (((*ctxt->input->cur) == '<') && (ctxt->input->cur[(1)] == '!')) ||
    ((*ctxt->input->cur) == '%') || ((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd))) {
 const xmlChar *check = ctxt->input->cur;
 unsigned int cons = ctxt->input->consumed;

 if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
        if (((*ctxt->input->cur) == '<') && (ctxt->input->cur[(1)] == '!') && (ctxt->input->cur[(2)] == '[')) {
     xmlParseConditionalSections(ctxt);
 } else if (((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd))) {
     xmlNextChar__internal_alias(ctxt);
 } else if ((*ctxt->input->cur) == '%') {
            xmlParsePEReference__internal_alias(ctxt);
 } else
     xmlParseMarkupDecl__internal_alias(ctxt);




 while (((*ctxt->input->cur) == 0) && (ctxt->inputNr > 1))
     xmlPopInput__internal_alias(ctxt);

 if ((ctxt->input->cur == check) && (cons == ctxt->input->consumed)) {
     xmlFatalErr(ctxt, XML_ERR_EXT_SUBSET_NOT_FINISHED, 
# 7044 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                       ((void *)0)
# 7044 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                           );
     break;
 }
    }

    if ((*ctxt->input->cur) != 0) {
 xmlFatalErr(ctxt, XML_ERR_EXT_SUBSET_NOT_FINISHED, 
# 7050 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                   ((void *)0)
# 7050 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                       );
    }

}
# 7066 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlParseReference__internal_alias(xmlParserCtxtPtr ctxt) {
    xmlEntityPtr ent;
    xmlChar *val;
    int was_checked;
    xmlNodePtr list = 
# 7071 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 7071 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ;
    xmlParserErrors ret = XML_ERR_OK;


    if ((*ctxt->input->cur) != '&')
        return;




    if (ctxt->input->cur[(1)] == '#') {
 int i = 0;
 xmlChar out[10];
 int hex = ctxt->input->cur[(2)];
 int value = xmlParseCharRef__internal_alias(ctxt);

 if (value == 0)
     return;
 if (ctxt->charset != XML_CHAR_ENCODING_UTF8) {





     if (value <= 0xFF) {
  out[0] = value;
  out[1] = 0;
  if ((ctxt->sax != 
# 7098 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 7098 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) && (ctxt->sax->characters != 
# 7098 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                      ((void *)0)
# 7098 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                          ) &&
      (!ctxt->disableSAX))
      ctxt->sax->characters(ctxt->userData, out, 1);
     } else {
  if ((hex == 'x') || (hex == 'X'))
      snprintf((char *)out, sizeof(out), "#x%X", value);
  else
      snprintf((char *)out, sizeof(out), "#%d", value);
  if ((ctxt->sax != 
# 7106 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 7106 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) && (ctxt->sax->reference != 
# 7106 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                     ((void *)0)
# 7106 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                         ) &&
      (!ctxt->disableSAX))
      ctxt->sax->reference(ctxt->userData, out);
     }
 } else {



     if (0 == 1) out[i++] = (xmlChar) value; else i += xmlCopyCharMultiByte__internal_alias(&out[i],value);
     out[i] = 0;
     if ((ctxt->sax != 
# 7116 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 7116 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) && (ctxt->sax->characters != 
# 7116 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                         ((void *)0)
# 7116 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                             ) &&
  (!ctxt->disableSAX))
  ctxt->sax->characters(ctxt->userData, out, i);
 }
 return;
    }




    ent = xmlParseEntityRef__internal_alias(ctxt);
    if (ent == 
# 7127 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 7127 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) return;
    if (!ctxt->wellFormed)
 return;
    was_checked = ent->checked;


    if ((ent->name == 
# 7133 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 7133 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) ||
        (ent->etype == XML_INTERNAL_PREDEFINED_ENTITY)) {
 val = ent->content;
 if (val == 
# 7136 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 7136 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               ) return;



 if ((ctxt->sax != 
# 7140 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 7140 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) && (ctxt->sax->characters != 
# 7140 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                     ((void *)0)
# 7140 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                         ) &&
     (!ctxt->disableSAX))
     ctxt->sax->characters(ctxt->userData, val, xmlStrlen__internal_alias(val));
 return;
    }
# 7156 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
    if ((ent->checked == 0) &&
        ((ent->etype != XML_EXTERNAL_GENERAL_PARSED_ENTITY) ||
         (ctxt->options & (XML_PARSE_NOENT | XML_PARSE_DTDVALID)))) {
 unsigned long oldnbent = ctxt->nbentities;






 void *user_data;
 if (ctxt->userData == ctxt)
     user_data = 
# 7168 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 7168 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ;
 else
     user_data = ctxt->userData;







 if (ent->etype == XML_INTERNAL_GENERAL_ENTITY) {
     ctxt->depth++;
     ret = xmlParseBalancedChunkMemoryInternal(ctxt, ent->content,
                                               user_data, &list);
     ctxt->depth--;

 } else if (ent->etype == XML_EXTERNAL_GENERAL_PARSED_ENTITY) {
     ctxt->depth++;
     ret = xmlParseExternalEntityPrivate(ctxt->myDoc, ctxt, ctxt->sax,
                                    user_data, ctxt->depth, ent->URI,
        ent->ExternalID, &list);
     ctxt->depth--;
 } else {
     ret = XML_ERR_ENTITY_PE_INTERNAL;
     xmlErrMsgStr(ctxt, XML_ERR_INTERNAL_ERROR,
    "invalid entity type found\n", 
# 7193 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                  ((void *)0)
# 7193 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                      );
 }





 ent->checked = ctxt->nbentities - oldnbent;
 if (ret == XML_ERR_ENTITY_LOOP) {
     xmlFatalErr(ctxt, XML_ERR_ENTITY_LOOP, 
# 7202 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                           ((void *)0)
# 7202 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                               );
     xmlFreeNodeList__internal_alias(list);
     return;
 }
 if (xmlParserEntityCheck(ctxt, 0, ent)) {
     xmlFreeNodeList__internal_alias(list);
     return;
 }

 if ((ret == XML_ERR_OK) && (list != 
# 7211 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                    ((void *)0)
# 7211 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                        )) {
     if (((ent->etype == XML_INTERNAL_GENERAL_ENTITY) ||
      (ent->etype == XML_EXTERNAL_GENERAL_PARSED_ENTITY))&&
  (ent->children == 
# 7214 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 7214 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       )) {
  ent->children = list;
  if (ctxt->replaceEntities) {




      if (((list->type == XML_TEXT_NODE) &&
    (list->next == 
# 7222 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 7222 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      )) ||
   (ctxt->parseMode == XML_PARSE_READER)) {
   list->parent = (xmlNodePtr) ent;
   list = 
# 7225 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
         ((void *)0)
# 7225 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
             ;
   ent->owner = 1;
      } else {
   ent->owner = 0;
   while (list != 
# 7229 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 7229 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) {
       list->parent = (xmlNodePtr) ctxt->node;
       list->doc = ctxt->myDoc;
       if (list->next == 
# 7232 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 7232 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            )
    ent->last = list;
       list = list->next;
   }
   list = ent->children;

   if (ent->etype == XML_EXTERNAL_GENERAL_PARSED_ENTITY)
     xmlAddEntityReference(ent, list, 
# 7239 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                     ((void *)0)
# 7239 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                         );

      }
  } else {
      ent->owner = 1;
      while (list != 
# 7244 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 7244 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ) {
   list->parent = (xmlNodePtr) ent;
   xmlSetTreeDoc__internal_alias(list, ent->doc);
   if (list->next == 
# 7247 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 7247 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        )
       ent->last = list;
   list = list->next;
      }
  }
     } else {
  xmlFreeNodeList__internal_alias(list);
  list = 
# 7254 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 7254 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
            ;
     }
 } else if ((ret != XML_ERR_OK) &&
     (ret != XML_WAR_UNDECLARED_ENTITY)) {
     xmlFatalErrMsgStr(ctxt, XML_ERR_UNDECLARED_ENTITY,
       "Entity '%s' failed to parse\n", ent->name);
 } else if (list != 
# 7260 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 7260 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) {
     xmlFreeNodeList__internal_alias(list);
     list = 
# 7262 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 7262 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               ;
 }
 if (ent->checked == 0)
     ent->checked = 1;
    } else if (ent->checked != 1) {
 ctxt->nbentities += ent->checked;
    }






    if (ent->children == 
# 7275 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 7275 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ) {






 if (was_checked != 0) {
     void *user_data;





     if (ctxt->userData == ctxt)
  user_data = 
# 7290 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 7290 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ;
     else
  user_data = ctxt->userData;

     if (ent->etype == XML_INTERNAL_GENERAL_ENTITY) {
  ctxt->depth++;
  ret = xmlParseBalancedChunkMemoryInternal(ctxt,
       ent->content, user_data, 
# 7297 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                               ((void *)0)
# 7297 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                   );
  ctxt->depth--;
     } else if (ent->etype ==
         XML_EXTERNAL_GENERAL_PARSED_ENTITY) {
  ctxt->depth++;
  ret = xmlParseExternalEntityPrivate(ctxt->myDoc, ctxt,
      ctxt->sax, user_data, ctxt->depth,
      ent->URI, ent->ExternalID, 
# 7304 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                ((void *)0)
# 7304 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                    );
  ctxt->depth--;
     } else {
  ret = XML_ERR_ENTITY_PE_INTERNAL;
  xmlErrMsgStr(ctxt, XML_ERR_INTERNAL_ERROR,
        "invalid entity type found\n", 
# 7309 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                      ((void *)0)
# 7309 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                          );
     }
     if (ret == XML_ERR_ENTITY_LOOP) {
  xmlFatalErr(ctxt, XML_ERR_ENTITY_LOOP, 
# 7312 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                        ((void *)0)
# 7312 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                            );
  return;
     }
 }
 if ((ctxt->sax != 
# 7316 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 7316 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) && (ctxt->sax->reference != 
# 7316 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                    ((void *)0)
# 7316 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                        ) &&
     (ctxt->replaceEntities == 0) && (!ctxt->disableSAX)) {




     ctxt->sax->reference(ctxt->userData, ent->name);
 }
 return;
    }




    if ((ctxt->sax != 
# 7330 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 7330 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) && (ctxt->sax->reference != 
# 7330 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                       ((void *)0)
# 7330 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                           ) &&
 (ctxt->replaceEntities == 0) && (!ctxt->disableSAX)) {



 ctxt->sax->reference(ctxt->userData, ent->name);
 return;
    }

    if ((ctxt->replaceEntities) || (ent->children == 
# 7339 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                    ((void *)0)
# 7339 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                        )) {
# 7353 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
 if ((ctxt->node != 
# 7353 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 7353 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) && (ent->children != 
# 7353 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                              ((void *)0)
# 7353 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                  )) {





     if (((list == 
# 7359 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 7359 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) && (ent->owner == 0)) ||
  (ctxt->parseMode == XML_PARSE_READER)) {
  xmlNodePtr nw = 
# 7361 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 7361 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     , cur, firstChild = 
# 7361 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                         ((void *)0)
# 7361 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                             ;
# 7370 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
  cur = ent->children;
  while (cur != 
# 7371 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 7371 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
      nw = xmlDocCopyNode__internal_alias(cur, ctxt->myDoc, 1);
      if (nw != 
# 7373 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 7373 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
   if (nw->_private == 
# 7374 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 7374 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          )
       nw->_private = cur->_private;
   if (firstChild == 
# 7376 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 7376 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ){
       firstChild = nw;
   }
   nw = xmlAddChild__internal_alias(ctxt->node, nw);
      }
      if (cur == ent->last) {




   if ((ctxt->parseMode == XML_PARSE_READER) &&
       (nw != 
# 7387 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 7387 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ) &&
       (nw->type == XML_ELEMENT_NODE) &&
       (nw->children == 
# 7389 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 7389 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ))
       nw->extra = 1;

   break;
      }
      cur = cur->next;
  }

  if (ent->etype == XML_EXTERNAL_GENERAL_PARSED_ENTITY)
    xmlAddEntityReference(ent, firstChild, nw);

     } else if ((list == 
# 7400 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 7400 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ) || (ctxt->inputNr > 0)) {
  xmlNodePtr nw = 
# 7401 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 7401 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     , cur, next, last,
      firstChild = 
# 7402 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 7402 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ;






  cur = ent->children;
  ent->children = 
# 7410 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 7410 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ;
  last = ent->last;
  ent->last = 
# 7412 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 7412 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ;
  while (cur != 
# 7413 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 7413 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
      next = cur->next;
      cur->next = 
# 7415 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 7415 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ;
      cur->parent = 
# 7416 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 7416 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ;
      nw = xmlDocCopyNode__internal_alias(cur, ctxt->myDoc, 1);
      if (nw != 
# 7418 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 7418 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
   if (nw->_private == 
# 7419 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 7419 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          )
       nw->_private = cur->_private;
   if (firstChild == 
# 7421 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 7421 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ){
       firstChild = cur;
   }
   xmlAddChild__internal_alias((xmlNodePtr) ent, nw);
   xmlAddChild__internal_alias(ctxt->node, cur);
      }
      if (cur == last)
   break;
      cur = next;
  }
  if (ent->owner == 0)
      ent->owner = 1;

  if (ent->etype == XML_EXTERNAL_GENERAL_PARSED_ENTITY)
    xmlAddEntityReference(ent, firstChild, nw);

     } else {
  const xmlChar *nbktext;






  nbktext = xmlDictLookup__internal_alias(ctxt->dict, (xmlChar *) "nbktext",
     -1);
  if (ent->children->type == XML_TEXT_NODE)
      ent->children->name = nbktext;
  if ((ent->last != ent->children) &&
      (ent->last->type == XML_TEXT_NODE))
      ent->last->name = nbktext;
  xmlAddChildList__internal_alias(ctxt->node, ent->children);
     }





     ctxt->nodemem = 0;
     ctxt->nodelen = 0;
     return;
 }
    }
}
# 7494 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlEntityPtr
xmlParseEntityRef__internal_alias(xmlParserCtxtPtr ctxt) {
    const xmlChar *name;
    xmlEntityPtr ent = 
# 7497 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 7497 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ;

    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    if (ctxt->instate == XML_PARSER_EOF)
        return(
# 7501 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 7501 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );

    if ((*ctxt->input->cur) != '&')
        return(
# 7504 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 7504 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );
    xmlNextChar__internal_alias(ctxt);
    name = xmlParseName__internal_alias(ctxt);
    if (name == 
# 7507 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 7507 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
 xmlFatalErrMsg(ctxt, XML_ERR_NAME_REQUIRED,
         "xmlParseEntityRef: no name\n");
        return(
# 7510 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 7510 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );
    }
    if ((*ctxt->input->cur) != ';') {
 xmlFatalErr(ctxt, XML_ERR_ENTITYREF_SEMICOL_MISSING, 
# 7513 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                     ((void *)0)
# 7513 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                         );
 return(
# 7514 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 7514 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    xmlNextChar__internal_alias(ctxt);




    if ((ctxt->options & XML_PARSE_OLDSAX) == 0) {
        ent = xmlGetPredefinedEntity__internal_alias(name);
        if (ent != 
# 7523 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 7523 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      )
            return(ent);
    }




    ctxt->nbentities++;





    if (ctxt->sax != 
# 7536 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 7536 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ) {
 if (ctxt->sax->getEntity != 
# 7537 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 7537 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                )
     ent = ctxt->sax->getEntity(ctxt->userData, name);
 if ((ctxt->wellFormed == 1 ) && (ent == 
# 7539 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                        ((void *)0)
# 7539 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                            ) &&
     (ctxt->options & XML_PARSE_OLDSAX))
     ent = xmlGetPredefinedEntity__internal_alias(name);
 if ((ctxt->wellFormed == 1 ) && (ent == 
# 7542 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                        ((void *)0)
# 7542 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                            ) &&
     (ctxt->userData==ctxt)) {
     ent = xmlSAX2GetEntity__internal_alias(ctxt, name);
 }
    }
# 7568 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
    if (ent == 
# 7568 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 7568 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
 if ((ctxt->standalone == 1) ||
     ((ctxt->hasExternalSubset == 0) &&
      (ctxt->hasPErefs == 0))) {
     xmlFatalErrMsgStr(ctxt, XML_ERR_UNDECLARED_ENTITY,
       "Entity '%s' not defined\n", name);
 } else {
     xmlErrMsgStr(ctxt, XML_WAR_UNDECLARED_ENTITY,
       "Entity '%s' not defined\n", name);
     if ((ctxt->inSubset == 0) &&
  (ctxt->sax != 
# 7578 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 7578 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) &&
  (ctxt->sax->reference != 
# 7579 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 7579 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              )) {
  ctxt->sax->reference(ctxt->userData, name);
     }
 }
 ctxt->valid = 0;
    }






    else if (ent->etype == XML_EXTERNAL_GENERAL_UNPARSED_ENTITY) {
 xmlFatalErrMsgStr(ctxt, XML_ERR_UNPARSED_ENTITY,
   "Entity reference to unparsed entity %s\n", name);
    }






    else if ((ctxt->instate == XML_PARSER_ATTRIBUTE_VALUE) &&
      (ent->etype == XML_EXTERNAL_GENERAL_PARSED_ENTITY)) {
 xmlFatalErrMsgStr(ctxt, XML_ERR_ENTITY_IS_EXTERNAL,
      "Attribute references external entity '%s'\n", name);
    }






    else if ((ctxt->instate == XML_PARSER_ATTRIBUTE_VALUE) &&
      (ent != 
# 7613 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 7613 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ) && (ent->content != 
# 7613 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                       ((void *)0)
# 7613 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                           ) &&
      (ent->etype != XML_INTERNAL_PREDEFINED_ENTITY) &&
      (xmlStrchr__internal_alias(ent->content, '<'))) {
 xmlFatalErrMsgStr(ctxt, XML_ERR_LT_IN_ATTRIBUTE,
    "'<' in entity '%s' is not allowed in attributes values\n", name);
    }




    else {
 switch (ent->etype) {
     case XML_INTERNAL_PARAMETER_ENTITY:
     case XML_EXTERNAL_PARAMETER_ENTITY:
     xmlFatalErrMsgStr(ctxt, XML_ERR_ENTITY_IS_PARAMETER,
      "Attempt to reference the parameter entity '%s'\n",
         name);
     break;
     default:
     break;
 }
    }







    return(ent);
}
# 7676 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static xmlEntityPtr
xmlParseStringEntityRef(xmlParserCtxtPtr ctxt, const xmlChar ** str) {
    xmlChar *name;
    const xmlChar *ptr;
    xmlChar cur;
    xmlEntityPtr ent = 
# 7681 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 7681 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ;

    if ((str == 
# 7683 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 7683 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) || (*str == 
# 7683 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                 ((void *)0)
# 7683 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                     ))
        return(
# 7684 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 7684 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );
    ptr = *str;
    cur = *ptr;
    if (cur != '&')
 return(
# 7688 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 7688 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );

    ptr++;
    name = xmlParseStringName(ctxt, &ptr);
    if (name == 
# 7692 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 7692 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
 xmlFatalErrMsg(ctxt, XML_ERR_NAME_REQUIRED,
         "xmlParseStringEntityRef: no name\n");
 *str = ptr;
 return(
# 7696 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 7696 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    if (*ptr != ';') {
 xmlFatalErr(ctxt, XML_ERR_ENTITYREF_SEMICOL_MISSING, 
# 7699 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                     ((void *)0)
# 7699 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                         );
        xmlFree(name);
 *str = ptr;
 return(
# 7702 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 7702 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    ptr++;





    if ((ctxt->options & XML_PARSE_OLDSAX) == 0) {
        ent = xmlGetPredefinedEntity__internal_alias(name);
        if (ent != 
# 7712 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 7712 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) {
            xmlFree(name);
            *str = ptr;
            return(ent);
        }
    }




    ctxt->nbentities++;





    if (ctxt->sax != 
# 7728 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 7728 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ) {
 if (ctxt->sax->getEntity != 
# 7729 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 7729 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                )
     ent = ctxt->sax->getEntity(ctxt->userData, name);
 if ((ent == 
# 7731 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 7731 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ) && (ctxt->options & XML_PARSE_OLDSAX))
     ent = xmlGetPredefinedEntity__internal_alias(name);
 if ((ent == 
# 7733 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 7733 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ) && (ctxt->userData==ctxt)) {
     ent = xmlSAX2GetEntity__internal_alias(ctxt, name);
 }
    }
# 7759 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
    if (ent == 
# 7759 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 7759 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
 if ((ctxt->standalone == 1) ||
     ((ctxt->hasExternalSubset == 0) &&
      (ctxt->hasPErefs == 0))) {
     xmlFatalErrMsgStr(ctxt, XML_ERR_UNDECLARED_ENTITY,
       "Entity '%s' not defined\n", name);
 } else {
     xmlErrMsgStr(ctxt, XML_WAR_UNDECLARED_ENTITY,
     "Entity '%s' not defined\n",
     name);
 }

    }






    else if (ent->etype == XML_EXTERNAL_GENERAL_UNPARSED_ENTITY) {
 xmlFatalErrMsgStr(ctxt, XML_ERR_UNPARSED_ENTITY,
   "Entity reference to unparsed entity %s\n", name);
    }






    else if ((ctxt->instate == XML_PARSER_ATTRIBUTE_VALUE) &&
      (ent->etype == XML_EXTERNAL_GENERAL_PARSED_ENTITY)) {
 xmlFatalErrMsgStr(ctxt, XML_ERR_ENTITY_IS_EXTERNAL,
  "Attribute references external entity '%s'\n", name);
    }






    else if ((ctxt->instate == XML_PARSER_ATTRIBUTE_VALUE) &&
      (ent != 
# 7800 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 7800 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ) && (ent->content != 
# 7800 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                       ((void *)0)
# 7800 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                           ) &&
      (ent->etype != XML_INTERNAL_PREDEFINED_ENTITY) &&
      (xmlStrchr__internal_alias(ent->content, '<'))) {
 xmlFatalErrMsgStr(ctxt, XML_ERR_LT_IN_ATTRIBUTE,
     "'<' in entity '%s' is not allowed in attributes values\n",
     name);
    }




    else {
 switch (ent->etype) {
     case XML_INTERNAL_PARAMETER_ENTITY:
     case XML_EXTERNAL_PARAMETER_ENTITY:
  xmlFatalErrMsgStr(ctxt, XML_ERR_ENTITY_IS_PARAMETER,
      "Attempt to reference the parameter entity '%s'\n",
      name);
     break;
     default:
     break;
 }
    }
# 7831 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
    xmlFree(name);
    *str = ptr;
    return(ent);
}
# 7865 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlParsePEReference__internal_alias(xmlParserCtxtPtr ctxt)
{
    const xmlChar *name;
    xmlEntityPtr entity = 
# 7869 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 7869 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             ;
    xmlParserInputPtr input;

    if ((*ctxt->input->cur) != '%')
        return;
    xmlNextChar__internal_alias(ctxt);
    name = xmlParseName__internal_alias(ctxt);
    if (name == 
# 7876 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 7876 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
 xmlFatalErrMsg(ctxt, XML_ERR_NAME_REQUIRED,
         "xmlParsePEReference: no name\n");
 return;
    }
    if ((*ctxt->input->cur) != ';') {
 xmlFatalErr(ctxt, XML_ERR_ENTITYREF_SEMICOL_MISSING, 
# 7882 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                     ((void *)0)
# 7882 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                         );
        return;
    }

    xmlNextChar__internal_alias(ctxt);




    ctxt->nbentities++;




    if ((ctxt->sax != 
# 7896 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 7896 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) &&
 (ctxt->sax->getParameterEntity != 
# 7897 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                  ((void *)0)
# 7897 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                      ))
 entity = ctxt->sax->getParameterEntity(ctxt->userData,
            name);
    if (entity == 
# 7900 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 7900 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) {
# 7909 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
 if ((ctxt->standalone == 1) ||
     ((ctxt->hasExternalSubset == 0) &&
      (ctxt->hasPErefs == 0))) {
     xmlFatalErrMsgStr(ctxt, XML_ERR_UNDECLARED_ENTITY,
         "PEReference: %%%s; not found\n",
         name);
 } else {







     xmlWarningMsg(ctxt, XML_WAR_UNDECLARED_ENTITY,
     "PEReference: %%%s; not found\n",
     name, 
# 7925 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
          ((void *)0)
# 7925 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
              );
     ctxt->valid = 0;
 }
    } else {



 if ((entity->etype != XML_INTERNAL_PARAMETER_ENTITY) &&
     (entity->etype != XML_EXTERNAL_PARAMETER_ENTITY)) {
     xmlWarningMsg(ctxt, XML_WAR_UNDECLARED_ENTITY,
    "Internal: %%%s; is not a parameter entity\n",
     name, 
# 7936 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
          ((void *)0)
# 7936 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
              );
 } else if (ctxt->input->free != deallocblankswrapper) {
     input = xmlNewBlanksWrapperInputStream(ctxt, entity);
     if (xmlPushInput__internal_alias(ctxt, input) < 0)
  return;
 } else {





     input = xmlNewEntityInputStream__internal_alias(ctxt, entity);
     if (xmlPushInput__internal_alias(ctxt, input) < 0)
  return;
     if ((entity->etype == XML_EXTERNAL_PARAMETER_ENTITY) &&
  (( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == '<' && ((unsigned char *) ctxt->input->cur)[ 1 ] == '?' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'x' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'm' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'l' )) &&
  ((((ctxt->input->cur[(5)]) == 0x20) || ((0x9 <= (ctxt->input->cur[(5)])) && ((ctxt->input->cur[(5)]) <= 0xa)) || ((ctxt->input->cur[(5)]) == 0xd)))) {
  xmlParseTextDecl__internal_alias(ctxt);
  if (ctxt->errNo ==
      XML_ERR_UNSUPPORTED_ENCODING) {




      ctxt->instate = XML_PARSER_EOF;
      return;
  }
     }
 }
    }
    ctxt->hasPErefs = 1;
}
# 7980 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static int
xmlLoadEntityContent(xmlParserCtxtPtr ctxt, xmlEntityPtr entity) {
    xmlParserInputPtr input;
    xmlBufferPtr buf;
    int l, c;
    int count = 0;

    if ((ctxt == 
# 7987 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 7987 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) || (entity == 
# 7987 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                    ((void *)0)
# 7987 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                        ) ||
        ((entity->etype != XML_EXTERNAL_PARAMETER_ENTITY) &&
  (entity->etype != XML_EXTERNAL_GENERAL_PARSED_ENTITY)) ||
 (entity->content != 
# 7990 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 7990 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        )) {
 xmlFatalErr(ctxt, XML_ERR_INTERNAL_ERROR,
             "xmlLoadEntityContent parameter error");
        return(-1);
    }

    if ((*(__xmlParserDebugEntities())))
 (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
  "Reading %s entity content input\n", entity->name);

    buf = xmlBufferCreate__internal_alias();
    if (buf == 
# 8001 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 8001 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
 xmlFatalErr(ctxt, XML_ERR_INTERNAL_ERROR,
             "xmlLoadEntityContent parameter error");
        return(-1);
    }

    input = xmlNewEntityInputStream__internal_alias(ctxt, entity);
    if (input == 
# 8008 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 8008 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
 xmlFatalErr(ctxt, XML_ERR_INTERNAL_ERROR,
             "xmlLoadEntityContent input error");
 xmlBufferFree__internal_alias(buf);
        return(-1);
    }





    if (xmlPushInput__internal_alias(ctxt, input) < 0) {
        xmlBufferFree__internal_alias(buf);
 return(-1);
    }

    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    c = xmlCurrentChar__internal_alias(ctxt, &l);
    while ((ctxt->input == input) && (ctxt->input->cur < ctxt->input->end) &&
           ((((c) < 0x100) ? (((0x9 <= ((c))) && (((c)) <= 0xa)) || (((c)) == 0xd) || (0x20 <= ((c)))) : (((0x100 <= (c)) && ((c) <= 0xd7ff)) || ((0xe000 <= (c)) && ((c) <= 0xfffd)) || ((0x10000 <= (c)) && ((c) <= 0x10ffff)))))) {
        xmlBufferAdd__internal_alias(buf, ctxt->input->cur, l);
 if (count++ > 100) {
     count = 0;
     if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
            if (ctxt->instate == XML_PARSER_EOF) {
                xmlBufferFree__internal_alias(buf);
                return(-1);
            }
 }
 do { if (*(ctxt->input->cur) == '\n') { ctxt->input->line++; ctxt->input->col = 1; } else ctxt->input->col++; ctxt->input->cur += l; if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); } while (0);
 c = xmlCurrentChar__internal_alias(ctxt, &l);
 if (c == 0) {
     count = 0;
     if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
            if (ctxt->instate == XML_PARSER_EOF) {
                xmlBufferFree__internal_alias(buf);
                return(-1);
            }
     c = xmlCurrentChar__internal_alias(ctxt, &l);
 }
    }

    if ((ctxt->input == input) && (ctxt->input->cur >= ctxt->input->end)) {
        xmlPopInput__internal_alias(ctxt);
    } else if (!(((c) < 0x100) ? (((0x9 <= ((c))) && (((c)) <= 0xa)) || (((c)) == 0xd) || (0x20 <= ((c)))) : (((0x100 <= (c)) && ((c) <= 0xd7ff)) || ((0xe000 <= (c)) && ((c) <= 0xfffd)) || ((0x10000 <= (c)) && ((c) <= 0x10ffff))))) {
        xmlFatalErrMsgInt(ctxt, XML_ERR_INVALID_CHAR,
                          "xmlLoadEntityContent: invalid char value %d\n",
                   c);
 xmlBufferFree__internal_alias(buf);
 return(-1);
    }
    entity->content = buf->content;
    buf->content = 
# 8060 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 8060 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ;
    xmlBufferFree__internal_alias(buf);

    return(0);
}
# 8097 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static xmlEntityPtr
xmlParseStringPEReference(xmlParserCtxtPtr ctxt, const xmlChar **str) {
    const xmlChar *ptr;
    xmlChar cur;
    xmlChar *name;
    xmlEntityPtr entity = 
# 8102 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 8102 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             ;

    if ((str == 
# 8104 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 8104 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) || (*str == 
# 8104 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                 ((void *)0)
# 8104 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                     )) return(
# 8104 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 8104 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   );
    ptr = *str;
    cur = *ptr;
    if (cur != '%')
        return(
# 8108 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 8108 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );
    ptr++;
    name = xmlParseStringName(ctxt, &ptr);
    if (name == 
# 8111 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 8111 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
 xmlFatalErrMsg(ctxt, XML_ERR_NAME_REQUIRED,
         "xmlParseStringPEReference: no name\n");
 *str = ptr;
 return(
# 8115 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 8115 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    cur = *ptr;
    if (cur != ';') {
 xmlFatalErr(ctxt, XML_ERR_ENTITYREF_SEMICOL_MISSING, 
# 8119 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                     ((void *)0)
# 8119 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                         );
 xmlFree(name);
 *str = ptr;
 return(
# 8122 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 8122 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    ptr++;




    ctxt->nbentities++;




    if ((ctxt->sax != 
# 8134 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 8134 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) &&
 (ctxt->sax->getParameterEntity != 
# 8135 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                  ((void *)0)
# 8135 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                      ))
 entity = ctxt->sax->getParameterEntity(ctxt->userData,
            name);
    if (entity == 
# 8138 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 8138 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) {
# 8147 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
 if ((ctxt->standalone == 1) ||
     ((ctxt->hasExternalSubset == 0) && (ctxt->hasPErefs == 0))) {
     xmlFatalErrMsgStr(ctxt, XML_ERR_UNDECLARED_ENTITY,
   "PEReference: %%%s; not found\n", name);
 } else {







     xmlWarningMsg(ctxt, XML_WAR_UNDECLARED_ENTITY,
     "PEReference: %%%s; not found\n",
     name, 
# 8161 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
          ((void *)0)
# 8161 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
              );
     ctxt->valid = 0;
 }
    } else {



 if ((entity->etype != XML_INTERNAL_PARAMETER_ENTITY) &&
     (entity->etype != XML_EXTERNAL_PARAMETER_ENTITY)) {
     xmlWarningMsg(ctxt, XML_WAR_UNDECLARED_ENTITY,
     "%%%s; is not a parameter entity\n",
     name, 
# 8172 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
          ((void *)0)
# 8172 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
              );
 }
    }
    ctxt->hasPErefs = 1;
    xmlFree(name);
    *str = ptr;
    return(entity);
}
# 8195 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlParseDocTypeDecl__internal_alias(xmlParserCtxtPtr ctxt) {
    const xmlChar *name = 
# 8197 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 8197 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             ;
    xmlChar *ExternalID = 
# 8198 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 8198 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             ;
    xmlChar *URI = 
# 8199 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 8199 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ;




    do { ctxt->nbChars += (9),ctxt->input->cur += (9),ctxt->input->col+=(9); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);

    xmlSkipBlankChars__internal_alias(ctxt);




    name = xmlParseName__internal_alias(ctxt);
    if (name == 
# 8212 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 8212 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
 xmlFatalErrMsg(ctxt, XML_ERR_NAME_REQUIRED,
         "xmlParseDocTypeDecl : no DOCTYPE name !\n");
    }
    ctxt->intSubName = name;

    xmlSkipBlankChars__internal_alias(ctxt);




    URI = xmlParseExternalID__internal_alias(ctxt, &ExternalID, 1);

    if ((URI != 
# 8225 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 8225 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) || (ExternalID != 
# 8225 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                       ((void *)0)
# 8225 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                           )) {
        ctxt->hasExternalSubset = 1;
    }
    ctxt->extSubURI = URI;
    ctxt->extSubSystem = ExternalID;

    xmlSkipBlankChars__internal_alias(ctxt);




    if ((ctxt->sax != 
# 8236 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 8236 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) && (ctxt->sax->internalSubset != 
# 8236 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                            ((void *)0)
# 8236 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                                ) &&
 (!ctxt->disableSAX))
 ctxt->sax->internalSubset(ctxt->userData, name, ExternalID, URI);





    if ((*ctxt->input->cur) == '[')
 return;




    if ((*ctxt->input->cur) != '>') {
 xmlFatalErr(ctxt, XML_ERR_DOCTYPE_NOT_FINISHED, 
# 8251 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                ((void *)0)
# 8251 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                    );
    }
    xmlNextChar__internal_alias(ctxt);
}
# 8265 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void
xmlParseInternalSubset(xmlParserCtxtPtr ctxt) {



    if ((*ctxt->input->cur) == '[') {
        ctxt->instate = XML_PARSER_DTD;
        xmlNextChar__internal_alias(ctxt);





 while (((*ctxt->input->cur) != ']') && (ctxt->instate != XML_PARSER_EOF)) {
     const xmlChar *check = ctxt->input->cur;
     unsigned int cons = ctxt->input->consumed;

     xmlSkipBlankChars__internal_alias(ctxt);
     xmlParseMarkupDecl__internal_alias(ctxt);
     xmlParsePEReference__internal_alias(ctxt);




     while (((*ctxt->input->cur) == 0) && (ctxt->inputNr > 1))
  xmlPopInput__internal_alias(ctxt);

     if ((ctxt->input->cur == check) && (cons == ctxt->input->consumed)) {
  xmlFatalErr(ctxt, XML_ERR_INTERNAL_ERROR,
      "xmlParseInternalSubset: error detected in Markup declaration\n");
  break;
     }
 }
 if ((*ctxt->input->cur) == ']') {
     xmlNextChar__internal_alias(ctxt);
     xmlSkipBlankChars__internal_alias(ctxt);
 }
    }




    if ((*ctxt->input->cur) != '>') {
 xmlFatalErr(ctxt, XML_ERR_DOCTYPE_NOT_FINISHED, 
# 8308 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                ((void *)0)
# 8308 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                    );
    }
    xmlNextChar__internal_alias(ctxt);
}
# 8347 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
const xmlChar *
xmlParseAttribute__internal_alias(xmlParserCtxtPtr ctxt, xmlChar **value) {
    const xmlChar *name;
    xmlChar *val;

    *value = 
# 8352 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 8352 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ;
    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    name = xmlParseName__internal_alias(ctxt);
    if (name == 
# 8355 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 8355 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
 xmlFatalErrMsg(ctxt, XML_ERR_NAME_REQUIRED,
                "error parsing attribute name\n");
        return(
# 8358 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 8358 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );
    }




    xmlSkipBlankChars__internal_alias(ctxt);
    if ((*ctxt->input->cur) == '=') {
        xmlNextChar__internal_alias(ctxt);
 xmlSkipBlankChars__internal_alias(ctxt);
 val = xmlParseAttValue__internal_alias(ctxt);
 ctxt->instate = XML_PARSER_CONTENT;
    } else {
 xmlFatalErrMsgStr(ctxt, XML_ERR_ATTRIBUTE_WITHOUT_VALUE,
        "Specification mandate value for attribute %s\n", name);
 return(
# 8373 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 8373 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }






    if ((ctxt->pedantic) && (xmlStrEqual__internal_alias(name, (xmlChar *) "xml:lang"))) {
 if (!xmlCheckLanguageID__internal_alias(val)) {
     xmlWarningMsg(ctxt, XML_WAR_LANG_VALUE,
            "Malformed value for xml:lang : %s\n",
     val, 
# 8385 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
         ((void *)0)
# 8385 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
             );
 }
    }




    if (xmlStrEqual__internal_alias(name, (xmlChar *) "xml:space")) {
 if (xmlStrEqual__internal_alias(val, (xmlChar *) "default"))
     *(ctxt->space) = 0;
 else if (xmlStrEqual__internal_alias(val, (xmlChar *) "preserve"))
     *(ctxt->space) = 1;
 else {
  xmlWarningMsg(ctxt, XML_WAR_SPACE_VALUE,
"Invalid value \"%s\" for xml:space : \"default\" or \"preserve\" expected\n",
                                 val, 
# 8400 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                     ((void *)0)
# 8400 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                         );
 }
    }

    *value = val;
    return(name);
}
# 8436 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
const xmlChar *
xmlParseStartTag__internal_alias(xmlParserCtxtPtr ctxt) {
    const xmlChar *name;
    const xmlChar *attname;
    xmlChar *attvalue;
    const xmlChar **atts = ctxt->atts;
    int nbatts = 0;
    int maxatts = ctxt->maxatts;
    int i;

    if ((*ctxt->input->cur) != '<') return(
# 8446 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 8446 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              );
    { ctxt->input->col++; ctxt->input->cur++; ctxt->nbChars++; if (*ctxt->input->cur == 0) xmlParserInputGrow__internal_alias(ctxt->input, 250); };

    name = xmlParseName__internal_alias(ctxt);
    if (name == 
# 8450 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 8450 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
 xmlFatalErrMsg(ctxt, XML_ERR_NAME_REQUIRED,
      "xmlParseStartTag: invalid element name\n");
        return(
# 8453 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 8453 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );
    }






    xmlSkipBlankChars__internal_alias(ctxt);
    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;

    while ((((*ctxt->input->cur) != '>') &&
    (((*ctxt->input->cur) != '/') || (ctxt->input->cur[(1)] != '>')) &&
    ((((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd) || (0x20 <= ((*ctxt->input->cur)))))) && (ctxt->instate != XML_PARSER_EOF)) {
 const xmlChar *q = ctxt->input->cur;
 unsigned int cons = ctxt->input->consumed;

 attname = xmlParseAttribute__internal_alias(ctxt, &attvalue);
        if ((attname != 
# 8471 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 8471 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ) && (attvalue != 
# 8471 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                             ((void *)0)
# 8471 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                 )) {





     for (i = 0; i < nbatts;i += 2) {
         if (xmlStrEqual__internal_alias(atts[i], attname)) {
      xmlErrAttributeDup(ctxt, 
# 8479 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                              ((void *)0)
# 8479 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                  , attname);
      xmlFree(attvalue);
      goto failed;
  }
     }



     if (atts == 
# 8487 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 8487 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
         maxatts = 22;
         atts = (const xmlChar **)
         xmlMalloc(maxatts * sizeof(xmlChar *));
  if (atts == 
# 8491 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 8491 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ) {
      xmlErrMemory__internal_alias(ctxt, 
# 8492 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 8492 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            );
      if (attvalue != 
# 8493 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 8493 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         )
   xmlFree(attvalue);
      goto failed;
  }
  ctxt->atts = atts;
  ctxt->maxatts = maxatts;
     } else if (nbatts + 4 > maxatts) {
         const xmlChar **n;

         maxatts *= 2;
         n = (const xmlChar **) xmlRealloc((void *) atts,
          maxatts * sizeof(const xmlChar *));
  if (n == 
# 8505 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
          ((void *)0)
# 8505 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
              ) {
      xmlErrMemory__internal_alias(ctxt, 
# 8506 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 8506 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            );
      if (attvalue != 
# 8507 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 8507 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         )
   xmlFree(attvalue);
      goto failed;
  }
  atts = n;
  ctxt->atts = atts;
  ctxt->maxatts = maxatts;
     }
     atts[nbatts++] = attname;
     atts[nbatts++] = attvalue;
     atts[nbatts] = 
# 8517 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 8517 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ;
     atts[nbatts + 1] = 
# 8518 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 8518 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ;
 } else {
     if (attvalue != 
# 8520 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 8520 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        )
  xmlFree(attvalue);
 }

failed:

 if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);
 if (((*ctxt->input->cur) == '>') || ((((*ctxt->input->cur) == '/') && (ctxt->input->cur[(1)] == '>'))))
     break;
 if (!((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd))) {
     xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
      "attributes construct error\n");
 }
 xmlSkipBlankChars__internal_alias(ctxt);
        if ((cons == ctxt->input->consumed) && (q == ctxt->input->cur) &&
            (attname == 
# 8535 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 8535 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ) && (attvalue == 
# 8535 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                             ((void *)0)
# 8535 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                 )) {
     xmlFatalErrMsg(ctxt, XML_ERR_INTERNAL_ERROR,
      "xmlParseStartTag: problem parsing attributes\n");
     break;
 }
 if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;
        if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    }




    if ((ctxt->sax != 
# 8547 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 8547 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) && (ctxt->sax->startElement != 
# 8547 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                          ((void *)0)
# 8547 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                              ) &&
 (!ctxt->disableSAX)) {
 if (nbatts > 0)
     ctxt->sax->startElement(ctxt->userData, name, atts);
 else
     ctxt->sax->startElement(ctxt->userData, name, 
# 8552 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                  ((void *)0)
# 8552 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                      );
    }

    if (atts != 
# 8555 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 8555 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {

        for (i = 1;i < nbatts;i+=2)
     if (atts[i] != 
# 8558 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 8558 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       )
        xmlFree((xmlChar *) atts[i]);
    }
    return(name);
}
# 8579 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void
xmlParseEndTag1(xmlParserCtxtPtr ctxt, int line) {
    const xmlChar *name;

    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    if (((*ctxt->input->cur) != '<') || (ctxt->input->cur[(1)] != '/')) {
 xmlFatalErrMsg(ctxt, XML_ERR_LTSLASH_REQUIRED,
         "xmlParseEndTag: '</' not found\n");
 return;
    }
    do { ctxt->nbChars += (2),ctxt->input->cur += (2),ctxt->input->col+=(2); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);

    name = xmlParseNameAndCompare(ctxt,ctxt->name);




    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    xmlSkipBlankChars__internal_alias(ctxt);
    if ((!(((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd) || (0x20 <= ((*ctxt->input->cur))))) || ((*ctxt->input->cur) != '>')) {
 xmlFatalErr(ctxt, XML_ERR_GT_REQUIRED, 
# 8599 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                       ((void *)0)
# 8599 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                           );
    } else
 { ctxt->input->col++; ctxt->input->cur++; ctxt->nbChars++; if (*ctxt->input->cur == 0) xmlParserInputGrow__internal_alias(ctxt->input, 250); };







    if (name != (xmlChar*)1) {
        if (name == 
# 8610 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 8610 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) name = (xmlChar *) "unparseable";
        xmlFatalErrMsgStrIntStr(ctxt, XML_ERR_TAG_NAME_MISMATCH,
       "Opening and ending tag mismatch: %s line %d and %s\n",
                  ctxt->name, line, name);
    }




    if ((ctxt->sax != 
# 8619 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 8619 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) && (ctxt->sax->endElement != 
# 8619 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                        ((void *)0)
# 8619 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                            ) &&
 (!ctxt->disableSAX))
        ctxt->sax->endElement(ctxt->userData, ctxt->name);

    namePop__internal_alias(ctxt);
    spacePop(ctxt);
    return;
}
# 8641 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlParseEndTag__internal_alias(xmlParserCtxtPtr ctxt) {
    xmlParseEndTag1(ctxt, 0);
}
# 8663 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static const xmlChar *
xmlGetNamespace(xmlParserCtxtPtr ctxt, const xmlChar *prefix) {
    int i;

    if (prefix == ctxt->str_xml) return(ctxt->str_xml_ns);
    for (i = ctxt->nsNr - 2;i >= 0;i-=2)
        if (ctxt->nsTab[i] == prefix) {
     if ((prefix == 
# 8670 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 8670 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) && (*ctxt->nsTab[i + 1] == 0))
         return(
# 8671 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 8671 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
     return(ctxt->nsTab[i + 1]);
 }
    return(
# 8674 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
          ((void *)0)
# 8674 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
              );
}
# 8691 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static const xmlChar *
xmlParseQName(xmlParserCtxtPtr ctxt, const xmlChar **prefix) {
    const xmlChar *l, *p;

    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;

    l = xmlParseNCName(ctxt);
    if (l == 
# 8698 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 8698 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ) {
        if ((*ctxt->input->cur) == ':') {
     l = xmlParseName__internal_alias(ctxt);
     if (l != 
# 8701 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 8701 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ) {
         xmlNsErr(ctxt, XML_NS_ERR_QNAME,
           "Failed to parse QName '%s'\n", l, 
# 8703 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                             ((void *)0)
# 8703 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                 , 
# 8703 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                   ((void *)0)
# 8703 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                       );
  *prefix = 
# 8704 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 8704 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               ;
  return(l);
     }
 }
        return(
# 8708 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 8708 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );
    }
    if ((*ctxt->input->cur) == ':') {
        xmlNextChar__internal_alias(ctxt);
 p = l;
 l = xmlParseNCName(ctxt);
 if (l == 
# 8714 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
         ((void *)0)
# 8714 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
             ) {
     xmlChar *tmp;

            xmlNsErr(ctxt, XML_NS_ERR_QNAME,
              "Failed to parse QName '%s:'\n", p, 
# 8718 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                 ((void *)0)
# 8718 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                     , 
# 8718 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                       ((void *)0)
# 8718 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                           );
     l = xmlParseNmtoken__internal_alias(ctxt);
     if (l == 
# 8720 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 8720 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 )
  tmp = xmlBuildQName__internal_alias((xmlChar *) "", p, 
# 8721 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                     ((void *)0)
# 8721 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                         , 0);
     else {
  tmp = xmlBuildQName__internal_alias(l, p, 
# 8723 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 8723 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               , 0);
  xmlFree((char *)l);
     }
     p = xmlDictLookup__internal_alias(ctxt->dict, tmp, -1);
     if (tmp != 
# 8727 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 8727 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) xmlFree(tmp);
     *prefix = 
# 8728 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 8728 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ;
     return(p);
 }
 if ((*ctxt->input->cur) == ':') {
     xmlChar *tmp;

            xmlNsErr(ctxt, XML_NS_ERR_QNAME,
              "Failed to parse QName '%s:%s:'\n", p, l, 
# 8735 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                       ((void *)0)
# 8735 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                           );
     xmlNextChar__internal_alias(ctxt);
     tmp = (xmlChar *) xmlParseName__internal_alias(ctxt);
     if (tmp != 
# 8738 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 8738 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
         tmp = xmlBuildQName__internal_alias(tmp, l, 
# 8739 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                    ((void *)0)
# 8739 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                        , 0);
  l = xmlDictLookup__internal_alias(ctxt->dict, tmp, -1);
  if (tmp != 
# 8741 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 8741 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ) xmlFree(tmp);
  *prefix = p;
  return(l);
     }
     tmp = xmlBuildQName__internal_alias((xmlChar *) "", l, 
# 8745 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                        ((void *)0)
# 8745 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                            , 0);
     l = xmlDictLookup__internal_alias(ctxt->dict, tmp, -1);
     if (tmp != 
# 8747 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 8747 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) xmlFree(tmp);
     *prefix = p;
     return(l);
 }
 *prefix = p;
    } else
        *prefix = 
# 8753 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 8753 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ;
    return(l);
}
# 8770 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static const xmlChar *
xmlParseQNameAndCompare(xmlParserCtxtPtr ctxt, xmlChar const *name,
                        xmlChar const *prefix) {
    const xmlChar *cmp;
    const xmlChar *in;
    const xmlChar *ret;
    const xmlChar *prefix2;

    if (prefix == 
# 8778 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 8778 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) return(xmlParseNameAndCompare(ctxt, name));

    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    in = ctxt->input->cur;

    cmp = prefix;
    while (*in != 0 && *in == *cmp) {
 ++in;
 ++cmp;
    }
    if ((*cmp == 0) && (*in == ':')) {
        in++;
 cmp = name;
 while (*in != 0 && *in == *cmp) {
     ++in;
     ++cmp;
 }
 if (*cmp == 0 && (*in == '>' || (((*in) == 0x20) || ((0x9 <= (*in)) && ((*in) <= 0xa)) || ((*in) == 0xd)))) {

     ctxt->input->cur = in;
     return((const xmlChar*) 1);
 }
    }



    ret = xmlParseQName (ctxt, &prefix2);
    if ((ret == name) && (prefix == prefix2))
 return((const xmlChar*) 1);
    return ret;
}
# 8844 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static xmlChar *
xmlParseAttValueInternal(xmlParserCtxtPtr ctxt, int *len, int *alloc,
                         int normalize)
{
    xmlChar limit = 0;
    const xmlChar *in = 
# 8849 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 8849 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           , *start, *end, *last;
    xmlChar *ret = 
# 8850 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 8850 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ;

    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    in = (xmlChar *) ctxt->input->cur;
    if (*in != '"' && *in != '\'') {
        xmlFatalErr(ctxt, XML_ERR_ATTRIBUTE_NOT_STARTED, 
# 8855 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                        ((void *)0)
# 8855 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                            );
        return (
# 8856 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 8856 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    }
    ctxt->instate = XML_PARSER_ATTRIBUTE_VALUE;






    limit = *in++;
    end = ctxt->input->end;
    start = in;
    if (in >= end) {
        const xmlChar *oldbase = ctxt->input->base;
 if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
 if (oldbase != ctxt->input->base) {
     long delta = ctxt->input->base - oldbase;
     start = start + delta;
     in = in + delta;
 }
 end = ctxt->input->end;
    }
    if (normalize) {



 while ((in < end) && (*in != limit) &&
        ((*in == 0x20) || (*in == 0x9) ||
         (*in == 0xA) || (*in == 0xD))) {
     in++;
     start = in;
     if (in >= end) {
  const xmlChar *oldbase = ctxt->input->base;
  if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
                if (ctxt->instate == XML_PARSER_EOF)
                    return(
# 8891 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 8891 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              );
  if (oldbase != ctxt->input->base) {
      long delta = ctxt->input->base - oldbase;
      start = start + delta;
      in = in + delta;
  }
  end = ctxt->input->end;
                if (((in - start) > 10000000) &&
                    ((ctxt->options & XML_PARSE_HUGE) == 0)) {
                    xmlFatalErrMsg(ctxt, XML_ERR_ATTRIBUTE_NOT_FINISHED,
                                   "AttValue lenght too long\n");
                    return(
# 8902 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 8902 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              );
                }
     }
 }
 while ((in < end) && (*in != limit) && (*in >= 0x20) &&
        (*in <= 0x7f) && (*in != '&') && (*in != '<')) {
     if ((*in++ == 0x20) && (*in == 0x20)) break;
     if (in >= end) {
  const xmlChar *oldbase = ctxt->input->base;
  if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
                if (ctxt->instate == XML_PARSER_EOF)
                    return(
# 8913 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 8913 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              );
  if (oldbase != ctxt->input->base) {
      long delta = ctxt->input->base - oldbase;
      start = start + delta;
      in = in + delta;
  }
  end = ctxt->input->end;
                if (((in - start) > 10000000) &&
                    ((ctxt->options & XML_PARSE_HUGE) == 0)) {
                    xmlFatalErrMsg(ctxt, XML_ERR_ATTRIBUTE_NOT_FINISHED,
                                   "AttValue lenght too long\n");
                    return(
# 8924 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 8924 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              );
                }
     }
 }
 last = in;



 while ((last[-1] == 0x20) && (last > start)) last--;
 while ((in < end) && (*in != limit) &&
        ((*in == 0x20) || (*in == 0x9) ||
         (*in == 0xA) || (*in == 0xD))) {
     in++;
     if (in >= end) {
  const xmlChar *oldbase = ctxt->input->base;
  if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
                if (ctxt->instate == XML_PARSER_EOF)
                    return(
# 8941 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 8941 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              );
  if (oldbase != ctxt->input->base) {
      long delta = ctxt->input->base - oldbase;
      start = start + delta;
      in = in + delta;
      last = last + delta;
  }
  end = ctxt->input->end;
                if (((in - start) > 10000000) &&
                    ((ctxt->options & XML_PARSE_HUGE) == 0)) {
                    xmlFatalErrMsg(ctxt, XML_ERR_ATTRIBUTE_NOT_FINISHED,
                                   "AttValue lenght too long\n");
                    return(
# 8953 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 8953 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              );
                }
     }
 }
        if (((in - start) > 10000000) &&
            ((ctxt->options & XML_PARSE_HUGE) == 0)) {
            xmlFatalErrMsg(ctxt, XML_ERR_ATTRIBUTE_NOT_FINISHED,
                           "AttValue lenght too long\n");
            return(
# 8961 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 8961 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      );
        }
 if (*in != limit) goto need_complex;
    } else {
 while ((in < end) && (*in != limit) && (*in >= 0x20) &&
        (*in <= 0x7f) && (*in != '&') && (*in != '<')) {
     in++;
     if (in >= end) {
  const xmlChar *oldbase = ctxt->input->base;
  if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
                if (ctxt->instate == XML_PARSER_EOF)
                    return(
# 8972 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 8972 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              );
  if (oldbase != ctxt->input->base) {
      long delta = ctxt->input->base - oldbase;
      start = start + delta;
      in = in + delta;
  }
  end = ctxt->input->end;
                if (((in - start) > 10000000) &&
                    ((ctxt->options & XML_PARSE_HUGE) == 0)) {
                    xmlFatalErrMsg(ctxt, XML_ERR_ATTRIBUTE_NOT_FINISHED,
                                   "AttValue lenght too long\n");
                    return(
# 8983 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 8983 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              );
                }
     }
 }
 last = in;
        if (((in - start) > 10000000) &&
            ((ctxt->options & XML_PARSE_HUGE) == 0)) {
            xmlFatalErrMsg(ctxt, XML_ERR_ATTRIBUTE_NOT_FINISHED,
                           "AttValue lenght too long\n");
            return(
# 8992 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 8992 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      );
        }
 if (*in != limit) goto need_complex;
    }
    in++;
    if (len != 
# 8997 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 8997 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
        *len = last - start;
        ret = (xmlChar *) start;
    } else {
        if (alloc) *alloc = 1;
        ret = xmlStrndup__internal_alias(start, last - start);
    }
    ctxt->input->cur = in;
    if (alloc) *alloc = 0;
    return ret;
need_complex:
    if (alloc) *alloc = 1;
    return xmlParseAttValueComplex(ctxt, len, normalize);
}
# 9027 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static const xmlChar *
xmlParseAttribute2(xmlParserCtxtPtr ctxt,
                   const xmlChar * pref, const xmlChar * elem,
                   const xmlChar ** prefix, xmlChar ** value,
                   int *len, int *alloc)
{
    const xmlChar *name;
    xmlChar *val, *internal_val = 
# 9034 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                 ((void *)0)
# 9034 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                     ;
    int normalize = 0;

    *value = 
# 9037 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 9037 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ;
    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    name = xmlParseQName(ctxt, prefix);
    if (name == 
# 9040 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 9040 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
        xmlFatalErrMsg(ctxt, XML_ERR_NAME_REQUIRED,
                       "error parsing attribute name\n");
        return (
# 9043 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 9043 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    }




    if (ctxt->attsSpecial != 
# 9049 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 9049 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                ) {
        int type;

        type = (int) (long) xmlHashQLookup2__internal_alias(ctxt->attsSpecial,
                                            pref, elem, *prefix, name);
        if (type != 0)
            normalize = 1;
    }




    xmlSkipBlankChars__internal_alias(ctxt);
    if ((*ctxt->input->cur) == '=') {
        xmlNextChar__internal_alias(ctxt);
        xmlSkipBlankChars__internal_alias(ctxt);
        val = xmlParseAttValueInternal(ctxt, len, alloc, normalize);
 if (normalize) {






     if (*alloc) {
         const xmlChar *val2;

         val2 = xmlAttrNormalizeSpace2(ctxt, val, len);
  if ((val2 != 
# 9077 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 9077 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) && (val2 != val)) {
      xmlFree(val);
      val = (xmlChar *) val2;
  }
     }
 }
        ctxt->instate = XML_PARSER_CONTENT;
    } else {
        xmlFatalErrMsgStr(ctxt, XML_ERR_ATTRIBUTE_WITHOUT_VALUE,
                          "Specification mandate value for attribute %s\n",
                          name);
        return (
# 9088 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 9088 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    }

    if (*prefix == ctxt->str_xml) {





        if ((ctxt->pedantic) && (xmlStrEqual__internal_alias(name, (xmlChar *) "lang"))) {
            internal_val = xmlStrndup__internal_alias(val, *len);
            if (!xmlCheckLanguageID__internal_alias(internal_val)) {
                xmlWarningMsg(ctxt, XML_WAR_LANG_VALUE,
                              "Malformed value for xml:lang : %s\n",
                              internal_val, 
# 9102 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                           ((void *)0)
# 9102 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                               );
            }
        }




        if (xmlStrEqual__internal_alias(name, (xmlChar *) "space")) {
            internal_val = xmlStrndup__internal_alias(val, *len);
            if (xmlStrEqual__internal_alias(internal_val, (xmlChar *) "default"))
                *(ctxt->space) = 0;
            else if (xmlStrEqual__internal_alias(internal_val, (xmlChar *) "preserve"))
                *(ctxt->space) = 1;
            else {
                xmlWarningMsg(ctxt, XML_WAR_SPACE_VALUE,
                              "Invalid value \"%s\" for xml:space : \"default\" or \"preserve\" expected\n",
                              internal_val, 
# 9118 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                           ((void *)0)
# 9118 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                               );
            }
        }
        if (internal_val) {
            xmlFree(internal_val);
        }
    }

    *value = val;
    return (name);
}
# 9158 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static const xmlChar *
xmlParseStartTag2(xmlParserCtxtPtr ctxt, const xmlChar **pref,
                  const xmlChar **URI, int *tlen) {
    const xmlChar *localname;
    const xmlChar *prefix;
    const xmlChar *attname;
    const xmlChar *aprefix;
    const xmlChar *nsname;
    xmlChar *attvalue;
    const xmlChar **atts = ctxt->atts;
    int maxatts = ctxt->maxatts;
    int nratts, nbatts, nbdef;
    int i, j, nbNs, attval, oldline, oldcol;
    const xmlChar *base;
    unsigned long cur;
    int nsNr = ctxt->nsNr;

    if ((*ctxt->input->cur) != '<') return(
# 9175 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 9175 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              );
    { ctxt->input->col++; ctxt->input->cur++; ctxt->nbChars++; if (*ctxt->input->cur == 0) xmlParserInputGrow__internal_alias(ctxt->input, 250); };
# 9185 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
reparse:
    if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;
    base = ctxt->input->base;
    cur = ctxt->input->cur - ctxt->input->base;
    oldline = ctxt->input->line;
    oldcol = ctxt->input->col;
    nbatts = 0;
    nratts = 0;
    nbdef = 0;
    nbNs = 0;
    attval = 0;

    ctxt->nsNr = nsNr;

    localname = xmlParseQName(ctxt, &prefix);
    if (localname == 
# 9200 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 9200 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ) {
 xmlFatalErrMsg(ctxt, XML_ERR_NAME_REQUIRED,
         "StartTag: invalid element name\n");
        return(
# 9203 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 9203 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );
    }
    *tlen = ctxt->input->cur - ctxt->input->base - cur;






    xmlSkipBlankChars__internal_alias(ctxt);
    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    if (ctxt->input->base != base) goto base_changed;

    while ((((*ctxt->input->cur) != '>') &&
    (((*ctxt->input->cur) != '/') || (ctxt->input->cur[(1)] != '>')) &&
    ((((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd) || (0x20 <= ((*ctxt->input->cur)))))) && (ctxt->instate != XML_PARSER_EOF)) {
 const xmlChar *q = ctxt->input->cur;
 unsigned int cons = ctxt->input->consumed;
 int len = -1, alloc = 0;

 attname = xmlParseAttribute2(ctxt, prefix, localname,
                              &aprefix, &attvalue, &len, &alloc);
 if (ctxt->input->base != base) {
     if ((attvalue != 
# 9226 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 9226 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) && (alloc != 0))
         xmlFree(attvalue);
     attvalue = 
# 9228 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 9228 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ;
     goto base_changed;
 }
        if ((attname != 
# 9231 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 9231 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ) && (attvalue != 
# 9231 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                             ((void *)0)
# 9231 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                 )) {
     if (len < 0) len = xmlStrlen__internal_alias(attvalue);
            if ((attname == ctxt->str_xmlns) && (aprefix == 
# 9233 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                           ((void *)0)
# 9233 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                               )) {
         const xmlChar *URL = xmlDictLookup__internal_alias(ctxt->dict, attvalue, len);
  xmlURIPtr uri;

                if (*URL != 0) {
      uri = xmlParseURI__internal_alias((const char *) URL);
      if (uri == 
# 9239 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 9239 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
   xmlNsErr(ctxt, XML_WAR_NS_URI,
            "xmlns: '%s' is not a valid URI\n",
        URL, 
# 9242 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 9242 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                , 
# 9242 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 9242 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      );
      } else {
   if (uri->scheme == 
# 9244 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 9244 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) {
       xmlNsWarn(ctxt, XML_WAR_NS_URI_RELATIVE,
          "xmlns: URI %s is not absolute\n",
          URL, 
# 9247 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 9247 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  , 
# 9247 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 9247 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        );
   }
   xmlFreeURI__internal_alias(uri);
      }
      if (URL == ctxt->str_xml_ns) {
   if (attname != ctxt->str_xml) {
       xmlNsErr(ctxt, XML_NS_ERR_XML_NAMESPACE,
    "xml namespace URI cannot be the default namespace\n",
         
# 9255 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 9255 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
            , 
# 9255 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 9255 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  , 
# 9255 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 9255 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        );
   }
   goto skip_default_ns;
      }
      if ((len == 29) &&
   (xmlStrEqual__internal_alias(URL,
     (xmlChar *) "http://www.w3.org/2000/xmlns/"))) {
   xmlNsErr(ctxt, XML_NS_ERR_XML_NAMESPACE,
        "reuse of the xmlns namespace name is forbidden\n",
     
# 9264 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
    ((void *)0)
# 9264 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
        , 
# 9264 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
          ((void *)0)
# 9264 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
              , 
# 9264 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 9264 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    );
   goto skip_default_ns;
      }
  }



  for (j = 1;j <= nbNs;j++)
      if (ctxt->nsTab[ctxt->nsNr - 2 * j] == 
# 9272 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                            ((void *)0)
# 9272 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                )
   break;
  if (j <= nbNs)
      xmlErrAttributeDup(ctxt, 
# 9275 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                              ((void *)0)
# 9275 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                  , attname);
  else
      if (nsPush(ctxt, 
# 9277 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 9277 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          , URL) > 0) nbNs++;
skip_default_ns:
  if (alloc != 0) xmlFree(attvalue);
  xmlSkipBlankChars__internal_alias(ctxt);
  continue;
     }
            if (aprefix == ctxt->str_xmlns) {
         const xmlChar *URL = xmlDictLookup__internal_alias(ctxt->dict, attvalue, len);
  xmlURIPtr uri;

                if (attname == ctxt->str_xml) {
      if (URL != ctxt->str_xml_ns) {
          xmlNsErr(ctxt, XML_NS_ERR_XML_NAMESPACE,
            "xml namespace prefix mapped to wrong URI\n",
            
# 9291 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 9291 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               , 
# 9291 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 9291 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     , 
# 9291 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 9291 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           );
      }



      goto skip_ns;
  }
                if (URL == ctxt->str_xml_ns) {
      if (attname != ctxt->str_xml) {
          xmlNsErr(ctxt, XML_NS_ERR_XML_NAMESPACE,
            "xml namespace URI mapped to wrong prefix\n",
            
# 9302 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 9302 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               , 
# 9302 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 9302 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     , 
# 9302 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 9302 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           );
      }
      goto skip_ns;
  }
                if (attname == ctxt->str_xmlns) {
      xmlNsErr(ctxt, XML_NS_ERR_XML_NAMESPACE,
        "redefinition of the xmlns prefix is forbidden\n",
        
# 9309 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 9309 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           , 
# 9309 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 9309 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 , 
# 9309 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 9309 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       );
      goto skip_ns;
  }
  if ((len == 29) &&
      (xmlStrEqual__internal_alias(URL,
                   (xmlChar *) "http://www.w3.org/2000/xmlns/"))) {
      xmlNsErr(ctxt, XML_NS_ERR_XML_NAMESPACE,
        "reuse of the xmlns namespace name is forbidden\n",
        
# 9317 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 9317 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           , 
# 9317 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 9317 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 , 
# 9317 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 9317 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       );
      goto skip_ns;
  }
  if ((URL == 
# 9320 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 9320 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ) || (URL[0] == 0)) {
      xmlNsErr(ctxt, XML_NS_ERR_XML_NAMESPACE,
               "xmlns:%s: Empty XML namespace is not allowed\n",
             attname, 
# 9323 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 9323 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         , 
# 9323 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 9323 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               );
      goto skip_ns;
  } else {
      uri = xmlParseURI__internal_alias((const char *) URL);
      if (uri == 
# 9327 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 9327 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
   xmlNsErr(ctxt, XML_WAR_NS_URI,
        "xmlns:%s: '%s' is not a valid URI\n",
        attname, URL, 
# 9330 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 9330 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         );
      } else {
   if ((ctxt->pedantic) && (uri->scheme == 
# 9332 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                          ((void *)0)
# 9332 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                              )) {
       xmlNsWarn(ctxt, XML_WAR_NS_URI_RELATIVE,
          "xmlns:%s: URI %s is not absolute\n",
          attname, URL, 
# 9335 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 9335 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           );
   }
   xmlFreeURI__internal_alias(uri);
      }
  }




  for (j = 1;j <= nbNs;j++)
      if (ctxt->nsTab[ctxt->nsNr - 2 * j] == attname)
   break;
  if (j <= nbNs)
      xmlErrAttributeDup(ctxt, aprefix, attname);
  else
      if (nsPush(ctxt, attname, URL) > 0) nbNs++;
skip_ns:
  if (alloc != 0) xmlFree(attvalue);
  xmlSkipBlankChars__internal_alias(ctxt);
  if (ctxt->input->base != base) goto base_changed;
  continue;
     }




     if ((atts == 
# 9361 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 9361 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) || (nbatts + 5 > maxatts)) {
         if (xmlCtxtGrowAttrs(ctxt, nbatts + 5) < 0) {
      if (attvalue[len] == 0)
   xmlFree(attvalue);
      goto failed;
  }
         maxatts = ctxt->maxatts;
  atts = ctxt->atts;
     }
     ctxt->attallocs[nratts++] = alloc;
     atts[nbatts++] = attname;
     atts[nbatts++] = aprefix;
     atts[nbatts++] = 
# 9373 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 9373 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ;
     atts[nbatts++] = attvalue;
     attvalue += len;
     atts[nbatts++] = attvalue;



     if (alloc != 0) attval = 1;
 } else {
     if ((attvalue != 
# 9382 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 9382 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) && (attvalue[len] == 0))
  xmlFree(attvalue);
 }

failed:

 if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);
        if (ctxt->instate == XML_PARSER_EOF)
            break;
 if (ctxt->input->base != base) goto base_changed;
 if (((*ctxt->input->cur) == '>') || ((((*ctxt->input->cur) == '/') && (ctxt->input->cur[(1)] == '>'))))
     break;
 if (!((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd))) {
     xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
      "attributes construct error\n");
     break;
 }
 xmlSkipBlankChars__internal_alias(ctxt);
        if ((cons == ctxt->input->consumed) && (q == ctxt->input->cur) &&
            (attname == 
# 9401 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 9401 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ) && (attvalue == 
# 9401 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                             ((void *)0)
# 9401 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                 )) {
     xmlFatalErr(ctxt, XML_ERR_INTERNAL_ERROR,
          "xmlParseStartTag: problem parsing attributes\n");
     break;
 }
        if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
 if (ctxt->input->base != base) goto base_changed;
    }




    if (ctxt->attsDefault != 
# 9413 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 9413 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                ) {
        xmlDefAttrsPtr defaults;

 defaults = xmlHashLookup2__internal_alias(ctxt->attsDefault, localname, prefix);
 if (defaults != 
# 9417 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 9417 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
     for (i = 0;i < defaults->nbAttrs;i++) {
         attname = defaults->values[5 * i];
  aprefix = defaults->values[5 * i + 1];




  if ((attname == ctxt->str_xmlns) && (aprefix == 
# 9425 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                 ((void *)0)
# 9425 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                     )) {



      for (j = 1;j <= nbNs;j++)
          if (ctxt->nsTab[ctxt->nsNr - 2 * j] == 
# 9430 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                ((void *)0)
# 9430 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                    )
       break;
             if (j <= nbNs) continue;

      nsname = xmlGetNamespace(ctxt, 
# 9434 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                    ((void *)0)
# 9434 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                        );
      if (nsname != defaults->values[5 * i + 2]) {
   if (nsPush(ctxt, 
# 9436 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 9436 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ,
              defaults->values[5 * i + 2]) > 0)
       nbNs++;
      }
  } else if (aprefix == ctxt->str_xmlns) {



      for (j = 1;j <= nbNs;j++)
          if (ctxt->nsTab[ctxt->nsNr - 2 * j] == attname)
       break;
             if (j <= nbNs) continue;

      nsname = xmlGetNamespace(ctxt, attname);
      if (nsname != defaults->values[2]) {
   if (nsPush(ctxt, attname,
              defaults->values[5 * i + 2]) > 0)
       nbNs++;
      }
  } else {



      for (j = 0;j < nbatts;j+=5) {
   if ((attname == atts[j]) && (aprefix == atts[j+1]))
       break;
      }
      if (j < nbatts) continue;

      if ((atts == 
# 9465 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 9465 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) || (nbatts + 5 > maxatts)) {
   if (xmlCtxtGrowAttrs(ctxt, nbatts + 5) < 0) {
       return(
# 9467 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 9467 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 );
   }
   maxatts = ctxt->maxatts;
   atts = ctxt->atts;
      }
      atts[nbatts++] = attname;
      atts[nbatts++] = aprefix;
      if (aprefix == 
# 9474 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 9474 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        )
   atts[nbatts++] = 
# 9475 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 9475 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ;
      else
          atts[nbatts++] = xmlGetNamespace(ctxt, aprefix);
      atts[nbatts++] = defaults->values[5 * i + 2];
      atts[nbatts++] = defaults->values[5 * i + 3];
      if ((ctxt->standalone == 1) &&
          (defaults->values[5 * i + 4] != 
# 9481 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                         ((void *)0)
# 9481 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                             )) {
   xmlValidityError(ctxt, XML_DTD_STANDALONE_DEFAULTED,
   "standalone: attribute %s on %s defaulted from external subset\n",
                                  attname, localname);
      }
      nbdef++;
  }
     }
 }
    }




    for (i = 0; i < nbatts;i += 5) {



 if (atts[i + 1] != 
# 9499 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 9499 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) {
     nsname = xmlGetNamespace(ctxt, atts[i + 1]);
     if (nsname == 
# 9501 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 9501 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) {
  xmlNsErr(ctxt, XML_NS_ERR_UNDEFINED_NAMESPACE,
      "Namespace prefix %s for %s on %s is not defined\n",
      atts[i + 1], atts[i], localname);
     }
     atts[i + 2] = nsname;
 } else
     nsname = 
# 9508 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 9508 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ;






        for (j = 0; j < i;j += 5) {
     if (atts[i] == atts[j]) {
         if (atts[i+1] == atts[j+1]) {
      xmlErrAttributeDup(ctxt, atts[i+1], atts[i]);
      break;
  }
  if ((nsname != 
# 9521 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 9521 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) && (atts[j + 2] == nsname)) {
      xmlNsErr(ctxt, XML_NS_ERR_ATTRIBUTE_REDEFINED,
        "Namespaced Attribute %s in '%s' redefined\n",
        atts[i], nsname, 
# 9524 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 9524 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            );
      break;
  }
     }
 }
    }

    nsname = xmlGetNamespace(ctxt, prefix);
    if ((prefix != 
# 9532 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 9532 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) && (nsname == 
# 9532 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                      ((void *)0)
# 9532 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                          )) {
 xmlNsErr(ctxt, XML_NS_ERR_UNDEFINED_NAMESPACE,
          "Namespace prefix %s on %s is not defined\n",
   prefix, localname, 
# 9535 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 9535 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         );
    }
    *pref = prefix;
    *URI = nsname;




    if ((ctxt->sax != 
# 9543 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 9543 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) && (ctxt->sax->startElementNs != 
# 9543 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                            ((void *)0)
# 9543 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                                ) &&
 (!ctxt->disableSAX)) {
 if (nbNs > 0)
     ctxt->sax->startElementNs(ctxt->userData, localname, prefix,
     nsname, nbNs, &ctxt->nsTab[ctxt->nsNr - 2 * nbNs],
     nbatts / 5, nbdef, atts);
 else
     ctxt->sax->startElementNs(ctxt->userData, localname, prefix,
                   nsname, 0, 
# 9551 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                             ((void *)0)
# 9551 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                 , nbatts / 5, nbdef, atts);
    }




    if (attval != 0) {
 for (i = 3,j = 0; j < nratts;i += 5,j++)
     if ((ctxt->attallocs[j] != 0) && (atts[i] != 
# 9559 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                 ((void *)0)
# 9559 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                     ))
         xmlFree((xmlChar *) atts[i]);
    }

    return(localname);

base_changed:



    if (attval != 0) {
 for (i = 3,j = 0; j < nratts;i += 5,j++)
     if ((ctxt->attallocs[j] != 0) && (atts[i] != 
# 9571 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                 ((void *)0)
# 9571 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                     ))
         xmlFree((xmlChar *) atts[i]);
    }
    ctxt->input->cur = ctxt->input->base + cur;
    ctxt->input->line = oldline;
    ctxt->input->col = oldcol;
    if (ctxt->wellFormed == 1) {
 goto reparse;
    }
    return(
# 9580 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
          ((void *)0)
# 9580 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
              );
}
# 9598 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void
xmlParseEndTag2(xmlParserCtxtPtr ctxt, const xmlChar *prefix,
                const xmlChar *URI, int line, int nsNr, int tlen) {
    const xmlChar *name;

    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    if (((*ctxt->input->cur) != '<') || (ctxt->input->cur[(1)] != '/')) {
 xmlFatalErr(ctxt, XML_ERR_LTSLASH_REQUIRED, 
# 9605 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                            ((void *)0)
# 9605 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                );
 return;
    }
    do { ctxt->nbChars += (2),ctxt->input->cur += (2),ctxt->input->col+=(2); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);

    if ((tlen > 0) && (xmlStrncmp__internal_alias(ctxt->input->cur, ctxt->name, tlen) == 0)) {
        if (ctxt->input->cur[tlen] == '>') {
     ctxt->input->cur += tlen + 1;
     goto done;
 }
 ctxt->input->cur += tlen;
 name = (xmlChar*)1;
    } else {
 if (prefix == 
# 9618 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 9618 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
     name = xmlParseNameAndCompare(ctxt, ctxt->name);
 else
     name = xmlParseQNameAndCompare(ctxt, ctxt->name, prefix);
    }




    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    if (ctxt->instate == XML_PARSER_EOF)
        return;
    xmlSkipBlankChars__internal_alias(ctxt);
    if ((!(((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd) || (0x20 <= ((*ctxt->input->cur))))) || ((*ctxt->input->cur) != '>')) {
 xmlFatalErr(ctxt, XML_ERR_GT_REQUIRED, 
# 9632 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                       ((void *)0)
# 9632 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                           );
    } else
 { ctxt->input->col++; ctxt->input->cur++; ctxt->nbChars++; if (*ctxt->input->cur == 0) xmlParserInputGrow__internal_alias(ctxt->input, 250); };







    if (name != (xmlChar*)1) {
        if (name == 
# 9643 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 9643 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) name = (xmlChar *) "unparseable";
        if ((line == 0) && (ctxt->node != 
# 9644 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                         ((void *)0)
# 9644 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                             ))
            line = ctxt->node->line;
        xmlFatalErrMsgStrIntStr(ctxt, XML_ERR_TAG_NAME_MISMATCH,
       "Opening and ending tag mismatch: %s line %d and %s\n",
                  ctxt->name, line, name);
    }




done:
    if ((ctxt->sax != 
# 9655 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 9655 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) && (ctxt->sax->endElementNs != 
# 9655 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                          ((void *)0)
# 9655 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                              ) &&
 (!ctxt->disableSAX))
 ctxt->sax->endElementNs(ctxt->userData, ctxt->name, prefix, URI);

    spacePop(ctxt);
    if (nsNr != 0)
 nsPop(ctxt, nsNr);
    return;
}
# 9679 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlParseCDSect__internal_alias(xmlParserCtxtPtr ctxt) {
    xmlChar *buf = 
# 9681 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 9681 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ;
    int len = 0;
    int size = 100;
    int r, rl;
    int s, sl;
    int cur, l;
    int count = 0;


    if (( ( ( ( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == '<' && ((unsigned char *) ctxt->input->cur)[ 1 ] == '!' && ((unsigned char *) ctxt->input->cur)[ 2 ] == '[' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'C' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'D' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'A' ) && ((unsigned char *) ctxt->input->cur)[ 6 ] == 'T' ) && ((unsigned char *) ctxt->input->cur)[ 7 ] == 'A' ) && ((unsigned char *) ctxt->input->cur)[ 8 ] == '[' )) {
 do { ctxt->nbChars += (9),ctxt->input->cur += (9),ctxt->input->col+=(9); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
    } else
        return;

    ctxt->instate = XML_PARSER_CDATA_SECTION;
    r = xmlCurrentChar__internal_alias(ctxt, &rl);
    if (!(((r) < 0x100) ? (((0x9 <= ((r))) && (((r)) <= 0xa)) || (((r)) == 0xd) || (0x20 <= ((r)))) : (((0x100 <= (r)) && ((r) <= 0xd7ff)) || ((0xe000 <= (r)) && ((r) <= 0xfffd)) || ((0x10000 <= (r)) && ((r) <= 0x10ffff))))) {
 xmlFatalErr(ctxt, XML_ERR_CDATA_NOT_FINISHED, 
# 9698 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                              ((void *)0)
# 9698 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                  );
 ctxt->instate = XML_PARSER_CONTENT;
        return;
    }
    do { if (*(ctxt->input->cur) == '\n') { ctxt->input->line++; ctxt->input->col = 1; } else ctxt->input->col++; ctxt->input->cur += rl; if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); } while (0);
    s = xmlCurrentChar__internal_alias(ctxt, &sl);
    if (!(((s) < 0x100) ? (((0x9 <= ((s))) && (((s)) <= 0xa)) || (((s)) == 0xd) || (0x20 <= ((s)))) : (((0x100 <= (s)) && ((s) <= 0xd7ff)) || ((0xe000 <= (s)) && ((s) <= 0xfffd)) || ((0x10000 <= (s)) && ((s) <= 0x10ffff))))) {
 xmlFatalErr(ctxt, XML_ERR_CDATA_NOT_FINISHED, 
# 9705 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                              ((void *)0)
# 9705 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                  );
 ctxt->instate = XML_PARSER_CONTENT;
        return;
    }
    do { if (*(ctxt->input->cur) == '\n') { ctxt->input->line++; ctxt->input->col = 1; } else ctxt->input->col++; ctxt->input->cur += sl; if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); } while (0);
    cur = xmlCurrentChar__internal_alias(ctxt, &l);
    buf = (xmlChar *) xmlMallocAtomic(size * sizeof(xmlChar));
    if (buf == 
# 9712 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 9712 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
 xmlErrMemory__internal_alias(ctxt, 
# 9713 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 9713 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       );
 return;
    }
    while ((((cur) < 0x100) ? (((0x9 <= ((cur))) && (((cur)) <= 0xa)) || (((cur)) == 0xd) || (0x20 <= ((cur)))) : (((0x100 <= (cur)) && ((cur) <= 0xd7ff)) || ((0xe000 <= (cur)) && ((cur) <= 0xfffd)) || ((0x10000 <= (cur)) && ((cur) <= 0x10ffff)))) &&
           ((r != ']') || (s != ']') || (cur != '>'))) {
 if (len + 5 >= size) {
     xmlChar *tmp;

            if ((size > 10000000) &&
                ((ctxt->options & XML_PARSE_HUGE) == 0)) {
                xmlFatalErrMsgStr(ctxt, XML_ERR_CDATA_NOT_FINISHED,
                             "CData section too big found", 
# 9724 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                           ((void *)0)
# 9724 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                               );
                xmlFree (buf);
                return;
            }
     tmp = (xmlChar *) xmlRealloc(buf, size * 2 * sizeof(xmlChar));
     if (tmp == 
# 9729 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 9729 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
         xmlFree(buf);
  xmlErrMemory__internal_alias(ctxt, 
# 9731 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 9731 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        );
  return;
     }
     buf = tmp;
     size *= 2;
 }
 if (rl == 1) buf[len++] = (xmlChar) r; else len += xmlCopyCharMultiByte__internal_alias(&buf[len],r);
 r = s;
 rl = sl;
 s = cur;
 sl = l;
 count++;
 if (count > 50) {
     if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
            if (ctxt->instate == XML_PARSER_EOF) {
  xmlFree(buf);
  return;
            }
     count = 0;
 }
 do { if (*(ctxt->input->cur) == '\n') { ctxt->input->line++; ctxt->input->col = 1; } else ctxt->input->col++; ctxt->input->cur += l; if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); } while (0);
 cur = xmlCurrentChar__internal_alias(ctxt, &l);
    }
    buf[len] = 0;
    ctxt->instate = XML_PARSER_CONTENT;
    if (cur != '>') {
 xmlFatalErrMsgStr(ctxt, XML_ERR_CDATA_NOT_FINISHED,
                      "CData section not finished\n%.50s\n", buf);
 xmlFree(buf);
        return;
    }
    do { if (*(ctxt->input->cur) == '\n') { ctxt->input->line++; ctxt->input->col = 1; } else ctxt->input->col++; ctxt->input->cur += l; if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); } while (0);




    if ((ctxt->sax != 
# 9767 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 9767 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) && (!ctxt->disableSAX)) {
 if (ctxt->sax->cdataBlock != 
# 9768 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                             ((void *)0)
# 9768 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                 )
     ctxt->sax->cdataBlock(ctxt->userData, buf, len);
 else if (ctxt->sax->characters != 
# 9770 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                  ((void *)0)
# 9770 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                      )
     ctxt->sax->characters(ctxt->userData, buf, len);
    }
    xmlFree(buf);
}
# 9785 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlParseContent__internal_alias(xmlParserCtxtPtr ctxt) {
    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    while (((*ctxt->input->cur) != 0) &&
    (((*ctxt->input->cur) != '<') || (ctxt->input->cur[(1)] != '/')) &&
    (ctxt->instate != XML_PARSER_EOF)) {
 const xmlChar *test = ctxt->input->cur;
 unsigned int cons = ctxt->input->consumed;
 const xmlChar *cur = ctxt->input->cur;




 if ((*cur == '<') && (cur[1] == '?')) {
     xmlParsePI__internal_alias(ctxt);
 }





 else if (( ( ( ( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == '<' && ((unsigned char *) ctxt->input->cur)[ 1 ] == '!' && ((unsigned char *) ctxt->input->cur)[ 2 ] == '[' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'C' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'D' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'A' ) && ((unsigned char *) ctxt->input->cur)[ 6 ] == 'T' ) && ((unsigned char *) ctxt->input->cur)[ 7 ] == 'A' ) && ((unsigned char *) ctxt->input->cur)[ 8 ] == '[' )) {
     xmlParseCDSect__internal_alias(ctxt);
 }




 else if ((*cur == '<') && (ctxt->input->cur[(1)] == '!') &&
   (ctxt->input->cur[(2)] == '-') && (ctxt->input->cur[(3)] == '-')) {
     xmlParseComment__internal_alias(ctxt);
     ctxt->instate = XML_PARSER_CONTENT;
 }




 else if (*cur == '<') {
     xmlParseElement__internal_alias(ctxt);
 }






 else if (*cur == '&') {
     xmlParseReference__internal_alias(ctxt);
 }




 else {
     xmlParseCharData__internal_alias(ctxt, 0);
 }

 if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;



 while (((*ctxt->input->cur) == 0) && (ctxt->inputNr > 1))
     xmlPopInput__internal_alias(ctxt);
 if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;

 if ((cons == ctxt->input->consumed) && (test == ctxt->input->cur)) {
     xmlFatalErr(ctxt, XML_ERR_INTERNAL_ERROR,
                 "detected an error in element content\n");
     ctxt->instate = XML_PARSER_EOF;
            break;
 }
    }
}
# 9873 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlParseElement__internal_alias(xmlParserCtxtPtr ctxt) {
    const xmlChar *name;
    const xmlChar *prefix = 
# 9876 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 9876 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               ;
    const xmlChar *URI = 
# 9877 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 9877 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ;
    xmlParserNodeInfo node_info;
    int line, tlen = 0;
    xmlNodePtr ret;
    int nsNr = ctxt->nsNr;

    if (((unsigned int) ctxt->nameNr > xmlParserMaxDepth) &&
        ((ctxt->options & XML_PARSE_HUGE) == 0)) {
 xmlFatalErrMsgInt(ctxt, XML_ERR_INTERNAL_ERROR,
   "Excessive depth in document: %d use XML_PARSE_HUGE option\n",
     xmlParserMaxDepth);
 ctxt->instate = XML_PARSER_EOF;
 return;
    }


    if (ctxt->record_info) {
        node_info.begin_pos = ctxt->input->consumed +
                          (ctxt->input->cur - ctxt->input->base);
 node_info.begin_line = ctxt->input->line;
    }

    if (ctxt->spaceNr == 0)
 spacePush(ctxt, -1);
    else if (*ctxt->space == -2)
 spacePush(ctxt, -1);
    else
 spacePush(ctxt, *ctxt->space);

    line = ctxt->input->line;

    if (ctxt->sax2)

        name = xmlParseStartTag2(ctxt, &prefix, &URI, &tlen);

    else
 name = xmlParseStartTag__internal_alias(ctxt);

    if (ctxt->instate == XML_PARSER_EOF)
 return;
    if (name == 
# 9917 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 9917 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
 spacePop(ctxt);
        return;
    }
    namePush__internal_alias(ctxt, name);
    ret = ctxt->node;







    if (ctxt->validate && ctxt->wellFormed && ctxt->myDoc &&
        ctxt->node && (ctxt->node == ctxt->myDoc->children))
        ctxt->valid &= xmlValidateRoot__internal_alias(&ctxt->vctxt, ctxt->myDoc);





    if (((*ctxt->input->cur) == '/') && (ctxt->input->cur[(1)] == '>')) {
        do { ctxt->nbChars += (2),ctxt->input->cur += (2),ctxt->input->col+=(2); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 if (ctxt->sax2) {
     if ((ctxt->sax != 
# 9941 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 9941 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) && (ctxt->sax->endElementNs != 
# 9941 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                           ((void *)0)
# 9941 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                               ) &&
  (!ctxt->disableSAX))
  ctxt->sax->endElementNs(ctxt->userData, name, prefix, URI);

 } else {
     if ((ctxt->sax != 
# 9946 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 9946 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) && (ctxt->sax->endElement != 
# 9946 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                         ((void *)0)
# 9946 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                             ) &&
  (!ctxt->disableSAX))
  ctxt->sax->endElement(ctxt->userData, name);

 }
 namePop__internal_alias(ctxt);
 spacePop(ctxt);
 if (nsNr != ctxt->nsNr)
     nsPop(ctxt, ctxt->nsNr - nsNr);
 if ( ret != 
# 9955 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0) 
# 9955 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 && ctxt->record_info ) {
    node_info.end_pos = ctxt->input->consumed +
         (ctxt->input->cur - ctxt->input->base);
    node_info.end_line = ctxt->input->line;
    node_info.node = ret;
    xmlParserAddNodeInfo__internal_alias(ctxt, &node_info);
 }
 return;
    }
    if ((*ctxt->input->cur) == '>') {
        { ctxt->input->col++; ctxt->input->cur++; ctxt->nbChars++; if (*ctxt->input->cur == 0) xmlParserInputGrow__internal_alias(ctxt->input, 250); };
    } else {
        xmlFatalErrMsgStrIntStr(ctxt, XML_ERR_GT_REQUIRED,
       "Couldn't find end of Start Tag %s line %d\n",
                  name, line, 
# 9969 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                             ((void *)0)
# 9969 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                 );




 nodePop__internal_alias(ctxt);
 namePop__internal_alias(ctxt);
 spacePop(ctxt);
 if (nsNr != ctxt->nsNr)
     nsPop(ctxt, ctxt->nsNr - nsNr);




 if ( ret != 
# 9983 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0) 
# 9983 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 && ctxt->record_info ) {
    node_info.end_pos = ctxt->input->consumed +
         (ctxt->input->cur - ctxt->input->base);
    node_info.end_line = ctxt->input->line;
    node_info.node = ret;
    xmlParserAddNodeInfo__internal_alias(ctxt, &node_info);
 }
 return;
    }




    xmlParseContent__internal_alias(ctxt);
    if (!(((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd) || (0x20 <= ((*ctxt->input->cur))))) {
        xmlFatalErrMsgStrIntStr(ctxt, XML_ERR_TAG_NOT_FINISHED,
  "Premature end of data in tag %s line %d\n",
                  name, line, 
# 10000 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                             ((void *)0)
# 10000 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                 );




 nodePop__internal_alias(ctxt);
 namePop__internal_alias(ctxt);
 spacePop(ctxt);
 if (nsNr != ctxt->nsNr)
     nsPop(ctxt, ctxt->nsNr - nsNr);
 return;
    }




    if (ctxt->sax2) {
 xmlParseEndTag2(ctxt, prefix, URI, line, ctxt->nsNr - nsNr, tlen);
 namePop__internal_alias(ctxt);
    }

      else
 xmlParseEndTag1(ctxt, line);





    if ( ret != 
# 10028 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0) 
# 10028 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    && ctxt->record_info ) {
       node_info.end_pos = ctxt->input->consumed +
                          (ctxt->input->cur - ctxt->input->base);
       node_info.end_line = ctxt->input->line;
       node_info.node = ret;
       xmlParserAddNodeInfo__internal_alias(ctxt, &node_info);
    }
}
# 10049 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlChar *
xmlParseVersionNum__internal_alias(xmlParserCtxtPtr ctxt) {
    xmlChar *buf = 
# 10051 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 10051 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ;
    int len = 0;
    int size = 10;
    xmlChar cur;

    buf = (xmlChar *) xmlMallocAtomic(size * sizeof(xmlChar));
    if (buf == 
# 10057 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 10057 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
 xmlErrMemory__internal_alias(ctxt, 
# 10058 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 10058 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       );
 return(
# 10059 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 10059 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    cur = (*ctxt->input->cur);
    if (!((cur >= '0') && (cur <= '9'))) {
 xmlFree(buf);
 return(
# 10064 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 10064 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    buf[len++] = cur;
    xmlNextChar__internal_alias(ctxt);
    cur=(*ctxt->input->cur);
    if (cur != '.') {
 xmlFree(buf);
 return(
# 10071 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 10071 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    buf[len++] = cur;
    xmlNextChar__internal_alias(ctxt);
    cur=(*ctxt->input->cur);
    while ((cur >= '0') && (cur <= '9')) {
 if (len + 1 >= size) {
     xmlChar *tmp;

     size *= 2;
     tmp = (xmlChar *) xmlRealloc(buf, size * sizeof(xmlChar));
     if (tmp == 
# 10082 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 10082 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
         xmlFree(buf);
  xmlErrMemory__internal_alias(ctxt, 
# 10084 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 10084 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        );
  return(
# 10085 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 10085 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
            );
     }
     buf = tmp;
 }
 buf[len++] = cur;
 xmlNextChar__internal_alias(ctxt);
 cur=(*ctxt->input->cur);
    }
    buf[len] = 0;
    return(buf);
}
# 10110 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlChar *
xmlParseVersionInfo__internal_alias(xmlParserCtxtPtr ctxt) {
    xmlChar *version = 
# 10112 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 10112 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ;

    if (( ( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == 'v' && ((unsigned char *) ctxt->input->cur)[ 1 ] == 'e' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'r' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 's' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'i' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'o' ) && ((unsigned char *) ctxt->input->cur)[ 6 ] == 'n' )) {
 do { ctxt->nbChars += (7),ctxt->input->cur += (7),ctxt->input->col+=(7); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 xmlSkipBlankChars__internal_alias(ctxt);
 if ((*ctxt->input->cur) != '=') {
     xmlFatalErr(ctxt, XML_ERR_EQUAL_REQUIRED, 
# 10118 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                              ((void *)0)
# 10118 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                  );
     return(
# 10119 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 10119 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               );
        }
 xmlNextChar__internal_alias(ctxt);
 xmlSkipBlankChars__internal_alias(ctxt);
 if ((*ctxt->input->cur) == '"') {
     xmlNextChar__internal_alias(ctxt);
     version = xmlParseVersionNum__internal_alias(ctxt);
     if ((*ctxt->input->cur) != '"') {
  xmlFatalErr(ctxt, XML_ERR_STRING_NOT_CLOSED, 
# 10127 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                              ((void *)0)
# 10127 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                  );
     } else
         xmlNextChar__internal_alias(ctxt);
 } else if ((*ctxt->input->cur) == '\''){
     xmlNextChar__internal_alias(ctxt);
     version = xmlParseVersionNum__internal_alias(ctxt);
     if ((*ctxt->input->cur) != '\'') {
  xmlFatalErr(ctxt, XML_ERR_STRING_NOT_CLOSED, 
# 10134 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                              ((void *)0)
# 10134 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                  );
     } else
         xmlNextChar__internal_alias(ctxt);
 } else {
     xmlFatalErr(ctxt, XML_ERR_STRING_NOT_STARTED, 
# 10138 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                  ((void *)0)
# 10138 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                      );
 }
    }
    return(version);
}
# 10154 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlChar *
xmlParseEncName__internal_alias(xmlParserCtxtPtr ctxt) {
    xmlChar *buf = 
# 10156 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 10156 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ;
    int len = 0;
    int size = 10;
    xmlChar cur;

    cur = (*ctxt->input->cur);
    if (((cur >= 'a') && (cur <= 'z')) ||
        ((cur >= 'A') && (cur <= 'Z'))) {
 buf = (xmlChar *) xmlMallocAtomic(size * sizeof(xmlChar));
 if (buf == 
# 10165 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 10165 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               ) {
     xmlErrMemory__internal_alias(ctxt, 
# 10166 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 10166 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           );
     return(
# 10167 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 10167 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               );
 }

 buf[len++] = cur;
 xmlNextChar__internal_alias(ctxt);
 cur = (*ctxt->input->cur);
 while (((cur >= 'a') && (cur <= 'z')) ||
        ((cur >= 'A') && (cur <= 'Z')) ||
        ((cur >= '0') && (cur <= '9')) ||
        (cur == '.') || (cur == '_') ||
        (cur == '-')) {
     if (len + 1 >= size) {
         xmlChar *tmp;

  size *= 2;
  tmp = (xmlChar *) xmlRealloc(buf, size * sizeof(xmlChar));
  if (tmp == 
# 10183 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 10183 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ) {
      xmlErrMemory__internal_alias(ctxt, 
# 10184 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 10184 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            );
      xmlFree(buf);
      return(
# 10186 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 10186 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                );
  }
  buf = tmp;
     }
     buf[len++] = cur;
     xmlNextChar__internal_alias(ctxt);
     cur = (*ctxt->input->cur);
     if (cur == 0) {
         if ((ctxt->progressive == 0) && (ctxt->input->cur - ctxt->input->base > 2 * 250) && (ctxt->input->end - ctxt->input->cur < 2 * 250)) xmlSHRINK (ctxt);;
  if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
  cur = (*ctxt->input->cur);
     }
        }
 buf[len] = 0;
    } else {
 xmlFatalErr(ctxt, XML_ERR_ENCODING_NAME, 
# 10201 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                         ((void *)0)
# 10201 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                             );
    }
    return(buf);
}
# 10219 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
const xmlChar *
xmlParseEncodingDecl__internal_alias(xmlParserCtxtPtr ctxt) {
    xmlChar *encoding = 
# 10221 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 10221 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ;

    xmlSkipBlankChars__internal_alias(ctxt);
    if (( ( ( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == 'e' && ((unsigned char *) ctxt->input->cur)[ 1 ] == 'n' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'c' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'o' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'd' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'i' ) && ((unsigned char *) ctxt->input->cur)[ 6 ] == 'n' ) && ((unsigned char *) ctxt->input->cur)[ 7 ] == 'g' )) {
 do { ctxt->nbChars += (8),ctxt->input->cur += (8),ctxt->input->col+=(8); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
 xmlSkipBlankChars__internal_alias(ctxt);
 if ((*ctxt->input->cur) != '=') {
     xmlFatalErr(ctxt, XML_ERR_EQUAL_REQUIRED, 
# 10228 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                              ((void *)0)
# 10228 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                  );
     return(
# 10229 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 10229 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               );
        }
 xmlNextChar__internal_alias(ctxt);
 xmlSkipBlankChars__internal_alias(ctxt);
 if ((*ctxt->input->cur) == '"') {
     xmlNextChar__internal_alias(ctxt);
     encoding = xmlParseEncName__internal_alias(ctxt);
     if ((*ctxt->input->cur) != '"') {
  xmlFatalErr(ctxt, XML_ERR_STRING_NOT_CLOSED, 
# 10237 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                              ((void *)0)
# 10237 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                  );
     } else
         xmlNextChar__internal_alias(ctxt);
 } else if ((*ctxt->input->cur) == '\''){
     xmlNextChar__internal_alias(ctxt);
     encoding = xmlParseEncName__internal_alias(ctxt);
     if ((*ctxt->input->cur) != '\'') {
  xmlFatalErr(ctxt, XML_ERR_STRING_NOT_CLOSED, 
# 10244 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                              ((void *)0)
# 10244 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                  );
     } else
         xmlNextChar__internal_alias(ctxt);
 } else {
     xmlFatalErr(ctxt, XML_ERR_STRING_NOT_STARTED, 
# 10248 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                  ((void *)0)
# 10248 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                      );
 }




        if (ctxt->options & XML_PARSE_IGNORE_ENC)
            return(encoding);





        if ((encoding != 
# 10261 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 10261 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ) &&
     ((!xmlStrcasecmp__internal_alias(encoding, (xmlChar *) "UTF-16")) ||
      (!xmlStrcasecmp__internal_alias(encoding, (xmlChar *) "UTF16")))) {






     if ((ctxt->encoding == 
# 10270 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 10270 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               ) &&
         (ctxt->input->buf != 
# 10271 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                             ((void *)0)
# 10271 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                 ) &&
         (ctxt->input->buf->encoder == 
# 10272 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                      ((void *)0)
# 10272 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                          )) {
  xmlFatalErrMsg(ctxt, XML_ERR_INVALID_ENCODING,
    "Document labelled UTF-16 but has UTF-8 content\n");
     }
     if (ctxt->encoding != 
# 10276 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 10276 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              )
  xmlFree((xmlChar *) ctxt->encoding);
     ctxt->encoding = encoding;
 }



        else if ((encoding != 
# 10283 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                             ((void *)0)
# 10283 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                 ) &&
     ((!xmlStrcasecmp__internal_alias(encoding, (xmlChar *) "UTF-8")) ||
      (!xmlStrcasecmp__internal_alias(encoding, (xmlChar *) "UTF8")))) {
     if (ctxt->encoding != 
# 10286 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 10286 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              )
  xmlFree((xmlChar *) ctxt->encoding);
     ctxt->encoding = encoding;
 }
 else if (encoding != 
# 10290 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 10290 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) {
     xmlCharEncodingHandlerPtr handler;

     if (ctxt->input->encoding != 
# 10293 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                 ((void *)0)
# 10293 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                     )
  xmlFree((xmlChar *) ctxt->input->encoding);
     ctxt->input->encoding = encoding;

            handler = xmlFindCharEncodingHandler__internal_alias((const char *) encoding);
     if (handler != 
# 10298 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 10298 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) {
  xmlSwitchToEncoding__internal_alias(ctxt, handler);
     } else {
  xmlFatalErrMsgStr(ctxt, XML_ERR_UNSUPPORTED_ENCODING,
   "Unsupported encoding %s\n", encoding);
  return(
# 10303 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
        ((void *)0)
# 10303 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
            );
     }
 }
    }
    return(encoding);
}
# 10341 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int
xmlParseSDDecl__internal_alias(xmlParserCtxtPtr ctxt) {
    int standalone = -2;

    xmlSkipBlankChars__internal_alias(ctxt);
    if (( ( ( ( ( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == 's' && ((unsigned char *) ctxt->input->cur)[ 1 ] == 't' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'a' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'n' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'd' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'a' ) && ((unsigned char *) ctxt->input->cur)[ 6 ] == 'l' ) && ((unsigned char *) ctxt->input->cur)[ 7 ] == 'o' ) && ((unsigned char *) ctxt->input->cur)[ 8 ] == 'n' ) && ((unsigned char *) ctxt->input->cur)[ 9 ] == 'e' )) {
 do { ctxt->nbChars += (10),ctxt->input->cur += (10),ctxt->input->col+=(10); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
        xmlSkipBlankChars__internal_alias(ctxt);
 if ((*ctxt->input->cur) != '=') {
     xmlFatalErr(ctxt, XML_ERR_EQUAL_REQUIRED, 
# 10350 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                              ((void *)0)
# 10350 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                  );
     return(standalone);
        }
 xmlNextChar__internal_alias(ctxt);
 xmlSkipBlankChars__internal_alias(ctxt);
        if ((*ctxt->input->cur) == '\''){
     xmlNextChar__internal_alias(ctxt);
     if (((*ctxt->input->cur) == 'n') && (ctxt->input->cur[(1)] == 'o')) {
         standalone = 0;
                do { ctxt->nbChars += (2),ctxt->input->cur += (2),ctxt->input->col+=(2); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
     } else if (((*ctxt->input->cur) == 'y') && (ctxt->input->cur[(1)] == 'e') &&
                (ctxt->input->cur[(2)] == 's')) {
         standalone = 1;
  do { ctxt->nbChars += (3),ctxt->input->cur += (3),ctxt->input->col+=(3); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
            } else {
  xmlFatalErr(ctxt, XML_ERR_STANDALONE_VALUE, 
# 10365 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                             ((void *)0)
# 10365 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                 );
     }
     if ((*ctxt->input->cur) != '\'') {
  xmlFatalErr(ctxt, XML_ERR_STRING_NOT_CLOSED, 
# 10368 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                              ((void *)0)
# 10368 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                  );
     } else
         xmlNextChar__internal_alias(ctxt);
 } else if ((*ctxt->input->cur) == '"'){
     xmlNextChar__internal_alias(ctxt);
     if (((*ctxt->input->cur) == 'n') && (ctxt->input->cur[(1)] == 'o')) {
         standalone = 0;
  do { ctxt->nbChars += (2),ctxt->input->cur += (2),ctxt->input->col+=(2); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
     } else if (((*ctxt->input->cur) == 'y') && (ctxt->input->cur[(1)] == 'e') &&
                (ctxt->input->cur[(2)] == 's')) {
         standalone = 1;
                do { ctxt->nbChars += (3),ctxt->input->cur += (3),ctxt->input->col+=(3); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
            } else {
  xmlFatalErr(ctxt, XML_ERR_STANDALONE_VALUE, 
# 10381 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                             ((void *)0)
# 10381 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                 );
     }
     if ((*ctxt->input->cur) != '"') {
  xmlFatalErr(ctxt, XML_ERR_STRING_NOT_CLOSED, 
# 10384 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                              ((void *)0)
# 10384 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                  );
     } else
         xmlNextChar__internal_alias(ctxt);
 } else {
     xmlFatalErr(ctxt, XML_ERR_STRING_NOT_STARTED, 
# 10388 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                  ((void *)0)
# 10388 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                      );
        }
    }
    return(standalone);
}
# 10403 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlParseXMLDecl__internal_alias(xmlParserCtxtPtr ctxt) {
    xmlChar *version;






    ctxt->input->standalone = -2;




    do { ctxt->nbChars += (5),ctxt->input->cur += (5),ctxt->input->col+=(5); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);

    if (!((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd))) {
 xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED,
                "Blank needed after '<?xml'\n");
    }
    xmlSkipBlankChars__internal_alias(ctxt);




    version = xmlParseVersionInfo__internal_alias(ctxt);
    if (version == 
# 10429 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 10429 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) {
 xmlFatalErr(ctxt, XML_ERR_VERSION_MISSING, 
# 10430 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                           ((void *)0)
# 10430 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                               );
    } else {
 if (!xmlStrEqual__internal_alias(version, (const xmlChar *) "1.0")) {



     if (ctxt->options & XML_PARSE_OLD10) {
  xmlFatalErrMsgStr(ctxt, XML_ERR_UNKNOWN_VERSION,
             "Unsupported version '%s'\n",
             version);
     } else {
         if ((version[0] == '1') && ((version[1] == '.'))) {
      xmlWarningMsg(ctxt, XML_WAR_UNKNOWN_VERSION,
                    "Unsupported version '%s'\n",
      version, 
# 10444 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 10444 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  );
  } else {
      xmlFatalErrMsgStr(ctxt, XML_ERR_UNKNOWN_VERSION,
          "Unsupported version '%s'\n",
          version);
  }
     }
 }
 if (ctxt->version != 
# 10452 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 10452 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         )
     xmlFree((void *) ctxt->version);
 ctxt->version = version;
    }




    if (!((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd))) {
        if (((*ctxt->input->cur) == '?') && (ctxt->input->cur[(1)] == '>')) {
     do { ctxt->nbChars += (2),ctxt->input->cur += (2),ctxt->input->col+=(2); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
     return;
 }
 xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED, "Blank needed here\n");
    }
    xmlParseEncodingDecl__internal_alias(ctxt);
    if (ctxt->errNo == XML_ERR_UNSUPPORTED_ENCODING) {



        return;
    }




    if ((ctxt->input->encoding != 
# 10478 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                 ((void *)0)
# 10478 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                     ) && (!((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd)))) {
        if (((*ctxt->input->cur) == '?') && (ctxt->input->cur[(1)] == '>')) {
     do { ctxt->nbChars += (2),ctxt->input->cur += (2),ctxt->input->col+=(2); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
     return;
 }
 xmlFatalErrMsg(ctxt, XML_ERR_SPACE_REQUIRED, "Blank needed here\n");
    }




    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;

    xmlSkipBlankChars__internal_alias(ctxt);
    ctxt->input->standalone = xmlParseSDDecl__internal_alias(ctxt);

    xmlSkipBlankChars__internal_alias(ctxt);
    if (((*ctxt->input->cur) == '?') && (ctxt->input->cur[(1)] == '>')) {
        do { ctxt->nbChars += (2),ctxt->input->cur += (2),ctxt->input->col+=(2); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
    } else if ((*ctxt->input->cur) == '>') {

 xmlFatalErr(ctxt, XML_ERR_XMLDECL_NOT_FINISHED, 
# 10499 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                ((void *)0)
# 10499 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                    );
 xmlNextChar__internal_alias(ctxt);
    } else {
 xmlFatalErr(ctxt, XML_ERR_XMLDECL_NOT_FINISHED, 
# 10502 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                ((void *)0)
# 10502 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                    );
 while ((*ctxt->input->cur) && (*(ctxt->input->cur) != '>')) (ctxt->input->cur)++;
 xmlNextChar__internal_alias(ctxt);
    }
}
# 10517 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlParseMisc__internal_alias(xmlParserCtxtPtr ctxt) {
    while ((ctxt->instate != XML_PARSER_EOF) &&
           ((((*ctxt->input->cur) == '<') && (ctxt->input->cur[(1)] == '?')) ||
            (( ((unsigned char *) ctxt->input->cur)[ 0 ] == '<' && ((unsigned char *) ctxt->input->cur)[ 1 ] == '!' && ((unsigned char *) ctxt->input->cur)[ 2 ] == '-' && ((unsigned char *) ctxt->input->cur)[ 3 ] == '-' )) ||
            ((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd)))) {
        if (((*ctxt->input->cur) == '<') && (ctxt->input->cur[(1)] == '?')) {
     xmlParsePI__internal_alias(ctxt);
 } else if (((((*ctxt->input->cur)) == 0x20) || ((0x9 <= ((*ctxt->input->cur))) && (((*ctxt->input->cur)) <= 0xa)) || (((*ctxt->input->cur)) == 0xd))) {
     xmlNextChar__internal_alias(ctxt);
 } else
     xmlParseComment__internal_alias(ctxt);
    }
}
# 10547 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int
xmlParseDocument__internal_alias(xmlParserCtxtPtr ctxt) {
    xmlChar start[4];
    xmlCharEncoding enc;

    xmlInitParser__internal_alias();

    if ((ctxt == 
# 10554 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 10554 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) || (ctxt->input == 
# 10554 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                         ((void *)0)
# 10554 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                             ))
        return(-1);

    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;




    xmlDetectSAX2(ctxt);




    if ((ctxt->sax) && (ctxt->sax->setDocumentLocator))
        ctxt->sax->setDocumentLocator(ctxt->userData, &(*(__xmlDefaultSAXLocator())));

    if ((ctxt->encoding == 
# 10570 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 10570 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              ) &&
        ((ctxt->input->end - ctxt->input->cur) >= 4)) {





 start[0] = (*ctxt->input->cur);
 start[1] = ctxt->input->cur[(1)];
 start[2] = ctxt->input->cur[(2)];
 start[3] = ctxt->input->cur[(3)];
 enc = xmlDetectCharEncoding__internal_alias(&start[0], 4);
 if (enc != XML_CHAR_ENCODING_NONE) {
     xmlSwitchEncoding__internal_alias(ctxt, enc);
 }
    }


    if ((*ctxt->input->cur) == 0) {
 xmlFatalErr(ctxt, XML_ERR_DOCUMENT_EMPTY, 
# 10589 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                          ((void *)0)
# 10589 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                              );
    }







    if ((ctxt->input->end - ctxt->input->cur) < 35) {
       if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    }
    if ((( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == '<' && ((unsigned char *) ctxt->input->cur)[ 1 ] == '?' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'x' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'm' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'l' )) && ((((ctxt->input->cur[(5)]) == 0x20) || ((0x9 <= (ctxt->input->cur[(5)])) && ((ctxt->input->cur[(5)]) <= 0xa)) || ((ctxt->input->cur[(5)]) == 0xd)))) {




 xmlParseXMLDecl__internal_alias(ctxt);
 if (ctxt->errNo == XML_ERR_UNSUPPORTED_ENCODING) {



     return(-1);
 }
 ctxt->standalone = ctxt->input->standalone;
 xmlSkipBlankChars__internal_alias(ctxt);
    } else {
 ctxt->version = xmlCharStrdup__internal_alias("1.0");
    }
    if ((ctxt->sax) && (ctxt->sax->startDocument) && (!ctxt->disableSAX))
        ctxt->sax->startDocument(ctxt->userData);




    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    xmlParseMisc__internal_alias(ctxt);





    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    if (( ( ( ( ( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == '<' && ((unsigned char *) ctxt->input->cur)[ 1 ] == '!' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'D' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'O' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'C' ) && ((unsigned char *) ctxt->input->cur)[ 5 ] == 'T' ) && ((unsigned char *) ctxt->input->cur)[ 6 ] == 'Y' ) && ((unsigned char *) ctxt->input->cur)[ 7 ] == 'P' ) && ((unsigned char *) ctxt->input->cur)[ 8 ] == 'E' )) {

 ctxt->inSubset = 1;
 xmlParseDocTypeDecl__internal_alias(ctxt);
 if ((*ctxt->input->cur) == '[') {
     ctxt->instate = XML_PARSER_DTD;
     xmlParseInternalSubset(ctxt);
 }




 ctxt->inSubset = 2;
 if ((ctxt->sax != 
# 10645 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 10645 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) && (ctxt->sax->externalSubset != 
# 10645 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                         ((void *)0)
# 10645 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                             ) &&
     (!ctxt->disableSAX))
     ctxt->sax->externalSubset(ctxt->userData, ctxt->intSubName,
                               ctxt->extSubSystem, ctxt->extSubURI);
 ctxt->inSubset = 0;

        xmlCleanSpecialAttr(ctxt);

 ctxt->instate = XML_PARSER_PROLOG;
 xmlParseMisc__internal_alias(ctxt);
    }




    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    if ((*ctxt->input->cur) != '<') {
 xmlFatalErrMsg(ctxt, XML_ERR_DOCUMENT_EMPTY,
         "Start tag expected, '<' not found\n");
    } else {
 ctxt->instate = XML_PARSER_CONTENT;
 xmlParseElement__internal_alias(ctxt);
 ctxt->instate = XML_PARSER_EPILOG;





 xmlParseMisc__internal_alias(ctxt);

 if ((*ctxt->input->cur) != 0) {
     xmlFatalErr(ctxt, XML_ERR_DOCUMENT_END, 
# 10676 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                            ((void *)0)
# 10676 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                );
 }
 ctxt->instate = XML_PARSER_EOF;
    }




    if ((ctxt->sax) && (ctxt->sax->endDocument != 
# 10684 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                 ((void *)0)
# 10684 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                     ))
        ctxt->sax->endDocument(ctxt->userData);




    if ((ctxt->myDoc != 
# 10690 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 10690 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ) &&
 (xmlStrEqual__internal_alias(ctxt->myDoc->version, (xmlChar *) "SAX compatibility mode document"))) {
 xmlFreeDoc__internal_alias(ctxt->myDoc);
 ctxt->myDoc = 
# 10693 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 10693 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ;
    }

    if ((ctxt->wellFormed) && (ctxt->myDoc != 
# 10696 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                             ((void *)0)
# 10696 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                 )) {
        ctxt->myDoc->properties |= XML_DOC_WELLFORMED;
 if (ctxt->valid)
     ctxt->myDoc->properties |= XML_DOC_DTDVALID;
 if (ctxt->nsWellFormed)
     ctxt->myDoc->properties |= XML_DOC_NSVALID;
 if (ctxt->options & XML_PARSE_OLD10)
     ctxt->myDoc->properties |= XML_DOC_OLD10;
    }
    if (! ctxt->wellFormed) {
 ctxt->valid = 0;
 return(-1);
    }
    return(0);
}
# 10726 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int
xmlParseExtParsedEnt__internal_alias(xmlParserCtxtPtr ctxt) {
    xmlChar start[4];
    xmlCharEncoding enc;

    if ((ctxt == 
# 10731 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 10731 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) || (ctxt->input == 
# 10731 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                         ((void *)0)
# 10731 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                             ))
        return(-1);

    xmlDefaultSAXHandlerInit__internal_alias();

    xmlDetectSAX2(ctxt);

    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;




    if ((ctxt->sax) && (ctxt->sax->setDocumentLocator))
        ctxt->sax->setDocumentLocator(ctxt->userData, &(*(__xmlDefaultSAXLocator())));






    if ((ctxt->input->end - ctxt->input->cur) >= 4) {
 start[0] = (*ctxt->input->cur);
 start[1] = ctxt->input->cur[(1)];
 start[2] = ctxt->input->cur[(2)];
 start[3] = ctxt->input->cur[(3)];
 enc = xmlDetectCharEncoding__internal_alias(start, 4);
 if (enc != XML_CHAR_ENCODING_NONE) {
     xmlSwitchEncoding__internal_alias(ctxt, enc);
 }
    }


    if ((*ctxt->input->cur) == 0) {
 xmlFatalErr(ctxt, XML_ERR_DOCUMENT_EMPTY, 
# 10764 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                          ((void *)0)
# 10764 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                              );
    }




    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    if ((( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == '<' && ((unsigned char *) ctxt->input->cur)[ 1 ] == '?' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'x' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'm' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'l' )) && ((((ctxt->input->cur[(5)]) == 0x20) || ((0x9 <= (ctxt->input->cur[(5)])) && ((ctxt->input->cur[(5)]) <= 0xa)) || ((ctxt->input->cur[(5)]) == 0xd)))) {




 xmlParseXMLDecl__internal_alias(ctxt);
 if (ctxt->errNo == XML_ERR_UNSUPPORTED_ENCODING) {



     return(-1);
 }
 xmlSkipBlankChars__internal_alias(ctxt);
    } else {
 ctxt->version = xmlCharStrdup__internal_alias("1.0");
    }
    if ((ctxt->sax) && (ctxt->sax->startDocument) && (!ctxt->disableSAX))
        ctxt->sax->startDocument(ctxt->userData);




    ctxt->instate = XML_PARSER_CONTENT;
    ctxt->validate = 0;
    ctxt->loadsubset = 0;
    ctxt->depth = 0;

    xmlParseContent__internal_alias(ctxt);

    if (((*ctxt->input->cur) == '<') && (ctxt->input->cur[(1)] == '/')) {
 xmlFatalErr(ctxt, XML_ERR_NOT_WELL_BALANCED, 
# 10801 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                             ((void *)0)
# 10801 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                 );
    } else if ((*ctxt->input->cur) != 0) {
 xmlFatalErr(ctxt, XML_ERR_EXTRA_CONTENT, 
# 10803 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                         ((void *)0)
# 10803 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                             );
    }




    if ((ctxt->sax) && (ctxt->sax->endDocument != 
# 10809 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                 ((void *)0)
# 10809 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                     ))
        ctxt->sax->endDocument(ctxt->userData);

    if (! ctxt->wellFormed) return(-1);
    return(0);
}
# 10839 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static int
xmlParseLookupSequence(xmlParserCtxtPtr ctxt, xmlChar first,
                       xmlChar next, xmlChar third) {
    int base, len;
    xmlParserInputPtr in;
    const xmlChar *buf;

    in = ctxt->input;
    if (in == 
# 10847 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 10847 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ) return(-1);
    base = in->cur - in->base;
    if (base < 0) return(-1);
    if (ctxt->checkIndex > base)
        base = ctxt->checkIndex;
    if (in->buf == 
# 10852 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 10852 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) {
 buf = in->base;
 len = in->length;
    } else {
 buf = xmlBufContent(in->buf->buffer);
 len = xmlBufUse(in->buf->buffer);
    }

    if (third) len -= 2;
    else if (next) len --;
    for (;base < len;base++) {
        if (buf[base] == first) {
     if (third != 0) {
  if ((buf[base + 1] != next) ||
      (buf[base + 2] != third)) continue;
     } else if (next != 0) {
  if (buf[base + 1] != next) continue;
     }
     ctxt->checkIndex = 0;
# 10885 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
     return(base - (in->cur - in->base));
 }
    }
    ctxt->checkIndex = base;
# 10900 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
    return(-1);
}
# 10911 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void
xmlParseGetLasts(xmlParserCtxtPtr ctxt, const xmlChar **lastlt,
                 const xmlChar **lastgt) {
    const xmlChar *tmp;

    if ((ctxt == 
# 10916 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 10916 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) || (lastlt == 
# 10916 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                    ((void *)0)
# 10916 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                        ) || (lastgt == 
# 10916 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                        ((void *)0)
# 10916 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                            )) {
 (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
      "Internal error: xmlParseGetLasts\n");
 return;
    }
    if ((ctxt->progressive != 0) && (ctxt->inputNr == 1)) {
        tmp = ctxt->input->end;
 tmp--;
 while ((tmp >= ctxt->input->base) && (*tmp != '<')) tmp--;
 if (tmp < ctxt->input->base) {
     *lastlt = 
# 10926 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 10926 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ;
     *lastgt = 
# 10927 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 10927 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ;
 } else {
     *lastlt = tmp;
     tmp++;
     while ((tmp < ctxt->input->end) && (*tmp != '>')) {
         if (*tmp == '\'') {
      tmp++;
      while ((tmp < ctxt->input->end) && (*tmp != '\'')) tmp++;
      if (tmp < ctxt->input->end) tmp++;
  } else if (*tmp == '"') {
      tmp++;
      while ((tmp < ctxt->input->end) && (*tmp != '"')) tmp++;
      if (tmp < ctxt->input->end) tmp++;
  } else
      tmp++;
     }
     if (tmp < ctxt->input->end)
         *lastgt = tmp;
     else {
         tmp = *lastlt;
  tmp--;
  while ((tmp >= ctxt->input->base) && (*tmp != '>')) tmp--;
  if (tmp >= ctxt->input->base)
      *lastgt = tmp;
  else
      *lastgt = 
# 10952 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 10952 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ;
     }
 }
    } else {
        *lastlt = 
# 10956 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 10956 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ;
 *lastgt = 
# 10957 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
          ((void *)0)
# 10957 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
              ;
    }
}
# 10970 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static int
xmlCheckCdataPush(const xmlChar *utf, int len) {
    int ix;
    unsigned char c;
    int codepoint;

    if ((utf == 
# 10976 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 10976 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) || (len <= 0))
        return(0);

    for (ix = 0; ix < len;) {
        c = utf[ix];
        if ((c & 0x80) == 0x00) {
     if (c >= 0x20)
  ix++;
     else if ((c == 0xA) || (c == 0xD) || (c == 0x9))
         ix++;
     else
         return(-ix);
 } else if ((c & 0xe0) == 0xc0) {
     if (ix + 2 > len) return(ix);
     if ((utf[ix+1] & 0xc0 ) != 0x80)
         return(-ix);
     codepoint = (utf[ix] & 0x1f) << 6;
     codepoint |= utf[ix+1] & 0x3f;
     if (!(((codepoint) < 0x100) ? (((0x9 <= ((codepoint))) && (((codepoint)) <= 0xa)) || (((codepoint)) == 0xd) || (0x20 <= ((codepoint)))) : (((0x100 <= (codepoint)) && ((codepoint) <= 0xd7ff)) || ((0xe000 <= (codepoint)) && ((codepoint) <= 0xfffd)) || ((0x10000 <= (codepoint)) && ((codepoint) <= 0x10ffff)))))
         return(-ix);
     ix += 2;
 } else if ((c & 0xf0) == 0xe0) {
     if (ix + 3 > len) return(ix);
     if (((utf[ix+1] & 0xc0) != 0x80) ||
         ((utf[ix+2] & 0xc0) != 0x80))
      return(-ix);
     codepoint = (utf[ix] & 0xf) << 12;
     codepoint |= (utf[ix+1] & 0x3f) << 6;
     codepoint |= utf[ix+2] & 0x3f;
     if (!(((codepoint) < 0x100) ? (((0x9 <= ((codepoint))) && (((codepoint)) <= 0xa)) || (((codepoint)) == 0xd) || (0x20 <= ((codepoint)))) : (((0x100 <= (codepoint)) && ((codepoint) <= 0xd7ff)) || ((0xe000 <= (codepoint)) && ((codepoint) <= 0xfffd)) || ((0x10000 <= (codepoint)) && ((codepoint) <= 0x10ffff)))))
         return(-ix);
     ix += 3;
 } else if ((c & 0xf8) == 0xf0) {
     if (ix + 4 > len) return(ix);
     if (((utf[ix+1] & 0xc0) != 0x80) ||
         ((utf[ix+2] & 0xc0) != 0x80) ||
  ((utf[ix+3] & 0xc0) != 0x80))
      return(-ix);
     codepoint = (utf[ix] & 0x7) << 18;
     codepoint |= (utf[ix+1] & 0x3f) << 12;
     codepoint |= (utf[ix+2] & 0x3f) << 6;
     codepoint |= utf[ix+3] & 0x3f;
     if (!(((codepoint) < 0x100) ? (((0x9 <= ((codepoint))) && (((codepoint)) <= 0xa)) || (((codepoint)) == 0xd) || (0x20 <= ((codepoint)))) : (((0x100 <= (codepoint)) && ((codepoint) <= 0xd7ff)) || ((0xe000 <= (codepoint)) && ((codepoint) <= 0xfffd)) || ((0x10000 <= (codepoint)) && ((codepoint) <= 0x10ffff)))))
         return(-ix);
     ix += 4;
 } else
     return(-ix);
      }
      return(ix);
}
# 11036 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static int
xmlParseTryOrFinish(xmlParserCtxtPtr ctxt, int terminate) {
    int ret = 0;
    int avail, tlen;
    xmlChar cur, next;
    const xmlChar *lastlt, *lastgt;

    if (ctxt->input == 
# 11043 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 11043 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          )
        return(0);
# 11099 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
    if ((ctxt->input != 
# 11099 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 11099 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ) &&
        (ctxt->input->cur - ctxt->input->base > 4096)) {
 xmlSHRINK(ctxt);
 ctxt->checkIndex = 0;
    }
    xmlParseGetLasts(ctxt, &lastlt, &lastgt);

    while (1) {
 if ((ctxt->errNo != XML_ERR_OK) && (ctxt->disableSAX == 1))
     return(0);





 while (((*ctxt->input->cur) == 0) && (ctxt->inputNr > 1))
     xmlPopInput__internal_alias(ctxt);

 if (ctxt->input == 
# 11117 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 11117 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) break;
 if (ctxt->input->buf == 
# 11118 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 11118 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            )
     avail = ctxt->input->length -
             (ctxt->input->cur - ctxt->input->base);
 else {





     if (xmlBufIsEmpty(ctxt->input->buf->buffer) == 0) {
                size_t base = xmlBufGetInputBase(ctxt->input->buf->buffer,
                                                 ctxt->input);
  size_t current = ctxt->input->cur - ctxt->input->base;

  xmlParserInputBufferPush__internal_alias(ctxt->input->buf, 0, "");
                xmlBufSetInputBaseCur(ctxt->input->buf->buffer, ctxt->input,
                                      base, current);
     }
     avail = xmlBufUse(ctxt->input->buf->buffer) -
      (ctxt->input->cur - ctxt->input->base);
 }
        if (avail < 1)
     goto done;
        switch (ctxt->instate) {
            case XML_PARSER_EOF:



         goto done;
            case XML_PARSER_START:
  if (ctxt->charset == XML_CHAR_ENCODING_NONE) {
      xmlChar start[4];
      xmlCharEncoding enc;




      if (avail < 4)
   goto done;
# 11165 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
      start[0] = (*ctxt->input->cur);
      start[1] = ctxt->input->cur[(1)];
      start[2] = ctxt->input->cur[(2)];
      start[3] = ctxt->input->cur[(3)];
      enc = xmlDetectCharEncoding__internal_alias(start, 4);
      xmlSwitchEncoding__internal_alias(ctxt, enc);
      break;
  }

  if (avail < 2)
      goto done;
  cur = ctxt->input->cur[0];
  next = ctxt->input->cur[1];
  if (cur == 0) {
      if ((ctxt->sax) && (ctxt->sax->setDocumentLocator))
   ctxt->sax->setDocumentLocator(ctxt->userData,
            &(*(__xmlDefaultSAXLocator())));
      xmlFatalErr(ctxt, XML_ERR_DOCUMENT_EMPTY, 
# 11182 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 11182 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   );
      ctxt->instate = XML_PARSER_EOF;




      if ((ctxt->sax) && (ctxt->sax->endDocument != 
# 11188 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                   ((void *)0)
# 11188 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                       ))
   ctxt->sax->endDocument(ctxt->userData);
      goto done;
  }
         if ((cur == '<') && (next == '?')) {

      if (avail < 5) return(ret);
      if ((!terminate) &&
          (xmlParseLookupSequence(ctxt, '?', '>', 0) < 0))
   return(ret);
      if ((ctxt->sax) && (ctxt->sax->setDocumentLocator))
   ctxt->sax->setDocumentLocator(ctxt->userData,
            &(*(__xmlDefaultSAXLocator())));
      if ((ctxt->input->cur[2] == 'x') &&
   (ctxt->input->cur[3] == 'm') &&
   (ctxt->input->cur[4] == 'l') &&
   ((((ctxt->input->cur[5]) == 0x20) || ((0x9 <= (ctxt->input->cur[5])) && ((ctxt->input->cur[5]) <= 0xa)) || ((ctxt->input->cur[5]) == 0xd)))) {
   ret += 5;




   xmlParseXMLDecl__internal_alias(ctxt);
   if (ctxt->errNo == XML_ERR_UNSUPPORTED_ENCODING) {




       ctxt->instate = XML_PARSER_EOF;
       return(0);
   }
   ctxt->standalone = ctxt->input->standalone;
   if ((ctxt->encoding == 
# 11220 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 11220 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             ) &&
       (ctxt->input->encoding != 
# 11221 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                ((void *)0)
# 11221 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                    ))
       ctxt->encoding = xmlStrdup__internal_alias(ctxt->input->encoding);
   if ((ctxt->sax) && (ctxt->sax->startDocument) &&
       (!ctxt->disableSAX))
       ctxt->sax->startDocument(ctxt->userData);
   ctxt->instate = XML_PARSER_MISC;




      } else {
   ctxt->version = xmlCharStrdup__internal_alias("1.0");
   if ((ctxt->sax) && (ctxt->sax->startDocument) &&
       (!ctxt->disableSAX))
       ctxt->sax->startDocument(ctxt->userData);
   ctxt->instate = XML_PARSER_MISC;




      }
  } else {
      if ((ctxt->sax) && (ctxt->sax->setDocumentLocator))
   ctxt->sax->setDocumentLocator(ctxt->userData,
            &(*(__xmlDefaultSAXLocator())));
      ctxt->version = xmlCharStrdup__internal_alias("1.0");
      if (ctxt->version == 
# 11247 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 11247 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              ) {
          xmlErrMemory__internal_alias(ctxt, 
# 11248 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 11248 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                );
   break;
      }
      if ((ctxt->sax) && (ctxt->sax->startDocument) &&
          (!ctxt->disableSAX))
   ctxt->sax->startDocument(ctxt->userData);
      ctxt->instate = XML_PARSER_MISC;




  }
  break;
            case XML_PARSER_START_TAG: {
         const xmlChar *name;
  const xmlChar *prefix = 
# 11263 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 11263 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             ;
  const xmlChar *URI = 
# 11264 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 11264 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ;
  int nsNr = ctxt->nsNr;

  if ((avail < 2) && (ctxt->inputNr == 1))
      goto done;
  cur = ctxt->input->cur[0];
         if (cur != '<') {
      xmlFatalErr(ctxt, XML_ERR_DOCUMENT_EMPTY, 
# 11271 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 11271 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   );
      ctxt->instate = XML_PARSER_EOF;
      if ((ctxt->sax) && (ctxt->sax->endDocument != 
# 11273 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                   ((void *)0)
# 11273 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                       ))
   ctxt->sax->endDocument(ctxt->userData);
      goto done;
  }
  if (!terminate) {
      if (ctxt->progressive) {

          if ((lastgt == 
# 11280 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 11280 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ) || (ctxt->input->cur >= lastgt))
       goto done;
      } else if (xmlParseLookupSequence(ctxt, '>', 0, 0) < 0) {
   goto done;
      }
  }
  if (ctxt->spaceNr == 0)
      spacePush(ctxt, -1);
  else if (*ctxt->space == -2)
      spacePush(ctxt, -1);
  else
      spacePush(ctxt, *ctxt->space);

  if (ctxt->sax2)

      name = xmlParseStartTag2(ctxt, &prefix, &URI, &tlen);

  else
      name = xmlParseStartTag__internal_alias(ctxt);

  if (ctxt->instate == XML_PARSER_EOF)
      goto done;
  if (name == 
# 11302 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 11302 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ) {
      spacePop(ctxt);
      ctxt->instate = XML_PARSER_EOF;
      if ((ctxt->sax) && (ctxt->sax->endDocument != 
# 11305 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                   ((void *)0)
# 11305 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                       ))
   ctxt->sax->endDocument(ctxt->userData);
      goto done;
  }






  if (ctxt->validate && ctxt->wellFormed && ctxt->myDoc &&
      ctxt->node && (ctxt->node == ctxt->myDoc->children))
      ctxt->valid &= xmlValidateRoot__internal_alias(&ctxt->vctxt, ctxt->myDoc);





  if (((*ctxt->input->cur) == '/') && (ctxt->input->cur[(1)] == '>')) {
      do { ctxt->nbChars += (2),ctxt->input->cur += (2),ctxt->input->col+=(2); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);

      if (ctxt->sax2) {
   if ((ctxt->sax != 
# 11327 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 11327 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ) &&
       (ctxt->sax->endElementNs != 
# 11328 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                  ((void *)0)
# 11328 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                      ) &&
       (!ctxt->disableSAX))
       ctxt->sax->endElementNs(ctxt->userData, name,
                               prefix, URI);
   if (ctxt->nsNr - nsNr > 0)
       nsPop(ctxt, ctxt->nsNr - nsNr);

      } else {
   if ((ctxt->sax != 
# 11336 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 11336 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ) &&
       (ctxt->sax->endElement != 
# 11337 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                ((void *)0)
# 11337 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                    ) &&
       (!ctxt->disableSAX))
       ctxt->sax->endElement(ctxt->userData, name);

      }
      spacePop(ctxt);
      if (ctxt->nameNr == 0) {
   ctxt->instate = XML_PARSER_EPILOG;
      } else {
   ctxt->instate = XML_PARSER_CONTENT;
      }
                    ctxt->progressive = 1;
      break;
  }
  if ((*ctxt->input->cur) == '>') {
      xmlNextChar__internal_alias(ctxt);
  } else {
      xmlFatalErrMsgStr(ctxt, XML_ERR_GT_REQUIRED,
      "Couldn't find end of Start Tag %s\n",
      name);
      nodePop__internal_alias(ctxt);
      spacePop(ctxt);
  }
  if (ctxt->sax2)
      nameNsPush(ctxt, name, prefix, URI, ctxt->nsNr - nsNr);

  else
      namePush__internal_alias(ctxt, name);


  ctxt->instate = XML_PARSER_CONTENT;
                ctxt->progressive = 1;
                break;
     }
            case XML_PARSER_CONTENT: {
  const xmlChar *test;
  unsigned int cons;
  if ((avail < 2) && (ctxt->inputNr == 1))
      goto done;
  cur = ctxt->input->cur[0];
  next = ctxt->input->cur[1];

  test = ctxt->input->cur;
         cons = ctxt->input->consumed;
  if ((cur == '<') && (next == '/')) {
      ctxt->instate = XML_PARSER_END_TAG;
      break;
         } else if ((cur == '<') && (next == '?')) {
      if ((!terminate) &&
          (xmlParseLookupSequence(ctxt, '?', '>', 0) < 0)) {
                        ctxt->progressive = XML_PARSER_PI;
   goto done;
                    }
      xmlParsePI__internal_alias(ctxt);
      ctxt->instate = XML_PARSER_CONTENT;
                    ctxt->progressive = 1;
  } else if ((cur == '<') && (next != '!')) {
      ctxt->instate = XML_PARSER_START_TAG;
      break;
  } else if ((cur == '<') && (next == '!') &&
             (ctxt->input->cur[2] == '-') &&
      (ctxt->input->cur[3] == '-')) {
      int term;

             if (avail < 4)
          goto done;
      ctxt->input->cur += 4;
      term = xmlParseLookupSequence(ctxt, '-', '-', '>');
      ctxt->input->cur -= 4;
      if ((!terminate) && (term < 0)) {
                        ctxt->progressive = XML_PARSER_COMMENT;
   goto done;
                    }
      xmlParseComment__internal_alias(ctxt);
      ctxt->instate = XML_PARSER_CONTENT;
                    ctxt->progressive = 1;
  } else if ((cur == '<') && (ctxt->input->cur[1] == '!') &&
      (ctxt->input->cur[2] == '[') &&
      (ctxt->input->cur[3] == 'C') &&
      (ctxt->input->cur[4] == 'D') &&
      (ctxt->input->cur[5] == 'A') &&
      (ctxt->input->cur[6] == 'T') &&
      (ctxt->input->cur[7] == 'A') &&
      (ctxt->input->cur[8] == '[')) {
      do { ctxt->nbChars += (9),ctxt->input->cur += (9),ctxt->input->col+=(9); if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
      ctxt->instate = XML_PARSER_CDATA_SECTION;
      break;
  } else if ((cur == '<') && (next == '!') &&
             (avail < 9)) {
      goto done;
  } else if (cur == '&') {
      if ((!terminate) &&
          (xmlParseLookupSequence(ctxt, ';', 0, 0) < 0))
   goto done;
      xmlParseReference__internal_alias(ctxt);
  } else {
# 11445 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
      if ((ctxt->inputNr == 1) &&
          (avail < 300)) {
   if (!terminate) {
       if (ctxt->progressive) {
    if ((lastlt == 
# 11449 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 11449 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) ||
        (ctxt->input->cur > lastlt))
        goto done;
       } else if (xmlParseLookupSequence(ctxt,
                                         '<', 0, 0) < 0) {
    goto done;
       }
   }
                    }
      ctxt->checkIndex = 0;
      xmlParseCharData__internal_alias(ctxt, 0);
  }



  while (((*ctxt->input->cur) == 0) && (ctxt->inputNr > 1))
      xmlPopInput__internal_alias(ctxt);
  if ((cons == ctxt->input->consumed) && (test == ctxt->input->cur)) {
      xmlFatalErr(ctxt, XML_ERR_INTERNAL_ERROR,
                  "detected an error in element content\n");
      ctxt->instate = XML_PARSER_EOF;
      break;
  }
  break;
     }
            case XML_PARSER_END_TAG:
  if (avail < 2)
      goto done;
  if (!terminate) {
      if (ctxt->progressive) {

          if ((lastgt == 
# 11480 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 11480 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ) || (ctxt->input->cur >= lastgt))
       goto done;
      } else if (xmlParseLookupSequence(ctxt, '>', 0, 0) < 0) {
   goto done;
      }
  }
  if (ctxt->sax2) {
      xmlParseEndTag2(ctxt,
             (void *) ctxt->pushTab[ctxt->nameNr * 3 - 3],
             (void *) ctxt->pushTab[ctxt->nameNr * 3 - 2], 0,
         (int) (long) ctxt->pushTab[ctxt->nameNr * 3 - 1], 0);
      nameNsPop(ctxt);
  }

    else
      xmlParseEndTag1(ctxt, 0);

  if (ctxt->instate == XML_PARSER_EOF) {

  } else if (ctxt->nameNr == 0) {
      ctxt->instate = XML_PARSER_EPILOG;
  } else {
      ctxt->instate = XML_PARSER_CONTENT;
  }
  break;
            case XML_PARSER_CDATA_SECTION: {




  int base;

  base = xmlParseLookupSequence(ctxt, ']', ']', '>');
  if (base < 0) {
      if (avail >= 300 + 2) {
          int tmp;

   tmp = xmlCheckCdataPush(ctxt->input->cur,
                           300);
   if (tmp < 0) {
       tmp = -tmp;
       ctxt->input->cur += tmp;
       goto encoding_error;
   }
   if ((ctxt->sax != 
# 11524 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 11524 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ) && (!ctxt->disableSAX)) {
       if (ctxt->sax->cdataBlock != 
# 11525 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                   ((void *)0)
# 11525 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                       )
    ctxt->sax->cdataBlock(ctxt->userData,
                          ctxt->input->cur, tmp);
       else if (ctxt->sax->characters != 
# 11528 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                        ((void *)0)
# 11528 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                            )
    ctxt->sax->characters(ctxt->userData,
                          ctxt->input->cur, tmp);
   }
   do { int skipl; for(skipl=0; skipl<tmp; skipl++) { if (*(ctxt->input->cur) == '\n') { ctxt->input->line++; ctxt->input->col = 1; } else ctxt->input->col++; ctxt->nbChars++; ctxt->input->cur++; } if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
   ctxt->checkIndex = 0;
      }
      goto done;
  } else {
      int tmp;

      tmp = xmlCheckCdataPush(ctxt->input->cur, base);
      if ((tmp < 0) || (tmp != base)) {
   tmp = -tmp;
   ctxt->input->cur += tmp;
   goto encoding_error;
      }
      if ((ctxt->sax != 
# 11545 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 11545 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ) && (base == 0) &&
          (ctxt->sax->cdataBlock != 
# 11546 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                   ((void *)0)
# 11546 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                       ) &&
          (!ctxt->disableSAX)) {





    if ((ctxt->input->cur - ctxt->input->base >= 9) &&
        (!strncmp((const char *)&ctxt->input->cur[-9],
                  "<![CDATA[", 9)))
        ctxt->sax->cdataBlock(ctxt->userData,
                              (xmlChar *) "", 0);
      } else if ((ctxt->sax != 
# 11558 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                              ((void *)0)
# 11558 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                  ) && (base > 0) &&
   (!ctxt->disableSAX)) {
   if (ctxt->sax->cdataBlock != 
# 11560 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                               ((void *)0)
# 11560 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                   )
       ctxt->sax->cdataBlock(ctxt->userData,
        ctxt->input->cur, base);
   else if (ctxt->sax->characters != 
# 11563 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                    ((void *)0)
# 11563 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                        )
       ctxt->sax->characters(ctxt->userData,
        ctxt->input->cur, base);
      }
      do { int skipl; for(skipl=0; skipl<base + 3; skipl++) { if (*(ctxt->input->cur) == '\n') { ctxt->input->line++; ctxt->input->col = 1; } else ctxt->input->col++; ctxt->nbChars++; ctxt->input->cur++; } if (*ctxt->input->cur == '%') xmlParserHandlePEReference__internal_alias(ctxt); if ((*ctxt->input->cur == 0) && (xmlParserInputGrow__internal_alias(ctxt->input, 250) <= 0)) xmlPopInput__internal_alias(ctxt); } while (0);
      ctxt->checkIndex = 0;
      ctxt->instate = XML_PARSER_CONTENT;




  }
  break;
     }
            case XML_PARSER_MISC:
  xmlSkipBlankChars__internal_alias(ctxt);
  if (ctxt->input->buf == 
# 11579 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 11579 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             )
      avail = ctxt->input->length -
              (ctxt->input->cur - ctxt->input->base);
  else
      avail = xmlBufUse(ctxt->input->buf->buffer) -
              (ctxt->input->cur - ctxt->input->base);
  if (avail < 2)
      goto done;
  cur = ctxt->input->cur[0];
  next = ctxt->input->cur[1];
         if ((cur == '<') && (next == '?')) {
      if ((!terminate) &&
          (xmlParseLookupSequence(ctxt, '?', '>', 0) < 0)) {
                        ctxt->progressive = XML_PARSER_PI;
   goto done;
                    }




      xmlParsePI__internal_alias(ctxt);
      ctxt->instate = XML_PARSER_MISC;
                    ctxt->progressive = 1;
      ctxt->checkIndex = 0;
  } else if ((cur == '<') && (next == '!') &&
      (ctxt->input->cur[2] == '-') &&
      (ctxt->input->cur[3] == '-')) {
      if ((!terminate) &&
          (xmlParseLookupSequence(ctxt, '-', '-', '>') < 0)) {
                        ctxt->progressive = XML_PARSER_COMMENT;
   goto done;
                    }




      xmlParseComment__internal_alias(ctxt);
      ctxt->instate = XML_PARSER_MISC;
                    ctxt->progressive = 1;
      ctxt->checkIndex = 0;
  } else if ((cur == '<') && (next == '!') &&
      (ctxt->input->cur[2] == 'D') &&
      (ctxt->input->cur[3] == 'O') &&
      (ctxt->input->cur[4] == 'C') &&
      (ctxt->input->cur[5] == 'T') &&
      (ctxt->input->cur[6] == 'Y') &&
      (ctxt->input->cur[7] == 'P') &&
      (ctxt->input->cur[8] == 'E')) {
      if ((!terminate) &&
          (xmlParseLookupSequence(ctxt, '>', 0, 0) < 0)) {
                        ctxt->progressive = XML_PARSER_DTD;
   goto done;
                    }




      ctxt->inSubset = 1;
                    ctxt->progressive = 0;
      ctxt->checkIndex = 0;
      xmlParseDocTypeDecl__internal_alias(ctxt);
      if ((*ctxt->input->cur) == '[') {
   ctxt->instate = XML_PARSER_DTD;




      } else {



   ctxt->inSubset = 2;
   if ((ctxt->sax != 
# 11651 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 11651 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ) && (!ctxt->disableSAX) &&
       (ctxt->sax->externalSubset != 
# 11652 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                    ((void *)0)
# 11652 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                        ))
       ctxt->sax->externalSubset(ctxt->userData,
        ctxt->intSubName, ctxt->extSubSystem,
        ctxt->extSubURI);
   ctxt->inSubset = 0;
   xmlCleanSpecialAttr(ctxt);
   ctxt->instate = XML_PARSER_PROLOG;




      }
  } else if ((cur == '<') && (next == '!') &&
             (avail < 9)) {
      goto done;
  } else {
      ctxt->instate = XML_PARSER_START_TAG;
      ctxt->progressive = XML_PARSER_START_TAG;
      xmlParseGetLasts(ctxt, &lastlt, &lastgt);




  }
  break;
            case XML_PARSER_PROLOG:
  xmlSkipBlankChars__internal_alias(ctxt);
  if (ctxt->input->buf == 
# 11679 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 11679 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             )
      avail = ctxt->input->length - (ctxt->input->cur - ctxt->input->base);
  else
      avail = xmlBufUse(ctxt->input->buf->buffer) -
                            (ctxt->input->cur - ctxt->input->base);
  if (avail < 2)
      goto done;
  cur = ctxt->input->cur[0];
  next = ctxt->input->cur[1];
         if ((cur == '<') && (next == '?')) {
      if ((!terminate) &&
          (xmlParseLookupSequence(ctxt, '?', '>', 0) < 0)) {
                        ctxt->progressive = XML_PARSER_PI;
   goto done;
                    }




      xmlParsePI__internal_alias(ctxt);
      ctxt->instate = XML_PARSER_PROLOG;
                    ctxt->progressive = 1;
  } else if ((cur == '<') && (next == '!') &&
      (ctxt->input->cur[2] == '-') && (ctxt->input->cur[3] == '-')) {
      if ((!terminate) &&
          (xmlParseLookupSequence(ctxt, '-', '-', '>') < 0)) {
                        ctxt->progressive = XML_PARSER_COMMENT;
   goto done;
                    }




      xmlParseComment__internal_alias(ctxt);
      ctxt->instate = XML_PARSER_PROLOG;
                    ctxt->progressive = 1;
  } else if ((cur == '<') && (next == '!') &&
             (avail < 4)) {
      goto done;
  } else {
      ctxt->instate = XML_PARSER_START_TAG;
      if (ctxt->progressive == 0)
   ctxt->progressive = XML_PARSER_START_TAG;
      xmlParseGetLasts(ctxt, &lastlt, &lastgt);




  }
  break;
            case XML_PARSER_EPILOG:
  xmlSkipBlankChars__internal_alias(ctxt);
  if (ctxt->input->buf == 
# 11731 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 11731 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             )
      avail = ctxt->input->length - (ctxt->input->cur - ctxt->input->base);
  else
      avail = xmlBufUse(ctxt->input->buf->buffer) -
                            (ctxt->input->cur - ctxt->input->base);
  if (avail < 2)
      goto done;
  cur = ctxt->input->cur[0];
  next = ctxt->input->cur[1];
         if ((cur == '<') && (next == '?')) {
      if ((!terminate) &&
          (xmlParseLookupSequence(ctxt, '?', '>', 0) < 0)) {
                        ctxt->progressive = XML_PARSER_PI;
   goto done;
                    }




      xmlParsePI__internal_alias(ctxt);
      ctxt->instate = XML_PARSER_EPILOG;
                    ctxt->progressive = 1;
  } else if ((cur == '<') && (next == '!') &&
      (ctxt->input->cur[2] == '-') && (ctxt->input->cur[3] == '-')) {
      if ((!terminate) &&
          (xmlParseLookupSequence(ctxt, '-', '-', '>') < 0)) {
                        ctxt->progressive = XML_PARSER_COMMENT;
   goto done;
                    }




      xmlParseComment__internal_alias(ctxt);
      ctxt->instate = XML_PARSER_EPILOG;
                    ctxt->progressive = 1;
  } else if ((cur == '<') && (next == '!') &&
             (avail < 4)) {
      goto done;
  } else {
      xmlFatalErr(ctxt, XML_ERR_DOCUMENT_END, 
# 11771 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                             ((void *)0)
# 11771 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                 );
      ctxt->instate = XML_PARSER_EOF;




      if ((ctxt->sax) && (ctxt->sax->endDocument != 
# 11777 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                   ((void *)0)
# 11777 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                       ))
   ctxt->sax->endDocument(ctxt->userData);
      goto done;
  }
  break;
            case XML_PARSER_DTD: {
# 11793 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
  int base, i;
  xmlChar *buf;
         xmlChar quote = 0;
                size_t use;

  base = ctxt->input->cur - ctxt->input->base;
  if (base < 0) return(0);
  if (ctxt->checkIndex > base)
      base = ctxt->checkIndex;
  buf = xmlBufContent(ctxt->input->buf->buffer);
                use = xmlBufUse(ctxt->input->buf->buffer);
  for (;(unsigned int) base < use; base++) {
      if (quote != 0) {
          if (buf[base] == quote)
       quote = 0;
   continue;
      }
      if ((quote == 0) && (buf[base] == '<')) {
          int found = 0;

          if (((unsigned int) base + 4 < use) &&
       (buf[base + 1] == '!') &&
       (buf[base + 2] == '-') &&
       (buf[base + 3] == '-')) {
       for (;(unsigned int) base + 3 < use; base++) {
    if ((buf[base] == '-') &&
        (buf[base + 1] == '-') &&
        (buf[base + 2] == '>')) {
        found = 1;
        base += 2;
        break;
    }
              }
       if (!found) {



           break;
              }
              continue;
   }
      }
      if (buf[base] == '"') {
          quote = '"';
   continue;
      }
      if (buf[base] == '\'') {
          quote = '\'';
   continue;
      }
      if (buf[base] == ']') {




          if ((unsigned int) base +1 >= use)
       break;
   if (buf[base + 1] == ']') {

       base++;
       continue;
   }
          for (i = 1; (unsigned int) base + i < use; i++) {
       if (buf[base + i] == '>') {



           goto found_end_int_subset;
       }
       if (!(((buf[base + i]) == 0x20) || ((0x9 <= (buf[base + i])) && ((buf[base + i]) <= 0xa)) || ((buf[base + i]) == 0xd))) {



           goto not_end_of_int_subset;
       }
   }



          break;

      }
not_end_of_int_subset:
                    continue;
  }



                if (quote == 0)
                    ctxt->checkIndex = base;
                else
                    ctxt->checkIndex = 0;





         goto done;

found_end_int_subset:
                ctxt->checkIndex = 0;
  xmlParseInternalSubset(ctxt);
  ctxt->inSubset = 2;
  if ((ctxt->sax != 
# 11896 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 11896 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) && (!ctxt->disableSAX) &&
      (ctxt->sax->externalSubset != 
# 11897 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                   ((void *)0)
# 11897 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                       ))
      ctxt->sax->externalSubset(ctxt->userData, ctxt->intSubName,
       ctxt->extSubSystem, ctxt->extSubURI);
  ctxt->inSubset = 0;
  xmlCleanSpecialAttr(ctxt);
  ctxt->instate = XML_PARSER_PROLOG;
  ctxt->checkIndex = 0;




                break;
     }
            case XML_PARSER_COMMENT:
  (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
   "PP: internal error, state == COMMENT\n");
  ctxt->instate = XML_PARSER_CONTENT;




  break;
            case XML_PARSER_IGNORE:
  (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
   "PP: internal error, state == IGNORE");
         ctxt->instate = XML_PARSER_DTD;




         break;
            case XML_PARSER_PI:
  (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
   "PP: internal error, state == PI\n");
  ctxt->instate = XML_PARSER_CONTENT;




  break;
            case XML_PARSER_ENTITY_DECL:
  (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
   "PP: internal error, state == ENTITY_DECL\n");
  ctxt->instate = XML_PARSER_DTD;




  break;
            case XML_PARSER_ENTITY_VALUE:
  (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
   "PP: internal error, state == ENTITY_VALUE\n");
  ctxt->instate = XML_PARSER_CONTENT;




  break;
            case XML_PARSER_ATTRIBUTE_VALUE:
  (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
   "PP: internal error, state == ATTRIBUTE_VALUE\n");
  ctxt->instate = XML_PARSER_START_TAG;




  break;
            case XML_PARSER_SYSTEM_LITERAL:
  (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
   "PP: internal error, state == SYSTEM_LITERAL\n");
  ctxt->instate = XML_PARSER_START_TAG;




  break;
            case XML_PARSER_PUBLIC_LITERAL:
  (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
   "PP: internal error, state == PUBLIC_LITERAL\n");
  ctxt->instate = XML_PARSER_START_TAG;




  break;
 }
    }
done:



    return(ret);
encoding_error:
    {
        char buffer[150];

 snprintf(buffer, 149, "Bytes: 0x%02X 0x%02X 0x%02X 0x%02X\n",
   ctxt->input->cur[0], ctxt->input->cur[1],
   ctxt->input->cur[2], ctxt->input->cur[3]);
 __xmlErrEncoding(ctxt, XML_ERR_INVALID_CHAR,
       "Input is not proper UTF-8, indicate encoding !\n%s",
       (xmlChar *) buffer, 
# 11998 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 11998 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           );
    }
    return(0);
}
# 12014 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static int
xmlParseCheckTransition(xmlParserCtxtPtr ctxt, const char *chunk, int size) {
    if ((ctxt == 
# 12016 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 12016 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) || (chunk == 
# 12016 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                   ((void *)0)
# 12016 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                       ) || (size < 0))
        return(-1);
    if (ctxt->instate == XML_PARSER_START_TAG) {
        if (memchr(chunk, '>', size) != 
# 12019 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                       ((void *)0)
# 12019 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                           )
            return(1);
        return(0);
    }
    if (ctxt->progressive == XML_PARSER_COMMENT) {
        if (memchr(chunk, '>', size) != 
# 12024 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                       ((void *)0)
# 12024 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                           )
            return(1);
        return(0);
    }
    if (ctxt->instate == XML_PARSER_CDATA_SECTION) {
        if (memchr(chunk, '>', size) != 
# 12029 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                       ((void *)0)
# 12029 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                           )
            return(1);
        return(0);
    }
    if (ctxt->progressive == XML_PARSER_PI) {
        if (memchr(chunk, '>', size) != 
# 12034 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                       ((void *)0)
# 12034 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                           )
            return(1);
        return(0);
    }
    if (ctxt->instate == XML_PARSER_END_TAG) {
        if (memchr(chunk, '>', size) != 
# 12039 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                       ((void *)0)
# 12039 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                           )
            return(1);
        return(0);
    }
    if ((ctxt->progressive == XML_PARSER_DTD) ||
        (ctxt->instate == XML_PARSER_DTD)) {
        if (memchr(chunk, ']', size) != 
# 12045 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                       ((void *)0)
# 12045 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                           )
            return(1);
        return(0);
    }
    return(1);
}
# 12063 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int
xmlParseChunk__internal_alias(xmlParserCtxtPtr ctxt, const char *chunk, int size,
              int terminate) {
    int end_in_lf = 0;
    int remain = 0;
    size_t old_avail = 0;
    size_t avail = 0;

    if (ctxt == 
# 12071 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 12071 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
        return(XML_ERR_INTERNAL_ERROR);
    if ((ctxt->errNo != XML_ERR_OK) && (ctxt->disableSAX == 1))
        return(ctxt->errNo);
    if (ctxt->instate == XML_PARSER_EOF)
        return(-1);
    if (ctxt->instate == XML_PARSER_START)
        xmlDetectSAX2(ctxt);
    if ((size > 0) && (chunk != 
# 12079 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                               ((void *)0)
# 12079 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                   ) && (!terminate) &&
        (chunk[size - 1] == '\r')) {
 end_in_lf = 1;
 size--;
    }

xmldecl_done:

    if ((size > 0) && (chunk != 
# 12087 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                               ((void *)0)
# 12087 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                   ) && (ctxt->input != 
# 12087 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                        ((void *)0)
# 12087 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                            ) &&
        (ctxt->input->buf != 
# 12088 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 12088 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                ) && (ctxt->instate != XML_PARSER_EOF)) {
 size_t base = xmlBufGetInputBase(ctxt->input->buf->buffer, ctxt->input);
 size_t cur = ctxt->input->cur - ctxt->input->base;
 int res;

        old_avail = xmlBufUse(ctxt->input->buf->buffer);





        if ((ctxt->instate == XML_PARSER_START) && (ctxt->input != 
# 12099 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                                  ((void *)0)
# 12099 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                                      ) &&
            (ctxt->input->buf != 
# 12100 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                ((void *)0)
# 12100 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                    ) && (ctxt->input->buf->encoder != 
# 12100 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                                       ((void *)0)
# 12100 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                                           )) {
            unsigned int len = 45;

            if ((xmlStrcasestr__internal_alias((xmlChar *) ctxt->input->buf->encoder->name,
                               (xmlChar *) "UTF-16")) ||
                (xmlStrcasestr__internal_alias((xmlChar *) ctxt->input->buf->encoder->name,
                               (xmlChar *) "UTF16")))
                len = 90;
            else if ((xmlStrcasestr__internal_alias((xmlChar *) ctxt->input->buf->encoder->name,
                                    (xmlChar *) "UCS-4")) ||
                     (xmlStrcasestr__internal_alias((xmlChar *) ctxt->input->buf->encoder->name,
                                    (xmlChar *) "UCS4")))
                len = 180;

            if (ctxt->input->buf->rawconsumed < len)
                len -= ctxt->input->buf->rawconsumed;






            if ((unsigned int) size > len) {
                remain = size - len;
                size = len;
            } else {
                remain = 0;
            }
        }
 res =xmlParserInputBufferPush__internal_alias(ctxt->input->buf, size, chunk);
 if (res < 0) {
     ctxt->errNo = XML_PARSER_EOF;
     ctxt->disableSAX = 1;
     return (XML_PARSER_EOF);
 }
        xmlBufSetInputBaseCur(ctxt->input->buf->buffer, ctxt->input, base, cur);




    } else if (ctxt->instate != XML_PARSER_EOF) {
 if ((ctxt->input != 
# 12141 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 12141 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ) && ctxt->input->buf != 
# 12141 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                 ((void *)0)
# 12141 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                     ) {
     xmlParserInputBufferPtr in = ctxt->input->buf;
     if ((in->encoder != 
# 12143 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 12143 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ) && (in->buffer != 
# 12143 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                ((void *)0)
# 12143 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                    ) &&
      (in->raw != 
# 12144 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 12144 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     )) {
  int nbchars;

  nbchars = xmlCharEncInput(in);
  if (nbchars < 0) {

      (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
        "xmlParseChunk: encoder error\n");
      return(XML_ERR_INVALID_ENCODING);
  }
     }
 }
    }
    if (remain != 0) {
        xmlParseTryOrFinish(ctxt, 0);
    } else {
        if ((ctxt->input != 
# 12160 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 12160 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               ) && (ctxt->input->buf != 
# 12160 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                         ((void *)0)
# 12160 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                             ))
            avail = xmlBufUse(ctxt->input->buf->buffer);






        if ((terminate) || (avail > 10000000) ||
            (old_avail == 0) || (avail == 0) ||
            (xmlParseCheckTransition(ctxt,
                       (const char *)&ctxt->input->base[old_avail],
                                     avail - old_avail)))
            xmlParseTryOrFinish(ctxt, terminate);
    }
    if ((ctxt->input != 
# 12175 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 12175 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ) &&
         (((ctxt->input->end - ctxt->input->cur) > 10000000) ||
         ((ctxt->input->cur - ctxt->input->base) > 10000000)) &&
        ((ctxt->options & XML_PARSE_HUGE) == 0)) {
        xmlFatalErr(ctxt, XML_ERR_INTERNAL_ERROR, "Huge input lookup");
        ctxt->instate = XML_PARSER_EOF;
    }
    if ((ctxt->errNo != XML_ERR_OK) && (ctxt->disableSAX == 1))
        return(ctxt->errNo);

    if (remain != 0) {
        chunk += size;
        size = remain;
        remain = 0;
        goto xmldecl_done;
    }
    if ((end_in_lf == 1) && (ctxt->input != 
# 12191 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                           ((void *)0)
# 12191 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                               ) &&
        (ctxt->input->buf != 
# 12192 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 12192 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                )) {
 xmlParserInputBufferPush__internal_alias(ctxt->input->buf, 1, "\r");
    }
    if (terminate) {



 int cur_avail = 0;

 if (ctxt->input != 
# 12201 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 12201 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) {
     if (ctxt->input->buf == 
# 12202 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 12202 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                )
  cur_avail = ctxt->input->length -
       (ctxt->input->cur - ctxt->input->base);
     else
  cur_avail = xmlBufUse(ctxt->input->buf->buffer) -
                 (ctxt->input->cur - ctxt->input->base);
 }

 if ((ctxt->instate != XML_PARSER_EOF) &&
     (ctxt->instate != XML_PARSER_EPILOG)) {
     xmlFatalErr(ctxt, XML_ERR_DOCUMENT_END, 
# 12212 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                            ((void *)0)
# 12212 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                );
 }
 if ((ctxt->instate == XML_PARSER_EPILOG) && (cur_avail > 0)) {
     xmlFatalErr(ctxt, XML_ERR_DOCUMENT_END, 
# 12215 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                            ((void *)0)
# 12215 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                );
 }
 if (ctxt->instate != XML_PARSER_EOF) {
     if ((ctxt->sax) && (ctxt->sax->endDocument != 
# 12218 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                  ((void *)0)
# 12218 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                      ))
  ctxt->sax->endDocument(ctxt->userData);
 }
 ctxt->instate = XML_PARSER_EOF;
    }
    if (ctxt->wellFormed == 0)
 return((xmlParserErrors) ctxt->errNo);
    else
        return(0);
}
# 12254 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlParserCtxtPtr
xmlCreatePushParserCtxt__internal_alias(xmlSAXHandlerPtr sax, void *user_data,
                        const char *chunk, int size, const char *filename) {
    xmlParserCtxtPtr ctxt;
    xmlParserInputPtr inputStream;
    xmlParserInputBufferPtr buf;
    xmlCharEncoding enc = XML_CHAR_ENCODING_NONE;




    if ((chunk != 
# 12265 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 12265 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) && (size >= 4))
 enc = xmlDetectCharEncoding__internal_alias((const xmlChar *) chunk, size);

    buf = xmlAllocParserInputBuffer__internal_alias(enc);
    if (buf == 
# 12269 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 12269 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) return(
# 12269 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 12269 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               );

    ctxt = xmlNewParserCtxt__internal_alias();
    if (ctxt == 
# 12272 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 12272 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
        xmlErrMemory__internal_alias(
# 12273 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 12273 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        , "creating parser: out of memory\n");
 xmlFreeParserInputBuffer__internal_alias(buf);
 return(
# 12275 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 12275 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    ctxt->dictNames = 1;
    ctxt->pushTab = (void **) xmlMalloc(ctxt->nameMax * 3 * sizeof(xmlChar *));
    if (ctxt->pushTab == 
# 12279 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 12279 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ) {
        xmlErrMemory__internal_alias(ctxt, 
# 12280 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 12280 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              );
 xmlFreeParserInputBuffer__internal_alias(buf);
 xmlFreeParserCtxt__internal_alias(ctxt);
 return(
# 12283 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 12283 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    if (sax != 
# 12285 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 12285 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {

 if (ctxt->sax != (xmlSAXHandlerPtr) &(*(__xmlDefaultSAXHandler())))

     xmlFree(ctxt->sax);
 ctxt->sax = (xmlSAXHandlerPtr) xmlMalloc(sizeof(xmlSAXHandler));
 if (ctxt->sax == 
# 12291 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 12291 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) {
     xmlErrMemory__internal_alias(ctxt, 
# 12292 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 12292 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           );
     xmlFreeParserInputBuffer__internal_alias(buf);
     xmlFreeParserCtxt__internal_alias(ctxt);
     return(
# 12295 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 12295 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               );
 }
 memset(ctxt->sax, 0, sizeof(xmlSAXHandler));
 if (sax->initialized == 0xDEEDBEAF)
     memcpy(ctxt->sax, sax, sizeof(xmlSAXHandler));
 else
     memcpy(ctxt->sax, sax, sizeof(xmlSAXHandlerV1));
 if (user_data != 
# 12302 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 12302 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     )
     ctxt->userData = user_data;
    }
    if (filename == 
# 12305 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 12305 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) {
 ctxt->directory = 
# 12306 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 12306 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ;
    } else {
        ctxt->directory = xmlParserGetDirectory__internal_alias(filename);
    }

    inputStream = xmlNewInputStream__internal_alias(ctxt);
    if (inputStream == 
# 12312 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 12312 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) {
 xmlFreeParserCtxt__internal_alias(ctxt);
 xmlFreeParserInputBuffer__internal_alias(buf);
 return(
# 12315 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 12315 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }

    if (filename == 
# 12318 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 12318 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       )
 inputStream->filename = 
# 12319 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 12319 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ;
    else {
 inputStream->filename = (char *)
     xmlCanonicPath__internal_alias((const xmlChar *) filename);
 if (inputStream->filename == 
# 12323 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                             ((void *)0)
# 12323 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                 ) {
     xmlFreeParserCtxt__internal_alias(ctxt);
     xmlFreeParserInputBuffer__internal_alias(buf);
     return(
# 12326 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 12326 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               );
 }
    }
    inputStream->buf = buf;
    xmlBufResetInput(inputStream->buf->buffer, inputStream);
    inputPush__internal_alias(ctxt, inputStream);






    if ((size == 0) || (chunk == 
# 12338 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                ((void *)0)
# 12338 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                    )) {
 ctxt->charset = XML_CHAR_ENCODING_NONE;
    } else if ((ctxt->input != 
# 12340 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                              ((void *)0)
# 12340 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                  ) && (ctxt->input->buf != 
# 12340 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                            ((void *)0)
# 12340 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                                )) {
 size_t base = xmlBufGetInputBase(ctxt->input->buf->buffer, ctxt->input);
 size_t cur = ctxt->input->cur - ctxt->input->base;

 xmlParserInputBufferPush__internal_alias(ctxt->input->buf, size, chunk);

        xmlBufSetInputBaseCur(ctxt->input->buf->buffer, ctxt->input, base, cur);



    }

    if (enc != XML_CHAR_ENCODING_NONE) {
        xmlSwitchEncoding__internal_alias(ctxt, enc);
    }

    return(ctxt);
}
# 12366 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlStopParser__internal_alias(xmlParserCtxtPtr ctxt) {
    if (ctxt == 
# 12368 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 12368 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
        return;
    ctxt->instate = XML_PARSER_EOF;
    ctxt->disableSAX = 1;
    if (ctxt->input != 
# 12372 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 12372 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) {
 ctxt->input->cur = (xmlChar *)"";
 ctxt->input->base = ctxt->input->cur;
    }
}
# 12392 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlParserCtxtPtr
xmlCreateIOParserCtxt__internal_alias(xmlSAXHandlerPtr sax, void *user_data,
 xmlInputReadCallback ioread, xmlInputCloseCallback ioclose,
 void *ioctx, xmlCharEncoding enc) {
    xmlParserCtxtPtr ctxt;
    xmlParserInputPtr inputStream;
    xmlParserInputBufferPtr buf;

    if (ioread == 
# 12400 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 12400 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) return(
# 12400 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                              ((void *)0)
# 12400 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                  );

    buf = xmlParserInputBufferCreateIO__internal_alias(ioread, ioclose, ioctx, enc);
    if (buf == 
# 12403 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 12403 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
        if (ioclose != 
# 12404 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 12404 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          )
            ioclose(ioctx);
        return (
# 12406 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 12406 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    }

    ctxt = xmlNewParserCtxt__internal_alias();
    if (ctxt == 
# 12410 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 12410 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
 xmlFreeParserInputBuffer__internal_alias(buf);
 return(
# 12412 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 12412 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    if (sax != 
# 12414 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 12414 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {

 if (ctxt->sax != (xmlSAXHandlerPtr) &(*(__xmlDefaultSAXHandler())))

     xmlFree(ctxt->sax);
 ctxt->sax = (xmlSAXHandlerPtr) xmlMalloc(sizeof(xmlSAXHandler));
 if (ctxt->sax == 
# 12420 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 12420 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) {
     xmlErrMemory__internal_alias(ctxt, 
# 12421 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 12421 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           );
     xmlFreeParserCtxt__internal_alias(ctxt);
     return(
# 12423 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 12423 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               );
 }
 memset(ctxt->sax, 0, sizeof(xmlSAXHandler));
 if (sax->initialized == 0xDEEDBEAF)
     memcpy(ctxt->sax, sax, sizeof(xmlSAXHandler));
 else
     memcpy(ctxt->sax, sax, sizeof(xmlSAXHandlerV1));
 if (user_data != 
# 12430 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 12430 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     )
     ctxt->userData = user_data;
    }

    inputStream = xmlNewIOInputStream__internal_alias(ctxt, buf, enc);
    if (inputStream == 
# 12435 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 12435 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) {
 xmlFreeParserCtxt__internal_alias(ctxt);
 return(
# 12437 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 12437 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    inputPush__internal_alias(ctxt, inputStream);

    return(ctxt);
}
# 12463 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDtdPtr
xmlIOParseDTD__internal_alias(xmlSAXHandlerPtr sax, xmlParserInputBufferPtr input,
       xmlCharEncoding enc) {
    xmlDtdPtr ret = 
# 12466 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 12466 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ;
    xmlParserCtxtPtr ctxt;
    xmlParserInputPtr pinput = 
# 12468 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                              ((void *)0)
# 12468 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                  ;
    xmlChar start[4];

    if (input == 
# 12471 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 12471 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    )
 return(
# 12472 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 12472 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );

    ctxt = xmlNewParserCtxt__internal_alias();
    if (ctxt == 
# 12475 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 12475 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
        xmlFreeParserInputBuffer__internal_alias(input);
 return(
# 12477 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 12477 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }




    if (sax != 
# 12483 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 12483 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
 if (ctxt->sax != 
# 12484 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 12484 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     )
     xmlFree(ctxt->sax);
        ctxt->sax = sax;
        ctxt->userData = ctxt;
    }
    xmlDetectSAX2(ctxt);





    pinput = xmlNewIOInputStream__internal_alias(ctxt, input, XML_CHAR_ENCODING_NONE);
    if (pinput == 
# 12496 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 12496 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) {
        if (sax != 
# 12497 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 12497 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) ctxt->sax = 
# 12497 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                    ((void *)0)
# 12497 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                        ;
        xmlFreeParserInputBuffer__internal_alias(input);
 xmlFreeParserCtxt__internal_alias(ctxt);
 return(
# 12500 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 12500 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }




    if (xmlPushInput__internal_alias(ctxt, pinput) < 0) {
        if (sax != 
# 12507 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 12507 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) ctxt->sax = 
# 12507 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                    ((void *)0)
# 12507 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                        ;
 xmlFreeParserCtxt__internal_alias(ctxt);
 return(
# 12509 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 12509 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    if (enc != XML_CHAR_ENCODING_NONE) {
        xmlSwitchEncoding__internal_alias(ctxt, enc);
    }

    pinput->filename = 
# 12515 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 12515 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ;
    pinput->line = 1;
    pinput->col = 1;
    pinput->base = ctxt->input->cur;
    pinput->cur = ctxt->input->cur;
    pinput->free = 
# 12520 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 12520 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ;




    ctxt->inSubset = 2;
    ctxt->myDoc = xmlNewDoc__internal_alias((xmlChar *) "1.0");
    if (ctxt->myDoc == 
# 12527 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 12527 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) {
 xmlErrMemory__internal_alias(ctxt, "New Doc failed");
 return(
# 12529 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 12529 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    ctxt->myDoc->properties = XML_DOC_INTERNAL;
    ctxt->myDoc->extSubset = xmlNewDtd__internal_alias(ctxt->myDoc, (xmlChar *) "none",
                                (xmlChar *) "none", (xmlChar *) "none");

    if ((enc == XML_CHAR_ENCODING_NONE) &&
        ((ctxt->input->end - ctxt->input->cur) >= 4)) {





 start[0] = (*ctxt->input->cur);
 start[1] = ctxt->input->cur[(1)];
 start[2] = ctxt->input->cur[(2)];
 start[3] = ctxt->input->cur[(3)];
 enc = xmlDetectCharEncoding__internal_alias(start, 4);
 if (enc != XML_CHAR_ENCODING_NONE) {
     xmlSwitchEncoding__internal_alias(ctxt, enc);
 }
    }

    xmlParseExternalSubset__internal_alias(ctxt, (xmlChar *) "none", (xmlChar *) "none");

    if (ctxt->myDoc != 
# 12554 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 12554 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) {
 if (ctxt->wellFormed) {
     ret = ctxt->myDoc->extSubset;
     ctxt->myDoc->extSubset = 
# 12557 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                             ((void *)0)
# 12557 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                 ;
     if (ret != 
# 12558 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 12558 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
  xmlNodePtr tmp;

  ret->doc = 
# 12561 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 12561 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ;
  tmp = ret->children;
  while (tmp != 
# 12563 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 12563 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
      tmp->doc = 
# 12564 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 12564 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ;
      tmp = tmp->next;
  }
     }
 } else {
     ret = 
# 12569 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
          ((void *)0)
# 12569 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
              ;
 }
        xmlFreeDoc__internal_alias(ctxt->myDoc);
        ctxt->myDoc = 
# 12572 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 12572 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ;
    }
    if (sax != 
# 12574 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 12574 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) ctxt->sax = 
# 12574 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                ((void *)0)
# 12574 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                    ;
    xmlFreeParserCtxt__internal_alias(ctxt);

    return(ret);
}
# 12591 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDtdPtr
xmlSAXParseDTD__internal_alias(xmlSAXHandlerPtr sax, const xmlChar *ExternalID,
                          const xmlChar *SystemID) {
    xmlDtdPtr ret = 
# 12594 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 12594 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ;
    xmlParserCtxtPtr ctxt;
    xmlParserInputPtr input = 
# 12596 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                             ((void *)0)
# 12596 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                 ;
    xmlCharEncoding enc;
    xmlChar* systemIdCanonic;

    if ((ExternalID == 
# 12600 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 12600 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) && (SystemID == 
# 12600 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                            ((void *)0)
# 12600 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                )) return(
# 12600 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                          ((void *)0)
# 12600 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                              );

    ctxt = xmlNewParserCtxt__internal_alias();
    if (ctxt == 
# 12603 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 12603 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
 return(
# 12604 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 12604 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }




    if (sax != 
# 12610 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 12610 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
 if (ctxt->sax != 
# 12611 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 12611 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     )
     xmlFree(ctxt->sax);
        ctxt->sax = sax;
        ctxt->userData = ctxt;
    }




    systemIdCanonic = xmlCanonicPath__internal_alias(SystemID);
    if ((SystemID != 
# 12621 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 12621 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ) && (systemIdCanonic == 
# 12621 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                 ((void *)0)
# 12621 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                     )) {
 xmlFreeParserCtxt__internal_alias(ctxt);
 return(
# 12623 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 12623 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }





    if ((ctxt->sax != 
# 12630 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 12630 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) && (ctxt->sax->resolveEntity != 
# 12630 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                           ((void *)0)
# 12630 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                               ))
 input = ctxt->sax->resolveEntity(ctxt->userData, ExternalID,
                                  systemIdCanonic);
    if (input == 
# 12633 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 12633 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
        if (sax != 
# 12634 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 12634 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) ctxt->sax = 
# 12634 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                    ((void *)0)
# 12634 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                        ;
 xmlFreeParserCtxt__internal_alias(ctxt);
 if (systemIdCanonic != 
# 12636 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 12636 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           )
     xmlFree(systemIdCanonic);
 return(
# 12638 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 12638 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }




    if (xmlPushInput__internal_alias(ctxt, input) < 0) {
        if (sax != 
# 12645 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 12645 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) ctxt->sax = 
# 12645 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                    ((void *)0)
# 12645 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                        ;
 xmlFreeParserCtxt__internal_alias(ctxt);
 if (systemIdCanonic != 
# 12647 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 12647 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           )
     xmlFree(systemIdCanonic);
 return(
# 12649 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 12649 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    if ((ctxt->input->end - ctxt->input->cur) >= 4) {
 enc = xmlDetectCharEncoding__internal_alias(ctxt->input->cur, 4);
 xmlSwitchEncoding__internal_alias(ctxt, enc);
    }

    if (input->filename == 
# 12656 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 12656 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              )
 input->filename = (char *) systemIdCanonic;
    else
 xmlFree(systemIdCanonic);
    input->line = 1;
    input->col = 1;
    input->base = ctxt->input->cur;
    input->cur = ctxt->input->cur;
    input->free = 
# 12664 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 12664 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ;




    ctxt->inSubset = 2;
    ctxt->myDoc = xmlNewDoc__internal_alias((xmlChar *) "1.0");
    if (ctxt->myDoc == 
# 12671 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 12671 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) {
 xmlErrMemory__internal_alias(ctxt, "New Doc failed");
        if (sax != 
# 12673 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 12673 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) ctxt->sax = 
# 12673 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                    ((void *)0)
# 12673 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                        ;
 xmlFreeParserCtxt__internal_alias(ctxt);
 return(
# 12675 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 12675 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    ctxt->myDoc->properties = XML_DOC_INTERNAL;
    ctxt->myDoc->extSubset = xmlNewDtd__internal_alias(ctxt->myDoc, (xmlChar *) "none",
                                ExternalID, SystemID);
    xmlParseExternalSubset__internal_alias(ctxt, ExternalID, SystemID);

    if (ctxt->myDoc != 
# 12682 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 12682 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) {
 if (ctxt->wellFormed) {
     ret = ctxt->myDoc->extSubset;
     ctxt->myDoc->extSubset = 
# 12685 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                             ((void *)0)
# 12685 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                 ;
     if (ret != 
# 12686 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 12686 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
  xmlNodePtr tmp;

  ret->doc = 
# 12689 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 12689 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ;
  tmp = ret->children;
  while (tmp != 
# 12691 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 12691 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
      tmp->doc = 
# 12692 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 12692 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ;
      tmp = tmp->next;
  }
     }
 } else {
     ret = 
# 12697 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
          ((void *)0)
# 12697 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
              ;
 }
        xmlFreeDoc__internal_alias(ctxt->myDoc);
        ctxt->myDoc = 
# 12700 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 12700 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ;
    }
    if (sax != 
# 12702 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 12702 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) ctxt->sax = 
# 12702 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                ((void *)0)
# 12702 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                    ;
    xmlFreeParserCtxt__internal_alias(ctxt);

    return(ret);
}
# 12719 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDtdPtr
xmlParseDTD__internal_alias(const xmlChar *ExternalID, const xmlChar *SystemID) {
    return(xmlSAXParseDTD__internal_alias(
# 12721 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 12721 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             , ExternalID, SystemID));
}
# 12748 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int
xmlParseCtxtExternalEntity__internal_alias(xmlParserCtxtPtr ctx, const xmlChar *URL,
                const xmlChar *ID, xmlNodePtr *lst) {
    xmlParserCtxtPtr ctxt;
    xmlDocPtr newDoc;
    xmlNodePtr newRoot;
    xmlSAXHandlerPtr oldsax = 
# 12754 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                             ((void *)0)
# 12754 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                 ;
    int ret = 0;
    xmlChar start[4];
    xmlCharEncoding enc;

    if (ctx == 
# 12759 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 12759 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) return(-1);

    if (((ctx->depth > 40) && ((ctx->options & XML_PARSE_HUGE) == 0)) ||
        (ctx->depth > 1024)) {
 return(XML_ERR_ENTITY_LOOP);
    }

    if (lst != 
# 12766 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 12766 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
        *lst = 
# 12767 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 12767 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ;
    if ((URL == 
# 12768 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 12768 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) && (ID == 
# 12768 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                               ((void *)0)
# 12768 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                   ))
 return(-1);
    if (ctx->myDoc == 
# 12770 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 12770 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         )
 return(-1);

    ctxt = xmlCreateEntityParserCtxtInternal(URL, ID, 
# 12773 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                     ((void *)0)
# 12773 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                         , ctx);
    if (ctxt == 
# 12774 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 12774 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
 return(-1);
    }

    oldsax = ctxt->sax;
    ctxt->sax = ctx->sax;
    xmlDetectSAX2(ctxt);
    newDoc = xmlNewDoc__internal_alias((xmlChar *) "1.0");
    if (newDoc == 
# 12782 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 12782 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) {
 xmlFreeParserCtxt__internal_alias(ctxt);
 return(-1);
    }
    newDoc->properties = XML_DOC_INTERNAL;
    if (ctx->myDoc->dict) {
 newDoc->dict = ctx->myDoc->dict;
 xmlDictReference__internal_alias(newDoc->dict);
    }
    if (ctx->myDoc != 
# 12791 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 12791 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) {
 newDoc->intSubset = ctx->myDoc->intSubset;
 newDoc->extSubset = ctx->myDoc->extSubset;
    }
    if (ctx->myDoc->URL != 
# 12795 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 12795 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              ) {
 newDoc->URL = xmlStrdup__internal_alias(ctx->myDoc->URL);
    }
    newRoot = xmlNewDocNode__internal_alias(newDoc, 
# 12798 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                   ((void *)0)
# 12798 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                       , (xmlChar *) "pseudoroot", 
# 12798 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                                ((void *)0)
# 12798 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                                    );
    if (newRoot == 
# 12799 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 12799 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) {
 ctxt->sax = oldsax;
 xmlFreeParserCtxt__internal_alias(ctxt);
 newDoc->intSubset = 
# 12802 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 12802 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ;
 newDoc->extSubset = 
# 12803 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 12803 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ;
        xmlFreeDoc__internal_alias(newDoc);
 return(-1);
    }
    xmlAddChild__internal_alias((xmlNodePtr) newDoc, newRoot);
    nodePush__internal_alias(ctxt, newDoc->children);
    if (ctx->myDoc == 
# 12809 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 12809 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) {
 ctxt->myDoc = newDoc;
    } else {
 ctxt->myDoc = ctx->myDoc;
 newDoc->children->doc = ctx->myDoc;
    }






    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);
    if ((ctxt->input->end - ctxt->input->cur) >= 4) {
 start[0] = (*ctxt->input->cur);
 start[1] = ctxt->input->cur[(1)];
 start[2] = ctxt->input->cur[(2)];
 start[3] = ctxt->input->cur[(3)];
 enc = xmlDetectCharEncoding__internal_alias(start, 4);
 if (enc != XML_CHAR_ENCODING_NONE) {
     xmlSwitchEncoding__internal_alias(ctxt, enc);
 }
    }




    if ((( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == '<' && ((unsigned char *) ctxt->input->cur)[ 1 ] == '?' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'x' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'm' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'l' )) && ((((ctxt->input->cur[(5)]) == 0x20) || ((0x9 <= (ctxt->input->cur[(5)])) && ((ctxt->input->cur[(5)]) <= 0xa)) || ((ctxt->input->cur[(5)]) == 0xd)))) {
 xmlParseTextDecl__internal_alias(ctxt);



 if ((xmlStrEqual__internal_alias(ctx->version, (xmlChar *) "1.0")) &&
     (!xmlStrEqual__internal_alias(ctxt->input->version, (xmlChar *) "1.0"))) {
     xmlFatalErrMsg(ctxt, XML_ERR_VERSION_MISMATCH,
                    "Version mismatch between document and entity\n");
 }
    }






    if (ctx->userData == ctx)
        ctxt->userData = ctxt;
    else
        ctxt->userData = ctx->userData;




    ctxt->instate = XML_PARSER_CONTENT;
    ctxt->validate = ctx->validate;
    ctxt->valid = ctx->valid;
    ctxt->loadsubset = ctx->loadsubset;
    ctxt->depth = ctx->depth + 1;
    ctxt->replaceEntities = ctx->replaceEntities;
    if (ctxt->validate) {
 ctxt->vctxt.error = ctx->vctxt.error;
 ctxt->vctxt.warning = ctx->vctxt.warning;
    } else {
 ctxt->vctxt.error = 
# 12871 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 12871 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ;
 ctxt->vctxt.warning = 
# 12872 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 12872 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ;
    }
    ctxt->vctxt.nodeTab = 
# 12874 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 12874 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             ;
    ctxt->vctxt.nodeNr = 0;
    ctxt->vctxt.nodeMax = 0;
    ctxt->vctxt.node = 
# 12877 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 12877 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ;
    if (ctxt->dict != 
# 12878 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 12878 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) xmlDictFree__internal_alias(ctxt->dict);
    ctxt->dict = ctx->dict;
    ctxt->str_xml = xmlDictLookup__internal_alias(ctxt->dict, (xmlChar *) "xml", 3);
    ctxt->str_xmlns = xmlDictLookup__internal_alias(ctxt->dict, (xmlChar *) "xmlns", 5);
    ctxt->str_xml_ns = xmlDictLookup__internal_alias(ctxt->dict, (const xmlChar *) "http://www.w3.org/XML/1998/namespace", 36);
    ctxt->dictNames = ctx->dictNames;
    ctxt->attsDefault = ctx->attsDefault;
    ctxt->attsSpecial = ctx->attsSpecial;
    ctxt->linenumbers = ctx->linenumbers;

    xmlParseContent__internal_alias(ctxt);

    ctx->validate = ctxt->validate;
    ctx->valid = ctxt->valid;
    if (((*ctxt->input->cur) == '<') && (ctxt->input->cur[(1)] == '/')) {
 xmlFatalErr(ctxt, XML_ERR_NOT_WELL_BALANCED, 
# 12893 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                             ((void *)0)
# 12893 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                 );
    } else if ((*ctxt->input->cur) != 0) {
 xmlFatalErr(ctxt, XML_ERR_EXTRA_CONTENT, 
# 12895 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                         ((void *)0)
# 12895 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                             );
    }
    if (ctxt->node != newDoc->children) {
 xmlFatalErr(ctxt, XML_ERR_NOT_WELL_BALANCED, 
# 12898 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                             ((void *)0)
# 12898 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                 );
    }

    if (!ctxt->wellFormed) {
        if (ctxt->errNo == 0)
     ret = 1;
 else
     ret = ctxt->errNo;
    } else {
 if (lst != 
# 12907 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 12907 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               ) {
     xmlNodePtr cur;





     cur = newDoc->children->children;
     *lst = cur;
     while (cur != 
# 12916 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 12916 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) {
  cur->parent = 
# 12917 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 12917 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ;
  cur = cur->next;
     }
            newDoc->children->children = 
# 12920 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                        ((void *)0)
# 12920 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                            ;
 }
 ret = 0;
    }
    ctxt->sax = oldsax;
    ctxt->dict = 
# 12925 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 12925 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ;
    ctxt->attsDefault = 
# 12926 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 12926 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ;
    ctxt->attsSpecial = 
# 12927 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 12927 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ;
    xmlFreeParserCtxt__internal_alias(ctxt);
    newDoc->intSubset = 
# 12929 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 12929 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ;
    newDoc->extSubset = 
# 12930 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 12930 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ;
    xmlFreeDoc__internal_alias(newDoc);

    return(ret);
}
# 12953 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static xmlParserErrors
xmlParseExternalEntityPrivate(xmlDocPtr doc, xmlParserCtxtPtr oldctxt,
               xmlSAXHandlerPtr sax,
        void *user_data, int depth, const xmlChar *URL,
        const xmlChar *ID, xmlNodePtr *list) {
    xmlParserCtxtPtr ctxt;
    xmlDocPtr newDoc;
    xmlNodePtr newRoot;
    xmlSAXHandlerPtr oldsax = 
# 12961 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                             ((void *)0)
# 12961 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                 ;
    xmlParserErrors ret = XML_ERR_OK;
    xmlChar start[4];
    xmlCharEncoding enc;

    if (((depth > 40) &&
 ((oldctxt == 
# 12967 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 12967 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ) || (oldctxt->options & XML_PARSE_HUGE) == 0)) ||
 (depth > 1024)) {
 return(XML_ERR_ENTITY_LOOP);
    }

    if (list != 
# 12972 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 12972 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
        *list = 
# 12973 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 12973 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ;
    if ((URL == 
# 12974 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 12974 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) && (ID == 
# 12974 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                               ((void *)0)
# 12974 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                   ))
 return(XML_ERR_INTERNAL_ERROR);
    if (doc == 
# 12976 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 12976 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
 return(XML_ERR_INTERNAL_ERROR);


    ctxt = xmlCreateEntityParserCtxtInternal(URL, ID, 
# 12980 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                     ((void *)0)
# 12980 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                         , oldctxt);
    if (ctxt == 
# 12981 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 12981 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) return(XML_WAR_UNDECLARED_ENTITY);
    ctxt->userData = ctxt;
    if (oldctxt != 
# 12983 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 12983 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) {
 ctxt->_private = oldctxt->_private;
 ctxt->loadsubset = oldctxt->loadsubset;
 ctxt->validate = oldctxt->validate;
 ctxt->external = oldctxt->external;
 ctxt->record_info = oldctxt->record_info;
 ctxt->node_seq.maximum = oldctxt->node_seq.maximum;
 ctxt->node_seq.length = oldctxt->node_seq.length;
 ctxt->node_seq.buffer = oldctxt->node_seq.buffer;
    } else {




 ctxt->_private = 
# 12997 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 12997 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ;
 ctxt->validate = 0;
 ctxt->external = 2;
 ctxt->loadsubset = 0;
    }
    if (sax != 
# 13002 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 13002 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
 oldsax = ctxt->sax;
        ctxt->sax = sax;
 if (user_data != 
# 13005 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 13005 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     )
     ctxt->userData = user_data;
    }
    xmlDetectSAX2(ctxt);
    newDoc = xmlNewDoc__internal_alias((xmlChar *) "1.0");
    if (newDoc == 
# 13010 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 13010 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) {
 ctxt->node_seq.maximum = 0;
 ctxt->node_seq.length = 0;
 ctxt->node_seq.buffer = 
# 13013 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 13013 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ;
 xmlFreeParserCtxt__internal_alias(ctxt);
 return(XML_ERR_INTERNAL_ERROR);
    }
    newDoc->properties = XML_DOC_INTERNAL;
    newDoc->intSubset = doc->intSubset;
    newDoc->extSubset = doc->extSubset;
    newDoc->dict = doc->dict;
    xmlDictReference__internal_alias(newDoc->dict);

    if (doc->URL != 
# 13023 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 13023 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) {
 newDoc->URL = xmlStrdup__internal_alias(doc->URL);
    }
    newRoot = xmlNewDocNode__internal_alias(newDoc, 
# 13026 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                   ((void *)0)
# 13026 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                       , (xmlChar *) "pseudoroot", 
# 13026 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                                ((void *)0)
# 13026 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                                    );
    if (newRoot == 
# 13027 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 13027 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) {
 if (sax != 
# 13028 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 13028 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               )
     ctxt->sax = oldsax;
 ctxt->node_seq.maximum = 0;
 ctxt->node_seq.length = 0;
 ctxt->node_seq.buffer = 
# 13032 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 13032 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ;
 xmlFreeParserCtxt__internal_alias(ctxt);
 newDoc->intSubset = 
# 13034 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 13034 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ;
 newDoc->extSubset = 
# 13035 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 13035 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ;
        xmlFreeDoc__internal_alias(newDoc);
 return(XML_ERR_INTERNAL_ERROR);
    }
    xmlAddChild__internal_alias((xmlNodePtr) newDoc, newRoot);
    nodePush__internal_alias(ctxt, newDoc->children);
    ctxt->myDoc = doc;
    newRoot->doc = doc;






    if ((ctxt->progressive == 0) && (ctxt->input->end - ctxt->input->cur < 250)) xmlGROW (ctxt);;
    if ((ctxt->input->end - ctxt->input->cur) >= 4) {
 start[0] = (*ctxt->input->cur);
 start[1] = ctxt->input->cur[(1)];
 start[2] = ctxt->input->cur[(2)];
 start[3] = ctxt->input->cur[(3)];
 enc = xmlDetectCharEncoding__internal_alias(start, 4);
 if (enc != XML_CHAR_ENCODING_NONE) {
     xmlSwitchEncoding__internal_alias(ctxt, enc);
 }
    }




    if ((( ( ((unsigned char *) ctxt->input->cur)[ 0 ] == '<' && ((unsigned char *) ctxt->input->cur)[ 1 ] == '?' && ((unsigned char *) ctxt->input->cur)[ 2 ] == 'x' && ((unsigned char *) ctxt->input->cur)[ 3 ] == 'm' ) && ((unsigned char *) ctxt->input->cur)[ 4 ] == 'l' )) && ((((ctxt->input->cur[(5)]) == 0x20) || ((0x9 <= (ctxt->input->cur[(5)])) && ((ctxt->input->cur[(5)]) <= 0xa)) || ((ctxt->input->cur[(5)]) == 0xd)))) {
 xmlParseTextDecl__internal_alias(ctxt);
    }

    ctxt->instate = XML_PARSER_CONTENT;
    ctxt->depth = depth;

    xmlParseContent__internal_alias(ctxt);

    if (((*ctxt->input->cur) == '<') && (ctxt->input->cur[(1)] == '/')) {
 xmlFatalErr(ctxt, XML_ERR_NOT_WELL_BALANCED, 
# 13074 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                             ((void *)0)
# 13074 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                 );
    } else if ((*ctxt->input->cur) != 0) {
 xmlFatalErr(ctxt, XML_ERR_EXTRA_CONTENT, 
# 13076 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                         ((void *)0)
# 13076 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                             );
    }
    if (ctxt->node != newDoc->children) {
 xmlFatalErr(ctxt, XML_ERR_NOT_WELL_BALANCED, 
# 13079 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                             ((void *)0)
# 13079 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                 );
    }

    if (!ctxt->wellFormed) {
        if (ctxt->errNo == 0)
     ret = XML_ERR_INTERNAL_ERROR;
 else
     ret = (xmlParserErrors)ctxt->errNo;
    } else {
 if (list != 
# 13088 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 13088 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ) {
     xmlNodePtr cur;





     cur = newDoc->children->children;
     *list = cur;
     while (cur != 
# 13097 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 13097 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) {
  cur->parent = 
# 13098 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 13098 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ;
  cur = cur->next;
     }
            newDoc->children->children = 
# 13101 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                        ((void *)0)
# 13101 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                            ;
 }
 ret = XML_ERR_OK;
    }





    if (oldctxt != 
# 13110 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 13110 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      )
        oldctxt->nbentities += ctxt->nbentities;




    if (ctxt->input != 
# 13116 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 13116 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) {
 oldctxt->sizeentities += ctxt->input->consumed;
 oldctxt->sizeentities += (ctxt->input->cur - ctxt->input->base);
    }



    if (ctxt->lastError.code != XML_ERR_OK)
        xmlCopyError__internal_alias(&ctxt->lastError, &oldctxt->lastError);

    if (sax != 
# 13126 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 13126 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
 ctxt->sax = oldsax;
    oldctxt->node_seq.maximum = ctxt->node_seq.maximum;
    oldctxt->node_seq.length = ctxt->node_seq.length;
    oldctxt->node_seq.buffer = ctxt->node_seq.buffer;
    ctxt->node_seq.maximum = 0;
    ctxt->node_seq.length = 0;
    ctxt->node_seq.buffer = 
# 13133 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 13133 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               ;
    xmlFreeParserCtxt__internal_alias(ctxt);
    newDoc->intSubset = 
# 13135 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 13135 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ;
    newDoc->extSubset = 
# 13136 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 13136 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ;
    xmlFreeDoc__internal_alias(newDoc);

    return(ret);
}
# 13163 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int
xmlParseExternalEntity__internal_alias(xmlDocPtr doc, xmlSAXHandlerPtr sax, void *user_data,
   int depth, const xmlChar *URL, const xmlChar *ID, xmlNodePtr *lst) {
    return(xmlParseExternalEntityPrivate(doc, 
# 13166 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                             ((void *)0)
# 13166 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                 , sax, user_data, depth, URL,
                         ID, lst));
}
# 13190 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int
xmlParseBalancedChunkMemory__internal_alias(xmlDocPtr doc, xmlSAXHandlerPtr sax,
     void *user_data, int depth, const xmlChar *string, xmlNodePtr *lst) {
    return xmlParseBalancedChunkMemoryRecover__internal_alias( doc, sax, user_data,
                                                depth, string, lst, 0 );
}
# 13219 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static xmlParserErrors
xmlParseBalancedChunkMemoryInternal(xmlParserCtxtPtr oldctxt,
 const xmlChar *string, void *user_data, xmlNodePtr *lst) {
    xmlParserCtxtPtr ctxt;
    xmlDocPtr newDoc = 
# 13223 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 13223 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ;
    xmlNodePtr newRoot;
    xmlSAXHandlerPtr oldsax = 
# 13225 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                             ((void *)0)
# 13225 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                 ;
    xmlNodePtr content = 
# 13226 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 13226 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ;
    xmlNodePtr last = 
# 13227 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 13227 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ;
    int size;
    xmlParserErrors ret = XML_ERR_OK;

    int i;


    if (((oldctxt->depth > 40) && ((oldctxt->options & XML_PARSE_HUGE) == 0)) ||
        (oldctxt->depth > 1024)) {
 return(XML_ERR_ENTITY_LOOP);
    }


    if (lst != 
# 13240 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 13240 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
        *lst = 
# 13241 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 13241 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ;
    if (string == 
# 13242 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 13242 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     )
        return(XML_ERR_INTERNAL_ERROR);

    size = xmlStrlen__internal_alias(string);

    ctxt = xmlCreateMemoryParserCtxt__internal_alias((char *) string, size);
    if (ctxt == 
# 13248 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 13248 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) return(XML_WAR_UNDECLARED_ENTITY);
    if (user_data != 
# 13249 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 13249 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        )
 ctxt->userData = user_data;
    else
 ctxt->userData = ctxt;
    if (ctxt->dict != 
# 13253 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 13253 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ) xmlDictFree__internal_alias(ctxt->dict);
    ctxt->dict = oldctxt->dict;
    ctxt->str_xml = xmlDictLookup__internal_alias(ctxt->dict, (xmlChar *) "xml", 3);
    ctxt->str_xmlns = xmlDictLookup__internal_alias(ctxt->dict, (xmlChar *) "xmlns", 5);
    ctxt->str_xml_ns = xmlDictLookup__internal_alias(ctxt->dict, (const xmlChar *) "http://www.w3.org/XML/1998/namespace", 36);



    for (i = 0;i < oldctxt->nsNr;i += 2) {
        nsPush(ctxt, oldctxt->nsTab[i], oldctxt->nsTab[i+1]);
    }


    oldsax = ctxt->sax;
    ctxt->sax = oldctxt->sax;
    xmlDetectSAX2(ctxt);
    ctxt->replaceEntities = oldctxt->replaceEntities;
    ctxt->options = oldctxt->options;

    ctxt->_private = oldctxt->_private;
    if (oldctxt->myDoc == 
# 13273 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 13273 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             ) {
 newDoc = xmlNewDoc__internal_alias((xmlChar *) "1.0");
 if (newDoc == 
# 13275 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 13275 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
     ctxt->sax = oldsax;
     ctxt->dict = 
# 13277 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 13277 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ;
     xmlFreeParserCtxt__internal_alias(ctxt);
     return(XML_ERR_INTERNAL_ERROR);
 }
 newDoc->properties = XML_DOC_INTERNAL;
 newDoc->dict = ctxt->dict;
 xmlDictReference__internal_alias(newDoc->dict);
 ctxt->myDoc = newDoc;
    } else {
 ctxt->myDoc = oldctxt->myDoc;
        content = ctxt->myDoc->children;
 last = ctxt->myDoc->last;
    }
    newRoot = xmlNewDocNode__internal_alias(ctxt->myDoc, 
# 13290 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                        ((void *)0)
# 13290 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                            , (xmlChar *) "pseudoroot", 
# 13290 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                                     ((void *)0)
# 13290 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                                         );
    if (newRoot == 
# 13291 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 13291 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) {
 ctxt->sax = oldsax;
 ctxt->dict = 
# 13293 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 13293 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ;
 xmlFreeParserCtxt__internal_alias(ctxt);
 if (newDoc != 
# 13295 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 13295 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
     xmlFreeDoc__internal_alias(newDoc);
 }
 return(XML_ERR_INTERNAL_ERROR);
    }
    ctxt->myDoc->children = 
# 13300 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 13300 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               ;
    ctxt->myDoc->last = 
# 13301 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 13301 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ;
    xmlAddChild__internal_alias((xmlNodePtr) ctxt->myDoc, newRoot);
    nodePush__internal_alias(ctxt, ctxt->myDoc->children);
    ctxt->instate = XML_PARSER_CONTENT;
    ctxt->depth = oldctxt->depth + 1;

    ctxt->validate = 0;
    ctxt->loadsubset = oldctxt->loadsubset;
    if ((oldctxt->validate) || (oldctxt->replaceEntities != 0)) {



 ctxt->loadsubset |= 8;
    }
    ctxt->dictNames = oldctxt->dictNames;
    ctxt->attsDefault = oldctxt->attsDefault;
    ctxt->attsSpecial = oldctxt->attsSpecial;

    xmlParseContent__internal_alias(ctxt);
    if (((*ctxt->input->cur) == '<') && (ctxt->input->cur[(1)] == '/')) {
 xmlFatalErr(ctxt, XML_ERR_NOT_WELL_BALANCED, 
# 13321 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                             ((void *)0)
# 13321 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                 );
    } else if ((*ctxt->input->cur) != 0) {
 xmlFatalErr(ctxt, XML_ERR_EXTRA_CONTENT, 
# 13323 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                         ((void *)0)
# 13323 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                             );
    }
    if (ctxt->node != ctxt->myDoc->children) {
 xmlFatalErr(ctxt, XML_ERR_NOT_WELL_BALANCED, 
# 13326 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                             ((void *)0)
# 13326 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                 );
    }

    if (!ctxt->wellFormed) {
        if (ctxt->errNo == 0)
     ret = XML_ERR_INTERNAL_ERROR;
 else
     ret = (xmlParserErrors)ctxt->errNo;
    } else {
      ret = XML_ERR_OK;
    }

    if ((lst != 
# 13338 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 13338 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) && (ret == XML_ERR_OK)) {
 xmlNodePtr cur;





 cur = ctxt->myDoc->children->children;
 *lst = cur;
 while (cur != 
# 13347 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 13347 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {

     if ((oldctxt->validate) && (oldctxt->wellFormed) &&
  (oldctxt->myDoc) && (oldctxt->myDoc->intSubset) &&
  (cur->type == XML_ELEMENT_NODE)) {
  oldctxt->valid &= xmlValidateElement__internal_alias(&oldctxt->vctxt,
   oldctxt->myDoc, cur);
     }

     cur->parent = 
# 13356 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 13356 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ;
     cur = cur->next;
 }
 ctxt->myDoc->children->children = 
# 13359 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                  ((void *)0)
# 13359 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                      ;
    }
    if (ctxt->myDoc != 
# 13361 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 13361 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) {
 xmlFreeNode__internal_alias(ctxt->myDoc->children);
        ctxt->myDoc->children = content;
        ctxt->myDoc->last = last;
    }





    if (oldctxt != 
# 13371 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 13371 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      )
        oldctxt->nbentities += ctxt->nbentities;




    if (ctxt->lastError.code != XML_ERR_OK)
        xmlCopyError__internal_alias(&ctxt->lastError, &oldctxt->lastError);

    ctxt->sax = oldsax;
    ctxt->dict = 
# 13381 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 13381 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ;
    ctxt->attsDefault = 
# 13382 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 13382 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ;
    ctxt->attsSpecial = 
# 13383 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 13383 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ;
    xmlFreeParserCtxt__internal_alias(ctxt);
    if (newDoc != 
# 13385 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 13385 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) {
 xmlFreeDoc__internal_alias(newDoc);
    }

    return(ret);
}
# 13411 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlParserErrors
xmlParseInNodeContext__internal_alias(xmlNodePtr node, const char *data, int datalen,
                      int options, xmlNodePtr *lst) {

    xmlParserCtxtPtr ctxt;
    xmlDocPtr doc = 
# 13416 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 13416 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ;
    xmlNodePtr fake, cur;
    int nsnr = 0;

    xmlParserErrors ret = XML_ERR_OK;




    if ((lst == 
# 13425 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 13425 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) || (node == 
# 13425 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                 ((void *)0)
# 13425 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                     ) || (data == 
# 13425 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                   ((void *)0)
# 13425 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                       ) || (datalen < 0))
        return(XML_ERR_INTERNAL_ERROR);
    switch (node->type) {
        case XML_ELEMENT_NODE:
        case XML_ATTRIBUTE_NODE:
        case XML_TEXT_NODE:
        case XML_CDATA_SECTION_NODE:
        case XML_ENTITY_REF_NODE:
        case XML_PI_NODE:
        case XML_COMMENT_NODE:
        case XML_DOCUMENT_NODE:
        case XML_HTML_DOCUMENT_NODE:
     break;
 default:
     return(XML_ERR_INTERNAL_ERROR);

    }
    while ((node != 
# 13442 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 13442 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) && (node->type != XML_ELEMENT_NODE) &&
           (node->type != XML_DOCUMENT_NODE) &&
    (node->type != XML_HTML_DOCUMENT_NODE))
 node = node->parent;
    if (node == 
# 13446 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 13446 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
 return(XML_ERR_INTERNAL_ERROR);
    if (node->type == XML_ELEMENT_NODE)
 doc = node->doc;
    else
        doc = (xmlDocPtr) node;
    if (doc == 
# 13452 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 13452 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
 return(XML_ERR_INTERNAL_ERROR);





    if (doc->type == XML_DOCUMENT_NODE)
 ctxt = xmlCreateMemoryParserCtxt__internal_alias((char *) data, datalen);

    else if (doc->type == XML_HTML_DOCUMENT_NODE) {
 ctxt = htmlCreateMemoryParserCtxt__internal_alias((char *) data, datalen);




        options |= HTML_PARSE_NOIMPLIED;
    }

    else
        return(XML_ERR_INTERNAL_ERROR);

    if (ctxt == 
# 13474 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 13474 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
        return(XML_ERR_NO_MEMORY);






    if (doc->dict != 
# 13482 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 13482 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ) {
        if (ctxt->dict != 
# 13483 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 13483 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             )
     xmlDictFree__internal_alias(ctxt->dict);
 ctxt->dict = doc->dict;
    } else
        options |= XML_PARSE_NODICT;

    if (doc->encoding != 
# 13489 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 13489 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ) {
        xmlCharEncodingHandlerPtr hdlr;

        if (ctxt->encoding != 
# 13492 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                             ((void *)0)
# 13492 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                 )
     xmlFree((xmlChar *) ctxt->encoding);
        ctxt->encoding = xmlStrdup__internal_alias((const xmlChar *) doc->encoding);

        hdlr = xmlFindCharEncodingHandler__internal_alias(doc->encoding);
        if (hdlr != 
# 13497 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 13497 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) {
            xmlSwitchToEncoding__internal_alias(ctxt, hdlr);
 } else {
            return(XML_ERR_UNSUPPORTED_ENCODING);
        }
    }

    xmlCtxtUseOptionsInternal(ctxt, options, 
# 13504 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                            ((void *)0)
# 13504 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                );
    xmlDetectSAX2(ctxt);
    ctxt->myDoc = doc;

    fake = xmlNewComment__internal_alias(
# 13508 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 13508 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            );
    if (fake == 
# 13509 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 13509 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
        xmlFreeParserCtxt__internal_alias(ctxt);
 return(XML_ERR_NO_MEMORY);
    }
    xmlAddChild__internal_alias(node, fake);

    if (node->type == XML_ELEMENT_NODE) {
 nodePush__internal_alias(ctxt, node);



 cur = node;
 while ((cur != 
# 13521 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 13521 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) && (cur->type == XML_ELEMENT_NODE)) {
     xmlNsPtr ns = cur->nsDef;
     const xmlChar *iprefix, *ihref;

     while (ns != 
# 13525 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 13525 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) {
  if (ctxt->dict) {
      iprefix = xmlDictLookup__internal_alias(ctxt->dict, ns->prefix, -1);
      ihref = xmlDictLookup__internal_alias(ctxt->dict, ns->href, -1);
  } else {
      iprefix = ns->prefix;
      ihref = ns->href;
  }

         if (xmlGetNamespace(ctxt, iprefix) == 
# 13534 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                              ((void *)0)
# 13534 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                  ) {
      nsPush(ctxt, iprefix, ihref);
      nsnr++;
  }
  ns = ns->next;
     }
     cur = cur->parent;
 }
 ctxt->instate = XML_PARSER_CONTENT;
    }

    if ((ctxt->validate) || (ctxt->replaceEntities != 0)) {



 ctxt->loadsubset |= 8;
    }


    if (doc->type == XML_HTML_DOCUMENT_NODE)
        __htmlParseContent(ctxt);
    else

 xmlParseContent__internal_alias(ctxt);

    nsPop(ctxt, nsnr);
    if (((*ctxt->input->cur) == '<') && (ctxt->input->cur[(1)] == '/')) {
 xmlFatalErr(ctxt, XML_ERR_NOT_WELL_BALANCED, 
# 13561 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                             ((void *)0)
# 13561 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                 );
    } else if ((*ctxt->input->cur) != 0) {
 xmlFatalErr(ctxt, XML_ERR_EXTRA_CONTENT, 
# 13563 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                         ((void *)0)
# 13563 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                             );
    }
    if ((ctxt->node != 
# 13565 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 13565 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) && (ctxt->node != node)) {
 xmlFatalErr(ctxt, XML_ERR_NOT_WELL_BALANCED, 
# 13566 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                             ((void *)0)
# 13566 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                 );
 ctxt->wellFormed = 0;
    }

    if (!ctxt->wellFormed) {
        if (ctxt->errNo == 0)
     ret = XML_ERR_INTERNAL_ERROR;
 else
     ret = (xmlParserErrors)ctxt->errNo;
    } else {
        ret = XML_ERR_OK;
    }






    cur = fake->next;
    fake->next = 
# 13585 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 13585 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ;
    node->last = fake;

    if (cur != 
# 13588 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 13588 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
 cur->prev = 
# 13589 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 13589 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ;
    }

    *lst = cur;

    while (cur != 
# 13594 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 13594 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) {
 cur->parent = 
# 13595 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 13595 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ;
 cur = cur->next;
    }

    xmlUnlinkNode__internal_alias(fake);
    xmlFreeNode__internal_alias(fake);


    if (ret != XML_ERR_OK) {
        xmlFreeNodeList__internal_alias(*lst);
 *lst = 
# 13605 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 13605 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           ;
    }

    if (doc->dict != 
# 13608 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 13608 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        )
        ctxt->dict = 
# 13609 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 13609 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ;
    xmlFreeParserCtxt__internal_alias(ctxt);

    return(ret);



}
# 13644 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int
xmlParseBalancedChunkMemoryRecover__internal_alias(xmlDocPtr doc, xmlSAXHandlerPtr sax,
     void *user_data, int depth, const xmlChar *string, xmlNodePtr *lst,
     int recover) {
    xmlParserCtxtPtr ctxt;
    xmlDocPtr newDoc;
    xmlSAXHandlerPtr oldsax = 
# 13650 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                             ((void *)0)
# 13650 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                 ;
    xmlNodePtr content, newRoot;
    int size;
    int ret = 0;

    if (depth > 40) {
 return(XML_ERR_ENTITY_LOOP);
    }


    if (lst != 
# 13660 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 13660 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
        *lst = 
# 13661 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 13661 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ;
    if (string == 
# 13662 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 13662 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     )
        return(-1);

    size = xmlStrlen__internal_alias(string);

    ctxt = xmlCreateMemoryParserCtxt__internal_alias((char *) string, size);
    if (ctxt == 
# 13668 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 13668 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) return(-1);
    ctxt->userData = ctxt;
    if (sax != 
# 13670 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 13670 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
 oldsax = ctxt->sax;
        ctxt->sax = sax;
 if (user_data != 
# 13673 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 13673 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     )
     ctxt->userData = user_data;
    }
    newDoc = xmlNewDoc__internal_alias((xmlChar *) "1.0");
    if (newDoc == 
# 13677 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 13677 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) {
 xmlFreeParserCtxt__internal_alias(ctxt);
 return(-1);
    }
    newDoc->properties = XML_DOC_INTERNAL;
    if ((doc != 
# 13682 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 13682 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) && (doc->dict != 
# 13682 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                      ((void *)0)
# 13682 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                          )) {
        xmlDictFree__internal_alias(ctxt->dict);
 ctxt->dict = doc->dict;
 xmlDictReference__internal_alias(ctxt->dict);
 ctxt->str_xml = xmlDictLookup__internal_alias(ctxt->dict, (xmlChar *) "xml", 3);
 ctxt->str_xmlns = xmlDictLookup__internal_alias(ctxt->dict, (xmlChar *) "xmlns", 5);
 ctxt->str_xml_ns = xmlDictLookup__internal_alias(ctxt->dict, (const xmlChar *) "http://www.w3.org/XML/1998/namespace", 36);
 ctxt->dictNames = 1;
    } else {
 xmlCtxtUseOptionsInternal(ctxt, XML_PARSE_NODICT, 
# 13691 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                  ((void *)0)
# 13691 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                      );
    }
    if (doc != 
# 13693 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 13693 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
 newDoc->intSubset = doc->intSubset;
 newDoc->extSubset = doc->extSubset;
    }
    newRoot = xmlNewDocNode__internal_alias(newDoc, 
# 13697 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                   ((void *)0)
# 13697 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                       , (xmlChar *) "pseudoroot", 
# 13697 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                                ((void *)0)
# 13697 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                                    );
    if (newRoot == 
# 13698 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 13698 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ) {
 if (sax != 
# 13699 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 13699 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               )
     ctxt->sax = oldsax;
 xmlFreeParserCtxt__internal_alias(ctxt);
 newDoc->intSubset = 
# 13702 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 13702 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ;
 newDoc->extSubset = 
# 13703 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 13703 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ;
        xmlFreeDoc__internal_alias(newDoc);
 return(-1);
    }
    xmlAddChild__internal_alias((xmlNodePtr) newDoc, newRoot);
    nodePush__internal_alias(ctxt, newRoot);
    if (doc == 
# 13709 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 13709 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
 ctxt->myDoc = newDoc;
    } else {
 ctxt->myDoc = newDoc;
 newDoc->children->doc = doc;

 xmlSearchNsByHref__internal_alias(doc, (xmlNodePtr)doc, (const xmlChar *) "http://www.w3.org/XML/1998/namespace");
 newDoc->oldNs = doc->oldNs;
    }
    ctxt->instate = XML_PARSER_CONTENT;
    ctxt->depth = depth;




    ctxt->validate = 0;
    ctxt->loadsubset = 0;
    xmlDetectSAX2(ctxt);

    if ( doc != 
# 13728 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0) 
# 13728 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ){
        content = doc->children;
        doc->children = 
# 13730 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 13730 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ;
        xmlParseContent__internal_alias(ctxt);
        doc->children = content;
    }
    else {
        xmlParseContent__internal_alias(ctxt);
    }
    if (((*ctxt->input->cur) == '<') && (ctxt->input->cur[(1)] == '/')) {
 xmlFatalErr(ctxt, XML_ERR_NOT_WELL_BALANCED, 
# 13738 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                             ((void *)0)
# 13738 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                 );
    } else if ((*ctxt->input->cur) != 0) {
 xmlFatalErr(ctxt, XML_ERR_EXTRA_CONTENT, 
# 13740 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                         ((void *)0)
# 13740 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                             );
    }
    if (ctxt->node != newDoc->children) {
 xmlFatalErr(ctxt, XML_ERR_NOT_WELL_BALANCED, 
# 13743 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                             ((void *)0)
# 13743 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                 );
    }

    if (!ctxt->wellFormed) {
        if (ctxt->errNo == 0)
     ret = 1;
 else
     ret = ctxt->errNo;
    } else {
      ret = 0;
    }

    if ((lst != 
# 13755 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 13755 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) && ((ret == 0) || (recover == 1))) {
 xmlNodePtr cur;





 cur = newDoc->children->children;
 *lst = cur;
 while (cur != 
# 13764 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 13764 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
     xmlSetTreeDoc__internal_alias(cur, doc);
     cur->parent = 
# 13766 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                  ((void *)0)
# 13766 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                      ;
     cur = cur->next;
 }
 newDoc->children->children = 
# 13769 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                             ((void *)0)
# 13769 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                 ;
    }

    if (sax != 
# 13772 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 13772 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
 ctxt->sax = oldsax;
    xmlFreeParserCtxt__internal_alias(ctxt);
    newDoc->intSubset = 
# 13775 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 13775 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ;
    newDoc->extSubset = 
# 13776 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 13776 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           ;
    newDoc->oldNs = 
# 13777 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 13777 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ;
    xmlFreeDoc__internal_alias(newDoc);

    return(ret);
}
# 13799 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDocPtr
xmlSAXParseEntity__internal_alias(xmlSAXHandlerPtr sax, const char *filename) {
    xmlDocPtr ret;
    xmlParserCtxtPtr ctxt;

    ctxt = xmlCreateFileParserCtxt__internal_alias(filename);
    if (ctxt == 
# 13805 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 13805 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
 return(
# 13806 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 13806 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    if (sax != 
# 13808 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 13808 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
 if (ctxt->sax != 
# 13809 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 13809 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     )
     xmlFree(ctxt->sax);
        ctxt->sax = sax;
        ctxt->userData = 
# 13812 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 13812 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ;
    }

    xmlParseExtParsedEnt__internal_alias(ctxt);

    if (ctxt->wellFormed)
 ret = ctxt->myDoc;
    else {
        ret = 
# 13820 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 13820 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ;
        xmlFreeDoc__internal_alias(ctxt->myDoc);
        ctxt->myDoc = 
# 13822 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 13822 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ;
    }
    if (sax != 
# 13824 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 13824 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
        ctxt->sax = 
# 13825 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 13825 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ;
    xmlFreeParserCtxt__internal_alias(ctxt);

    return(ret);
}
# 13844 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDocPtr
xmlParseEntity__internal_alias(const char *filename) {
    return(xmlSAXParseEntity__internal_alias(
# 13846 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 13846 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                , filename));
}
# 13863 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static xmlParserCtxtPtr
xmlCreateEntityParserCtxtInternal(const xmlChar *URL, const xmlChar *ID,
                   const xmlChar *base, xmlParserCtxtPtr pctx) {
    xmlParserCtxtPtr ctxt;
    xmlParserInputPtr inputStream;
    char *directory = 
# 13868 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 13868 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ;
    xmlChar *uri;

    ctxt = xmlNewParserCtxt__internal_alias();
    if (ctxt == 
# 13872 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 13872 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
 return(
# 13873 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 13873 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }

    if (pctx != 
# 13876 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 13876 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
        ctxt->options = pctx->options;
        ctxt->_private = pctx->_private;
    }

    uri = xmlBuildURI__internal_alias(URL, base);

    if (uri == 
# 13883 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 13883 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
 inputStream = xmlLoadExternalEntity__internal_alias((char *)URL, (char *)ID, ctxt);
 if (inputStream == 
# 13885 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 13885 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) {
     xmlFreeParserCtxt__internal_alias(ctxt);
     return(
# 13887 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 13887 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               );
 }

 inputPush__internal_alias(ctxt, inputStream);

 if ((ctxt->directory == 
# 13892 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 13892 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ) && (directory == 
# 13892 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 13892 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   ))
     directory = xmlParserGetDirectory__internal_alias((char *)URL);
 if ((ctxt->directory == 
# 13894 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 13894 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ) && (directory != 
# 13894 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 13894 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   ))
     ctxt->directory = directory;
    } else {
 inputStream = xmlLoadExternalEntity__internal_alias((char *)uri, (char *)ID, ctxt);
 if (inputStream == 
# 13898 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 13898 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) {
     xmlFree(uri);
     xmlFreeParserCtxt__internal_alias(ctxt);
     return(
# 13901 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 13901 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               );
 }

 inputPush__internal_alias(ctxt, inputStream);

 if ((ctxt->directory == 
# 13906 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 13906 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ) && (directory == 
# 13906 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 13906 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   ))
     directory = xmlParserGetDirectory__internal_alias((char *)uri);
 if ((ctxt->directory == 
# 13908 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 13908 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ) && (directory != 
# 13908 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                               ((void *)0)
# 13908 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                   ))
     ctxt->directory = directory;
 xmlFree(uri);
    }
    return(ctxt);
}
# 13927 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlParserCtxtPtr
xmlCreateEntityParserCtxt__internal_alias(const xmlChar *URL, const xmlChar *ID,
                   const xmlChar *base) {
    return xmlCreateEntityParserCtxtInternal(URL, ID, base, 
# 13930 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                           ((void *)0)
# 13930 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                               );

}
# 13951 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlParserCtxtPtr
xmlCreateURLParserCtxt__internal_alias(const char *filename, int options)
{
    xmlParserCtxtPtr ctxt;
    xmlParserInputPtr inputStream;
    char *directory = 
# 13956 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 13956 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ;

    ctxt = xmlNewParserCtxt__internal_alias();
    if (ctxt == 
# 13959 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 13959 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
 xmlErrMemory__internal_alias(
# 13960 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 13960 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 , "cannot allocate parser context");
 return(
# 13961 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 13961 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }

    if (options)
 xmlCtxtUseOptionsInternal(ctxt, options, 
# 13965 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                         ((void *)0)
# 13965 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                             );
    ctxt->linenumbers = 1;

    inputStream = xmlLoadExternalEntity__internal_alias(filename, 
# 13968 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                 ((void *)0)
# 13968 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                     , ctxt);
    if (inputStream == 
# 13969 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 13969 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) {
 xmlFreeParserCtxt__internal_alias(ctxt);
 return(
# 13971 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 13971 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }

    inputPush__internal_alias(ctxt, inputStream);
    if ((ctxt->directory == 
# 13975 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 13975 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               ) && (directory == 
# 13975 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                  ((void *)0)
# 13975 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                      ))
        directory = xmlParserGetDirectory__internal_alias(filename);
    if ((ctxt->directory == 
# 13977 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 13977 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               ) && (directory != 
# 13977 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                  ((void *)0)
# 13977 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                      ))
        ctxt->directory = directory;

    return(ctxt);
}
# 13993 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlParserCtxtPtr
xmlCreateFileParserCtxt__internal_alias(const char *filename)
{
    return(xmlCreateURLParserCtxt__internal_alias(filename, 0));
}
# 14019 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDocPtr
xmlSAXParseFileWithData__internal_alias(xmlSAXHandlerPtr sax, const char *filename,
                        int recovery, void *data) {
    xmlDocPtr ret;
    xmlParserCtxtPtr ctxt;

    xmlInitParser__internal_alias();

    ctxt = xmlCreateFileParserCtxt__internal_alias(filename);
    if (ctxt == 
# 14028 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 14028 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
 return(
# 14029 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 14029 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }
    if (sax != 
# 14031 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 14031 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
 if (ctxt->sax != 
# 14032 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 14032 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     )
     xmlFree(ctxt->sax);
        ctxt->sax = sax;
    }
    xmlDetectSAX2(ctxt);
    if (data!=
# 14037 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 14037 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ) {
 ctxt->_private = data;
    }

    if (ctxt->directory == 
# 14041 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 14041 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              )
        ctxt->directory = xmlParserGetDirectory__internal_alias(filename);

    ctxt->recovery = recovery;

    xmlParseDocument__internal_alias(ctxt);

    if ((ctxt->wellFormed) || recovery) {
        ret = ctxt->myDoc;
 if (ret != 
# 14050 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
           ((void *)0)
# 14050 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
               ) {
     if (ctxt->input->buf->compressed > 0)
  ret->compression = 9;
     else
  ret->compression = ctxt->input->buf->compressed;
 }
    }
    else {
       ret = 
# 14058 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 14058 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ;
       xmlFreeDoc__internal_alias(ctxt->myDoc);
       ctxt->myDoc = 
# 14060 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 14060 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ;
    }
    if (sax != 
# 14062 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 14062 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
        ctxt->sax = 
# 14063 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 14063 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ;
    xmlFreeParserCtxt__internal_alias(ctxt);

    return(ret);
}
# 14084 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDocPtr
xmlSAXParseFile__internal_alias(xmlSAXHandlerPtr sax, const char *filename,
                          int recovery) {
    return(xmlSAXParseFileWithData__internal_alias(sax,filename,recovery,
# 14087 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                        ((void *)0)
# 14087 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                            ));
}
# 14101 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDocPtr
xmlRecoverDoc__internal_alias(const xmlChar *cur) {
    return(xmlSAXParseDoc__internal_alias(
# 14103 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 14103 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             , cur, 1));
}
# 14117 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDocPtr
xmlParseFile__internal_alias(const char *filename) {
    return(xmlSAXParseFile__internal_alias(
# 14119 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 14119 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              , filename, 0));
}
# 14134 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDocPtr
xmlRecoverFile__internal_alias(const char *filename) {
    return(xmlSAXParseFile__internal_alias(
# 14136 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 14136 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              , filename, 1));
}
# 14150 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlSetupParserForBuffer__internal_alias(xmlParserCtxtPtr ctxt, const xmlChar* buffer,
                             const char* filename)
{
    xmlParserInputPtr input;

    if ((ctxt == 
# 14156 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 14156 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) || (buffer == 
# 14156 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                    ((void *)0)
# 14156 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                        ))
        return;

    input = xmlNewInputStream__internal_alias(ctxt);
    if (input == 
# 14160 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 14160 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
        xmlErrMemory__internal_alias(
# 14161 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 14161 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        , "parsing new buffer: out of memory\n");
        xmlClearParserCtxt__internal_alias(ctxt);
        return;
    }

    xmlClearParserCtxt__internal_alias(ctxt);
    if (filename != 
# 14167 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 14167 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       )
        input->filename = (char *) xmlCanonicPath__internal_alias((const xmlChar *)filename);
    input->base = buffer;
    input->cur = buffer;
    input->end = &buffer[xmlStrlen__internal_alias(buffer)];
    inputPush__internal_alias(ctxt, input);
}
# 14186 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int
xmlSAXUserParseFile__internal_alias(xmlSAXHandlerPtr sax, void *user_data,
                    const char *filename) {
    int ret = 0;
    xmlParserCtxtPtr ctxt;

    ctxt = xmlCreateFileParserCtxt__internal_alias(filename);
    if (ctxt == 
# 14193 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 14193 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) return -1;
    if (ctxt->sax != (xmlSAXHandlerPtr) &(*(__xmlDefaultSAXHandler())))
 xmlFree(ctxt->sax);
    ctxt->sax = sax;
    xmlDetectSAX2(ctxt);

    if (user_data != 
# 14199 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 14199 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        )
 ctxt->userData = user_data;

    xmlParseDocument__internal_alias(ctxt);

    if (ctxt->wellFormed)
 ret = 0;
    else {
        if (ctxt->errNo != 0)
     ret = ctxt->errNo;
 else
     ret = -1;
    }
    if (sax != 
# 14212 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 14212 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
 ctxt->sax = 
# 14213 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 14213 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ;
    if (ctxt->myDoc != 
# 14214 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 14214 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) {
        xmlFreeDoc__internal_alias(ctxt->myDoc);
 ctxt->myDoc = 
# 14216 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 14216 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ;
    }
    xmlFreeParserCtxt__internal_alias(ctxt);

    return ret;
}
# 14239 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlParserCtxtPtr
xmlCreateMemoryParserCtxt__internal_alias(const char *buffer, int size) {
    xmlParserCtxtPtr ctxt;
    xmlParserInputPtr input;
    xmlParserInputBufferPtr buf;

    if (buffer == 
# 14245 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 14245 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     )
 return(
# 14246 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 14246 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    if (size <= 0)
 return(
# 14248 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 14248 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );

    ctxt = xmlNewParserCtxt__internal_alias();
    if (ctxt == 
# 14251 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 14251 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
 return(
# 14252 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 14252 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );


    buf = xmlParserInputBufferCreateMem__internal_alias(buffer, size, XML_CHAR_ENCODING_NONE);
    if (buf == 
# 14256 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 14256 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
 xmlFreeParserCtxt__internal_alias(ctxt);
 return(
# 14258 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 14258 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }

    input = xmlNewInputStream__internal_alias(ctxt);
    if (input == 
# 14262 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 14262 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
 xmlFreeParserInputBuffer__internal_alias(buf);
 xmlFreeParserCtxt__internal_alias(ctxt);
 return(
# 14265 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 14265 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }

    input->filename = 
# 14268 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 14268 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ;
    input->buf = buf;
    xmlBufResetInput(input->buf->buffer, input);

    inputPush__internal_alias(ctxt, input);
    return(ctxt);
}
# 14296 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDocPtr
xmlSAXParseMemoryWithData__internal_alias(xmlSAXHandlerPtr sax, const char *buffer,
           int size, int recovery, void *data) {
    xmlDocPtr ret;
    xmlParserCtxtPtr ctxt;

    xmlInitParser__internal_alias();

    ctxt = xmlCreateMemoryParserCtxt__internal_alias(buffer, size);
    if (ctxt == 
# 14305 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 14305 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) return(
# 14305 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 14305 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                );
    if (sax != 
# 14306 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 14306 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
 if (ctxt->sax != 
# 14307 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 14307 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     )
     xmlFree(ctxt->sax);
        ctxt->sax = sax;
    }
    xmlDetectSAX2(ctxt);
    if (data!=
# 14312 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 14312 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ) {
 ctxt->_private=data;
    }

    ctxt->recovery = recovery;

    xmlParseDocument__internal_alias(ctxt);

    if ((ctxt->wellFormed) || recovery) ret = ctxt->myDoc;
    else {
       ret = 
# 14322 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 14322 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ;
       xmlFreeDoc__internal_alias(ctxt->myDoc);
       ctxt->myDoc = 
# 14324 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 14324 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ;
    }
    if (sax != 
# 14326 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 14326 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
 ctxt->sax = 
# 14327 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 14327 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ;
    xmlFreeParserCtxt__internal_alias(ctxt);

    return(ret);
}
# 14347 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDocPtr
xmlSAXParseMemory__internal_alias(xmlSAXHandlerPtr sax, const char *buffer,
           int size, int recovery) {
    return xmlSAXParseMemoryWithData__internal_alias(sax, buffer, size, recovery, 
# 14350 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                                 ((void *)0)
# 14350 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                                     );
}
# 14363 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDocPtr xmlParseMemory__internal_alias(const char *buffer, int size) {
   return(xmlSAXParseMemory__internal_alias(
# 14364 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 14364 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               , buffer, size, 0));
}
# 14379 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDocPtr xmlRecoverMemory__internal_alias(const char *buffer, int size) {
   return(xmlSAXParseMemory__internal_alias(
# 14380 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 14380 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               , buffer, size, 1));
}
# 14395 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int xmlSAXUserParseMemory__internal_alias(xmlSAXHandlerPtr sax, void *user_data,
     const char *buffer, int size) {
    int ret = 0;
    xmlParserCtxtPtr ctxt;

    xmlInitParser__internal_alias();

    ctxt = xmlCreateMemoryParserCtxt__internal_alias(buffer, size);
    if (ctxt == 
# 14403 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 14403 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) return -1;
    if (ctxt->sax != (xmlSAXHandlerPtr) &(*(__xmlDefaultSAXHandler())))
        xmlFree(ctxt->sax);
    ctxt->sax = sax;
    xmlDetectSAX2(ctxt);

    if (user_data != 
# 14409 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 14409 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        )
 ctxt->userData = user_data;

    xmlParseDocument__internal_alias(ctxt);

    if (ctxt->wellFormed)
 ret = 0;
    else {
        if (ctxt->errNo != 0)
     ret = ctxt->errNo;
 else
     ret = -1;
    }
    if (sax != 
# 14422 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 14422 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
        ctxt->sax = 
# 14423 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 14423 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ;
    if (ctxt->myDoc != 
# 14424 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 14424 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) {
        xmlFreeDoc__internal_alias(ctxt->myDoc);
 ctxt->myDoc = 
# 14426 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 14426 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ;
    }
    xmlFreeParserCtxt__internal_alias(ctxt);

    return ret;
}
# 14442 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlParserCtxtPtr
xmlCreateDocParserCtxt__internal_alias(const xmlChar *cur) {
    int len;

    if (cur == 
# 14446 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 14446 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
 return(
# 14447 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 14447 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    len = xmlStrlen__internal_alias(cur);
    return(xmlCreateMemoryParserCtxt__internal_alias((const char *)cur, len));
}
# 14467 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDocPtr
xmlSAXParseDoc__internal_alias(xmlSAXHandlerPtr sax, const xmlChar *cur, int recovery) {
    xmlDocPtr ret;
    xmlParserCtxtPtr ctxt;
    xmlSAXHandlerPtr oldsax = 
# 14471 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                             ((void *)0)
# 14471 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                 ;

    if (cur == 
# 14473 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 14473 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) return(
# 14473 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 14473 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               );


    ctxt = xmlCreateDocParserCtxt__internal_alias(cur);
    if (ctxt == 
# 14477 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 14477 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) return(
# 14477 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 14477 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                );
    if (sax != 
# 14478 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 14478 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  ) {
        oldsax = ctxt->sax;
        ctxt->sax = sax;
        ctxt->userData = 
# 14481 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 14481 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ;
    }
    xmlDetectSAX2(ctxt);

    xmlParseDocument__internal_alias(ctxt);
    if ((ctxt->wellFormed) || recovery) ret = ctxt->myDoc;
    else {
       ret = 
# 14488 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 14488 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                ;
       xmlFreeDoc__internal_alias(ctxt->myDoc);
       ctxt->myDoc = 
# 14490 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 14490 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ;
    }
    if (sax != 
# 14492 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 14492 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
 ctxt->sax = oldsax;
    xmlFreeParserCtxt__internal_alias(ctxt);

    return(ret);
}
# 14508 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDocPtr
xmlParseDoc__internal_alias(const xmlChar *cur) {
    return(xmlSAXParseDoc__internal_alias(
# 14510 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 14510 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             , cur, 0));
}
# 14522 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static xmlEntityReferenceFunc xmlEntityRefFunc = 
# 14522 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                ((void *)0)
# 14522 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                    ;
# 14532 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static void
xmlAddEntityReference(xmlEntityPtr ent, xmlNodePtr firstNode,
                      xmlNodePtr lastNode)
{
    if (xmlEntityRefFunc != 
# 14536 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 14536 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               ) {
        (*xmlEntityRefFunc) (ent, firstNode, lastNode);
    }
}
# 14548 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlSetEntityReferenceFunc__internal_alias(xmlEntityReferenceFunc func)
{
    xmlEntityRefFunc = func;
}
# 14565 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
extern void xmlGenericErrorDefaultFunc(void *ctx, const char *msg, ...);
static int xmlParserInitialized = 0;
# 14576 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlInitParser__internal_alias(void) {
    if (xmlParserInitialized != 0)
 return;


    __xmlGlobalInitMutexLock();
    if (xmlParserInitialized == 0) {

 xmlInitThreads__internal_alias();
 xmlInitGlobals__internal_alias();
 if (((*(__xmlGenericError__internal_alias())) == xmlGenericErrorDefaultFunc) ||
     ((*(__xmlGenericError__internal_alias())) == 
# 14588 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 14588 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ))
     initGenericErrorDefaultFunc(
# 14589 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                ((void *)0)
# 14589 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                    );
 xmlInitMemory__internal_alias();
        xmlInitializeDict();
 xmlInitCharEncodingHandlers__internal_alias();
 xmlDefaultSAXHandlerInit__internal_alias();
 xmlRegisterDefaultInputCallbacks__internal_alias();

 xmlRegisterDefaultOutputCallbacks__internal_alias();


 htmlInitAutoClose__internal_alias();
 htmlDefaultSAXHandlerInit__internal_alias();


 xmlXPathInit__internal_alias();

 xmlParserInitialized = 1;

    }
    __xmlGlobalInitMutexUnlock();

}
# 14634 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlCleanupParser__internal_alias(void) {
    if (!xmlParserInitialized)
 return;

    xmlCleanupCharEncodingHandlers__internal_alias();

    xmlCatalogCleanup__internal_alias();

    xmlDictCleanup__internal_alias();
    xmlCleanupInputCallbacks__internal_alias();

    xmlCleanupOutputCallbacks__internal_alias();


    xmlSchemaCleanupTypes__internal_alias();
    xmlRelaxNGCleanupTypes__internal_alias();

    xmlCleanupGlobals__internal_alias();
    xmlResetLastError__internal_alias();
    xmlCleanupThreads__internal_alias();
    xmlCleanupMemory__internal_alias();
    xmlParserInitialized = 0;
}
# 14683 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
void
xmlCtxtReset__internal_alias(xmlParserCtxtPtr ctxt)
{
    xmlParserInputPtr input;
    xmlDictPtr dict;

    if (ctxt == 
# 14689 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 14689 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
        return;

    dict = ctxt->dict;

    while ((input = inputPop__internal_alias(ctxt)) != 
# 14694 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                      ((void *)0)
# 14694 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                          ) {
        xmlFreeInputStream__internal_alias(input);
    }
    ctxt->inputNr = 0;
    ctxt->input = 
# 14698 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 14698 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ;

    ctxt->spaceNr = 0;
    if (ctxt->spaceTab != 
# 14701 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 14701 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             ) {
 ctxt->spaceTab[0] = -1;
 ctxt->space = &ctxt->spaceTab[0];
    } else {
        ctxt->space = 
# 14705 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 14705 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ;
    }


    ctxt->nodeNr = 0;
    ctxt->node = 
# 14710 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 14710 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ;

    ctxt->nameNr = 0;
    ctxt->name = 
# 14713 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 14713 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ;

    if ((ctxt->version) && ((!dict) || (xmlDictOwns__internal_alias(dict, (const xmlChar *)(ctxt->version)) == 0))) xmlFree((char *)(ctxt->version));;
    ctxt->version = 
# 14716 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 14716 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ;
    if ((ctxt->encoding) && ((!dict) || (xmlDictOwns__internal_alias(dict, (const xmlChar *)(ctxt->encoding)) == 0))) xmlFree((char *)(ctxt->encoding));;
    ctxt->encoding = 
# 14718 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 14718 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ;
    if ((ctxt->directory) && ((!dict) || (xmlDictOwns__internal_alias(dict, (const xmlChar *)(ctxt->directory)) == 0))) xmlFree((char *)(ctxt->directory));;
    ctxt->directory = 
# 14720 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 14720 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ;
    if ((ctxt->extSubURI) && ((!dict) || (xmlDictOwns__internal_alias(dict, (const xmlChar *)(ctxt->extSubURI)) == 0))) xmlFree((char *)(ctxt->extSubURI));;
    ctxt->extSubURI = 
# 14722 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                     ((void *)0)
# 14722 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                         ;
    if ((ctxt->extSubSystem) && ((!dict) || (xmlDictOwns__internal_alias(dict, (const xmlChar *)(ctxt->extSubSystem)) == 0))) xmlFree((char *)(ctxt->extSubSystem));;
    ctxt->extSubSystem = 
# 14724 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 14724 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ;
    if (ctxt->myDoc != 
# 14725 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 14725 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          )
        xmlFreeDoc__internal_alias(ctxt->myDoc);
    ctxt->myDoc = 
# 14727 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 14727 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ;

    ctxt->standalone = -1;
    ctxt->hasExternalSubset = 0;
    ctxt->hasPErefs = 0;
    ctxt->html = 0;
    ctxt->external = 0;
    ctxt->instate = XML_PARSER_START;
    ctxt->token = 0;

    ctxt->wellFormed = 1;
    ctxt->nsWellFormed = 1;
    ctxt->disableSAX = 0;
    ctxt->valid = 1;





    ctxt->record_info = 0;
    ctxt->nbChars = 0;
    ctxt->checkIndex = 0;
    ctxt->inSubset = 0;
    ctxt->errNo = XML_ERR_OK;
    ctxt->depth = 0;
    ctxt->charset = XML_CHAR_ENCODING_UTF8;
    ctxt->catalogs = 
# 14753 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 14753 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ;
    ctxt->nbentities = 0;
    ctxt->sizeentities = 0;
    xmlInitNodeInfoSeq__internal_alias(&ctxt->node_seq);

    if (ctxt->attsDefault != 
# 14758 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 14758 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                ) {
        xmlHashFree__internal_alias(ctxt->attsDefault, (xmlHashDeallocator) xmlFree);
        ctxt->attsDefault = 
# 14760 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 14760 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               ;
    }
    if (ctxt->attsSpecial != 
# 14762 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 14762 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                ) {
        xmlHashFree__internal_alias(ctxt->attsSpecial, 
# 14763 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                      ((void *)0)
# 14763 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                          );
        ctxt->attsSpecial = 
# 14764 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 14764 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               ;
    }


    if (ctxt->catalogs != 
# 14768 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 14768 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             )
 xmlCatalogFreeLocal__internal_alias(ctxt->catalogs);

    if (ctxt->lastError.code != XML_ERR_OK)
        xmlResetError__internal_alias(&ctxt->lastError);
}
# 14787 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int
xmlCtxtResetPush__internal_alias(xmlParserCtxtPtr ctxt, const char *chunk,
                 int size, const char *filename, const char *encoding)
{
    xmlParserInputPtr inputStream;
    xmlParserInputBufferPtr buf;
    xmlCharEncoding enc = XML_CHAR_ENCODING_NONE;

    if (ctxt == 
# 14795 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 14795 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
        return(1);

    if ((encoding == 
# 14798 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                    ((void *)0)
# 14798 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                        ) && (chunk != 
# 14798 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                       ((void *)0)
# 14798 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                           ) && (size >= 4))
        enc = xmlDetectCharEncoding__internal_alias((const xmlChar *) chunk, size);

    buf = xmlAllocParserInputBuffer__internal_alias(enc);
    if (buf == 
# 14802 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 14802 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
        return(1);

    if (ctxt == 
# 14805 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 14805 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
        xmlFreeParserInputBuffer__internal_alias(buf);
        return(1);
    }

    xmlCtxtReset__internal_alias(ctxt);

    if (ctxt->pushTab == 
# 14812 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                        ((void *)0)
# 14812 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                            ) {
        ctxt->pushTab = (void **) xmlMalloc(ctxt->nameMax * 3 *
                                     sizeof(xmlChar *));
        if (ctxt->pushTab == 
# 14815 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 14815 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                ) {
     xmlErrMemory__internal_alias(ctxt, 
# 14816 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                       ((void *)0)
# 14816 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                           );
            xmlFreeParserInputBuffer__internal_alias(buf);
            return(1);
        }
    }

    if (filename == 
# 14822 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 14822 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) {
        ctxt->directory = 
# 14823 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 14823 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             ;
    } else {
        ctxt->directory = xmlParserGetDirectory__internal_alias(filename);
    }

    inputStream = xmlNewInputStream__internal_alias(ctxt);
    if (inputStream == 
# 14829 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 14829 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          ) {
        xmlFreeParserInputBuffer__internal_alias(buf);
        return(1);
    }

    if (filename == 
# 14834 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 14834 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       )
        inputStream->filename = 
# 14835 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                               ((void *)0)
# 14835 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                   ;
    else
        inputStream->filename = (char *)
            xmlCanonicPath__internal_alias((const xmlChar *) filename);
    inputStream->buf = buf;
    xmlBufResetInput(buf->buffer, inputStream);

    inputPush__internal_alias(ctxt, inputStream);

    if ((size > 0) && (chunk != 
# 14844 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                               ((void *)0)
# 14844 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                   ) && (ctxt->input != 
# 14844 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                        ((void *)0)
# 14844 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                            ) &&
        (ctxt->input->buf != 
# 14845 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 14845 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                )) {
 size_t base = xmlBufGetInputBase(ctxt->input->buf->buffer, ctxt->input);
        size_t cur = ctxt->input->cur - ctxt->input->base;

        xmlParserInputBufferPush__internal_alias(ctxt->input->buf, size, chunk);

        xmlBufSetInputBaseCur(ctxt->input->buf->buffer, ctxt->input, base, cur);



    }

    if (encoding != 
# 14857 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 14857 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) {
        xmlCharEncodingHandlerPtr hdlr;

        if (ctxt->encoding != 
# 14860 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                             ((void *)0)
# 14860 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                 )
     xmlFree((xmlChar *) ctxt->encoding);
        ctxt->encoding = xmlStrdup__internal_alias((const xmlChar *) encoding);

        hdlr = xmlFindCharEncodingHandler__internal_alias(encoding);
        if (hdlr != 
# 14865 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 14865 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) {
            xmlSwitchToEncoding__internal_alias(ctxt, hdlr);
 } else {
     xmlFatalErrMsgStr(ctxt, XML_ERR_UNSUPPORTED_ENCODING,
         "Unsupported encoding %s\n", (xmlChar *) encoding);
        }
    } else if (enc != XML_CHAR_ENCODING_NONE) {
        xmlSwitchEncoding__internal_alias(ctxt, enc);
    }

    return(0);
}
# 14890 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static int
xmlCtxtUseOptionsInternal(xmlParserCtxtPtr ctxt, int options, const char *encoding)
{
    if (ctxt == 
# 14893 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 14893 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
        return(-1);
    if (encoding != 
# 14895 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 14895 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) {
        if (ctxt->encoding != 
# 14896 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                             ((void *)0)
# 14896 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                 )
     xmlFree((xmlChar *) ctxt->encoding);
        ctxt->encoding = xmlStrdup__internal_alias((const xmlChar *) encoding);
    }
    if (options & XML_PARSE_RECOVER) {
        ctxt->recovery = 1;
        options -= XML_PARSE_RECOVER;
 ctxt->options |= XML_PARSE_RECOVER;
    } else
        ctxt->recovery = 0;
    if (options & XML_PARSE_DTDLOAD) {
        ctxt->loadsubset = 2;
        options -= XML_PARSE_DTDLOAD;
 ctxt->options |= XML_PARSE_DTDLOAD;
    } else
        ctxt->loadsubset = 0;
    if (options & XML_PARSE_DTDATTR) {
        ctxt->loadsubset |= 4;
        options -= XML_PARSE_DTDATTR;
 ctxt->options |= XML_PARSE_DTDATTR;
    }
    if (options & XML_PARSE_NOENT) {
        ctxt->replaceEntities = 1;

        options -= XML_PARSE_NOENT;
 ctxt->options |= XML_PARSE_NOENT;
    } else
        ctxt->replaceEntities = 0;
    if (options & XML_PARSE_PEDANTIC) {
        ctxt->pedantic = 1;
        options -= XML_PARSE_PEDANTIC;
 ctxt->options |= XML_PARSE_PEDANTIC;
    } else
        ctxt->pedantic = 0;
    if (options & XML_PARSE_NOBLANKS) {
        ctxt->keepBlanks = 0;
        ctxt->sax->ignorableWhitespace = xmlSAX2IgnorableWhitespace__internal_alias;
        options -= XML_PARSE_NOBLANKS;
 ctxt->options |= XML_PARSE_NOBLANKS;
    } else
        ctxt->keepBlanks = 1;
    if (options & XML_PARSE_DTDVALID) {
        ctxt->validate = 1;
        if (options & XML_PARSE_NOWARNING)
            ctxt->vctxt.warning = 
# 14940 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                 ((void *)0)
# 14940 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                     ;
        if (options & XML_PARSE_NOERROR)
            ctxt->vctxt.error = 
# 14942 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                               ((void *)0)
# 14942 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                   ;
        options -= XML_PARSE_DTDVALID;
 ctxt->options |= XML_PARSE_DTDVALID;
    } else
        ctxt->validate = 0;
    if (options & XML_PARSE_NOWARNING) {
        ctxt->sax->warning = 
# 14948 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                            ((void *)0)
# 14948 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                ;
        options -= XML_PARSE_NOWARNING;
    }
    if (options & XML_PARSE_NOERROR) {
        ctxt->sax->error = 
# 14952 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 14952 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              ;
        ctxt->sax->fatalError = 
# 14953 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                               ((void *)0)
# 14953 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                   ;
        options -= XML_PARSE_NOERROR;
    }

    if (options & XML_PARSE_SAX1) {
        ctxt->sax->startElement = xmlSAX2StartElement__internal_alias;
        ctxt->sax->endElement = xmlSAX2EndElement__internal_alias;
        ctxt->sax->startElementNs = 
# 14960 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                   ((void *)0)
# 14960 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                       ;
        ctxt->sax->endElementNs = 
# 14961 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                 ((void *)0)
# 14961 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                     ;
        ctxt->sax->initialized = 1;
        options -= XML_PARSE_SAX1;
 ctxt->options |= XML_PARSE_SAX1;
    }

    if (options & XML_PARSE_NODICT) {
        ctxt->dictNames = 0;
        options -= XML_PARSE_NODICT;
 ctxt->options |= XML_PARSE_NODICT;
    } else {
        ctxt->dictNames = 1;
    }
    if (options & XML_PARSE_NOCDATA) {
        ctxt->sax->cdataBlock = 
# 14975 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                               ((void *)0)
# 14975 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                   ;
        options -= XML_PARSE_NOCDATA;
 ctxt->options |= XML_PARSE_NOCDATA;
    }
    if (options & XML_PARSE_NSCLEAN) {
 ctxt->options |= XML_PARSE_NSCLEAN;
        options -= XML_PARSE_NSCLEAN;
    }
    if (options & XML_PARSE_NONET) {
 ctxt->options |= XML_PARSE_NONET;
        options -= XML_PARSE_NONET;
    }
    if (options & XML_PARSE_COMPACT) {
 ctxt->options |= XML_PARSE_COMPACT;
        options -= XML_PARSE_COMPACT;
    }
    if (options & XML_PARSE_OLD10) {
 ctxt->options |= XML_PARSE_OLD10;
        options -= XML_PARSE_OLD10;
    }
    if (options & XML_PARSE_NOBASEFIX) {
 ctxt->options |= XML_PARSE_NOBASEFIX;
        options -= XML_PARSE_NOBASEFIX;
    }
    if (options & XML_PARSE_HUGE) {
 ctxt->options |= XML_PARSE_HUGE;
        options -= XML_PARSE_HUGE;
        if (ctxt->dict != 
# 15002 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                         ((void *)0)
# 15002 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                             )
            xmlDictSetLimit(ctxt->dict, 0);
    }
    if (options & XML_PARSE_OLDSAX) {
 ctxt->options |= XML_PARSE_OLDSAX;
        options -= XML_PARSE_OLDSAX;
    }
    if (options & XML_PARSE_IGNORE_ENC) {
 ctxt->options |= XML_PARSE_IGNORE_ENC;
        options -= XML_PARSE_IGNORE_ENC;
    }
    if (options & XML_PARSE_BIG_LINES) {
 ctxt->options |= XML_PARSE_BIG_LINES;
        options -= XML_PARSE_BIG_LINES;
    }
    ctxt->linenumbers = 1;
    return (options);
}
# 15031 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
int
xmlCtxtUseOptions__internal_alias(xmlParserCtxtPtr ctxt, int options)
{
   return(xmlCtxtUseOptionsInternal(ctxt, options, 
# 15034 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                                  ((void *)0)
# 15034 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                      ));
}
# 15049 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
static xmlDocPtr
xmlDoRead(xmlParserCtxtPtr ctxt, const char *URL, const char *encoding,
          int options, int reuse)
{
    xmlDocPtr ret;

    xmlCtxtUseOptionsInternal(ctxt, options, encoding);
    if (encoding != 
# 15056 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 15056 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) {
        xmlCharEncodingHandlerPtr hdlr;

 hdlr = xmlFindCharEncodingHandler__internal_alias(encoding);
 if (hdlr != 
# 15060 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
            ((void *)0)
# 15060 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                )
     xmlSwitchToEncoding__internal_alias(ctxt, hdlr);
    }
    if ((URL != 
# 15063 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15063 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) && (ctxt->input != 
# 15063 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                        ((void *)0)
# 15063 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                            ) &&
        (ctxt->input->filename == 
# 15064 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                 ((void *)0)
# 15064 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                     ))
        ctxt->input->filename = (char *) xmlStrdup__internal_alias((const xmlChar *) URL);
    xmlParseDocument__internal_alias(ctxt);
    if ((ctxt->wellFormed) || ctxt->recovery)
        ret = ctxt->myDoc;
    else {
        ret = 
# 15070 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
             ((void *)0)
# 15070 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                 ;
 if (ctxt->myDoc != 
# 15071 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 15071 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       ) {
     xmlFreeDoc__internal_alias(ctxt->myDoc);
 }
    }
    ctxt->myDoc = 
# 15075 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 15075 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ;
    if (!reuse) {
 xmlFreeParserCtxt__internal_alias(ctxt);
    }

    return (ret);
}
# 15094 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDocPtr
xmlReadDoc__internal_alias(const xmlChar * cur, const char *URL, const char *encoding, int options)
{
    xmlParserCtxtPtr ctxt;

    if (cur == 
# 15099 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 15099 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
        return (
# 15100 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15100 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );

    ctxt = xmlCreateDocParserCtxt__internal_alias(cur);
    if (ctxt == 
# 15103 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15103 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
        return (
# 15104 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15104 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    return (xmlDoRead(ctxt, URL, encoding, options, 0));
}
# 15118 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDocPtr
xmlReadFile__internal_alias(const char *filename, const char *encoding, int options)
{
    xmlParserCtxtPtr ctxt;

    ctxt = xmlCreateURLParserCtxt__internal_alias(filename, options);
    if (ctxt == 
# 15124 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15124 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
        return (
# 15125 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15125 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    return (xmlDoRead(ctxt, 
# 15126 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 15126 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               , encoding, options, 0));
}
# 15141 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDocPtr
xmlReadMemory__internal_alias(const char *buffer, int size, const char *URL, const char *encoding, int options)
{
    xmlParserCtxtPtr ctxt;

    ctxt = xmlCreateMemoryParserCtxt__internal_alias(buffer, size);
    if (ctxt == 
# 15147 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15147 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
        return (
# 15148 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15148 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    return (xmlDoRead(ctxt, URL, encoding, options, 0));
}
# 15165 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDocPtr
xmlReadFd__internal_alias(int fd, const char *URL, const char *encoding, int options)
{
    xmlParserCtxtPtr ctxt;
    xmlParserInputBufferPtr input;
    xmlParserInputPtr stream;

    if (fd < 0)
        return (
# 15173 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15173 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );

    input = xmlParserInputBufferCreateFd__internal_alias(fd, XML_CHAR_ENCODING_NONE);
    if (input == 
# 15176 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 15176 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    )
        return (
# 15177 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15177 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    input->closecallback = 
# 15178 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 15178 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              ;
    ctxt = xmlNewParserCtxt__internal_alias();
    if (ctxt == 
# 15180 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15180 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
        xmlFreeParserInputBuffer__internal_alias(input);
        return (
# 15182 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15182 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    }
    stream = xmlNewIOInputStream__internal_alias(ctxt, input, XML_CHAR_ENCODING_NONE);
    if (stream == 
# 15185 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 15185 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) {
        xmlFreeParserInputBuffer__internal_alias(input);
 xmlFreeParserCtxt__internal_alias(ctxt);
        return (
# 15188 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15188 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    }
    inputPush__internal_alias(ctxt, stream);
    return (xmlDoRead(ctxt, URL, encoding, options, 0));
}
# 15207 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDocPtr
xmlReadIO__internal_alias(xmlInputReadCallback ioread, xmlInputCloseCallback ioclose,
          void *ioctx, const char *URL, const char *encoding, int options)
{
    xmlParserCtxtPtr ctxt;
    xmlParserInputBufferPtr input;
    xmlParserInputPtr stream;

    if (ioread == 
# 15215 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 15215 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     )
        return (
# 15216 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15216 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );

    input = xmlParserInputBufferCreateIO__internal_alias(ioread, ioclose, ioctx,
                                         XML_CHAR_ENCODING_NONE);
    if (input == 
# 15220 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 15220 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
        if (ioclose != 
# 15221 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 15221 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          )
            ioclose(ioctx);
        return (
# 15223 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15223 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    }
    ctxt = xmlNewParserCtxt__internal_alias();
    if (ctxt == 
# 15226 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15226 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   ) {
        xmlFreeParserInputBuffer__internal_alias(input);
        return (
# 15228 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15228 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    }
    stream = xmlNewIOInputStream__internal_alias(ctxt, input, XML_CHAR_ENCODING_NONE);
    if (stream == 
# 15231 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 15231 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) {
        xmlFreeParserInputBuffer__internal_alias(input);
 xmlFreeParserCtxt__internal_alias(ctxt);
        return (
# 15234 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15234 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    }
    inputPush__internal_alias(ctxt, stream);
    return (xmlDoRead(ctxt, URL, encoding, options, 0));
}
# 15253 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDocPtr
xmlCtxtReadDoc__internal_alias(xmlParserCtxtPtr ctxt, const xmlChar * cur,
               const char *URL, const char *encoding, int options)
{
    xmlParserInputPtr stream;

    if (cur == 
# 15259 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
              ((void *)0)
# 15259 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                  )
        return (
# 15260 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15260 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    if (ctxt == 
# 15261 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15261 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
        return (
# 15262 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15262 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );

    xmlCtxtReset__internal_alias(ctxt);

    stream = xmlNewStringInputStream__internal_alias(ctxt, cur);
    if (stream == 
# 15267 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 15267 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) {
        return (
# 15268 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15268 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    }
    inputPush__internal_alias(ctxt, stream);
    return (xmlDoRead(ctxt, URL, encoding, options, 1));
}
# 15286 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDocPtr
xmlCtxtReadFile__internal_alias(xmlParserCtxtPtr ctxt, const char *filename,
                const char *encoding, int options)
{
    xmlParserInputPtr stream;

    if (filename == 
# 15292 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                   ((void *)0)
# 15292 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                       )
        return (
# 15293 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15293 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    if (ctxt == 
# 15294 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15294 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
        return (
# 15295 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15295 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );

    xmlCtxtReset__internal_alias(ctxt);

    stream = xmlLoadExternalEntity__internal_alias(filename, 
# 15299 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                                            ((void *)0)
# 15299 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                                                , ctxt);
    if (stream == 
# 15300 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 15300 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) {
        return (
# 15301 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15301 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    }
    inputPush__internal_alias(ctxt, stream);
    return (xmlDoRead(ctxt, 
# 15304 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                           ((void *)0)
# 15304 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                               , encoding, options, 1));
}
# 15321 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDocPtr
xmlCtxtReadMemory__internal_alias(xmlParserCtxtPtr ctxt, const char *buffer, int size,
                  const char *URL, const char *encoding, int options)
{
    xmlParserInputBufferPtr input;
    xmlParserInputPtr stream;

    if (ctxt == 
# 15328 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15328 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
        return (
# 15329 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15329 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    if (buffer == 
# 15330 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 15330 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     )
        return (
# 15331 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15331 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );

    xmlCtxtReset__internal_alias(ctxt);

    input = xmlParserInputBufferCreateMem__internal_alias(buffer, size, XML_CHAR_ENCODING_NONE);
    if (input == 
# 15336 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 15336 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
 return(
# 15337 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 15337 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }

    stream = xmlNewIOInputStream__internal_alias(ctxt, input, XML_CHAR_ENCODING_NONE);
    if (stream == 
# 15341 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 15341 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) {
 xmlFreeParserInputBuffer__internal_alias(input);
 return(
# 15343 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
       ((void *)0)
# 15343 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
           );
    }

    inputPush__internal_alias(ctxt, stream);
    return (xmlDoRead(ctxt, URL, encoding, options, 1));
}
# 15365 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDocPtr
xmlCtxtReadFd__internal_alias(xmlParserCtxtPtr ctxt, int fd,
              const char *URL, const char *encoding, int options)
{
    xmlParserInputBufferPtr input;
    xmlParserInputPtr stream;

    if (fd < 0)
        return (
# 15373 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15373 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    if (ctxt == 
# 15374 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15374 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
        return (
# 15375 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15375 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );

    xmlCtxtReset__internal_alias(ctxt);


    input = xmlParserInputBufferCreateFd__internal_alias(fd, XML_CHAR_ENCODING_NONE);
    if (input == 
# 15381 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 15381 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    )
        return (
# 15382 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15382 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    input->closecallback = 
# 15383 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                          ((void *)0)
# 15383 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                              ;
    stream = xmlNewIOInputStream__internal_alias(ctxt, input, XML_CHAR_ENCODING_NONE);
    if (stream == 
# 15385 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 15385 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) {
        xmlFreeParserInputBuffer__internal_alias(input);
        return (
# 15387 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15387 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    }
    inputPush__internal_alias(ctxt, stream);
    return (xmlDoRead(ctxt, URL, encoding, options, 1));
}
# 15408 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
xmlDocPtr
xmlCtxtReadIO__internal_alias(xmlParserCtxtPtr ctxt, xmlInputReadCallback ioread,
              xmlInputCloseCallback ioclose, void *ioctx,
       const char *URL,
              const char *encoding, int options)
{
    xmlParserInputBufferPtr input;
    xmlParserInputPtr stream;

    if (ioread == 
# 15417 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 15417 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     )
        return (
# 15418 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15418 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    if (ctxt == 
# 15419 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15419 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   )
        return (
# 15420 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15420 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );

    xmlCtxtReset__internal_alias(ctxt);

    input = xmlParserInputBufferCreateIO__internal_alias(ioread, ioclose, ioctx,
                                         XML_CHAR_ENCODING_NONE);
    if (input == 
# 15426 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                ((void *)0)
# 15426 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                    ) {
        if (ioclose != 
# 15427 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                      ((void *)0)
# 15427 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                          )
            ioclose(ioctx);
        return (
# 15429 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15429 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    }
    stream = xmlNewIOInputStream__internal_alias(ctxt, input, XML_CHAR_ENCODING_NONE);
    if (stream == 
# 15432 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
                 ((void *)0)
# 15432 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                     ) {
        xmlFreeParserInputBuffer__internal_alias(input);
        return (
# 15434 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 3 4
               ((void *)0)
# 15434 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c"
                   );
    }
    inputPush__internal_alias(ctxt, stream);
    return (xmlDoRead(ctxt, URL, encoding, options, 1));
}


# 1 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 1
# 47 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
# 1 "./include/libxml/xmlerror.h" 1
# 48 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2
# 798 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (inputPop) inputPop __attribute((alias("inputPop__internal_alias")));
# 808 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (inputPush) inputPush __attribute((alias("inputPush__internal_alias")));
# 818 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (namePop) namePop __attribute((alias("namePop__internal_alias")));
# 828 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (namePush) namePush __attribute((alias("namePush__internal_alias")));
# 838 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (nodePop) nodePop __attribute((alias("nodePop__internal_alias")));
# 848 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (nodePush) nodePush __attribute((alias("nodePush__internal_alias")));
# 1966 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCheckLanguageID) xmlCheckLanguageID __attribute((alias("xmlCheckLanguageID__internal_alias")));
# 2070 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCleanupParser) xmlCleanupParser __attribute((alias("xmlCleanupParser__internal_alias")));
# 2328 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateDocParserCtxt) xmlCreateDocParserCtxt __attribute((alias("xmlCreateDocParserCtxt__internal_alias")));
# 2348 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateEntityParserCtxt) xmlCreateEntityParserCtxt __attribute((alias("xmlCreateEntityParserCtxt__internal_alias")));
# 2368 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateFileParserCtxt) xmlCreateFileParserCtxt __attribute((alias("xmlCreateFileParserCtxt__internal_alias")));
# 2378 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateIOParserCtxt) xmlCreateIOParserCtxt __attribute((alias("xmlCreateIOParserCtxt__internal_alias")));
# 2398 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateMemoryParserCtxt) xmlCreateMemoryParserCtxt __attribute((alias("xmlCreateMemoryParserCtxt__internal_alias")));
# 2409 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreatePushParserCtxt) xmlCreatePushParserCtxt __attribute((alias("xmlCreatePushParserCtxt__internal_alias")));
# 2430 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateURLParserCtxt) xmlCreateURLParserCtxt __attribute((alias("xmlCreateURLParserCtxt__internal_alias")));
# 2450 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtReadDoc) xmlCtxtReadDoc __attribute((alias("xmlCtxtReadDoc__internal_alias")));
# 2460 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtReadFd) xmlCtxtReadFd __attribute((alias("xmlCtxtReadFd__internal_alias")));
# 2470 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtReadFile) xmlCtxtReadFile __attribute((alias("xmlCtxtReadFile__internal_alias")));
# 2480 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtReadIO) xmlCtxtReadIO __attribute((alias("xmlCtxtReadIO__internal_alias")));
# 2490 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtReadMemory) xmlCtxtReadMemory __attribute((alias("xmlCtxtReadMemory__internal_alias")));
# 2500 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtReset) xmlCtxtReset __attribute((alias("xmlCtxtReset__internal_alias")));
# 2520 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtResetPush) xmlCtxtResetPush __attribute((alias("xmlCtxtResetPush__internal_alias")));
# 2530 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtUseOptions) xmlCtxtUseOptions __attribute((alias("xmlCtxtUseOptions__internal_alias")));
# 4134 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHasFeature) xmlHasFeature __attribute((alias("xmlHasFeature__internal_alias")));
# 4513 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIOParseDTD) xmlIOParseDTD __attribute((alias("xmlIOParseDTD__internal_alias")));
# 4564 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlInitParser) xmlInitParser __attribute((alias("xmlInitParser__internal_alias")));
# 6796 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseAttValue) xmlParseAttValue __attribute((alias("xmlParseAttValue__internal_alias")));
# 6807 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseAttribute) xmlParseAttribute __attribute((alias("xmlParseAttribute__internal_alias")));
# 6818 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseAttributeListDecl) xmlParseAttributeListDecl __attribute((alias("xmlParseAttributeListDecl__internal_alias")));
# 6828 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseAttributeType) xmlParseAttributeType __attribute((alias("xmlParseAttributeType__internal_alias")));
# 6839 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseBalancedChunkMemory) xmlParseBalancedChunkMemory __attribute((alias("xmlParseBalancedChunkMemory__internal_alias")));
# 6851 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseBalancedChunkMemoryRecover) xmlParseBalancedChunkMemoryRecover __attribute((alias("xmlParseBalancedChunkMemoryRecover__internal_alias")));
# 6862 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseCDSect) xmlParseCDSect __attribute((alias("xmlParseCDSect__internal_alias")));
# 6884 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseCharData) xmlParseCharData __attribute((alias("xmlParseCharData__internal_alias")));
# 6904 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseCharRef) xmlParseCharRef __attribute((alias("xmlParseCharRef__internal_alias")));
# 6915 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseChunk) xmlParseChunk __attribute((alias("xmlParseChunk__internal_alias")));
# 6926 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseComment) xmlParseComment __attribute((alias("xmlParseComment__internal_alias")));
# 6936 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseContent) xmlParseContent __attribute((alias("xmlParseContent__internal_alias")));
# 6946 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseCtxtExternalEntity) xmlParseCtxtExternalEntity __attribute((alias("xmlParseCtxtExternalEntity__internal_alias")));
# 6957 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseDTD) xmlParseDTD __attribute((alias("xmlParseDTD__internal_alias")));
# 6968 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseDefaultDecl) xmlParseDefaultDecl __attribute((alias("xmlParseDefaultDecl__internal_alias")));
# 6979 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseDoc) xmlParseDoc __attribute((alias("xmlParseDoc__internal_alias")));
# 6990 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseDocTypeDecl) xmlParseDocTypeDecl __attribute((alias("xmlParseDocTypeDecl__internal_alias")));
# 7000 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseDocument) xmlParseDocument __attribute((alias("xmlParseDocument__internal_alias")));
# 7010 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseElement) xmlParseElement __attribute((alias("xmlParseElement__internal_alias")));
# 7020 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseElementChildrenContentDecl) xmlParseElementChildrenContentDecl __attribute((alias("xmlParseElementChildrenContentDecl__internal_alias")));
# 7030 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseElementContentDecl) xmlParseElementContentDecl __attribute((alias("xmlParseElementContentDecl__internal_alias")));
# 7040 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseElementDecl) xmlParseElementDecl __attribute((alias("xmlParseElementDecl__internal_alias")));
# 7050 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseElementMixedContentDecl) xmlParseElementMixedContentDecl __attribute((alias("xmlParseElementMixedContentDecl__internal_alias")));
# 7060 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEncName) xmlParseEncName __attribute((alias("xmlParseEncName__internal_alias")));
# 7070 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEncodingDecl) xmlParseEncodingDecl __attribute((alias("xmlParseEncodingDecl__internal_alias")));
# 7081 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEndTag) xmlParseEndTag __attribute((alias("xmlParseEndTag__internal_alias")));
# 7093 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEntity) xmlParseEntity __attribute((alias("xmlParseEntity__internal_alias")));
# 7104 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEntityDecl) xmlParseEntityDecl __attribute((alias("xmlParseEntityDecl__internal_alias")));
# 7114 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEntityRef) xmlParseEntityRef __attribute((alias("xmlParseEntityRef__internal_alias")));
# 7124 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEntityValue) xmlParseEntityValue __attribute((alias("xmlParseEntityValue__internal_alias")));
# 7134 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEnumeratedType) xmlParseEnumeratedType __attribute((alias("xmlParseEnumeratedType__internal_alias")));
# 7144 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEnumerationType) xmlParseEnumerationType __attribute((alias("xmlParseEnumerationType__internal_alias")));
# 7154 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseExtParsedEnt) xmlParseExtParsedEnt __attribute((alias("xmlParseExtParsedEnt__internal_alias")));
# 7165 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseExternalEntity) xmlParseExternalEntity __attribute((alias("xmlParseExternalEntity__internal_alias")));
# 7176 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseExternalID) xmlParseExternalID __attribute((alias("xmlParseExternalID__internal_alias")));
# 7186 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseExternalSubset) xmlParseExternalSubset __attribute((alias("xmlParseExternalSubset__internal_alias")));
# 7197 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseFile) xmlParseFile __attribute((alias("xmlParseFile__internal_alias")));
# 7208 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseInNodeContext) xmlParseInNodeContext __attribute((alias("xmlParseInNodeContext__internal_alias")));
# 7218 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseMarkupDecl) xmlParseMarkupDecl __attribute((alias("xmlParseMarkupDecl__internal_alias")));
# 7229 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseMemory) xmlParseMemory __attribute((alias("xmlParseMemory__internal_alias")));
# 7240 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseMisc) xmlParseMisc __attribute((alias("xmlParseMisc__internal_alias")));
# 7250 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseName) xmlParseName __attribute((alias("xmlParseName__internal_alias")));
# 7272 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseNmtoken) xmlParseNmtoken __attribute((alias("xmlParseNmtoken__internal_alias")));
# 7282 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseNotationDecl) xmlParseNotationDecl __attribute((alias("xmlParseNotationDecl__internal_alias")));
# 7292 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseNotationType) xmlParseNotationType __attribute((alias("xmlParseNotationType__internal_alias")));
# 7302 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParsePEReference) xmlParsePEReference __attribute((alias("xmlParsePEReference__internal_alias")));
# 7312 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParsePI) xmlParsePI __attribute((alias("xmlParsePI__internal_alias")));
# 7322 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParsePITarget) xmlParsePITarget __attribute((alias("xmlParsePITarget__internal_alias")));
# 7332 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParsePubidLiteral) xmlParsePubidLiteral __attribute((alias("xmlParsePubidLiteral__internal_alias")));
# 7354 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseReference) xmlParseReference __attribute((alias("xmlParseReference__internal_alias")));
# 7364 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseSDDecl) xmlParseSDDecl __attribute((alias("xmlParseSDDecl__internal_alias")));
# 7375 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseStartTag) xmlParseStartTag __attribute((alias("xmlParseStartTag__internal_alias")));
# 7386 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseSystemLiteral) xmlParseSystemLiteral __attribute((alias("xmlParseSystemLiteral__internal_alias")));
# 7396 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseTextDecl) xmlParseTextDecl __attribute((alias("xmlParseTextDecl__internal_alias")));
# 7436 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseVersionInfo) xmlParseVersionInfo __attribute((alias("xmlParseVersionInfo__internal_alias")));
# 7446 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseVersionNum) xmlParseVersionNum __attribute((alias("xmlParseVersionNum__internal_alias")));
# 7456 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseXMLDecl) xmlParseXMLDecl __attribute((alias("xmlParseXMLDecl__internal_alias")));
# 7516 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserHandlePEReference) xmlParserHandlePEReference __attribute((alias("xmlParserHandlePEReference__internal_alias")));
# 7822 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPopInput) xmlPopInput __attribute((alias("xmlPopInput__internal_alias")));
# 7864 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPushInput) xmlPushInput __attribute((alias("xmlPushInput__internal_alias")));
# 7894 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReadDoc) xmlReadDoc __attribute((alias("xmlReadDoc__internal_alias")));
# 7904 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReadFd) xmlReadFd __attribute((alias("xmlReadFd__internal_alias")));
# 7914 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReadFile) xmlReadFile __attribute((alias("xmlReadFile__internal_alias")));
# 7924 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReadIO) xmlReadIO __attribute((alias("xmlReadIO__internal_alias")));
# 7934 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReadMemory) xmlReadMemory __attribute((alias("xmlReadMemory__internal_alias")));
# 8111 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRecoverDoc) xmlRecoverDoc __attribute((alias("xmlRecoverDoc__internal_alias")));
# 8123 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRecoverFile) xmlRecoverFile __attribute((alias("xmlRecoverFile__internal_alias")));
# 8135 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRecoverMemory) xmlRecoverMemory __attribute((alias("xmlRecoverMemory__internal_alias")));
# 9055 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXParseDTD) xmlSAXParseDTD __attribute((alias("xmlSAXParseDTD__internal_alias")));
# 9067 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXParseDoc) xmlSAXParseDoc __attribute((alias("xmlSAXParseDoc__internal_alias")));
# 9079 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXParseEntity) xmlSAXParseEntity __attribute((alias("xmlSAXParseEntity__internal_alias")));
# 9091 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXParseFile) xmlSAXParseFile __attribute((alias("xmlSAXParseFile__internal_alias")));
# 9103 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXParseFileWithData) xmlSAXParseFileWithData __attribute((alias("xmlSAXParseFileWithData__internal_alias")));
# 9115 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXParseMemory) xmlSAXParseMemory __attribute((alias("xmlSAXParseMemory__internal_alias")));
# 9127 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXParseMemoryWithData) xmlSAXParseMemoryWithData __attribute((alias("xmlSAXParseMemoryWithData__internal_alias")));
# 9139 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXUserParseFile) xmlSAXUserParseFile __attribute((alias("xmlSAXUserParseFile__internal_alias")));
# 9151 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXUserParseMemory) xmlSAXUserParseMemory __attribute((alias("xmlSAXUserParseMemory__internal_alias")));
# 10289 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetEntityReferenceFunc) xmlSetEntityReferenceFunc __attribute((alias("xmlSetEntityReferenceFunc__internal_alias")));
# 10397 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetupParserForBuffer) xmlSetupParserForBuffer __attribute((alias("xmlSetupParserForBuffer__internal_alias")));
# 10576 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSkipBlankChars) xmlSkipBlankChars __attribute((alias("xmlSkipBlankChars__internal_alias")));
# 10596 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSplitQName) xmlSplitQName __attribute((alias("xmlSplitQName__internal_alias")));
# 10638 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStopParser) xmlStopParser __attribute((alias("xmlStopParser__internal_alias")));
# 10818 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStringDecodeEntities) xmlStringDecodeEntities __attribute((alias("xmlStringDecodeEntities__internal_alias")));
# 10838 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStringLenDecodeEntities) xmlStringLenDecodeEntities __attribute((alias("xmlStringLenDecodeEntities__internal_alias")));
# 15441 "/doner/libxml2/libxml2-4ea74a44/libxml2/parser.c" 2
