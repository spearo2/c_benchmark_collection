# 1 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
# 1 "/doner/libxml2/libxml2-4ea74a44/libxml2//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
# 17 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
# 1 "/doner/libxml2/libxml2-4ea74a44/libxml2/libxml.h" 1
# 37 "/doner/libxml2/libxml2-4ea74a44/libxml2/libxml.h"
# 1 "/doner/libxml2/libxml2-4ea74a44/libxml2/config.h" 1
# 38 "/doner/libxml2/libxml2-4ea74a44/libxml2/libxml.h" 2
# 1 "./include/libxml/xmlversion.h" 1
# 13 "./include/libxml/xmlversion.h"
# 1 "./include/libxml/xmlexports.h" 1
# 14 "./include/libxml/xmlversion.h" 2
# 24 "./include/libxml/xmlversion.h"
 void xmlCheckVersion(int version);
# 39 "/doner/libxml2/libxml2-4ea74a44/libxml2/libxml.h" 2
# 49 "/doner/libxml2/libxml2-4ea74a44/libxml2/libxml.h"
# 1 "/usr/include/stdio.h" 1 3 4
# 27 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 33 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 461 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 1 3 4
# 452 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 453 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/long-double.h" 1 3 4
# 454 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
# 462 "/usr/include/features.h" 2 3 4
# 485 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 1 3 4
# 10 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs-64.h" 1 3 4
# 11 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 2 3 4
# 486 "/usr/include/features.h" 2 3 4
# 34 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 2 3 4
# 28 "/usr/include/stdio.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 1 3 4
# 209 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 3 4

# 209 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 3 4
typedef long unsigned int size_t;
# 34 "/usr/include/stdio.h" 2 3 4


# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 37 "/usr/include/stdio.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/types.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/timesize.h" 1 3 4
# 29 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;

typedef signed long int __int64_t;
typedef unsigned long int __uint64_t;






typedef __int8_t __int_least8_t;
typedef __uint8_t __uint_least8_t;
typedef __int16_t __int_least16_t;
typedef __uint16_t __uint_least16_t;
typedef __int32_t __int_least32_t;
typedef __uint32_t __uint_least32_t;
typedef __int64_t __int_least64_t;
typedef __uint64_t __uint_least64_t;



typedef long int __quad_t;
typedef unsigned long int __u_quad_t;







typedef long int __intmax_t;
typedef unsigned long int __uintmax_t;
# 141 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/typesizes.h" 1 3 4
# 142 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/time64.h" 1 3 4
# 143 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned long int __dev_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long int __ino_t;
typedef unsigned long int __ino64_t;
typedef unsigned int __mode_t;
typedef unsigned long int __nlink_t;
typedef long int __off_t;
typedef long int __off64_t;
typedef int __pid_t;
typedef struct { int __val[2]; } __fsid_t;
typedef long int __clock_t;
typedef unsigned long int __rlim_t;
typedef unsigned long int __rlim64_t;
typedef unsigned int __id_t;
typedef long int __time_t;
typedef unsigned int __useconds_t;
typedef long int __suseconds_t;

typedef int __daddr_t;
typedef int __key_t;


typedef int __clockid_t;


typedef void * __timer_t;


typedef long int __blksize_t;




typedef long int __blkcnt_t;
typedef long int __blkcnt64_t;


typedef unsigned long int __fsblkcnt_t;
typedef unsigned long int __fsblkcnt64_t;


typedef unsigned long int __fsfilcnt_t;
typedef unsigned long int __fsfilcnt64_t;


typedef long int __fsword_t;

typedef long int __ssize_t;


typedef long int __syscall_slong_t;

typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef char *__caddr_t;


typedef long int __intptr_t;


typedef unsigned int __socklen_t;




typedef int __sig_atomic_t;
# 39 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h" 1 3 4




# 1 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 1 3 4
# 13 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3 4
typedef struct
{
  int __count;
  union
  {
    unsigned int __wch;
    char __wchb[4];
  } __value;
} __mbstate_t;
# 6 "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h" 2 3 4




typedef struct _G_fpos_t
{
  __off_t __pos;
  __mbstate_t __state;
} __fpos_t;
# 40 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h" 1 3 4
# 10 "/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h" 3 4
typedef struct _G_fpos64_t
{
  __off64_t __pos;
  __mbstate_t __state;
} __fpos64_t;
# 41 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h" 1 3 4



struct _IO_FILE;
typedef struct _IO_FILE __FILE;
# 42 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h" 1 3 4



struct _IO_FILE;


typedef struct _IO_FILE FILE;
# 43 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 1 3 4
# 35 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3 4
struct _IO_FILE;
struct _IO_marker;
struct _IO_codecvt;
struct _IO_wide_data;




typedef void _IO_lock_t;





struct _IO_FILE
{
  int _flags;


  char *_IO_read_ptr;
  char *_IO_read_end;
  char *_IO_read_base;
  char *_IO_write_base;
  char *_IO_write_ptr;
  char *_IO_write_end;
  char *_IO_buf_base;
  char *_IO_buf_end;


  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;
  int _flags2;
  __off_t _old_offset;


  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];

  _IO_lock_t *_lock;







  __off64_t _offset;

  struct _IO_codecvt *_codecvt;
  struct _IO_wide_data *_wide_data;
  struct _IO_FILE *_freeres_list;
  void *_freeres_buf;
  size_t __pad5;
  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];
};
# 44 "/usr/include/stdio.h" 2 3 4
# 52 "/usr/include/stdio.h" 3 4
typedef __gnuc_va_list va_list;
# 65 "/usr/include/stdio.h" 3 4
typedef __off64_t off_t;
# 77 "/usr/include/stdio.h" 3 4
typedef __ssize_t ssize_t;
# 86 "/usr/include/stdio.h" 3 4
typedef __fpos64_t fpos_t;
# 133 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/stdio_lim.h" 1 3 4
# 134 "/usr/include/stdio.h" 2 3 4



extern FILE *stdin;
extern FILE *stdout;
extern FILE *stderr;






extern int remove (const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__ , __leaf__));



extern int renameat (int __oldfd, const char *__old, int __newfd,
       const char *__new) __attribute__ ((__nothrow__ , __leaf__));
# 176 "/usr/include/stdio.h" 3 4
extern FILE *tmpfile (void) __asm__ ("" "tmpfile64") __attribute__ ((__warn_unused_result__));
# 187 "/usr/include/stdio.h" 3 4
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern char *tmpnam_r (char *__s) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
# 204 "/usr/include/stdio.h" 3 4
extern char *tempnam (const char *__dir, const char *__pfx)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__warn_unused_result__));







extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);
# 227 "/usr/include/stdio.h" 3 4
extern int fflush_unlocked (FILE *__stream);
# 257 "/usr/include/stdio.h" 3 4
extern FILE *fopen (const char *__restrict __filename, const char *__restrict __modes) __asm__ ("" "fopen64")

  __attribute__ ((__warn_unused_result__));
extern FILE *freopen (const char *__restrict __filename, const char *__restrict __modes, FILE *__restrict __stream) __asm__ ("" "freopen64")


  __attribute__ ((__warn_unused_result__));
# 279 "/usr/include/stdio.h" 3 4
extern FILE *fdopen (int __fd, const char *__modes) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
# 292 "/usr/include/stdio.h" 3 4
extern FILE *fmemopen (void *__s, size_t __len, const char *__modes)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));





extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));




extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
         size_t __size) __attribute__ ((__nothrow__ , __leaf__));


extern void setlinebuf (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));







extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));



extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));
# 379 "/usr/include/stdio.h" 3 4
extern int vdprintf (int __fd, const char *__restrict __fmt,
       __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));







extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) __attribute__ ((__warn_unused_result__));




extern int scanf (const char *__restrict __format, ...) __attribute__ ((__warn_unused_result__));

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));






extern int fscanf (FILE *__restrict __stream, const char *__restrict __format, ...) __asm__ ("" "__isoc99_fscanf")

                          __attribute__ ((__warn_unused_result__));
extern int scanf (const char *__restrict __format, ...) __asm__ ("" "__isoc99_scanf")
                         __attribute__ ((__warn_unused_result__));
extern int sscanf (const char *__restrict __s, const char *__restrict __format, ...) __asm__ ("" "__isoc99_sscanf") __attribute__ ((__nothrow__ , __leaf__))

                      ;
# 432 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) __attribute__ ((__warn_unused_result__));





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) __attribute__ ((__warn_unused_result__));


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));




extern int vfscanf (FILE *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vfscanf")



     __attribute__ ((__format__ (__scanf__, 2, 0))) __attribute__ ((__warn_unused_result__));
extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vscanf")

     __attribute__ ((__format__ (__scanf__, 1, 0))) __attribute__ ((__warn_unused_result__));
extern int vsscanf (const char *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vsscanf") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__ ((__format__ (__scanf__, 2, 0)));
# 485 "/usr/include/stdio.h" 3 4
extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);






extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);
# 510 "/usr/include/stdio.h" 3 4
extern int fgetc_unlocked (FILE *__stream);
# 521 "/usr/include/stdio.h" 3 4
extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);
# 537 "/usr/include/stdio.h" 3 4
extern int fputc_unlocked (int __c, FILE *__stream);







extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);






extern int getw (FILE *__stream);


extern int putw (int __w, FILE *__stream);







extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     __attribute__ ((__warn_unused_result__));
# 603 "/usr/include/stdio.h" 3 4
extern __ssize_t __getdelim (char **__restrict __lineptr,
                             size_t *__restrict __n, int __delimiter,
                             FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern __ssize_t getdelim (char **__restrict __lineptr,
                           size_t *__restrict __n, int __delimiter,
                           FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));







extern __ssize_t getline (char **__restrict __lineptr,
                          size_t *__restrict __n,
                          FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));







extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);
# 673 "/usr/include/stdio.h" 3 4
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
         size_t __n, FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern size_t fwrite_unlocked (const void *__restrict __ptr, size_t __size,
          size_t __n, FILE *__restrict __stream);







extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) __attribute__ ((__warn_unused_result__));




extern void rewind (FILE *__stream);
# 715 "/usr/include/stdio.h" 3 4
extern int fseeko (FILE *__stream, __off64_t __off, int __whence) __asm__ ("" "fseeko64")

                  ;
extern __off64_t ftello (FILE *__stream) __asm__ ("" "ftello64");
# 739 "/usr/include/stdio.h" 3 4
extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos) __asm__ ("" "fgetpos64")
                                          ;
extern int fsetpos (FILE *__stream, const fpos_t *__pos) __asm__ ("" "fsetpos64")
                                                          ;
# 757 "/usr/include/stdio.h" 3 4
extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));



extern void clearerr_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
extern int feof_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
extern int ferror_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));







extern void perror (const char *__s);





# 1 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 1 3 4
# 26 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3 4
extern int sys_nerr;
extern const char *const sys_errlist[];
# 782 "/usr/include/stdio.h" 2 3 4




extern int fileno (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));




extern int fileno_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
# 800 "/usr/include/stdio.h" 3 4
extern FILE *popen (const char *__command, const char *__modes) __attribute__ ((__warn_unused_result__));





extern int pclose (FILE *__stream);





extern char *ctermid (char *__s) __attribute__ ((__nothrow__ , __leaf__));
# 840 "/usr/include/stdio.h" 3 4
extern void flockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));



extern int ftrylockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));


extern void funlockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
# 858 "/usr/include/stdio.h" 3 4
extern int __uflow (FILE *);
extern int __overflow (FILE *, int);




# 1 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 1 3 4
# 46 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
getchar (void)
{
  return getc (stdin);
}




extern __inline __attribute__ ((__gnu_inline__)) int
fgetc_unlocked (FILE *__fp)
{
  return (__builtin_expect (((__fp)->_IO_read_ptr >= (__fp)->_IO_read_end), 0) ? __uflow (__fp) : *(unsigned char *) (__fp)->_IO_read_ptr++);
}





extern __inline __attribute__ ((__gnu_inline__)) int
getc_unlocked (FILE *__fp)
{
  return (__builtin_expect (((__fp)->_IO_read_ptr >= (__fp)->_IO_read_end), 0) ? __uflow (__fp) : *(unsigned char *) (__fp)->_IO_read_ptr++);
}


extern __inline __attribute__ ((__gnu_inline__)) int
getchar_unlocked (void)
{
  return (__builtin_expect (((stdin)->_IO_read_ptr >= (stdin)->_IO_read_end), 0) ? __uflow (stdin) : *(unsigned char *) (stdin)->_IO_read_ptr++);
}




extern __inline __attribute__ ((__gnu_inline__)) int
putchar (int __c)
{
  return putc (__c, stdout);
}




extern __inline __attribute__ ((__gnu_inline__)) int
fputc_unlocked (int __c, FILE *__stream)
{
  return (__builtin_expect (((__stream)->_IO_write_ptr >= (__stream)->_IO_write_end), 0) ? __overflow (__stream, (unsigned char) (__c)) : (unsigned char) (*(__stream)->_IO_write_ptr++ = (__c)));
}





extern __inline __attribute__ ((__gnu_inline__)) int
putc_unlocked (int __c, FILE *__stream)
{
  return (__builtin_expect (((__stream)->_IO_write_ptr >= (__stream)->_IO_write_end), 0) ? __overflow (__stream, (unsigned char) (__c)) : (unsigned char) (*(__stream)->_IO_write_ptr++ = (__c)));
}


extern __inline __attribute__ ((__gnu_inline__)) int
putchar_unlocked (int __c)
{
  return (__builtin_expect (((stdout)->_IO_write_ptr >= (stdout)->_IO_write_end), 0) ? __overflow (stdout, (unsigned char) (__c)) : (unsigned char) (*(stdout)->_IO_write_ptr++ = (__c)));
}
# 127 "/usr/include/x86_64-linux-gnu/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) feof_unlocked (FILE *__stream)
{
  return (((__stream)->_flags & 0x0010) != 0);
}


extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) ferror_unlocked (FILE *__stream)
{
  return (((__stream)->_flags & 0x0020) != 0);
}
# 865 "/usr/include/stdio.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 1 3 4
# 26 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3 4
extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
      const char *__restrict __format,
      __gnuc_va_list __ap) __attribute__ ((__nothrow__ , __leaf__));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) sprintf (char *__restrict __s, const char *__restrict __fmt, ...)
{
  return __builtin___sprintf_chk (__s, 2 - 1,
      __builtin_object_size (__s, 2 > 1), __fmt, __builtin_va_arg_pack ());
}






extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) vsprintf (char *__restrict __s, const char *__restrict __fmt, __gnuc_va_list __ap)

{
  return __builtin___vsprintf_chk (__s, 2 - 1,
       __builtin_object_size (__s, 2 > 1), __fmt, __ap);
}



extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
      size_t __slen, const char *__restrict __format,
      ...) __attribute__ ((__nothrow__ , __leaf__));
extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
       size_t __slen, const char *__restrict __format,
       __gnuc_va_list __ap) __attribute__ ((__nothrow__ , __leaf__));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) snprintf (char *__restrict __s, size_t __n, const char *__restrict __fmt, ...)

{
  return __builtin___snprintf_chk (__s, __n, 2 - 1,
       __builtin_object_size (__s, 2 > 1), __fmt, __builtin_va_arg_pack ());
}






extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) vsnprintf (char *__restrict __s, size_t __n, const char *__restrict __fmt, __gnuc_va_list __ap)

{
  return __builtin___vsnprintf_chk (__s, __n, 2 - 1,
        __builtin_object_size (__s, 2 > 1), __fmt, __ap);
}





extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
     const char *__restrict __format, ...);
extern int __printf_chk (int __flag, const char *__restrict __format, ...);
extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
      const char *__restrict __format, __gnuc_va_list __ap);
extern int __vprintf_chk (int __flag, const char *__restrict __format,
     __gnuc_va_list __ap);


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
{
  return __fprintf_chk (__stream, 2 - 1, __fmt,
   __builtin_va_arg_pack ());
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
printf (const char *__restrict __fmt, ...)
{
  return __printf_chk (2 - 1, __fmt, __builtin_va_arg_pack ());
}







extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
vprintf (const char *__restrict __fmt, __gnuc_va_list __ap)
{

  return __vfprintf_chk (stdout, 2 - 1, __fmt, __ap);



}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
vfprintf (FILE *__restrict __stream,
   const char *__restrict __fmt, __gnuc_va_list __ap)
{
  return __vfprintf_chk (__stream, 2 - 1, __fmt, __ap);
}


extern int __dprintf_chk (int __fd, int __flag, const char *__restrict __fmt,
     ...) __attribute__ ((__format__ (__printf__, 3, 4)));
extern int __vdprintf_chk (int __fd, int __flag,
      const char *__restrict __fmt, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 3, 0)));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
dprintf (int __fd, const char *__restrict __fmt, ...)
{
  return __dprintf_chk (__fd, 2 - 1, __fmt,
   __builtin_va_arg_pack ());
}





extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
vdprintf (int __fd, const char *__restrict __fmt, __gnuc_va_list __ap)
{
  return __vdprintf_chk (__fd, 2 - 1, __fmt, __ap);
}
# 243 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3 4
extern char *__fgets_chk (char *__restrict __s, size_t __size, int __n,
     FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern char *__fgets_alias (char *__restrict __s, int __n, FILE *__restrict __stream) __asm__ ("" "fgets")

                                        __attribute__ ((__warn_unused_result__));
extern char *__fgets_chk_warn (char *__restrict __s, size_t __size, int __n, FILE *__restrict __stream) __asm__ ("" "__fgets_chk")


     __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("fgets called with bigger size than length " "of destination buffer")))
                                 ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) char *
fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
{
  if (__builtin_object_size (__s, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__n) || __n <= 0)
 return __fgets_chk (__s, __builtin_object_size (__s, 2 > 1), __n, __stream);

      if ((size_t) __n > __builtin_object_size (__s, 2 > 1))
 return __fgets_chk_warn (__s, __builtin_object_size (__s, 2 > 1), __n, __stream);
    }
  return __fgets_alias (__s, __n, __stream);
}

extern size_t __fread_chk (void *__restrict __ptr, size_t __ptrlen,
      size_t __size, size_t __n,
      FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern size_t __fread_alias (void *__restrict __ptr, size_t __size, size_t __n, FILE *__restrict __stream) __asm__ ("" "fread")


            __attribute__ ((__warn_unused_result__));
extern size_t __fread_chk_warn (void *__restrict __ptr, size_t __ptrlen, size_t __size, size_t __n, FILE *__restrict __stream) __asm__ ("" "__fread_chk")




     __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("fread called with bigger size * nmemb than length " "of destination buffer")))
                                 ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) size_t
fread (void *__restrict __ptr, size_t __size, size_t __n,
       FILE *__restrict __stream)
{
  if (__builtin_object_size (__ptr, 0) != (size_t) -1)
    {
      if (!__builtin_constant_p (__size)
   || !__builtin_constant_p (__n)
   || (__size | __n) >= (((size_t) 1) << (8 * sizeof (size_t) / 2)))
 return __fread_chk (__ptr, __builtin_object_size (__ptr, 0), __size, __n, __stream);

      if (__size * __n > __builtin_object_size (__ptr, 0))
 return __fread_chk_warn (__ptr, __builtin_object_size (__ptr, 0), __size, __n, __stream);
    }
  return __fread_alias (__ptr, __size, __n, __stream);
}
# 329 "/usr/include/x86_64-linux-gnu/bits/stdio2.h" 3 4
extern size_t __fread_unlocked_chk (void *__restrict __ptr, size_t __ptrlen,
        size_t __size, size_t __n,
        FILE *__restrict __stream) __attribute__ ((__warn_unused_result__));
extern size_t __fread_unlocked_alias (void *__restrict __ptr, size_t __size, size_t __n, FILE *__restrict __stream) __asm__ ("" "fread_unlocked")


                     __attribute__ ((__warn_unused_result__));
extern size_t __fread_unlocked_chk_warn (void *__restrict __ptr, size_t __ptrlen, size_t __size, size_t __n, FILE *__restrict __stream) __asm__ ("" "__fread_unlocked_chk")




     __attribute__ ((__warn_unused_result__)) __attribute__((__warning__ ("fread_unlocked called with bigger size * nmemb than " "length of destination buffer")))
                                        ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) size_t
fread_unlocked (void *__restrict __ptr, size_t __size, size_t __n,
  FILE *__restrict __stream)
{
  if (__builtin_object_size (__ptr, 0) != (size_t) -1)
    {
      if (!__builtin_constant_p (__size)
   || !__builtin_constant_p (__n)
   || (__size | __n) >= (((size_t) 1) << (8 * sizeof (size_t) / 2)))
 return __fread_unlocked_chk (__ptr, __builtin_object_size (__ptr, 0), __size, __n,
         __stream);

      if (__size * __n > __builtin_object_size (__ptr, 0))
 return __fread_unlocked_chk_warn (__ptr, __builtin_object_size (__ptr, 0), __size, __n,
       __stream);
    }


  if (__builtin_constant_p (__size)
      && __builtin_constant_p (__n)
      && (__size | __n) < (((size_t) 1) << (8 * sizeof (size_t) / 2))
      && __size * __n <= 8)
    {
      size_t __cnt = __size * __n;
      char *__cptr = (char *) __ptr;
      if (__cnt == 0)
 return 0;

      for (; __cnt > 0; --__cnt)
 {
   int __c = getc_unlocked (__stream);
   if (__c == (-1))
     break;
   *__cptr++ = __c;
 }
      return (__cptr - (char *) __ptr) / __size;
    }

  return __fread_unlocked_alias (__ptr, __size, __n, __stream);
}
# 868 "/usr/include/stdio.h" 2 3 4






# 50 "/doner/libxml2/libxml2-4ea74a44/libxml2/libxml.h" 2
# 66 "/doner/libxml2/libxml2-4ea74a44/libxml2/libxml.h"

# 66 "/doner/libxml2/libxml2-4ea74a44/libxml2/libxml.h"
extern int __xmlRegisterCallbacks;



void __xmlIOErr(int domain, int code, const char *extra);
void __xmlLoaderErr(void *ctx, const char *msg, const char *filename);





void __htmlParseContent(void *ctx);





void __xmlGlobalInitMutexLock(void);
void __xmlGlobalInitMutexUnlock(void);
void __xmlGlobalInitMutexDestroy(void);





int __xmlRandom(void);


int xmlNop(void);






# 1 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 1
# 17 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
# 1 "./include/libxml/c14n.h" 1
# 27 "./include/libxml/c14n.h"
# 1 "./include/libxml/tree.h" 1
# 16 "./include/libxml/tree.h"
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/x86_64-linux-gnu/9/include/limits.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/limits.h" 1 3 4
# 194 "/usr/lib/gcc/x86_64-linux-gnu/9/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 26 "/usr/include/limits.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 27 "/usr/include/limits.h" 2 3 4
# 183 "/usr/include/limits.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 2 3 4
# 161 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/local_lim.h" 1 3 4
# 38 "/usr/include/x86_64-linux-gnu/bits/local_lim.h" 3 4
# 1 "/usr/include/linux/limits.h" 1 3 4
# 39 "/usr/include/x86_64-linux-gnu/bits/local_lim.h" 2 3 4
# 162 "/usr/include/x86_64-linux-gnu/bits/posix1_lim.h" 2 3 4
# 184 "/usr/include/limits.h" 2 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/posix2_lim.h" 1 3 4
# 188 "/usr/include/limits.h" 2 3 4
# 195 "/usr/lib/gcc/x86_64-linux-gnu/9/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/x86_64-linux-gnu/9/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/x86_64-linux-gnu/9/include/limits.h" 2 3 4
# 17 "./include/libxml/tree.h" 2

# 1 "./include/libxml/xmlstring.h" 1
# 14 "./include/libxml/xmlstring.h"
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h" 1 3 4
# 15 "./include/libxml/xmlstring.h" 2
# 28 "./include/libxml/xmlstring.h"
typedef unsigned char xmlChar;
# 40 "./include/libxml/xmlstring.h"
 xmlChar *
                xmlStrdup (const xmlChar *cur);
 xmlChar *
                xmlStrndup (const xmlChar *cur,
                                         int len);
 xmlChar *
                xmlCharStrndup (const char *cur,
                                         int len);
 xmlChar *
                xmlCharStrdup (const char *cur);
 xmlChar *
                xmlStrsub (const xmlChar *str,
                                         int start,
                                         int len);
 const xmlChar *
                xmlStrchr (const xmlChar *str,
                                         xmlChar val);
 const xmlChar *
                xmlStrstr (const xmlChar *str,
                                         const xmlChar *val);
 const xmlChar *
                xmlStrcasestr (const xmlChar *str,
                                         const xmlChar *val);
 int
                xmlStrcmp (const xmlChar *str1,
                                         const xmlChar *str2);
 int
                xmlStrncmp (const xmlChar *str1,
                                         const xmlChar *str2,
                                         int len);
 int
                xmlStrcasecmp (const xmlChar *str1,
                                         const xmlChar *str2);
 int
                xmlStrncasecmp (const xmlChar *str1,
                                         const xmlChar *str2,
                                         int len);
 int
                xmlStrEqual (const xmlChar *str1,
                                         const xmlChar *str2);
 int
                xmlStrQEqual (const xmlChar *pref,
                                         const xmlChar *name,
                                         const xmlChar *str);
 int
                xmlStrlen (const xmlChar *str);
 xmlChar *
                xmlStrcat (xmlChar *cur,
                                         const xmlChar *add);
 xmlChar *
                xmlStrncat (xmlChar *cur,
                                         const xmlChar *add,
                                         int len);
 xmlChar *
                xmlStrncatNew (const xmlChar *str1,
                                         const xmlChar *str2,
                                         int len);
 int
                xmlStrPrintf (xmlChar *buf,
                                         int len,
                                         const xmlChar *msg,
                                         ...);
 int
                xmlStrVPrintf (xmlChar *buf,
                                         int len,
                                         const xmlChar *msg,
                                         va_list ap);

 int
        xmlGetUTF8Char (const unsigned char *utf,
                                         int *len);
 int
        xmlCheckUTF8 (const unsigned char *utf);
 int
        xmlUTF8Strsize (const xmlChar *utf,
                                         int len);
 xmlChar *
        xmlUTF8Strndup (const xmlChar *utf,
                                         int len);
 const xmlChar *
        xmlUTF8Strpos (const xmlChar *utf,
                                         int pos);
 int
        xmlUTF8Strloc (const xmlChar *utf,
                                         const xmlChar *utfchar);
 xmlChar *
        xmlUTF8Strsub (const xmlChar *utf,
                                         int start,
                                         int len);
 int
        xmlUTF8Strlen (const xmlChar *utf);
 int
        xmlUTF8Size (const xmlChar *utf);
 int
        xmlUTF8Charcmp (const xmlChar *utf1,
                                         const xmlChar *utf2);
# 19 "./include/libxml/tree.h" 2
# 28 "./include/libxml/tree.h"
typedef struct _xmlParserInputBuffer xmlParserInputBuffer;
typedef xmlParserInputBuffer *xmlParserInputBufferPtr;

typedef struct _xmlOutputBuffer xmlOutputBuffer;
typedef xmlOutputBuffer *xmlOutputBufferPtr;


typedef struct _xmlParserInput xmlParserInput;
typedef xmlParserInput *xmlParserInputPtr;

typedef struct _xmlParserCtxt xmlParserCtxt;
typedef xmlParserCtxt *xmlParserCtxtPtr;

typedef struct _xmlSAXLocator xmlSAXLocator;
typedef xmlSAXLocator *xmlSAXLocatorPtr;

typedef struct _xmlSAXHandler xmlSAXHandler;
typedef xmlSAXHandler *xmlSAXHandlerPtr;


typedef struct _xmlEntity xmlEntity;
typedef xmlEntity *xmlEntityPtr;
# 74 "./include/libxml/tree.h"
typedef enum {
    XML_BUFFER_ALLOC_DOUBLEIT,
    XML_BUFFER_ALLOC_EXACT,
    XML_BUFFER_ALLOC_IMMUTABLE,
    XML_BUFFER_ALLOC_IO,
    XML_BUFFER_ALLOC_HYBRID
} xmlBufferAllocationScheme;







typedef struct _xmlBuffer xmlBuffer;
typedef xmlBuffer *xmlBufferPtr;
struct _xmlBuffer {
    xmlChar *content;
    unsigned int use;
    unsigned int size;
    xmlBufferAllocationScheme alloc;
    xmlChar *contentIO;
};







typedef struct _xmlBuf xmlBuf;
# 113 "./include/libxml/tree.h"
typedef xmlBuf *xmlBufPtr;





 xmlChar* xmlBufContent (const xmlBufPtr buf);
 xmlChar* xmlBufEnd (const xmlBufPtr buf);
 size_t xmlBufUse (const xmlBufPtr buf);
 size_t xmlBufShrink (xmlBufPtr buf, size_t len);
# 158 "./include/libxml/tree.h"
typedef enum {
    XML_ELEMENT_NODE= 1,
    XML_ATTRIBUTE_NODE= 2,
    XML_TEXT_NODE= 3,
    XML_CDATA_SECTION_NODE= 4,
    XML_ENTITY_REF_NODE= 5,
    XML_ENTITY_NODE= 6,
    XML_PI_NODE= 7,
    XML_COMMENT_NODE= 8,
    XML_DOCUMENT_NODE= 9,
    XML_DOCUMENT_TYPE_NODE= 10,
    XML_DOCUMENT_FRAG_NODE= 11,
    XML_NOTATION_NODE= 12,
    XML_HTML_DOCUMENT_NODE= 13,
    XML_DTD_NODE= 14,
    XML_ELEMENT_DECL= 15,
    XML_ATTRIBUTE_DECL= 16,
    XML_ENTITY_DECL= 17,
    XML_NAMESPACE_DECL= 18,
    XML_XINCLUDE_START= 19,
    XML_XINCLUDE_END= 20

   ,XML_DOCB_DOCUMENT_NODE= 21

} xmlElementType;
# 191 "./include/libxml/tree.h"
typedef struct _xmlNotation xmlNotation;
typedef xmlNotation *xmlNotationPtr;
struct _xmlNotation {
    const xmlChar *name;
    const xmlChar *PublicID;
    const xmlChar *SystemID;
};







typedef enum {
    XML_ATTRIBUTE_CDATA = 1,
    XML_ATTRIBUTE_ID,
    XML_ATTRIBUTE_IDREF ,
    XML_ATTRIBUTE_IDREFS,
    XML_ATTRIBUTE_ENTITY,
    XML_ATTRIBUTE_ENTITIES,
    XML_ATTRIBUTE_NMTOKEN,
    XML_ATTRIBUTE_NMTOKENS,
    XML_ATTRIBUTE_ENUMERATION,
    XML_ATTRIBUTE_NOTATION
} xmlAttributeType;







typedef enum {
    XML_ATTRIBUTE_NONE = 1,
    XML_ATTRIBUTE_REQUIRED,
    XML_ATTRIBUTE_IMPLIED,
    XML_ATTRIBUTE_FIXED
} xmlAttributeDefault;







typedef struct _xmlEnumeration xmlEnumeration;
typedef xmlEnumeration *xmlEnumerationPtr;
struct _xmlEnumeration {
    struct _xmlEnumeration *next;
    const xmlChar *name;
};







typedef struct _xmlAttribute xmlAttribute;
typedef xmlAttribute *xmlAttributePtr;
struct _xmlAttribute {
    void *_private;
    xmlElementType type;
    const xmlChar *name;
    struct _xmlNode *children;
    struct _xmlNode *last;
    struct _xmlDtd *parent;
    struct _xmlNode *next;
    struct _xmlNode *prev;
    struct _xmlDoc *doc;

    struct _xmlAttribute *nexth;
    xmlAttributeType atype;
    xmlAttributeDefault def;
    const xmlChar *defaultValue;
    xmlEnumerationPtr tree;
    const xmlChar *prefix;
    const xmlChar *elem;
};






typedef enum {
    XML_ELEMENT_CONTENT_PCDATA = 1,
    XML_ELEMENT_CONTENT_ELEMENT,
    XML_ELEMENT_CONTENT_SEQ,
    XML_ELEMENT_CONTENT_OR
} xmlElementContentType;






typedef enum {
    XML_ELEMENT_CONTENT_ONCE = 1,
    XML_ELEMENT_CONTENT_OPT,
    XML_ELEMENT_CONTENT_MULT,
    XML_ELEMENT_CONTENT_PLUS
} xmlElementContentOccur;
# 303 "./include/libxml/tree.h"
typedef struct _xmlElementContent xmlElementContent;
typedef xmlElementContent *xmlElementContentPtr;
struct _xmlElementContent {
    xmlElementContentType type;
    xmlElementContentOccur ocur;
    const xmlChar *name;
    struct _xmlElementContent *c1;
    struct _xmlElementContent *c2;
    struct _xmlElementContent *parent;
    const xmlChar *prefix;
};







typedef enum {
    XML_ELEMENT_TYPE_UNDEFINED = 0,
    XML_ELEMENT_TYPE_EMPTY = 1,
    XML_ELEMENT_TYPE_ANY,
    XML_ELEMENT_TYPE_MIXED,
    XML_ELEMENT_TYPE_ELEMENT
} xmlElementTypeVal;




# 1 "./include/libxml/xmlregexp.h" 1
# 28 "./include/libxml/xmlregexp.h"
typedef struct _xmlRegexp xmlRegexp;
typedef xmlRegexp *xmlRegexpPtr;






typedef struct _xmlRegExecCtxt xmlRegExecCtxt;
typedef xmlRegExecCtxt *xmlRegExecCtxtPtr;




# 1 "./include/libxml/tree.h" 1
# 43 "./include/libxml/xmlregexp.h" 2
# 1 "./include/libxml/dict.h" 1
# 14 "./include/libxml/dict.h"
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/limits.h" 1 3 4
# 15 "./include/libxml/dict.h" 2
# 25 "./include/libxml/dict.h"
typedef struct _xmlDict xmlDict;
typedef xmlDict *xmlDictPtr;




 int xmlInitializeDict(void);




 xmlDictPtr
   xmlDictCreate (void);
 size_t
   xmlDictSetLimit (xmlDictPtr dict,
                                         size_t limit);
 size_t
   xmlDictGetUsage (xmlDictPtr dict);
 xmlDictPtr
   xmlDictCreateSub(xmlDictPtr sub);
 int
   xmlDictReference(xmlDictPtr dict);
 void
   xmlDictFree (xmlDictPtr dict);




 const xmlChar *
   xmlDictLookup (xmlDictPtr dict,
                           const xmlChar *name,
                           int len);
 const xmlChar *
   xmlDictExists (xmlDictPtr dict,
                           const xmlChar *name,
                           int len);
 const xmlChar *
   xmlDictQLookup (xmlDictPtr dict,
                           const xmlChar *prefix,
                           const xmlChar *name);
 int
   xmlDictOwns (xmlDictPtr dict,
      const xmlChar *str);
 int
   xmlDictSize (xmlDictPtr dict);




 void
                        xmlDictCleanup (void);
# 44 "./include/libxml/xmlregexp.h" 2







 xmlRegexpPtr
      xmlRegexpCompile (const xmlChar *regexp);
 void xmlRegFreeRegexp(xmlRegexpPtr regexp);
 int
      xmlRegexpExec (xmlRegexpPtr comp,
      const xmlChar *value);
 void
      xmlRegexpPrint (FILE *output,
      xmlRegexpPtr regexp);
 int
      xmlRegexpIsDeterminist(xmlRegexpPtr comp);
# 72 "./include/libxml/xmlregexp.h"
typedef void (*xmlRegExecCallbacks) (xmlRegExecCtxtPtr exec,
                              const xmlChar *token,
         void *transdata,
         void *inputdata);




 xmlRegExecCtxtPtr
      xmlRegNewExecCtxt (xmlRegexpPtr comp,
      xmlRegExecCallbacks callback,
      void *data);
 void
      xmlRegFreeExecCtxt (xmlRegExecCtxtPtr exec);
 int
      xmlRegExecPushString(xmlRegExecCtxtPtr exec,
      const xmlChar *value,
      void *data);
 int
      xmlRegExecPushString2(xmlRegExecCtxtPtr exec,
      const xmlChar *value,
      const xmlChar *value2,
      void *data);

 int
      xmlRegExecNextValues(xmlRegExecCtxtPtr exec,
      int *nbval,
      int *nbneg,
      xmlChar **values,
      int *terminal);
 int
      xmlRegExecErrInfo (xmlRegExecCtxtPtr exec,
      const xmlChar **string,
      int *nbval,
      int *nbneg,
      xmlChar **values,
      int *terminal);







typedef struct _xmlExpCtxt xmlExpCtxt;
typedef xmlExpCtxt *xmlExpCtxtPtr;

 void
   xmlExpFreeCtxt (xmlExpCtxtPtr ctxt);
 xmlExpCtxtPtr
   xmlExpNewCtxt (int maxNodes,
      xmlDictPtr dict);

 int
   xmlExpCtxtNbNodes(xmlExpCtxtPtr ctxt);
 int
   xmlExpCtxtNbCons(xmlExpCtxtPtr ctxt);


typedef struct _xmlExpNode xmlExpNode;
typedef xmlExpNode *xmlExpNodePtr;

typedef enum {
    XML_EXP_EMPTY = 0,
    XML_EXP_FORBID = 1,
    XML_EXP_ATOM = 2,
    XML_EXP_SEQ = 3,
    XML_EXP_OR = 4,
    XML_EXP_COUNT = 5
} xmlExpNodeType;





extern xmlExpNodePtr forbiddenExp;
extern xmlExpNodePtr emptyExp;




 void
   xmlExpFree (xmlExpCtxtPtr ctxt,
      xmlExpNodePtr expr);
 void
   xmlExpRef (xmlExpNodePtr expr);




 xmlExpNodePtr
   xmlExpParse (xmlExpCtxtPtr ctxt,
      const char *expr);
 xmlExpNodePtr
   xmlExpNewAtom (xmlExpCtxtPtr ctxt,
      const xmlChar *name,
      int len);
 xmlExpNodePtr
   xmlExpNewOr (xmlExpCtxtPtr ctxt,
      xmlExpNodePtr left,
      xmlExpNodePtr right);
 xmlExpNodePtr
   xmlExpNewSeq (xmlExpCtxtPtr ctxt,
      xmlExpNodePtr left,
      xmlExpNodePtr right);
 xmlExpNodePtr
   xmlExpNewRange (xmlExpCtxtPtr ctxt,
      xmlExpNodePtr subset,
      int min,
      int max);



 int
   xmlExpIsNillable(xmlExpNodePtr expr);
 int
   xmlExpMaxToken (xmlExpNodePtr expr);
 int
   xmlExpGetLanguage(xmlExpCtxtPtr ctxt,
      xmlExpNodePtr expr,
      const xmlChar**langList,
      int len);
 int
   xmlExpGetStart (xmlExpCtxtPtr ctxt,
      xmlExpNodePtr expr,
      const xmlChar**tokList,
      int len);
 xmlExpNodePtr
   xmlExpStringDerive(xmlExpCtxtPtr ctxt,
      xmlExpNodePtr expr,
      const xmlChar *str,
      int len);
 xmlExpNodePtr
   xmlExpExpDerive (xmlExpCtxtPtr ctxt,
      xmlExpNodePtr expr,
      xmlExpNodePtr sub);
 int
   xmlExpSubsume (xmlExpCtxtPtr ctxt,
      xmlExpNodePtr expr,
      xmlExpNodePtr sub);
 void
   xmlExpDump (xmlBufferPtr buf,
      xmlExpNodePtr expr);
# 333 "./include/libxml/tree.h" 2
# 343 "./include/libxml/tree.h"
typedef struct _xmlElement xmlElement;
typedef xmlElement *xmlElementPtr;
struct _xmlElement {
    void *_private;
    xmlElementType type;
    const xmlChar *name;
    struct _xmlNode *children;
    struct _xmlNode *last;
    struct _xmlDtd *parent;
    struct _xmlNode *next;
    struct _xmlNode *prev;
    struct _xmlDoc *doc;

    xmlElementTypeVal etype;
    xmlElementContentPtr content;
    xmlAttributePtr attributes;
    const xmlChar *prefix;

    xmlRegexpPtr contModel;



};
# 374 "./include/libxml/tree.h"
typedef xmlElementType xmlNsType;
# 386 "./include/libxml/tree.h"
typedef struct _xmlNs xmlNs;
typedef xmlNs *xmlNsPtr;
struct _xmlNs {
    struct _xmlNs *next;
    xmlNsType type;
    const xmlChar *href;
    const xmlChar *prefix;
    void *_private;
    struct _xmlDoc *context;
};







typedef struct _xmlDtd xmlDtd;
typedef xmlDtd *xmlDtdPtr;
struct _xmlDtd {
    void *_private;
    xmlElementType type;
    const xmlChar *name;
    struct _xmlNode *children;
    struct _xmlNode *last;
    struct _xmlDoc *parent;
    struct _xmlNode *next;
    struct _xmlNode *prev;
    struct _xmlDoc *doc;


    void *notations;
    void *elements;
    void *attributes;
    void *entities;
    const xmlChar *ExternalID;
    const xmlChar *SystemID;
    void *pentities;
};






typedef struct _xmlAttr xmlAttr;
typedef xmlAttr *xmlAttrPtr;
struct _xmlAttr {
    void *_private;
    xmlElementType type;
    const xmlChar *name;
    struct _xmlNode *children;
    struct _xmlNode *last;
    struct _xmlNode *parent;
    struct _xmlAttr *next;
    struct _xmlAttr *prev;
    struct _xmlDoc *doc;
    xmlNs *ns;
    xmlAttributeType atype;
    void *psvi;
};







typedef struct _xmlID xmlID;
typedef xmlID *xmlIDPtr;
struct _xmlID {
    struct _xmlID *next;
    const xmlChar *value;
    xmlAttrPtr attr;
    const xmlChar *name;
    int lineno;
    struct _xmlDoc *doc;
};







typedef struct _xmlRef xmlRef;
typedef xmlRef *xmlRefPtr;
struct _xmlRef {
    struct _xmlRef *next;
    const xmlChar *value;
    xmlAttrPtr attr;
    const xmlChar *name;
    int lineno;
};






typedef struct _xmlNode xmlNode;
typedef xmlNode *xmlNodePtr;
struct _xmlNode {
    void *_private;
    xmlElementType type;
    const xmlChar *name;
    struct _xmlNode *children;
    struct _xmlNode *last;
    struct _xmlNode *parent;
    struct _xmlNode *next;
    struct _xmlNode *prev;
    struct _xmlDoc *doc;


    xmlNs *ns;
    xmlChar *content;
    struct _xmlAttr *properties;
    xmlNs *nsDef;
    void *psvi;
    unsigned short line;
    unsigned short extra;
};
# 531 "./include/libxml/tree.h"
typedef enum {
    XML_DOC_WELLFORMED = 1<<0,
    XML_DOC_NSVALID = 1<<1,
    XML_DOC_OLD10 = 1<<2,
    XML_DOC_DTDVALID = 1<<3,
    XML_DOC_XINCLUDE = 1<<4,
    XML_DOC_USERBUILT = 1<<5,

    XML_DOC_INTERNAL = 1<<6,
    XML_DOC_HTML = 1<<7
} xmlDocProperties;






typedef struct _xmlDoc xmlDoc;
typedef xmlDoc *xmlDocPtr;
struct _xmlDoc {
    void *_private;
    xmlElementType type;
    char *name;
    struct _xmlNode *children;
    struct _xmlNode *last;
    struct _xmlNode *parent;
    struct _xmlNode *next;
    struct _xmlNode *prev;
    struct _xmlDoc *doc;


    int compression;
    int standalone;





    struct _xmlDtd *intSubset;
    struct _xmlDtd *extSubset;
    struct _xmlNs *oldNs;
    const xmlChar *version;
    const xmlChar *encoding;
    void *ids;
    void *refs;
    const xmlChar *URL;
    int charset;

    struct _xmlDict *dict;
    void *psvi;
    int parseFlags;

    int properties;

};


typedef struct _xmlDOMWrapCtxt xmlDOMWrapCtxt;
typedef xmlDOMWrapCtxt *xmlDOMWrapCtxtPtr;
# 602 "./include/libxml/tree.h"
typedef xmlNsPtr (*xmlDOMWrapAcquireNsFunction) (xmlDOMWrapCtxtPtr ctxt,
       xmlNodePtr node,
       const xmlChar *nsName,
       const xmlChar *nsPrefix);






struct _xmlDOMWrapCtxt {
    void * _private;




    int type;



    void * namespaceMap;




    xmlDOMWrapAcquireNsFunction getNsForNodeFunc;
};
# 658 "./include/libxml/tree.h"
 int
  xmlValidateNCName (const xmlChar *value,
      int space);



 int
  xmlValidateQName (const xmlChar *value,
      int space);
 int
  xmlValidateName (const xmlChar *value,
      int space);
 int
  xmlValidateNMToken (const xmlChar *value,
      int space);


 xmlChar *
  xmlBuildQName (const xmlChar *ncname,
      const xmlChar *prefix,
      xmlChar *memory,
      int len);
 xmlChar *
  xmlSplitQName2 (const xmlChar *name,
      xmlChar **prefix);
 const xmlChar *
  xmlSplitQName3 (const xmlChar *name,
      int *len);





 void
  xmlSetBufferAllocationScheme(xmlBufferAllocationScheme scheme);
 xmlBufferAllocationScheme
  xmlGetBufferAllocationScheme(void);

 xmlBufferPtr
  xmlBufferCreate (void);
 xmlBufferPtr
  xmlBufferCreateSize (size_t size);
 xmlBufferPtr
  xmlBufferCreateStatic (void *mem,
      size_t size);
 int
  xmlBufferResize (xmlBufferPtr buf,
      unsigned int size);
 void
  xmlBufferFree (xmlBufferPtr buf);
 int
  xmlBufferDump (FILE *file,
      xmlBufferPtr buf);
 int
  xmlBufferAdd (xmlBufferPtr buf,
      const xmlChar *str,
      int len);
 int
  xmlBufferAddHead (xmlBufferPtr buf,
      const xmlChar *str,
      int len);
 int
  xmlBufferCat (xmlBufferPtr buf,
      const xmlChar *str);
 int
  xmlBufferCCat (xmlBufferPtr buf,
      const char *str);
 int
  xmlBufferShrink (xmlBufferPtr buf,
      unsigned int len);
 int
  xmlBufferGrow (xmlBufferPtr buf,
      unsigned int len);
 void
  xmlBufferEmpty (xmlBufferPtr buf);
 const xmlChar*
  xmlBufferContent (const xmlBufferPtr buf);
 xmlChar*
  xmlBufferDetach (xmlBufferPtr buf);
 void
  xmlBufferSetAllocationScheme(xmlBufferPtr buf,
      xmlBufferAllocationScheme scheme);
 int
  xmlBufferLength (const xmlBufferPtr buf);




 xmlDtdPtr
  xmlCreateIntSubset (xmlDocPtr doc,
      const xmlChar *name,
      const xmlChar *ExternalID,
      const xmlChar *SystemID);
 xmlDtdPtr
  xmlNewDtd (xmlDocPtr doc,
      const xmlChar *name,
      const xmlChar *ExternalID,
      const xmlChar *SystemID);
 xmlDtdPtr
  xmlGetIntSubset (xmlDocPtr doc);
 void
  xmlFreeDtd (xmlDtdPtr cur);

 xmlNsPtr
  xmlNewGlobalNs (xmlDocPtr doc,
      const xmlChar *href,
      const xmlChar *prefix);

 xmlNsPtr
  xmlNewNs (xmlNodePtr node,
      const xmlChar *href,
      const xmlChar *prefix);
 void
  xmlFreeNs (xmlNsPtr cur);
 void
  xmlFreeNsList (xmlNsPtr cur);
 xmlDocPtr
  xmlNewDoc (const xmlChar *version);
 void
  xmlFreeDoc (xmlDocPtr cur);
 xmlAttrPtr
  xmlNewDocProp (xmlDocPtr doc,
      const xmlChar *name,
      const xmlChar *value);


 xmlAttrPtr
  xmlNewProp (xmlNodePtr node,
      const xmlChar *name,
      const xmlChar *value);

 xmlAttrPtr
  xmlNewNsProp (xmlNodePtr node,
      xmlNsPtr ns,
      const xmlChar *name,
      const xmlChar *value);
 xmlAttrPtr
  xmlNewNsPropEatName (xmlNodePtr node,
      xmlNsPtr ns,
      xmlChar *name,
      const xmlChar *value);
 void
  xmlFreePropList (xmlAttrPtr cur);
 void
  xmlFreeProp (xmlAttrPtr cur);
 xmlAttrPtr
  xmlCopyProp (xmlNodePtr target,
      xmlAttrPtr cur);
 xmlAttrPtr
  xmlCopyPropList (xmlNodePtr target,
      xmlAttrPtr cur);

 xmlDtdPtr
  xmlCopyDtd (xmlDtdPtr dtd);


 xmlDocPtr
  xmlCopyDoc (xmlDocPtr doc,
      int recursive);




 xmlNodePtr
  xmlNewDocNode (xmlDocPtr doc,
      xmlNsPtr ns,
      const xmlChar *name,
      const xmlChar *content);
 xmlNodePtr
  xmlNewDocNodeEatName (xmlDocPtr doc,
      xmlNsPtr ns,
      xmlChar *name,
      const xmlChar *content);
 xmlNodePtr
  xmlNewNode (xmlNsPtr ns,
      const xmlChar *name);
 xmlNodePtr
  xmlNewNodeEatName (xmlNsPtr ns,
      xmlChar *name);

 xmlNodePtr
  xmlNewChild (xmlNodePtr parent,
      xmlNsPtr ns,
      const xmlChar *name,
      const xmlChar *content);

 xmlNodePtr
  xmlNewDocText (xmlDocPtr doc,
      const xmlChar *content);
 xmlNodePtr
  xmlNewText (const xmlChar *content);
 xmlNodePtr
  xmlNewDocPI (xmlDocPtr doc,
      const xmlChar *name,
      const xmlChar *content);
 xmlNodePtr
  xmlNewPI (const xmlChar *name,
      const xmlChar *content);
 xmlNodePtr
  xmlNewDocTextLen (xmlDocPtr doc,
      const xmlChar *content,
      int len);
 xmlNodePtr
  xmlNewTextLen (const xmlChar *content,
      int len);
 xmlNodePtr
  xmlNewDocComment (xmlDocPtr doc,
      const xmlChar *content);
 xmlNodePtr
  xmlNewComment (const xmlChar *content);
 xmlNodePtr
  xmlNewCDataBlock (xmlDocPtr doc,
      const xmlChar *content,
      int len);
 xmlNodePtr
  xmlNewCharRef (xmlDocPtr doc,
      const xmlChar *name);
 xmlNodePtr
  xmlNewReference (xmlDocPtr doc,
      const xmlChar *name);
 xmlNodePtr
  xmlCopyNode (const xmlNodePtr node,
      int recursive);
 xmlNodePtr
  xmlDocCopyNode (const xmlNodePtr node,
      xmlDocPtr doc,
      int recursive);
 xmlNodePtr
  xmlDocCopyNodeList (xmlDocPtr doc,
      const xmlNodePtr node);
 xmlNodePtr
  xmlCopyNodeList (const xmlNodePtr node);

 xmlNodePtr
  xmlNewTextChild (xmlNodePtr parent,
      xmlNsPtr ns,
      const xmlChar *name,
      const xmlChar *content);
 xmlNodePtr
  xmlNewDocRawNode (xmlDocPtr doc,
      xmlNsPtr ns,
      const xmlChar *name,
      const xmlChar *content);
 xmlNodePtr
  xmlNewDocFragment (xmlDocPtr doc);





 long
  xmlGetLineNo (xmlNodePtr node);

 xmlChar *
  xmlGetNodePath (xmlNodePtr node);

 xmlNodePtr
  xmlDocGetRootElement (xmlDocPtr doc);
 xmlNodePtr
  xmlGetLastChild (xmlNodePtr parent);
 int
  xmlNodeIsText (xmlNodePtr node);
 int
  xmlIsBlankNode (xmlNodePtr node);





 xmlNodePtr
  xmlDocSetRootElement (xmlDocPtr doc,
      xmlNodePtr root);


 void
  xmlNodeSetName (xmlNodePtr cur,
      const xmlChar *name);

 xmlNodePtr
  xmlAddChild (xmlNodePtr parent,
      xmlNodePtr cur);
 xmlNodePtr
  xmlAddChildList (xmlNodePtr parent,
      xmlNodePtr cur);

 xmlNodePtr
  xmlReplaceNode (xmlNodePtr old,
      xmlNodePtr cur);



 xmlNodePtr
  xmlAddPrevSibling (xmlNodePtr cur,
      xmlNodePtr elem);

 xmlNodePtr
  xmlAddSibling (xmlNodePtr cur,
      xmlNodePtr elem);
 xmlNodePtr
  xmlAddNextSibling (xmlNodePtr cur,
      xmlNodePtr elem);
 void
  xmlUnlinkNode (xmlNodePtr cur);
 xmlNodePtr
  xmlTextMerge (xmlNodePtr first,
      xmlNodePtr second);
 int
  xmlTextConcat (xmlNodePtr node,
      const xmlChar *content,
      int len);
 void
  xmlFreeNodeList (xmlNodePtr cur);
 void
  xmlFreeNode (xmlNodePtr cur);
 void
  xmlSetTreeDoc (xmlNodePtr tree,
      xmlDocPtr doc);
 void
  xmlSetListDoc (xmlNodePtr list,
      xmlDocPtr doc);



 xmlNsPtr
  xmlSearchNs (xmlDocPtr doc,
      xmlNodePtr node,
      const xmlChar *nameSpace);
 xmlNsPtr
  xmlSearchNsByHref (xmlDocPtr doc,
      xmlNodePtr node,
      const xmlChar *href);

 xmlNsPtr *
  xmlGetNsList (xmlDocPtr doc,
      xmlNodePtr node);


 void
  xmlSetNs (xmlNodePtr node,
      xmlNsPtr ns);
 xmlNsPtr
  xmlCopyNamespace (xmlNsPtr cur);
 xmlNsPtr
  xmlCopyNamespaceList (xmlNsPtr cur);





 xmlAttrPtr
  xmlSetProp (xmlNodePtr node,
      const xmlChar *name,
      const xmlChar *value);
 xmlAttrPtr
  xmlSetNsProp (xmlNodePtr node,
      xmlNsPtr ns,
      const xmlChar *name,
      const xmlChar *value);

 xmlChar *
  xmlGetNoNsProp (xmlNodePtr node,
      const xmlChar *name);
 xmlChar *
  xmlGetProp (xmlNodePtr node,
      const xmlChar *name);
 xmlAttrPtr
  xmlHasProp (xmlNodePtr node,
      const xmlChar *name);
 xmlAttrPtr
  xmlHasNsProp (xmlNodePtr node,
      const xmlChar *name,
      const xmlChar *nameSpace);
 xmlChar *
  xmlGetNsProp (xmlNodePtr node,
      const xmlChar *name,
      const xmlChar *nameSpace);
 xmlNodePtr
  xmlStringGetNodeList (xmlDocPtr doc,
      const xmlChar *value);
 xmlNodePtr
  xmlStringLenGetNodeList (xmlDocPtr doc,
      const xmlChar *value,
      int len);
 xmlChar *
  xmlNodeListGetString (xmlDocPtr doc,
      xmlNodePtr list,
      int inLine);

 xmlChar *
  xmlNodeListGetRawString (xmlDocPtr doc,
      xmlNodePtr list,
      int inLine);

 void
  xmlNodeSetContent (xmlNodePtr cur,
      const xmlChar *content);

 void
  xmlNodeSetContentLen (xmlNodePtr cur,
      const xmlChar *content,
      int len);

 void
  xmlNodeAddContent (xmlNodePtr cur,
      const xmlChar *content);
 void
  xmlNodeAddContentLen (xmlNodePtr cur,
      const xmlChar *content,
      int len);
 xmlChar *
  xmlNodeGetContent (xmlNodePtr cur);

 int
  xmlNodeBufGetContent (xmlBufferPtr buffer,
      xmlNodePtr cur);
 int
  xmlBufGetNodeContent (xmlBufPtr buf,
      xmlNodePtr cur);

 xmlChar *
  xmlNodeGetLang (xmlNodePtr cur);
 int
  xmlNodeGetSpacePreserve (xmlNodePtr cur);

 void
  xmlNodeSetLang (xmlNodePtr cur,
      const xmlChar *lang);
 void
  xmlNodeSetSpacePreserve (xmlNodePtr cur,
      int val);

 xmlChar *
  xmlNodeGetBase (xmlDocPtr doc,
      xmlNodePtr cur);

 void
  xmlNodeSetBase (xmlNodePtr cur,
      const xmlChar *uri);





 int
  xmlRemoveProp (xmlAttrPtr cur);

 int
  xmlUnsetNsProp (xmlNodePtr node,
      xmlNsPtr ns,
      const xmlChar *name);
 int
  xmlUnsetProp (xmlNodePtr node,
      const xmlChar *name);





 void
  xmlBufferWriteCHAR (xmlBufferPtr buf,
      const xmlChar *string);
 void
  xmlBufferWriteChar (xmlBufferPtr buf,
      const char *string);
 void
  xmlBufferWriteQuotedString(xmlBufferPtr buf,
      const xmlChar *string);


 void xmlAttrSerializeTxtContent(xmlBufferPtr buf,
      xmlDocPtr doc,
      xmlAttrPtr attr,
      const xmlChar *string);






 int
  xmlReconciliateNs (xmlDocPtr doc,
      xmlNodePtr tree);






 void
  xmlDocDumpFormatMemory (xmlDocPtr cur,
      xmlChar **mem,
      int *size,
      int format);
 void
  xmlDocDumpMemory (xmlDocPtr cur,
      xmlChar **mem,
      int *size);
 void
  xmlDocDumpMemoryEnc (xmlDocPtr out_doc,
      xmlChar **doc_txt_ptr,
      int * doc_txt_len,
      const char *txt_encoding);
 void
  xmlDocDumpFormatMemoryEnc(xmlDocPtr out_doc,
      xmlChar **doc_txt_ptr,
      int * doc_txt_len,
      const char *txt_encoding,
      int format);
 int
  xmlDocFormatDump (FILE *f,
      xmlDocPtr cur,
      int format);
 int
  xmlDocDump (FILE *f,
      xmlDocPtr cur);
 void
  xmlElemDump (FILE *f,
      xmlDocPtr doc,
      xmlNodePtr cur);
 int
  xmlSaveFile (const char *filename,
      xmlDocPtr cur);
 int
  xmlSaveFormatFile (const char *filename,
      xmlDocPtr cur,
      int format);
 size_t
  xmlBufNodeDump (xmlBufPtr buf,
      xmlDocPtr doc,
      xmlNodePtr cur,
      int level,
      int format);
 int
  xmlNodeDump (xmlBufferPtr buf,
      xmlDocPtr doc,
      xmlNodePtr cur,
      int level,
      int format);

 int
  xmlSaveFileTo (xmlOutputBufferPtr buf,
      xmlDocPtr cur,
      const char *encoding);
 int
  xmlSaveFormatFileTo (xmlOutputBufferPtr buf,
      xmlDocPtr cur,
             const char *encoding,
             int format);
 void
  xmlNodeDumpOutput (xmlOutputBufferPtr buf,
      xmlDocPtr doc,
      xmlNodePtr cur,
      int level,
      int format,
      const char *encoding);

 int
  xmlSaveFormatFileEnc (const char *filename,
      xmlDocPtr cur,
      const char *encoding,
      int format);

 int
  xmlSaveFileEnc (const char *filename,
      xmlDocPtr cur,
      const char *encoding);





 int
  xmlIsXHTML (const xmlChar *systemID,
      const xmlChar *publicID);




 int
  xmlGetDocCompressMode (xmlDocPtr doc);
 void
  xmlSetDocCompressMode (xmlDocPtr doc,
      int mode);
 int
  xmlGetCompressMode (void);
 void
  xmlSetCompressMode (int mode);




 xmlDOMWrapCtxtPtr
  xmlDOMWrapNewCtxt (void);
 void
  xmlDOMWrapFreeCtxt (xmlDOMWrapCtxtPtr ctxt);
 int
     xmlDOMWrapReconcileNamespaces(xmlDOMWrapCtxtPtr ctxt,
      xmlNodePtr elem,
      int options);
 int
     xmlDOMWrapAdoptNode (xmlDOMWrapCtxtPtr ctxt,
      xmlDocPtr sourceDoc,
      xmlNodePtr node,
      xmlDocPtr destDoc,
      xmlNodePtr destParent,
      int options);
 int
     xmlDOMWrapRemoveNode (xmlDOMWrapCtxtPtr ctxt,
      xmlDocPtr doc,
      xmlNodePtr node,
      int options);
 int
     xmlDOMWrapCloneNode (xmlDOMWrapCtxtPtr ctxt,
      xmlDocPtr sourceDoc,
      xmlNodePtr node,
      xmlNodePtr *clonedNode,
      xmlDocPtr destDoc,
      xmlNodePtr destParent,
      int deep,
      int options);






 unsigned long
            xmlChildElementCount (xmlNodePtr parent);
 xmlNodePtr
            xmlNextElementSibling (xmlNodePtr node);
 xmlNodePtr
            xmlFirstElementChild (xmlNodePtr parent);
 xmlNodePtr
            xmlLastElementChild (xmlNodePtr parent);
 xmlNodePtr
            xmlPreviousElementSibling (xmlNodePtr node);





# 1 "./include/libxml/xmlmemory.h" 1
# 57 "./include/libxml/xmlmemory.h"
typedef void ( *xmlFreeFunc)(void *mem);
# 66 "./include/libxml/xmlmemory.h"
typedef void *(__attribute__((alloc_size(1))) *xmlMallocFunc)(size_t size);
# 77 "./include/libxml/xmlmemory.h"
typedef void *( *xmlReallocFunc)(void *mem, size_t size);
# 87 "./include/libxml/xmlmemory.h"
typedef char *( *xmlStrdupFunc)(const char *str);
# 103 "./include/libxml/xmlmemory.h"
 int
 xmlMemSetup (xmlFreeFunc freeFunc,
    xmlMallocFunc mallocFunc,
    xmlReallocFunc reallocFunc,
    xmlStrdupFunc strdupFunc);
 int
 xmlMemGet (xmlFreeFunc *freeFunc,
    xmlMallocFunc *mallocFunc,
    xmlReallocFunc *reallocFunc,
    xmlStrdupFunc *strdupFunc);
 int
 xmlGcMemSetup (xmlFreeFunc freeFunc,
    xmlMallocFunc mallocFunc,
    xmlMallocFunc mallocAtomicFunc,
    xmlReallocFunc reallocFunc,
    xmlStrdupFunc strdupFunc);
 int
 xmlGcMemGet (xmlFreeFunc *freeFunc,
    xmlMallocFunc *mallocFunc,
    xmlMallocFunc *mallocAtomicFunc,
    xmlReallocFunc *reallocFunc,
    xmlStrdupFunc *strdupFunc);




 int
 xmlInitMemory (void);




 void
                xmlCleanupMemory (void);



 int
 xmlMemUsed (void);
 int
 xmlMemBlocks (void);
 void
 xmlMemDisplay (FILE *fp);
 void
 xmlMemDisplayLast(FILE *fp, long nbBytes);
 void
 xmlMemShow (FILE *fp, int nr);
 void
 xmlMemoryDump (void);
 void *
 xmlMemMalloc (size_t size) __attribute__((alloc_size(1)));
 void *
 xmlMemRealloc (void *ptr,size_t size);
 void
 xmlMemFree (void *ptr);
 char *
 xmlMemoryStrdup (const char *str);
 void *
 xmlMallocLoc (size_t size, const char *file, int line) __attribute__((alloc_size(1)));
 void *
 xmlReallocLoc (void *ptr, size_t size, const char *file, int line);
 void *
 xmlMallocAtomicLoc (size_t size, const char *file, int line) __attribute__((alloc_size(1)));
 char *
 xmlMemStrdupLoc (const char *str, const char *file, int line);
# 218 "./include/libxml/xmlmemory.h"
# 1 "./include/libxml/threads.h" 1
# 23 "./include/libxml/threads.h"
typedef struct _xmlMutex xmlMutex;
typedef xmlMutex *xmlMutexPtr;




typedef struct _xmlRMutex xmlRMutex;
typedef xmlRMutex *xmlRMutexPtr;




# 1 "./include/libxml/globals.h" 1
# 18 "./include/libxml/globals.h"
# 1 "./include/libxml/parser.h" 1
# 18 "./include/libxml/parser.h"
# 1 "./include/libxml/hash.h" 1
# 21 "./include/libxml/hash.h"
typedef struct _xmlHashTable xmlHashTable;
typedef xmlHashTable *xmlHashTablePtr;






# 1 "./include/libxml/parser.h" 1
# 30 "./include/libxml/hash.h" 2
# 69 "./include/libxml/hash.h"
typedef void (*xmlHashDeallocator)(void *payload, xmlChar *name);
# 79 "./include/libxml/hash.h"
typedef void *(*xmlHashCopier)(void *payload, xmlChar *name);
# 88 "./include/libxml/hash.h"
typedef void (*xmlHashScanner)(void *payload, void *data, xmlChar *name);
# 99 "./include/libxml/hash.h"
typedef void (*xmlHashScannerFull)(void *payload, void *data,
       const xmlChar *name, const xmlChar *name2,
       const xmlChar *name3);




 xmlHashTablePtr
   xmlHashCreate (int size);
 xmlHashTablePtr
   xmlHashCreateDict(int size,
      xmlDictPtr dict);
 void
   xmlHashFree (xmlHashTablePtr table,
      xmlHashDeallocator f);




 int
   xmlHashAddEntry (xmlHashTablePtr table,
                           const xmlChar *name,
                           void *userdata);
 int
   xmlHashUpdateEntry(xmlHashTablePtr table,
                           const xmlChar *name,
                           void *userdata,
      xmlHashDeallocator f);
 int
   xmlHashAddEntry2(xmlHashTablePtr table,
                           const xmlChar *name,
                           const xmlChar *name2,
                           void *userdata);
 int
   xmlHashUpdateEntry2(xmlHashTablePtr table,
                           const xmlChar *name,
                           const xmlChar *name2,
                           void *userdata,
      xmlHashDeallocator f);
 int
   xmlHashAddEntry3(xmlHashTablePtr table,
                           const xmlChar *name,
                           const xmlChar *name2,
                           const xmlChar *name3,
                           void *userdata);
 int
   xmlHashUpdateEntry3(xmlHashTablePtr table,
                           const xmlChar *name,
                           const xmlChar *name2,
                           const xmlChar *name3,
                           void *userdata,
      xmlHashDeallocator f);




 int
   xmlHashRemoveEntry(xmlHashTablePtr table, const xmlChar *name,
                           xmlHashDeallocator f);
 int
   xmlHashRemoveEntry2(xmlHashTablePtr table, const xmlChar *name,
                            const xmlChar *name2, xmlHashDeallocator f);
 int
   xmlHashRemoveEntry3(xmlHashTablePtr table, const xmlChar *name,
                            const xmlChar *name2, const xmlChar *name3,
                            xmlHashDeallocator f);




 void *
   xmlHashLookup (xmlHashTablePtr table,
      const xmlChar *name);
 void *
   xmlHashLookup2 (xmlHashTablePtr table,
      const xmlChar *name,
      const xmlChar *name2);
 void *
   xmlHashLookup3 (xmlHashTablePtr table,
      const xmlChar *name,
      const xmlChar *name2,
      const xmlChar *name3);
 void *
   xmlHashQLookup (xmlHashTablePtr table,
      const xmlChar *name,
      const xmlChar *prefix);
 void *
   xmlHashQLookup2 (xmlHashTablePtr table,
      const xmlChar *name,
      const xmlChar *prefix,
      const xmlChar *name2,
      const xmlChar *prefix2);
 void *
   xmlHashQLookup3 (xmlHashTablePtr table,
      const xmlChar *name,
      const xmlChar *prefix,
      const xmlChar *name2,
      const xmlChar *prefix2,
      const xmlChar *name3,
      const xmlChar *prefix3);




 xmlHashTablePtr
   xmlHashCopy (xmlHashTablePtr table,
      xmlHashCopier f);
 int
   xmlHashSize (xmlHashTablePtr table);
 void
   xmlHashScan (xmlHashTablePtr table,
      xmlHashScanner f,
      void *data);
 void
   xmlHashScan3 (xmlHashTablePtr table,
      const xmlChar *name,
      const xmlChar *name2,
      const xmlChar *name3,
      xmlHashScanner f,
      void *data);
 void
   xmlHashScanFull (xmlHashTablePtr table,
      xmlHashScannerFull f,
      void *data);
 void
   xmlHashScanFull3(xmlHashTablePtr table,
      const xmlChar *name,
      const xmlChar *name2,
      const xmlChar *name3,
      xmlHashScannerFull f,
      void *data);
# 19 "./include/libxml/parser.h" 2
# 1 "./include/libxml/valid.h" 1
# 15 "./include/libxml/valid.h"
# 1 "./include/libxml/xmlerror.h" 1
# 24 "./include/libxml/xmlerror.h"
typedef enum {
    XML_ERR_NONE = 0,
    XML_ERR_WARNING = 1,
    XML_ERR_ERROR = 2,
    XML_ERR_FATAL = 3
} xmlErrorLevel;






typedef enum {
    XML_FROM_NONE = 0,
    XML_FROM_PARSER,
    XML_FROM_TREE,
    XML_FROM_NAMESPACE,
    XML_FROM_DTD,
    XML_FROM_HTML,
    XML_FROM_MEMORY,
    XML_FROM_OUTPUT,
    XML_FROM_IO,
    XML_FROM_FTP,
    XML_FROM_HTTP,
    XML_FROM_XINCLUDE,
    XML_FROM_XPATH,
    XML_FROM_XPOINTER,
    XML_FROM_REGEXP,
    XML_FROM_DATATYPE,
    XML_FROM_SCHEMASP,
    XML_FROM_SCHEMASV,
    XML_FROM_RELAXNGP,
    XML_FROM_RELAXNGV,
    XML_FROM_CATALOG,
    XML_FROM_C14N,
    XML_FROM_XSLT,
    XML_FROM_VALID,
    XML_FROM_CHECK,
    XML_FROM_WRITER,
    XML_FROM_MODULE,
    XML_FROM_I18N,
    XML_FROM_SCHEMATRONV,
    XML_FROM_BUFFER,
    XML_FROM_URI
} xmlErrorDomain;







typedef struct _xmlError xmlError;
typedef xmlError *xmlErrorPtr;
struct _xmlError {
    int domain;
    int code;
    char *message;
    xmlErrorLevel level;
    char *file;
    int line;
    char *str1;
    char *str2;
    char *str3;
    int int1;
    int int2;
    void *ctxt;
    void *node;
};






typedef enum {
    XML_ERR_OK = 0,
    XML_ERR_INTERNAL_ERROR,
    XML_ERR_NO_MEMORY,
    XML_ERR_DOCUMENT_START,
    XML_ERR_DOCUMENT_EMPTY,
    XML_ERR_DOCUMENT_END,
    XML_ERR_INVALID_HEX_CHARREF,
    XML_ERR_INVALID_DEC_CHARREF,
    XML_ERR_INVALID_CHARREF,
    XML_ERR_INVALID_CHAR,
    XML_ERR_CHARREF_AT_EOF,
    XML_ERR_CHARREF_IN_PROLOG,
    XML_ERR_CHARREF_IN_EPILOG,
    XML_ERR_CHARREF_IN_DTD,
    XML_ERR_ENTITYREF_AT_EOF,
    XML_ERR_ENTITYREF_IN_PROLOG,
    XML_ERR_ENTITYREF_IN_EPILOG,
    XML_ERR_ENTITYREF_IN_DTD,
    XML_ERR_PEREF_AT_EOF,
    XML_ERR_PEREF_IN_PROLOG,
    XML_ERR_PEREF_IN_EPILOG,
    XML_ERR_PEREF_IN_INT_SUBSET,
    XML_ERR_ENTITYREF_NO_NAME,
    XML_ERR_ENTITYREF_SEMICOL_MISSING,
    XML_ERR_PEREF_NO_NAME,
    XML_ERR_PEREF_SEMICOL_MISSING,
    XML_ERR_UNDECLARED_ENTITY,
    XML_WAR_UNDECLARED_ENTITY,
    XML_ERR_UNPARSED_ENTITY,
    XML_ERR_ENTITY_IS_EXTERNAL,
    XML_ERR_ENTITY_IS_PARAMETER,
    XML_ERR_UNKNOWN_ENCODING,
    XML_ERR_UNSUPPORTED_ENCODING,
    XML_ERR_STRING_NOT_STARTED,
    XML_ERR_STRING_NOT_CLOSED,
    XML_ERR_NS_DECL_ERROR,
    XML_ERR_ENTITY_NOT_STARTED,
    XML_ERR_ENTITY_NOT_FINISHED,
    XML_ERR_LT_IN_ATTRIBUTE,
    XML_ERR_ATTRIBUTE_NOT_STARTED,
    XML_ERR_ATTRIBUTE_NOT_FINISHED,
    XML_ERR_ATTRIBUTE_WITHOUT_VALUE,
    XML_ERR_ATTRIBUTE_REDEFINED,
    XML_ERR_LITERAL_NOT_STARTED,
    XML_ERR_LITERAL_NOT_FINISHED,
    XML_ERR_COMMENT_NOT_FINISHED,
    XML_ERR_PI_NOT_STARTED,
    XML_ERR_PI_NOT_FINISHED,
    XML_ERR_NOTATION_NOT_STARTED,
    XML_ERR_NOTATION_NOT_FINISHED,
    XML_ERR_ATTLIST_NOT_STARTED,
    XML_ERR_ATTLIST_NOT_FINISHED,
    XML_ERR_MIXED_NOT_STARTED,
    XML_ERR_MIXED_NOT_FINISHED,
    XML_ERR_ELEMCONTENT_NOT_STARTED,
    XML_ERR_ELEMCONTENT_NOT_FINISHED,
    XML_ERR_XMLDECL_NOT_STARTED,
    XML_ERR_XMLDECL_NOT_FINISHED,
    XML_ERR_CONDSEC_NOT_STARTED,
    XML_ERR_CONDSEC_NOT_FINISHED,
    XML_ERR_EXT_SUBSET_NOT_FINISHED,
    XML_ERR_DOCTYPE_NOT_FINISHED,
    XML_ERR_MISPLACED_CDATA_END,
    XML_ERR_CDATA_NOT_FINISHED,
    XML_ERR_RESERVED_XML_NAME,
    XML_ERR_SPACE_REQUIRED,
    XML_ERR_SEPARATOR_REQUIRED,
    XML_ERR_NMTOKEN_REQUIRED,
    XML_ERR_NAME_REQUIRED,
    XML_ERR_PCDATA_REQUIRED,
    XML_ERR_URI_REQUIRED,
    XML_ERR_PUBID_REQUIRED,
    XML_ERR_LT_REQUIRED,
    XML_ERR_GT_REQUIRED,
    XML_ERR_LTSLASH_REQUIRED,
    XML_ERR_EQUAL_REQUIRED,
    XML_ERR_TAG_NAME_MISMATCH,
    XML_ERR_TAG_NOT_FINISHED,
    XML_ERR_STANDALONE_VALUE,
    XML_ERR_ENCODING_NAME,
    XML_ERR_HYPHEN_IN_COMMENT,
    XML_ERR_INVALID_ENCODING,
    XML_ERR_EXT_ENTITY_STANDALONE,
    XML_ERR_CONDSEC_INVALID,
    XML_ERR_VALUE_REQUIRED,
    XML_ERR_NOT_WELL_BALANCED,
    XML_ERR_EXTRA_CONTENT,
    XML_ERR_ENTITY_CHAR_ERROR,
    XML_ERR_ENTITY_PE_INTERNAL,
    XML_ERR_ENTITY_LOOP,
    XML_ERR_ENTITY_BOUNDARY,
    XML_ERR_INVALID_URI,
    XML_ERR_URI_FRAGMENT,
    XML_WAR_CATALOG_PI,
    XML_ERR_NO_DTD,
    XML_ERR_CONDSEC_INVALID_KEYWORD,
    XML_ERR_VERSION_MISSING,
    XML_WAR_UNKNOWN_VERSION,
    XML_WAR_LANG_VALUE,
    XML_WAR_NS_URI,
    XML_WAR_NS_URI_RELATIVE,
    XML_ERR_MISSING_ENCODING,
    XML_WAR_SPACE_VALUE,
    XML_ERR_NOT_STANDALONE,
    XML_ERR_ENTITY_PROCESSING,
    XML_ERR_NOTATION_PROCESSING,
    XML_WAR_NS_COLUMN,
    XML_WAR_ENTITY_REDEFINED,
    XML_ERR_UNKNOWN_VERSION,
    XML_ERR_VERSION_MISMATCH,
    XML_ERR_NAME_TOO_LONG,
    XML_NS_ERR_XML_NAMESPACE = 200,
    XML_NS_ERR_UNDEFINED_NAMESPACE,
    XML_NS_ERR_QNAME,
    XML_NS_ERR_ATTRIBUTE_REDEFINED,
    XML_NS_ERR_EMPTY,
    XML_NS_ERR_COLON,
    XML_DTD_ATTRIBUTE_DEFAULT = 500,
    XML_DTD_ATTRIBUTE_REDEFINED,
    XML_DTD_ATTRIBUTE_VALUE,
    XML_DTD_CONTENT_ERROR,
    XML_DTD_CONTENT_MODEL,
    XML_DTD_CONTENT_NOT_DETERMINIST,
    XML_DTD_DIFFERENT_PREFIX,
    XML_DTD_ELEM_DEFAULT_NAMESPACE,
    XML_DTD_ELEM_NAMESPACE,
    XML_DTD_ELEM_REDEFINED,
    XML_DTD_EMPTY_NOTATION,
    XML_DTD_ENTITY_TYPE,
    XML_DTD_ID_FIXED,
    XML_DTD_ID_REDEFINED,
    XML_DTD_ID_SUBSET,
    XML_DTD_INVALID_CHILD,
    XML_DTD_INVALID_DEFAULT,
    XML_DTD_LOAD_ERROR,
    XML_DTD_MISSING_ATTRIBUTE,
    XML_DTD_MIXED_CORRUPT,
    XML_DTD_MULTIPLE_ID,
    XML_DTD_NO_DOC,
    XML_DTD_NO_DTD,
    XML_DTD_NO_ELEM_NAME,
    XML_DTD_NO_PREFIX,
    XML_DTD_NO_ROOT,
    XML_DTD_NOTATION_REDEFINED,
    XML_DTD_NOTATION_VALUE,
    XML_DTD_NOT_EMPTY,
    XML_DTD_NOT_PCDATA,
    XML_DTD_NOT_STANDALONE,
    XML_DTD_ROOT_NAME,
    XML_DTD_STANDALONE_WHITE_SPACE,
    XML_DTD_UNKNOWN_ATTRIBUTE,
    XML_DTD_UNKNOWN_ELEM,
    XML_DTD_UNKNOWN_ENTITY,
    XML_DTD_UNKNOWN_ID,
    XML_DTD_UNKNOWN_NOTATION,
    XML_DTD_STANDALONE_DEFAULTED,
    XML_DTD_XMLID_VALUE,
    XML_DTD_XMLID_TYPE,
    XML_DTD_DUP_TOKEN,
    XML_HTML_STRUCURE_ERROR = 800,
    XML_HTML_UNKNOWN_TAG,
    XML_RNGP_ANYNAME_ATTR_ANCESTOR = 1000,
    XML_RNGP_ATTR_CONFLICT,
    XML_RNGP_ATTRIBUTE_CHILDREN,
    XML_RNGP_ATTRIBUTE_CONTENT,
    XML_RNGP_ATTRIBUTE_EMPTY,
    XML_RNGP_ATTRIBUTE_NOOP,
    XML_RNGP_CHOICE_CONTENT,
    XML_RNGP_CHOICE_EMPTY,
    XML_RNGP_CREATE_FAILURE,
    XML_RNGP_DATA_CONTENT,
    XML_RNGP_DEF_CHOICE_AND_INTERLEAVE,
    XML_RNGP_DEFINE_CREATE_FAILED,
    XML_RNGP_DEFINE_EMPTY,
    XML_RNGP_DEFINE_MISSING,
    XML_RNGP_DEFINE_NAME_MISSING,
    XML_RNGP_ELEM_CONTENT_EMPTY,
    XML_RNGP_ELEM_CONTENT_ERROR,
    XML_RNGP_ELEMENT_EMPTY,
    XML_RNGP_ELEMENT_CONTENT,
    XML_RNGP_ELEMENT_NAME,
    XML_RNGP_ELEMENT_NO_CONTENT,
    XML_RNGP_ELEM_TEXT_CONFLICT,
    XML_RNGP_EMPTY,
    XML_RNGP_EMPTY_CONSTRUCT,
    XML_RNGP_EMPTY_CONTENT,
    XML_RNGP_EMPTY_NOT_EMPTY,
    XML_RNGP_ERROR_TYPE_LIB,
    XML_RNGP_EXCEPT_EMPTY,
    XML_RNGP_EXCEPT_MISSING,
    XML_RNGP_EXCEPT_MULTIPLE,
    XML_RNGP_EXCEPT_NO_CONTENT,
    XML_RNGP_EXTERNALREF_EMTPY,
    XML_RNGP_EXTERNAL_REF_FAILURE,
    XML_RNGP_EXTERNALREF_RECURSE,
    XML_RNGP_FORBIDDEN_ATTRIBUTE,
    XML_RNGP_FOREIGN_ELEMENT,
    XML_RNGP_GRAMMAR_CONTENT,
    XML_RNGP_GRAMMAR_EMPTY,
    XML_RNGP_GRAMMAR_MISSING,
    XML_RNGP_GRAMMAR_NO_START,
    XML_RNGP_GROUP_ATTR_CONFLICT,
    XML_RNGP_HREF_ERROR,
    XML_RNGP_INCLUDE_EMPTY,
    XML_RNGP_INCLUDE_FAILURE,
    XML_RNGP_INCLUDE_RECURSE,
    XML_RNGP_INTERLEAVE_ADD,
    XML_RNGP_INTERLEAVE_CREATE_FAILED,
    XML_RNGP_INTERLEAVE_EMPTY,
    XML_RNGP_INTERLEAVE_NO_CONTENT,
    XML_RNGP_INVALID_DEFINE_NAME,
    XML_RNGP_INVALID_URI,
    XML_RNGP_INVALID_VALUE,
    XML_RNGP_MISSING_HREF,
    XML_RNGP_NAME_MISSING,
    XML_RNGP_NEED_COMBINE,
    XML_RNGP_NOTALLOWED_NOT_EMPTY,
    XML_RNGP_NSNAME_ATTR_ANCESTOR,
    XML_RNGP_NSNAME_NO_NS,
    XML_RNGP_PARAM_FORBIDDEN,
    XML_RNGP_PARAM_NAME_MISSING,
    XML_RNGP_PARENTREF_CREATE_FAILED,
    XML_RNGP_PARENTREF_NAME_INVALID,
    XML_RNGP_PARENTREF_NO_NAME,
    XML_RNGP_PARENTREF_NO_PARENT,
    XML_RNGP_PARENTREF_NOT_EMPTY,
    XML_RNGP_PARSE_ERROR,
    XML_RNGP_PAT_ANYNAME_EXCEPT_ANYNAME,
    XML_RNGP_PAT_ATTR_ATTR,
    XML_RNGP_PAT_ATTR_ELEM,
    XML_RNGP_PAT_DATA_EXCEPT_ATTR,
    XML_RNGP_PAT_DATA_EXCEPT_ELEM,
    XML_RNGP_PAT_DATA_EXCEPT_EMPTY,
    XML_RNGP_PAT_DATA_EXCEPT_GROUP,
    XML_RNGP_PAT_DATA_EXCEPT_INTERLEAVE,
    XML_RNGP_PAT_DATA_EXCEPT_LIST,
    XML_RNGP_PAT_DATA_EXCEPT_ONEMORE,
    XML_RNGP_PAT_DATA_EXCEPT_REF,
    XML_RNGP_PAT_DATA_EXCEPT_TEXT,
    XML_RNGP_PAT_LIST_ATTR,
    XML_RNGP_PAT_LIST_ELEM,
    XML_RNGP_PAT_LIST_INTERLEAVE,
    XML_RNGP_PAT_LIST_LIST,
    XML_RNGP_PAT_LIST_REF,
    XML_RNGP_PAT_LIST_TEXT,
    XML_RNGP_PAT_NSNAME_EXCEPT_ANYNAME,
    XML_RNGP_PAT_NSNAME_EXCEPT_NSNAME,
    XML_RNGP_PAT_ONEMORE_GROUP_ATTR,
    XML_RNGP_PAT_ONEMORE_INTERLEAVE_ATTR,
    XML_RNGP_PAT_START_ATTR,
    XML_RNGP_PAT_START_DATA,
    XML_RNGP_PAT_START_EMPTY,
    XML_RNGP_PAT_START_GROUP,
    XML_RNGP_PAT_START_INTERLEAVE,
    XML_RNGP_PAT_START_LIST,
    XML_RNGP_PAT_START_ONEMORE,
    XML_RNGP_PAT_START_TEXT,
    XML_RNGP_PAT_START_VALUE,
    XML_RNGP_PREFIX_UNDEFINED,
    XML_RNGP_REF_CREATE_FAILED,
    XML_RNGP_REF_CYCLE,
    XML_RNGP_REF_NAME_INVALID,
    XML_RNGP_REF_NO_DEF,
    XML_RNGP_REF_NO_NAME,
    XML_RNGP_REF_NOT_EMPTY,
    XML_RNGP_START_CHOICE_AND_INTERLEAVE,
    XML_RNGP_START_CONTENT,
    XML_RNGP_START_EMPTY,
    XML_RNGP_START_MISSING,
    XML_RNGP_TEXT_EXPECTED,
    XML_RNGP_TEXT_HAS_CHILD,
    XML_RNGP_TYPE_MISSING,
    XML_RNGP_TYPE_NOT_FOUND,
    XML_RNGP_TYPE_VALUE,
    XML_RNGP_UNKNOWN_ATTRIBUTE,
    XML_RNGP_UNKNOWN_COMBINE,
    XML_RNGP_UNKNOWN_CONSTRUCT,
    XML_RNGP_UNKNOWN_TYPE_LIB,
    XML_RNGP_URI_FRAGMENT,
    XML_RNGP_URI_NOT_ABSOLUTE,
    XML_RNGP_VALUE_EMPTY,
    XML_RNGP_VALUE_NO_CONTENT,
    XML_RNGP_XMLNS_NAME,
    XML_RNGP_XML_NS,
    XML_XPATH_EXPRESSION_OK = 1200,
    XML_XPATH_NUMBER_ERROR,
    XML_XPATH_UNFINISHED_LITERAL_ERROR,
    XML_XPATH_START_LITERAL_ERROR,
    XML_XPATH_VARIABLE_REF_ERROR,
    XML_XPATH_UNDEF_VARIABLE_ERROR,
    XML_XPATH_INVALID_PREDICATE_ERROR,
    XML_XPATH_EXPR_ERROR,
    XML_XPATH_UNCLOSED_ERROR,
    XML_XPATH_UNKNOWN_FUNC_ERROR,
    XML_XPATH_INVALID_OPERAND,
    XML_XPATH_INVALID_TYPE,
    XML_XPATH_INVALID_ARITY,
    XML_XPATH_INVALID_CTXT_SIZE,
    XML_XPATH_INVALID_CTXT_POSITION,
    XML_XPATH_MEMORY_ERROR,
    XML_XPTR_SYNTAX_ERROR,
    XML_XPTR_RESOURCE_ERROR,
    XML_XPTR_SUB_RESOURCE_ERROR,
    XML_XPATH_UNDEF_PREFIX_ERROR,
    XML_XPATH_ENCODING_ERROR,
    XML_XPATH_INVALID_CHAR_ERROR,
    XML_TREE_INVALID_HEX = 1300,
    XML_TREE_INVALID_DEC,
    XML_TREE_UNTERMINATED_ENTITY,
    XML_TREE_NOT_UTF8,
    XML_SAVE_NOT_UTF8 = 1400,
    XML_SAVE_CHAR_INVALID,
    XML_SAVE_NO_DOCTYPE,
    XML_SAVE_UNKNOWN_ENCODING,
    XML_REGEXP_COMPILE_ERROR = 1450,
    XML_IO_UNKNOWN = 1500,
    XML_IO_EACCES,
    XML_IO_EAGAIN,
    XML_IO_EBADF,
    XML_IO_EBADMSG,
    XML_IO_EBUSY,
    XML_IO_ECANCELED,
    XML_IO_ECHILD,
    XML_IO_EDEADLK,
    XML_IO_EDOM,
    XML_IO_EEXIST,
    XML_IO_EFAULT,
    XML_IO_EFBIG,
    XML_IO_EINPROGRESS,
    XML_IO_EINTR,
    XML_IO_EINVAL,
    XML_IO_EIO,
    XML_IO_EISDIR,
    XML_IO_EMFILE,
    XML_IO_EMLINK,
    XML_IO_EMSGSIZE,
    XML_IO_ENAMETOOLONG,
    XML_IO_ENFILE,
    XML_IO_ENODEV,
    XML_IO_ENOENT,
    XML_IO_ENOEXEC,
    XML_IO_ENOLCK,
    XML_IO_ENOMEM,
    XML_IO_ENOSPC,
    XML_IO_ENOSYS,
    XML_IO_ENOTDIR,
    XML_IO_ENOTEMPTY,
    XML_IO_ENOTSUP,
    XML_IO_ENOTTY,
    XML_IO_ENXIO,
    XML_IO_EPERM,
    XML_IO_EPIPE,
    XML_IO_ERANGE,
    XML_IO_EROFS,
    XML_IO_ESPIPE,
    XML_IO_ESRCH,
    XML_IO_ETIMEDOUT,
    XML_IO_EXDEV,
    XML_IO_NETWORK_ATTEMPT,
    XML_IO_ENCODER,
    XML_IO_FLUSH,
    XML_IO_WRITE,
    XML_IO_NO_INPUT,
    XML_IO_BUFFER_FULL,
    XML_IO_LOAD_ERROR,
    XML_IO_ENOTSOCK,
    XML_IO_EISCONN,
    XML_IO_ECONNREFUSED,
    XML_IO_ENETUNREACH,
    XML_IO_EADDRINUSE,
    XML_IO_EALREADY,
    XML_IO_EAFNOSUPPORT,
    XML_XINCLUDE_RECURSION=1600,
    XML_XINCLUDE_PARSE_VALUE,
    XML_XINCLUDE_ENTITY_DEF_MISMATCH,
    XML_XINCLUDE_NO_HREF,
    XML_XINCLUDE_NO_FALLBACK,
    XML_XINCLUDE_HREF_URI,
    XML_XINCLUDE_TEXT_FRAGMENT,
    XML_XINCLUDE_TEXT_DOCUMENT,
    XML_XINCLUDE_INVALID_CHAR,
    XML_XINCLUDE_BUILD_FAILED,
    XML_XINCLUDE_UNKNOWN_ENCODING,
    XML_XINCLUDE_MULTIPLE_ROOT,
    XML_XINCLUDE_XPTR_FAILED,
    XML_XINCLUDE_XPTR_RESULT,
    XML_XINCLUDE_INCLUDE_IN_INCLUDE,
    XML_XINCLUDE_FALLBACKS_IN_INCLUDE,
    XML_XINCLUDE_FALLBACK_NOT_IN_INCLUDE,
    XML_XINCLUDE_DEPRECATED_NS,
    XML_XINCLUDE_FRAGMENT_ID,
    XML_CATALOG_MISSING_ATTR = 1650,
    XML_CATALOG_ENTRY_BROKEN,
    XML_CATALOG_PREFER_VALUE,
    XML_CATALOG_NOT_CATALOG,
    XML_CATALOG_RECURSION,
    XML_SCHEMAP_PREFIX_UNDEFINED = 1700,
    XML_SCHEMAP_ATTRFORMDEFAULT_VALUE,
    XML_SCHEMAP_ATTRGRP_NONAME_NOREF,
    XML_SCHEMAP_ATTR_NONAME_NOREF,
    XML_SCHEMAP_COMPLEXTYPE_NONAME_NOREF,
    XML_SCHEMAP_ELEMFORMDEFAULT_VALUE,
    XML_SCHEMAP_ELEM_NONAME_NOREF,
    XML_SCHEMAP_EXTENSION_NO_BASE,
    XML_SCHEMAP_FACET_NO_VALUE,
    XML_SCHEMAP_FAILED_BUILD_IMPORT,
    XML_SCHEMAP_GROUP_NONAME_NOREF,
    XML_SCHEMAP_IMPORT_NAMESPACE_NOT_URI,
    XML_SCHEMAP_IMPORT_REDEFINE_NSNAME,
    XML_SCHEMAP_IMPORT_SCHEMA_NOT_URI,
    XML_SCHEMAP_INVALID_BOOLEAN,
    XML_SCHEMAP_INVALID_ENUM,
    XML_SCHEMAP_INVALID_FACET,
    XML_SCHEMAP_INVALID_FACET_VALUE,
    XML_SCHEMAP_INVALID_MAXOCCURS,
    XML_SCHEMAP_INVALID_MINOCCURS,
    XML_SCHEMAP_INVALID_REF_AND_SUBTYPE,
    XML_SCHEMAP_INVALID_WHITE_SPACE,
    XML_SCHEMAP_NOATTR_NOREF,
    XML_SCHEMAP_NOTATION_NO_NAME,
    XML_SCHEMAP_NOTYPE_NOREF,
    XML_SCHEMAP_REF_AND_SUBTYPE,
    XML_SCHEMAP_RESTRICTION_NONAME_NOREF,
    XML_SCHEMAP_SIMPLETYPE_NONAME,
    XML_SCHEMAP_TYPE_AND_SUBTYPE,
    XML_SCHEMAP_UNKNOWN_ALL_CHILD,
    XML_SCHEMAP_UNKNOWN_ANYATTRIBUTE_CHILD,
    XML_SCHEMAP_UNKNOWN_ATTR_CHILD,
    XML_SCHEMAP_UNKNOWN_ATTRGRP_CHILD,
    XML_SCHEMAP_UNKNOWN_ATTRIBUTE_GROUP,
    XML_SCHEMAP_UNKNOWN_BASE_TYPE,
    XML_SCHEMAP_UNKNOWN_CHOICE_CHILD,
    XML_SCHEMAP_UNKNOWN_COMPLEXCONTENT_CHILD,
    XML_SCHEMAP_UNKNOWN_COMPLEXTYPE_CHILD,
    XML_SCHEMAP_UNKNOWN_ELEM_CHILD,
    XML_SCHEMAP_UNKNOWN_EXTENSION_CHILD,
    XML_SCHEMAP_UNKNOWN_FACET_CHILD,
    XML_SCHEMAP_UNKNOWN_FACET_TYPE,
    XML_SCHEMAP_UNKNOWN_GROUP_CHILD,
    XML_SCHEMAP_UNKNOWN_IMPORT_CHILD,
    XML_SCHEMAP_UNKNOWN_LIST_CHILD,
    XML_SCHEMAP_UNKNOWN_NOTATION_CHILD,
    XML_SCHEMAP_UNKNOWN_PROCESSCONTENT_CHILD,
    XML_SCHEMAP_UNKNOWN_REF,
    XML_SCHEMAP_UNKNOWN_RESTRICTION_CHILD,
    XML_SCHEMAP_UNKNOWN_SCHEMAS_CHILD,
    XML_SCHEMAP_UNKNOWN_SEQUENCE_CHILD,
    XML_SCHEMAP_UNKNOWN_SIMPLECONTENT_CHILD,
    XML_SCHEMAP_UNKNOWN_SIMPLETYPE_CHILD,
    XML_SCHEMAP_UNKNOWN_TYPE,
    XML_SCHEMAP_UNKNOWN_UNION_CHILD,
    XML_SCHEMAP_ELEM_DEFAULT_FIXED,
    XML_SCHEMAP_REGEXP_INVALID,
    XML_SCHEMAP_FAILED_LOAD,
    XML_SCHEMAP_NOTHING_TO_PARSE,
    XML_SCHEMAP_NOROOT,
    XML_SCHEMAP_REDEFINED_GROUP,
    XML_SCHEMAP_REDEFINED_TYPE,
    XML_SCHEMAP_REDEFINED_ELEMENT,
    XML_SCHEMAP_REDEFINED_ATTRGROUP,
    XML_SCHEMAP_REDEFINED_ATTR,
    XML_SCHEMAP_REDEFINED_NOTATION,
    XML_SCHEMAP_FAILED_PARSE,
    XML_SCHEMAP_UNKNOWN_PREFIX,
    XML_SCHEMAP_DEF_AND_PREFIX,
    XML_SCHEMAP_UNKNOWN_INCLUDE_CHILD,
    XML_SCHEMAP_INCLUDE_SCHEMA_NOT_URI,
    XML_SCHEMAP_INCLUDE_SCHEMA_NO_URI,
    XML_SCHEMAP_NOT_SCHEMA,
    XML_SCHEMAP_UNKNOWN_MEMBER_TYPE,
    XML_SCHEMAP_INVALID_ATTR_USE,
    XML_SCHEMAP_RECURSIVE,
    XML_SCHEMAP_SUPERNUMEROUS_LIST_ITEM_TYPE,
    XML_SCHEMAP_INVALID_ATTR_COMBINATION,
    XML_SCHEMAP_INVALID_ATTR_INLINE_COMBINATION,
    XML_SCHEMAP_MISSING_SIMPLETYPE_CHILD,
    XML_SCHEMAP_INVALID_ATTR_NAME,
    XML_SCHEMAP_REF_AND_CONTENT,
    XML_SCHEMAP_CT_PROPS_CORRECT_1,
    XML_SCHEMAP_CT_PROPS_CORRECT_2,
    XML_SCHEMAP_CT_PROPS_CORRECT_3,
    XML_SCHEMAP_CT_PROPS_CORRECT_4,
    XML_SCHEMAP_CT_PROPS_CORRECT_5,
    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_1,
    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_1,
    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_2,
    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_2,
    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_3,
    XML_SCHEMAP_WILDCARD_INVALID_NS_MEMBER,
    XML_SCHEMAP_INTERSECTION_NOT_EXPRESSIBLE,
    XML_SCHEMAP_UNION_NOT_EXPRESSIBLE,
    XML_SCHEMAP_SRC_IMPORT_3_1,
    XML_SCHEMAP_SRC_IMPORT_3_2,
    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_1,
    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_2,
    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_3,
    XML_SCHEMAP_COS_CT_EXTENDS_1_3,
    XML_SCHEMAV_NOROOT = 1801,
    XML_SCHEMAV_UNDECLAREDELEM,
    XML_SCHEMAV_NOTTOPLEVEL,
    XML_SCHEMAV_MISSING,
    XML_SCHEMAV_WRONGELEM,
    XML_SCHEMAV_NOTYPE,
    XML_SCHEMAV_NOROLLBACK,
    XML_SCHEMAV_ISABSTRACT,
    XML_SCHEMAV_NOTEMPTY,
    XML_SCHEMAV_ELEMCONT,
    XML_SCHEMAV_HAVEDEFAULT,
    XML_SCHEMAV_NOTNILLABLE,
    XML_SCHEMAV_EXTRACONTENT,
    XML_SCHEMAV_INVALIDATTR,
    XML_SCHEMAV_INVALIDELEM,
    XML_SCHEMAV_NOTDETERMINIST,
    XML_SCHEMAV_CONSTRUCT,
    XML_SCHEMAV_INTERNAL,
    XML_SCHEMAV_NOTSIMPLE,
    XML_SCHEMAV_ATTRUNKNOWN,
    XML_SCHEMAV_ATTRINVALID,
    XML_SCHEMAV_VALUE,
    XML_SCHEMAV_FACET,
    XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_1,
    XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_2,
    XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_3,
    XML_SCHEMAV_CVC_TYPE_3_1_1,
    XML_SCHEMAV_CVC_TYPE_3_1_2,
    XML_SCHEMAV_CVC_FACET_VALID,
    XML_SCHEMAV_CVC_LENGTH_VALID,
    XML_SCHEMAV_CVC_MINLENGTH_VALID,
    XML_SCHEMAV_CVC_MAXLENGTH_VALID,
    XML_SCHEMAV_CVC_MININCLUSIVE_VALID,
    XML_SCHEMAV_CVC_MAXINCLUSIVE_VALID,
    XML_SCHEMAV_CVC_MINEXCLUSIVE_VALID,
    XML_SCHEMAV_CVC_MAXEXCLUSIVE_VALID,
    XML_SCHEMAV_CVC_TOTALDIGITS_VALID,
    XML_SCHEMAV_CVC_FRACTIONDIGITS_VALID,
    XML_SCHEMAV_CVC_PATTERN_VALID,
    XML_SCHEMAV_CVC_ENUMERATION_VALID,
    XML_SCHEMAV_CVC_COMPLEX_TYPE_2_1,
    XML_SCHEMAV_CVC_COMPLEX_TYPE_2_2,
    XML_SCHEMAV_CVC_COMPLEX_TYPE_2_3,
    XML_SCHEMAV_CVC_COMPLEX_TYPE_2_4,
    XML_SCHEMAV_CVC_ELT_1,
    XML_SCHEMAV_CVC_ELT_2,
    XML_SCHEMAV_CVC_ELT_3_1,
    XML_SCHEMAV_CVC_ELT_3_2_1,
    XML_SCHEMAV_CVC_ELT_3_2_2,
    XML_SCHEMAV_CVC_ELT_4_1,
    XML_SCHEMAV_CVC_ELT_4_2,
    XML_SCHEMAV_CVC_ELT_4_3,
    XML_SCHEMAV_CVC_ELT_5_1_1,
    XML_SCHEMAV_CVC_ELT_5_1_2,
    XML_SCHEMAV_CVC_ELT_5_2_1,
    XML_SCHEMAV_CVC_ELT_5_2_2_1,
    XML_SCHEMAV_CVC_ELT_5_2_2_2_1,
    XML_SCHEMAV_CVC_ELT_5_2_2_2_2,
    XML_SCHEMAV_CVC_ELT_6,
    XML_SCHEMAV_CVC_ELT_7,
    XML_SCHEMAV_CVC_ATTRIBUTE_1,
    XML_SCHEMAV_CVC_ATTRIBUTE_2,
    XML_SCHEMAV_CVC_ATTRIBUTE_3,
    XML_SCHEMAV_CVC_ATTRIBUTE_4,
    XML_SCHEMAV_CVC_COMPLEX_TYPE_3_1,
    XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_1,
    XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_2,
    XML_SCHEMAV_CVC_COMPLEX_TYPE_4,
    XML_SCHEMAV_CVC_COMPLEX_TYPE_5_1,
    XML_SCHEMAV_CVC_COMPLEX_TYPE_5_2,
    XML_SCHEMAV_ELEMENT_CONTENT,
    XML_SCHEMAV_DOCUMENT_ELEMENT_MISSING,
    XML_SCHEMAV_CVC_COMPLEX_TYPE_1,
    XML_SCHEMAV_CVC_AU,
    XML_SCHEMAV_CVC_TYPE_1,
    XML_SCHEMAV_CVC_TYPE_2,
    XML_SCHEMAV_CVC_IDC,
    XML_SCHEMAV_CVC_WILDCARD,
    XML_SCHEMAV_MISC,
    XML_XPTR_UNKNOWN_SCHEME = 1900,
    XML_XPTR_CHILDSEQ_START,
    XML_XPTR_EVAL_FAILED,
    XML_XPTR_EXTRA_OBJECTS,
    XML_C14N_CREATE_CTXT = 1950,
    XML_C14N_REQUIRES_UTF8,
    XML_C14N_CREATE_STACK,
    XML_C14N_INVALID_NODE,
    XML_C14N_UNKNOW_NODE,
    XML_C14N_RELATIVE_NAMESPACE,
    XML_FTP_PASV_ANSWER = 2000,
    XML_FTP_EPSV_ANSWER,
    XML_FTP_ACCNT,
    XML_FTP_URL_SYNTAX,
    XML_HTTP_URL_SYNTAX = 2020,
    XML_HTTP_USE_IP,
    XML_HTTP_UNKNOWN_HOST,
    XML_SCHEMAP_SRC_SIMPLE_TYPE_1 = 3000,
    XML_SCHEMAP_SRC_SIMPLE_TYPE_2,
    XML_SCHEMAP_SRC_SIMPLE_TYPE_3,
    XML_SCHEMAP_SRC_SIMPLE_TYPE_4,
    XML_SCHEMAP_SRC_RESOLVE,
    XML_SCHEMAP_SRC_RESTRICTION_BASE_OR_SIMPLETYPE,
    XML_SCHEMAP_SRC_LIST_ITEMTYPE_OR_SIMPLETYPE,
    XML_SCHEMAP_SRC_UNION_MEMBERTYPES_OR_SIMPLETYPES,
    XML_SCHEMAP_ST_PROPS_CORRECT_1,
    XML_SCHEMAP_ST_PROPS_CORRECT_2,
    XML_SCHEMAP_ST_PROPS_CORRECT_3,
    XML_SCHEMAP_COS_ST_RESTRICTS_1_1,
    XML_SCHEMAP_COS_ST_RESTRICTS_1_2,
    XML_SCHEMAP_COS_ST_RESTRICTS_1_3_1,
    XML_SCHEMAP_COS_ST_RESTRICTS_1_3_2,
    XML_SCHEMAP_COS_ST_RESTRICTS_2_1,
    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_1,
    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_2,
    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_1,
    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_2,
    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_3,
    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_4,
    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_5,
    XML_SCHEMAP_COS_ST_RESTRICTS_3_1,
    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1,
    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1_2,
    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_2,
    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_1,
    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_3,
    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_4,
    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_5,
    XML_SCHEMAP_COS_ST_DERIVED_OK_2_1,
    XML_SCHEMAP_COS_ST_DERIVED_OK_2_2,
    XML_SCHEMAP_S4S_ELEM_NOT_ALLOWED,
    XML_SCHEMAP_S4S_ELEM_MISSING,
    XML_SCHEMAP_S4S_ATTR_NOT_ALLOWED,
    XML_SCHEMAP_S4S_ATTR_MISSING,
    XML_SCHEMAP_S4S_ATTR_INVALID_VALUE,
    XML_SCHEMAP_SRC_ELEMENT_1,
    XML_SCHEMAP_SRC_ELEMENT_2_1,
    XML_SCHEMAP_SRC_ELEMENT_2_2,
    XML_SCHEMAP_SRC_ELEMENT_3,
    XML_SCHEMAP_P_PROPS_CORRECT_1,
    XML_SCHEMAP_P_PROPS_CORRECT_2_1,
    XML_SCHEMAP_P_PROPS_CORRECT_2_2,
    XML_SCHEMAP_E_PROPS_CORRECT_2,
    XML_SCHEMAP_E_PROPS_CORRECT_3,
    XML_SCHEMAP_E_PROPS_CORRECT_4,
    XML_SCHEMAP_E_PROPS_CORRECT_5,
    XML_SCHEMAP_E_PROPS_CORRECT_6,
    XML_SCHEMAP_SRC_INCLUDE,
    XML_SCHEMAP_SRC_ATTRIBUTE_1,
    XML_SCHEMAP_SRC_ATTRIBUTE_2,
    XML_SCHEMAP_SRC_ATTRIBUTE_3_1,
    XML_SCHEMAP_SRC_ATTRIBUTE_3_2,
    XML_SCHEMAP_SRC_ATTRIBUTE_4,
    XML_SCHEMAP_NO_XMLNS,
    XML_SCHEMAP_NO_XSI,
    XML_SCHEMAP_COS_VALID_DEFAULT_1,
    XML_SCHEMAP_COS_VALID_DEFAULT_2_1,
    XML_SCHEMAP_COS_VALID_DEFAULT_2_2_1,
    XML_SCHEMAP_COS_VALID_DEFAULT_2_2_2,
    XML_SCHEMAP_CVC_SIMPLE_TYPE,
    XML_SCHEMAP_COS_CT_EXTENDS_1_1,
    XML_SCHEMAP_SRC_IMPORT_1_1,
    XML_SCHEMAP_SRC_IMPORT_1_2,
    XML_SCHEMAP_SRC_IMPORT_2,
    XML_SCHEMAP_SRC_IMPORT_2_1,
    XML_SCHEMAP_SRC_IMPORT_2_2,
    XML_SCHEMAP_INTERNAL,
    XML_SCHEMAP_NOT_DETERMINISTIC,
    XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_1,
    XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_2,
    XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_3,
    XML_SCHEMAP_MG_PROPS_CORRECT_1,
    XML_SCHEMAP_MG_PROPS_CORRECT_2,
    XML_SCHEMAP_SRC_CT_1,
    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_3,
    XML_SCHEMAP_AU_PROPS_CORRECT_2,
    XML_SCHEMAP_A_PROPS_CORRECT_2,
    XML_SCHEMAP_C_PROPS_CORRECT,
    XML_SCHEMAP_SRC_REDEFINE,
    XML_SCHEMAP_SRC_IMPORT,
    XML_SCHEMAP_WARN_SKIP_SCHEMA,
    XML_SCHEMAP_WARN_UNLOCATED_SCHEMA,
    XML_SCHEMAP_WARN_ATTR_REDECL_PROH,
    XML_SCHEMAP_WARN_ATTR_POINTLESS_PROH,
    XML_SCHEMAP_AG_PROPS_CORRECT,
    XML_SCHEMAP_COS_CT_EXTENDS_1_2,
    XML_SCHEMAP_AU_PROPS_CORRECT,
    XML_SCHEMAP_A_PROPS_CORRECT_3,
    XML_SCHEMAP_COS_ALL_LIMITED,
    XML_SCHEMATRONV_ASSERT = 4000,
    XML_SCHEMATRONV_REPORT,
    XML_MODULE_OPEN = 4900,
    XML_MODULE_CLOSE,
    XML_CHECK_FOUND_ELEMENT = 5000,
    XML_CHECK_FOUND_ATTRIBUTE,
    XML_CHECK_FOUND_TEXT,
    XML_CHECK_FOUND_CDATA,
    XML_CHECK_FOUND_ENTITYREF,
    XML_CHECK_FOUND_ENTITY,
    XML_CHECK_FOUND_PI,
    XML_CHECK_FOUND_COMMENT,
    XML_CHECK_FOUND_DOCTYPE,
    XML_CHECK_FOUND_FRAGMENT,
    XML_CHECK_FOUND_NOTATION,
    XML_CHECK_UNKNOWN_NODE,
    XML_CHECK_ENTITY_TYPE,
    XML_CHECK_NO_PARENT,
    XML_CHECK_NO_DOC,
    XML_CHECK_NO_NAME,
    XML_CHECK_NO_ELEM,
    XML_CHECK_WRONG_DOC,
    XML_CHECK_NO_PREV,
    XML_CHECK_WRONG_PREV,
    XML_CHECK_NO_NEXT,
    XML_CHECK_WRONG_NEXT,
    XML_CHECK_NOT_DTD,
    XML_CHECK_NOT_ATTR,
    XML_CHECK_NOT_ATTR_DECL,
    XML_CHECK_NOT_ELEM_DECL,
    XML_CHECK_NOT_ENTITY_DECL,
    XML_CHECK_NOT_NS_DECL,
    XML_CHECK_NO_HREF,
    XML_CHECK_WRONG_PARENT,
    XML_CHECK_NS_SCOPE,
    XML_CHECK_NS_ANCESTOR,
    XML_CHECK_NOT_UTF8,
    XML_CHECK_NO_DICT,
    XML_CHECK_NOT_NCNAME,
    XML_CHECK_OUTSIDE_DICT,
    XML_CHECK_WRONG_NAME,
    XML_CHECK_NAME_NOT_NULL,
    XML_I18N_NO_NAME = 6000,
    XML_I18N_NO_HANDLER,
    XML_I18N_EXCESS_HANDLER,
    XML_I18N_CONV_FAILED,
    XML_I18N_NO_OUTPUT,
    XML_BUF_OVERFLOW = 7000
} xmlParserErrors;
# 844 "./include/libxml/xmlerror.h"
typedef void ( *xmlGenericErrorFunc) (void *ctx,
     const char *msg,
     ...) __attribute__((__format__(__printf__,2,3)));
# 855 "./include/libxml/xmlerror.h"
typedef void ( *xmlStructuredErrorFunc) (void *userData, xmlErrorPtr error);





 void
    xmlSetGenericErrorFunc (void *ctx,
     xmlGenericErrorFunc handler);
 void
    initGenericErrorDefaultFunc (xmlGenericErrorFunc *handler);

 void
    xmlSetStructuredErrorFunc (void *ctx,
     xmlStructuredErrorFunc handler);




 void
    xmlParserError (void *ctx,
     const char *msg,
     ...) __attribute__((__format__(__printf__,2,3)));
 void
    xmlParserWarning (void *ctx,
     const char *msg,
     ...) __attribute__((__format__(__printf__,2,3)));
 void
    xmlParserValidityError (void *ctx,
     const char *msg,
     ...) __attribute__((__format__(__printf__,2,3)));
 void
    xmlParserValidityWarning (void *ctx,
     const char *msg,
     ...) __attribute__((__format__(__printf__,2,3)));
 void
    xmlParserPrintFileInfo (xmlParserInputPtr input);
 void
    xmlParserPrintFileContext (xmlParserInputPtr input);




 xmlErrorPtr
    xmlGetLastError (void);
 void
    xmlResetLastError (void);
 xmlErrorPtr
    xmlCtxtGetLastError (void *ctx);
 void
    xmlCtxtResetLastError (void *ctx);
 void
    xmlResetError (xmlErrorPtr err);
 int
    xmlCopyError (xmlErrorPtr from,
     xmlErrorPtr to);





 void
    __xmlRaiseError (xmlStructuredErrorFunc schannel,
     xmlGenericErrorFunc channel,
     void *data,
                                 void *ctx,
     void *node,
     int domain,
     int code,
     xmlErrorLevel level,
     const char *file,
     int line,
     const char *str1,
     const char *str2,
     const char *str3,
     int int1,
     int col,
     const char *msg,
     ...) __attribute__((__format__(__printf__,16,17)));
 void
    __xmlSimpleError (int domain,
     int code,
     xmlNodePtr node,
     const char *msg,
     const char *extra);
# 16 "./include/libxml/valid.h" 2

# 1 "./include/libxml/list.h" 1
# 20 "./include/libxml/list.h"
typedef struct _xmlLink xmlLink;
typedef xmlLink *xmlLinkPtr;

typedef struct _xmlList xmlList;
typedef xmlList *xmlListPtr;







typedef void (*xmlListDeallocator) (xmlLinkPtr lk);
# 42 "./include/libxml/list.h"
typedef int (*xmlListDataCompare) (const void *data0, const void *data1);
# 52 "./include/libxml/list.h"
typedef int (*xmlListWalker) (const void *data, const void *user);


 xmlListPtr
  xmlListCreate (xmlListDeallocator deallocator,
                                  xmlListDataCompare compare);
 void
  xmlListDelete (xmlListPtr l);


 void *
  xmlListSearch (xmlListPtr l,
      void *data);
 void *
  xmlListReverseSearch (xmlListPtr l,
      void *data);
 int
  xmlListInsert (xmlListPtr l,
      void *data) ;
 int
  xmlListAppend (xmlListPtr l,
      void *data) ;
 int
  xmlListRemoveFirst (xmlListPtr l,
      void *data);
 int
  xmlListRemoveLast (xmlListPtr l,
      void *data);
 int
  xmlListRemoveAll (xmlListPtr l,
      void *data);
 void
  xmlListClear (xmlListPtr l);
 int
  xmlListEmpty (xmlListPtr l);
 xmlLinkPtr
  xmlListFront (xmlListPtr l);
 xmlLinkPtr
  xmlListEnd (xmlListPtr l);
 int
  xmlListSize (xmlListPtr l);

 void
  xmlListPopFront (xmlListPtr l);
 void
  xmlListPopBack (xmlListPtr l);
 int
  xmlListPushFront (xmlListPtr l,
      void *data);
 int
  xmlListPushBack (xmlListPtr l,
      void *data);


 void
  xmlListReverse (xmlListPtr l);
 void
  xmlListSort (xmlListPtr l);
 void
  xmlListWalk (xmlListPtr l,
      xmlListWalker walker,
      const void *user);
 void
  xmlListReverseWalk (xmlListPtr l,
      xmlListWalker walker,
      const void *user);
 void
  xmlListMerge (xmlListPtr l1,
      xmlListPtr l2);
 xmlListPtr
  xmlListDup (const xmlListPtr old);
 int
  xmlListCopy (xmlListPtr cur,
      const xmlListPtr old);

 void *
  xmlLinkGetData (xmlLinkPtr lk);
# 18 "./include/libxml/valid.h" 2
# 1 "./include/libxml/xmlautomata.h" 1
# 29 "./include/libxml/xmlautomata.h"
typedef struct _xmlAutomata xmlAutomata;
typedef xmlAutomata *xmlAutomataPtr;






typedef struct _xmlAutomataState xmlAutomataState;
typedef xmlAutomataState *xmlAutomataStatePtr;




 xmlAutomataPtr
      xmlNewAutomata (void);
 void
      xmlFreeAutomata (xmlAutomataPtr am);

 xmlAutomataStatePtr
      xmlAutomataGetInitState (xmlAutomataPtr am);
 int
      xmlAutomataSetFinalState (xmlAutomataPtr am,
       xmlAutomataStatePtr state);
 xmlAutomataStatePtr
      xmlAutomataNewState (xmlAutomataPtr am);
 xmlAutomataStatePtr
      xmlAutomataNewTransition (xmlAutomataPtr am,
       xmlAutomataStatePtr from,
       xmlAutomataStatePtr to,
       const xmlChar *token,
       void *data);
 xmlAutomataStatePtr
      xmlAutomataNewTransition2 (xmlAutomataPtr am,
       xmlAutomataStatePtr from,
       xmlAutomataStatePtr to,
       const xmlChar *token,
       const xmlChar *token2,
       void *data);
 xmlAutomataStatePtr
                    xmlAutomataNewNegTrans (xmlAutomataPtr am,
       xmlAutomataStatePtr from,
       xmlAutomataStatePtr to,
       const xmlChar *token,
       const xmlChar *token2,
       void *data);

 xmlAutomataStatePtr
      xmlAutomataNewCountTrans (xmlAutomataPtr am,
       xmlAutomataStatePtr from,
       xmlAutomataStatePtr to,
       const xmlChar *token,
       int min,
       int max,
       void *data);
 xmlAutomataStatePtr
      xmlAutomataNewCountTrans2 (xmlAutomataPtr am,
       xmlAutomataStatePtr from,
       xmlAutomataStatePtr to,
       const xmlChar *token,
       const xmlChar *token2,
       int min,
       int max,
       void *data);
 xmlAutomataStatePtr
      xmlAutomataNewOnceTrans (xmlAutomataPtr am,
       xmlAutomataStatePtr from,
       xmlAutomataStatePtr to,
       const xmlChar *token,
       int min,
       int max,
       void *data);
 xmlAutomataStatePtr
      xmlAutomataNewOnceTrans2 (xmlAutomataPtr am,
       xmlAutomataStatePtr from,
       xmlAutomataStatePtr to,
       const xmlChar *token,
       const xmlChar *token2,
       int min,
       int max,
       void *data);
 xmlAutomataStatePtr
      xmlAutomataNewAllTrans (xmlAutomataPtr am,
       xmlAutomataStatePtr from,
       xmlAutomataStatePtr to,
       int lax);
 xmlAutomataStatePtr
      xmlAutomataNewEpsilon (xmlAutomataPtr am,
       xmlAutomataStatePtr from,
       xmlAutomataStatePtr to);
 xmlAutomataStatePtr
      xmlAutomataNewCountedTrans (xmlAutomataPtr am,
       xmlAutomataStatePtr from,
       xmlAutomataStatePtr to,
       int counter);
 xmlAutomataStatePtr
      xmlAutomataNewCounterTrans (xmlAutomataPtr am,
       xmlAutomataStatePtr from,
       xmlAutomataStatePtr to,
       int counter);
 int
      xmlAutomataNewCounter (xmlAutomataPtr am,
       int min,
       int max);

 xmlRegexpPtr
      xmlAutomataCompile (xmlAutomataPtr am);
 int
      xmlAutomataIsDeterminist (xmlAutomataPtr am);
# 19 "./include/libxml/valid.h" 2
# 28 "./include/libxml/valid.h"
typedef struct _xmlValidState xmlValidState;
typedef xmlValidState *xmlValidStatePtr;
# 42 "./include/libxml/valid.h"
typedef void ( *xmlValidityErrorFunc) (void *ctx,
        const char *msg,
        ...) __attribute__((__format__(__printf__,2,3)));
# 57 "./include/libxml/valid.h"
typedef void ( *xmlValidityWarningFunc) (void *ctx,
          const char *msg,
          ...) __attribute__((__format__(__printf__,2,3)));
# 80 "./include/libxml/valid.h"
typedef struct _xmlValidCtxt xmlValidCtxt;
typedef xmlValidCtxt *xmlValidCtxtPtr;
struct _xmlValidCtxt {
    void *userData;
    xmlValidityErrorFunc error;
    xmlValidityWarningFunc warning;


    xmlNodePtr node;
    int nodeNr;
    int nodeMax;
    xmlNodePtr *nodeTab;

    unsigned int finishDtd;
    xmlDocPtr doc;
    int valid;


    xmlValidState *vstate;
    int vstateNr;
    int vstateMax;
    xmlValidState *vstateTab;


    xmlAutomataPtr am;
    xmlAutomataStatePtr state;




};






typedef struct _xmlHashTable xmlNotationTable;
typedef xmlNotationTable *xmlNotationTablePtr;






typedef struct _xmlHashTable xmlElementTable;
typedef xmlElementTable *xmlElementTablePtr;






typedef struct _xmlHashTable xmlAttributeTable;
typedef xmlAttributeTable *xmlAttributeTablePtr;






typedef struct _xmlHashTable xmlIDTable;
typedef xmlIDTable *xmlIDTablePtr;






typedef struct _xmlHashTable xmlRefTable;
typedef xmlRefTable *xmlRefTablePtr;


 xmlNotationPtr
  xmlAddNotationDecl (xmlValidCtxtPtr ctxt,
      xmlDtdPtr dtd,
      const xmlChar *name,
      const xmlChar *PublicID,
      const xmlChar *SystemID);

 xmlNotationTablePtr
  xmlCopyNotationTable (xmlNotationTablePtr table);

 void
  xmlFreeNotationTable (xmlNotationTablePtr table);

 void
  xmlDumpNotationDecl (xmlBufferPtr buf,
      xmlNotationPtr nota);
 void
  xmlDumpNotationTable (xmlBufferPtr buf,
      xmlNotationTablePtr table);




 xmlElementContentPtr
  xmlNewElementContent (const xmlChar *name,
      xmlElementContentType type);
 xmlElementContentPtr
  xmlCopyElementContent (xmlElementContentPtr content);
 void
  xmlFreeElementContent (xmlElementContentPtr cur);

 xmlElementContentPtr
  xmlNewDocElementContent (xmlDocPtr doc,
      const xmlChar *name,
      xmlElementContentType type);
 xmlElementContentPtr
  xmlCopyDocElementContent(xmlDocPtr doc,
      xmlElementContentPtr content);
 void
  xmlFreeDocElementContent(xmlDocPtr doc,
      xmlElementContentPtr cur);
 void
  xmlSnprintfElementContent(char *buf,
      int size,
                                  xmlElementContentPtr content,
      int englob);


 void
  xmlSprintfElementContent(char *buf,
                                  xmlElementContentPtr content,
      int englob);




 xmlElementPtr
  xmlAddElementDecl (xmlValidCtxtPtr ctxt,
      xmlDtdPtr dtd,
      const xmlChar *name,
      xmlElementTypeVal type,
      xmlElementContentPtr content);

 xmlElementTablePtr
  xmlCopyElementTable (xmlElementTablePtr table);

 void
  xmlFreeElementTable (xmlElementTablePtr table);

 void
  xmlDumpElementTable (xmlBufferPtr buf,
      xmlElementTablePtr table);
 void
  xmlDumpElementDecl (xmlBufferPtr buf,
      xmlElementPtr elem);



 xmlEnumerationPtr
  xmlCreateEnumeration (const xmlChar *name);
 void
  xmlFreeEnumeration (xmlEnumerationPtr cur);

 xmlEnumerationPtr
  xmlCopyEnumeration (xmlEnumerationPtr cur);



 xmlAttributePtr
  xmlAddAttributeDecl (xmlValidCtxtPtr ctxt,
      xmlDtdPtr dtd,
      const xmlChar *elem,
      const xmlChar *name,
      const xmlChar *ns,
      xmlAttributeType type,
      xmlAttributeDefault def,
      const xmlChar *defaultValue,
      xmlEnumerationPtr tree);

 xmlAttributeTablePtr
  xmlCopyAttributeTable (xmlAttributeTablePtr table);

 void
  xmlFreeAttributeTable (xmlAttributeTablePtr table);

 void
  xmlDumpAttributeTable (xmlBufferPtr buf,
     xmlAttributeTablePtr table);
 void
  xmlDumpAttributeDecl (xmlBufferPtr buf,
     xmlAttributePtr attr);



 xmlIDPtr
  xmlAddID (xmlValidCtxtPtr ctxt,
     xmlDocPtr doc,
     const xmlChar *value,
     xmlAttrPtr attr);
 void
  xmlFreeIDTable (xmlIDTablePtr table);
 xmlAttrPtr
  xmlGetID (xmlDocPtr doc,
     const xmlChar *ID);
 int
  xmlIsID (xmlDocPtr doc,
     xmlNodePtr elem,
     xmlAttrPtr attr);
 int
  xmlRemoveID (xmlDocPtr doc,
     xmlAttrPtr attr);


 xmlRefPtr
  xmlAddRef (xmlValidCtxtPtr ctxt,
     xmlDocPtr doc,
     const xmlChar *value,
     xmlAttrPtr attr);
 void
  xmlFreeRefTable (xmlRefTablePtr table);
 int
  xmlIsRef (xmlDocPtr doc,
     xmlNodePtr elem,
     xmlAttrPtr attr);
 int
  xmlRemoveRef (xmlDocPtr doc,
     xmlAttrPtr attr);
 xmlListPtr
  xmlGetRefs (xmlDocPtr doc,
     const xmlChar *ID);






 xmlValidCtxtPtr
  xmlNewValidCtxt(void);
 void
  xmlFreeValidCtxt(xmlValidCtxtPtr);

 int
  xmlValidateRoot (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc);
 int
  xmlValidateElementDecl (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc,
                           xmlElementPtr elem);
 xmlChar *
  xmlValidNormalizeAttributeValue(xmlDocPtr doc,
      xmlNodePtr elem,
      const xmlChar *name,
      const xmlChar *value);
 xmlChar *
  xmlValidCtxtNormalizeAttributeValue(xmlValidCtxtPtr ctxt,
      xmlDocPtr doc,
      xmlNodePtr elem,
      const xmlChar *name,
      const xmlChar *value);
 int
  xmlValidateAttributeDecl(xmlValidCtxtPtr ctxt,
      xmlDocPtr doc,
                           xmlAttributePtr attr);
 int
  xmlValidateAttributeValue(xmlAttributeType type,
      const xmlChar *value);
 int
  xmlValidateNotationDecl (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc,
                           xmlNotationPtr nota);
 int
  xmlValidateDtd (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc,
      xmlDtdPtr dtd);
 int
  xmlValidateDtdFinal (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc);
 int
  xmlValidateDocument (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc);
 int
  xmlValidateElement (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc,
      xmlNodePtr elem);
 int
  xmlValidateOneElement (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc,
                           xmlNodePtr elem);
 int
  xmlValidateOneAttribute (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc,
      xmlNodePtr elem,
      xmlAttrPtr attr,
      const xmlChar *value);
 int
  xmlValidateOneNamespace (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc,
      xmlNodePtr elem,
      const xmlChar *prefix,
      xmlNsPtr ns,
      const xmlChar *value);
 int
  xmlValidateDocumentFinal(xmlValidCtxtPtr ctxt,
      xmlDocPtr doc);



 int
  xmlValidateNotationUse (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc,
      const xmlChar *notationName);


 int
  xmlIsMixedElement (xmlDocPtr doc,
      const xmlChar *name);
 xmlAttributePtr
  xmlGetDtdAttrDesc (xmlDtdPtr dtd,
      const xmlChar *elem,
      const xmlChar *name);
 xmlAttributePtr
  xmlGetDtdQAttrDesc (xmlDtdPtr dtd,
      const xmlChar *elem,
      const xmlChar *name,
      const xmlChar *prefix);
 xmlNotationPtr
  xmlGetDtdNotationDesc (xmlDtdPtr dtd,
      const xmlChar *name);
 xmlElementPtr
  xmlGetDtdQElementDesc (xmlDtdPtr dtd,
      const xmlChar *name,
      const xmlChar *prefix);
 xmlElementPtr
  xmlGetDtdElementDesc (xmlDtdPtr dtd,
      const xmlChar *name);



 int
  xmlValidGetPotentialChildren(xmlElementContent *ctree,
      const xmlChar **names,
      int *len,
      int max);

 int
  xmlValidGetValidElements(xmlNode *prev,
      xmlNode *next,
      const xmlChar **names,
      int max);
 int
  xmlValidateNameValue (const xmlChar *value);
 int
  xmlValidateNamesValue (const xmlChar *value);
 int
  xmlValidateNmtokenValue (const xmlChar *value);
 int
  xmlValidateNmtokensValue(const xmlChar *value);





 int
  xmlValidBuildContentModel(xmlValidCtxtPtr ctxt,
      xmlElementPtr elem);

 int
  xmlValidatePushElement (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc,
      xmlNodePtr elem,
      const xmlChar *qname);
 int
  xmlValidatePushCData (xmlValidCtxtPtr ctxt,
      const xmlChar *data,
      int len);
 int
  xmlValidatePopElement (xmlValidCtxtPtr ctxt,
      xmlDocPtr doc,
      xmlNodePtr elem,
      const xmlChar *qname);
# 20 "./include/libxml/parser.h" 2
# 1 "./include/libxml/entities.h" 1
# 24 "./include/libxml/entities.h"
typedef enum {
    XML_INTERNAL_GENERAL_ENTITY = 1,
    XML_EXTERNAL_GENERAL_PARSED_ENTITY = 2,
    XML_EXTERNAL_GENERAL_UNPARSED_ENTITY = 3,
    XML_INTERNAL_PARAMETER_ENTITY = 4,
    XML_EXTERNAL_PARAMETER_ENTITY = 5,
    XML_INTERNAL_PREDEFINED_ENTITY = 6
} xmlEntityType;






struct _xmlEntity {
    void *_private;
    xmlElementType type;
    const xmlChar *name;
    struct _xmlNode *children;
    struct _xmlNode *last;
    struct _xmlDtd *parent;
    struct _xmlNode *next;
    struct _xmlNode *prev;
    struct _xmlDoc *doc;

    xmlChar *orig;
    xmlChar *content;
    int length;
    xmlEntityType etype;
    const xmlChar *ExternalID;
    const xmlChar *SystemID;

    struct _xmlEntity *nexte;
    const xmlChar *URI;
    int owner;
    int checked;


};






typedef struct _xmlHashTable xmlEntitiesTable;
typedef xmlEntitiesTable *xmlEntitiesTablePtr;






 void
  xmlInitializePredefinedEntities (void);


 xmlEntityPtr
   xmlNewEntity (xmlDocPtr doc,
       const xmlChar *name,
       int type,
       const xmlChar *ExternalID,
       const xmlChar *SystemID,
       const xmlChar *content);
 xmlEntityPtr
   xmlAddDocEntity (xmlDocPtr doc,
       const xmlChar *name,
       int type,
       const xmlChar *ExternalID,
       const xmlChar *SystemID,
       const xmlChar *content);
 xmlEntityPtr
   xmlAddDtdEntity (xmlDocPtr doc,
       const xmlChar *name,
       int type,
       const xmlChar *ExternalID,
       const xmlChar *SystemID,
       const xmlChar *content);
 xmlEntityPtr
   xmlGetPredefinedEntity (const xmlChar *name);
 xmlEntityPtr
   xmlGetDocEntity (xmlDocPtr doc,
       const xmlChar *name);
 xmlEntityPtr
   xmlGetDtdEntity (xmlDocPtr doc,
       const xmlChar *name);
 xmlEntityPtr
   xmlGetParameterEntity (xmlDocPtr doc,
       const xmlChar *name);

 const xmlChar *
   xmlEncodeEntities (xmlDocPtr doc,
       const xmlChar *input);

 xmlChar *
   xmlEncodeEntitiesReentrant(xmlDocPtr doc,
       const xmlChar *input);
 xmlChar *
   xmlEncodeSpecialChars (xmlDocPtr doc,
       const xmlChar *input);
 xmlEntitiesTablePtr
   xmlCreateEntitiesTable (void);

 xmlEntitiesTablePtr
   xmlCopyEntitiesTable (xmlEntitiesTablePtr table);

 void
   xmlFreeEntitiesTable (xmlEntitiesTablePtr table);

 void
   xmlDumpEntitiesTable (xmlBufferPtr buf,
       xmlEntitiesTablePtr table);
 void
   xmlDumpEntityDecl (xmlBufferPtr buf,
       xmlEntityPtr ent);


 void
   xmlCleanupPredefinedEntities(void);
# 21 "./include/libxml/parser.h" 2
# 1 "./include/libxml/xmlerror.h" 1
# 22 "./include/libxml/parser.h" 2
# 52 "./include/libxml/parser.h"
typedef void (* xmlParserInputDeallocate)(xmlChar *str);

struct _xmlParserInput {

    xmlParserInputBufferPtr buf;

    const char *filename;
    const char *directory;
    const xmlChar *base;
    const xmlChar *cur;
    const xmlChar *end;
    int length;
    int line;
    int col;





    unsigned long consumed;
    xmlParserInputDeallocate free;
    const xmlChar *encoding;
    const xmlChar *version;
    int standalone;
    int id;
};
# 86 "./include/libxml/parser.h"
typedef struct _xmlParserNodeInfo xmlParserNodeInfo;
typedef xmlParserNodeInfo *xmlParserNodeInfoPtr;

struct _xmlParserNodeInfo {
  const struct _xmlNode* node;

  unsigned long begin_pos;
  unsigned long begin_line;
  unsigned long end_pos;
  unsigned long end_line;
};

typedef struct _xmlParserNodeInfoSeq xmlParserNodeInfoSeq;
typedef xmlParserNodeInfoSeq *xmlParserNodeInfoSeqPtr;
struct _xmlParserNodeInfoSeq {
  unsigned long maximum;
  unsigned long length;
  xmlParserNodeInfo* buffer;
};







typedef enum {
    XML_PARSER_EOF = -1,
    XML_PARSER_START = 0,
    XML_PARSER_MISC,
    XML_PARSER_PI,
    XML_PARSER_DTD,
    XML_PARSER_PROLOG,
    XML_PARSER_COMMENT,
    XML_PARSER_START_TAG,
    XML_PARSER_CONTENT,
    XML_PARSER_CDATA_SECTION,
    XML_PARSER_END_TAG,
    XML_PARSER_ENTITY_DECL,
    XML_PARSER_ENTITY_VALUE,
    XML_PARSER_ATTRIBUTE_VALUE,
    XML_PARSER_SYSTEM_LITERAL,
    XML_PARSER_EPILOG,
    XML_PARSER_IGNORE,
    XML_PARSER_PUBLIC_LITERAL
} xmlParserInputState;
# 163 "./include/libxml/parser.h"
typedef enum {
    XML_PARSE_UNKNOWN = 0,
    XML_PARSE_DOM = 1,
    XML_PARSE_SAX = 2,
    XML_PARSE_PUSH_DOM = 3,
    XML_PARSE_PUSH_SAX = 4,
    XML_PARSE_READER = 5
} xmlParserMode;
# 184 "./include/libxml/parser.h"
struct _xmlParserCtxt {
    struct _xmlSAXHandler *sax;
    void *userData;
    xmlDocPtr myDoc;
    int wellFormed;
    int replaceEntities;
    const xmlChar *version;
    const xmlChar *encoding;
    int standalone;
    int html;





    xmlParserInputPtr input;
    int inputNr;
    int inputMax;
    xmlParserInputPtr *inputTab;


    xmlNodePtr node;
    int nodeNr;
    int nodeMax;
    xmlNodePtr *nodeTab;

    int record_info;
    xmlParserNodeInfoSeq node_seq;

    int errNo;

    int hasExternalSubset;
    int hasPErefs;
    int external;

    int valid;
    int validate;
    xmlValidCtxt vctxt;

    xmlParserInputState instate;
    int token;

    char *directory;


    const xmlChar *name;
    int nameNr;
    int nameMax;
    const xmlChar * *nameTab;

    long nbChars;
    long checkIndex;
    int keepBlanks;
    int disableSAX;
    int inSubset;
    const xmlChar * intSubName;
    xmlChar * extSubURI;
    xmlChar * extSubSystem;


    int * space;
    int spaceNr;
    int spaceMax;
    int * spaceTab;

    int depth;
    xmlParserInputPtr entity;
    int charset;

    int nodelen;
    int nodemem;
    int pedantic;
    void *_private;

    int loadsubset;
    int linenumbers;
    void *catalogs;
    int recovery;
    int progressive;
    xmlDictPtr dict;
    const xmlChar * *atts;
    int maxatts;
    int docdict;




    const xmlChar *str_xml;
    const xmlChar *str_xmlns;
    const xmlChar *str_xml_ns;




    int sax2;
    int nsNr;
    int nsMax;
    const xmlChar * *nsTab;
    int *attallocs;
    void * *pushTab;
    xmlHashTablePtr attsDefault;
    xmlHashTablePtr attsSpecial;
    int nsWellFormed;
    int options;




    int dictNames;
    int freeElemsNr;
    xmlNodePtr freeElems;
    int freeAttrsNr;
    xmlAttrPtr freeAttrs;




    xmlError lastError;
    xmlParserMode parseMode;
    unsigned long nbentities;
    unsigned long sizeentities;


    xmlParserNodeInfo *nodeInfo;
    int nodeInfoNr;
    int nodeInfoMax;
    xmlParserNodeInfo *nodeInfoTab;

    int input_id;
};






struct _xmlSAXLocator {
    const xmlChar *(*getPublicId)(void *ctx);
    const xmlChar *(*getSystemId)(void *ctx);
    int (*getLineNumber)(void *ctx);
    int (*getColumnNumber)(void *ctx);
};
# 349 "./include/libxml/parser.h"
typedef xmlParserInputPtr (*resolveEntitySAXFunc) (void *ctx,
    const xmlChar *publicId,
    const xmlChar *systemId);
# 361 "./include/libxml/parser.h"
typedef void (*internalSubsetSAXFunc) (void *ctx,
    const xmlChar *name,
    const xmlChar *ExternalID,
    const xmlChar *SystemID);
# 374 "./include/libxml/parser.h"
typedef void (*externalSubsetSAXFunc) (void *ctx,
    const xmlChar *name,
    const xmlChar *ExternalID,
    const xmlChar *SystemID);
# 387 "./include/libxml/parser.h"
typedef xmlEntityPtr (*getEntitySAXFunc) (void *ctx,
    const xmlChar *name);
# 398 "./include/libxml/parser.h"
typedef xmlEntityPtr (*getParameterEntitySAXFunc) (void *ctx,
    const xmlChar *name);
# 411 "./include/libxml/parser.h"
typedef void (*entityDeclSAXFunc) (void *ctx,
    const xmlChar *name,
    int type,
    const xmlChar *publicId,
    const xmlChar *systemId,
    xmlChar *content);
# 426 "./include/libxml/parser.h"
typedef void (*notationDeclSAXFunc)(void *ctx,
    const xmlChar *name,
    const xmlChar *publicId,
    const xmlChar *systemId);
# 442 "./include/libxml/parser.h"
typedef void (*attributeDeclSAXFunc)(void *ctx,
    const xmlChar *elem,
    const xmlChar *fullname,
    int type,
    int def,
    const xmlChar *defaultValue,
    xmlEnumerationPtr tree);
# 458 "./include/libxml/parser.h"
typedef void (*elementDeclSAXFunc)(void *ctx,
    const xmlChar *name,
    int type,
    xmlElementContentPtr content);
# 472 "./include/libxml/parser.h"
typedef void (*unparsedEntityDeclSAXFunc)(void *ctx,
    const xmlChar *name,
    const xmlChar *publicId,
    const xmlChar *systemId,
    const xmlChar *notationName);
# 485 "./include/libxml/parser.h"
typedef void (*setDocumentLocatorSAXFunc) (void *ctx,
    xmlSAXLocatorPtr loc);






typedef void (*startDocumentSAXFunc) (void *ctx);






typedef void (*endDocumentSAXFunc) (void *ctx);
# 509 "./include/libxml/parser.h"
typedef void (*startElementSAXFunc) (void *ctx,
    const xmlChar *name,
    const xmlChar **atts);







typedef void (*endElementSAXFunc) (void *ctx,
    const xmlChar *name);
# 532 "./include/libxml/parser.h"
typedef void (*attributeSAXFunc) (void *ctx,
    const xmlChar *name,
    const xmlChar *value);







typedef void (*referenceSAXFunc) (void *ctx,
    const xmlChar *name);
# 552 "./include/libxml/parser.h"
typedef void (*charactersSAXFunc) (void *ctx,
    const xmlChar *ch,
    int len);
# 564 "./include/libxml/parser.h"
typedef void (*ignorableWhitespaceSAXFunc) (void *ctx,
    const xmlChar *ch,
    int len);
# 575 "./include/libxml/parser.h"
typedef void (*processingInstructionSAXFunc) (void *ctx,
    const xmlChar *target,
    const xmlChar *data);







typedef void (*commentSAXFunc) (void *ctx,
    const xmlChar *value);
# 595 "./include/libxml/parser.h"
typedef void (*cdataBlockSAXFunc) (
                         void *ctx,
    const xmlChar *value,
    int len);
# 607 "./include/libxml/parser.h"
typedef void ( *warningSAXFunc) (void *ctx,
    const char *msg, ...) __attribute__((__format__(__printf__,2,3)));
# 617 "./include/libxml/parser.h"
typedef void ( *errorSAXFunc) (void *ctx,
    const char *msg, ...) __attribute__((__format__(__printf__,2,3)));
# 629 "./include/libxml/parser.h"
typedef void ( *fatalErrorSAXFunc) (void *ctx,
    const char *msg, ...) __attribute__((__format__(__printf__,2,3)));
# 639 "./include/libxml/parser.h"
typedef int (*isStandaloneSAXFunc) (void *ctx);
# 648 "./include/libxml/parser.h"
typedef int (*hasInternalSubsetSAXFunc) (void *ctx);
# 658 "./include/libxml/parser.h"
typedef int (*hasExternalSubsetSAXFunc) (void *ctx);
# 691 "./include/libxml/parser.h"
typedef void (*startElementNsSAX2Func) (void *ctx,
     const xmlChar *localname,
     const xmlChar *prefix,
     const xmlChar *URI,
     int nb_namespaces,
     const xmlChar **namespaces,
     int nb_attributes,
     int nb_defaulted,
     const xmlChar **attributes);
# 712 "./include/libxml/parser.h"
typedef void (*endElementNsSAX2Func) (void *ctx,
     const xmlChar *localname,
     const xmlChar *prefix,
     const xmlChar *URI);


struct _xmlSAXHandler {
    internalSubsetSAXFunc internalSubset;
    isStandaloneSAXFunc isStandalone;
    hasInternalSubsetSAXFunc hasInternalSubset;
    hasExternalSubsetSAXFunc hasExternalSubset;
    resolveEntitySAXFunc resolveEntity;
    getEntitySAXFunc getEntity;
    entityDeclSAXFunc entityDecl;
    notationDeclSAXFunc notationDecl;
    attributeDeclSAXFunc attributeDecl;
    elementDeclSAXFunc elementDecl;
    unparsedEntityDeclSAXFunc unparsedEntityDecl;
    setDocumentLocatorSAXFunc setDocumentLocator;
    startDocumentSAXFunc startDocument;
    endDocumentSAXFunc endDocument;
    startElementSAXFunc startElement;
    endElementSAXFunc endElement;
    referenceSAXFunc reference;
    charactersSAXFunc characters;
    ignorableWhitespaceSAXFunc ignorableWhitespace;
    processingInstructionSAXFunc processingInstruction;
    commentSAXFunc comment;
    warningSAXFunc warning;
    errorSAXFunc error;
    fatalErrorSAXFunc fatalError;
    getParameterEntitySAXFunc getParameterEntity;
    cdataBlockSAXFunc cdataBlock;
    externalSubsetSAXFunc externalSubset;
    unsigned int initialized;

    void *_private;
    startElementNsSAX2Func startElementNs;
    endElementNsSAX2Func endElementNs;
    xmlStructuredErrorFunc serror;
};




typedef struct _xmlSAXHandlerV1 xmlSAXHandlerV1;
typedef xmlSAXHandlerV1 *xmlSAXHandlerV1Ptr;
struct _xmlSAXHandlerV1 {
    internalSubsetSAXFunc internalSubset;
    isStandaloneSAXFunc isStandalone;
    hasInternalSubsetSAXFunc hasInternalSubset;
    hasExternalSubsetSAXFunc hasExternalSubset;
    resolveEntitySAXFunc resolveEntity;
    getEntitySAXFunc getEntity;
    entityDeclSAXFunc entityDecl;
    notationDeclSAXFunc notationDecl;
    attributeDeclSAXFunc attributeDecl;
    elementDeclSAXFunc elementDecl;
    unparsedEntityDeclSAXFunc unparsedEntityDecl;
    setDocumentLocatorSAXFunc setDocumentLocator;
    startDocumentSAXFunc startDocument;
    endDocumentSAXFunc endDocument;
    startElementSAXFunc startElement;
    endElementSAXFunc endElement;
    referenceSAXFunc reference;
    charactersSAXFunc characters;
    ignorableWhitespaceSAXFunc ignorableWhitespace;
    processingInstructionSAXFunc processingInstruction;
    commentSAXFunc comment;
    warningSAXFunc warning;
    errorSAXFunc error;
    fatalErrorSAXFunc fatalError;
    getParameterEntitySAXFunc getParameterEntity;
    cdataBlockSAXFunc cdataBlock;
    externalSubsetSAXFunc externalSubset;
    unsigned int initialized;
};
# 801 "./include/libxml/parser.h"
typedef xmlParserInputPtr (*xmlExternalEntityLoader) (const char *URL,
      const char *ID,
      xmlParserCtxtPtr context);





# 1 "./include/libxml/encoding.h" 1
# 28 "./include/libxml/encoding.h"
# 1 "/usr/include/iconv.h" 1 3 4
# 23 "/usr/include/iconv.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 1 3 4
# 24 "/usr/include/iconv.h" 2 3 4






# 29 "/usr/include/iconv.h" 3 4
typedef void *iconv_t;







extern iconv_t iconv_open (const char *__tocode, const char *__fromcode);




extern size_t iconv (iconv_t __cd, char **__restrict __inbuf,
       size_t *__restrict __inbytesleft,
       char **__restrict __outbuf,
       size_t *__restrict __outbytesleft);





extern int iconv_close (iconv_t __cd);


# 29 "./include/libxml/encoding.h" 2
# 58 "./include/libxml/encoding.h"

# 58 "./include/libxml/encoding.h"
typedef enum {
    XML_CHAR_ENCODING_ERROR= -1,
    XML_CHAR_ENCODING_NONE= 0,
    XML_CHAR_ENCODING_UTF8= 1,
    XML_CHAR_ENCODING_UTF16LE= 2,
    XML_CHAR_ENCODING_UTF16BE= 3,
    XML_CHAR_ENCODING_UCS4LE= 4,
    XML_CHAR_ENCODING_UCS4BE= 5,
    XML_CHAR_ENCODING_EBCDIC= 6,
    XML_CHAR_ENCODING_UCS4_2143=7,
    XML_CHAR_ENCODING_UCS4_3412=8,
    XML_CHAR_ENCODING_UCS2= 9,
    XML_CHAR_ENCODING_8859_1= 10,
    XML_CHAR_ENCODING_8859_2= 11,
    XML_CHAR_ENCODING_8859_3= 12,
    XML_CHAR_ENCODING_8859_4= 13,
    XML_CHAR_ENCODING_8859_5= 14,
    XML_CHAR_ENCODING_8859_6= 15,
    XML_CHAR_ENCODING_8859_7= 16,
    XML_CHAR_ENCODING_8859_8= 17,
    XML_CHAR_ENCODING_8859_9= 18,
    XML_CHAR_ENCODING_2022_JP= 19,
    XML_CHAR_ENCODING_SHIFT_JIS=20,
    XML_CHAR_ENCODING_EUC_JP= 21,
    XML_CHAR_ENCODING_ASCII= 22
} xmlCharEncoding;
# 101 "./include/libxml/encoding.h"
typedef int (* xmlCharEncodingInputFunc)(unsigned char *out, int *outlen,
                                         const unsigned char *in, int *inlen);
# 123 "./include/libxml/encoding.h"
typedef int (* xmlCharEncodingOutputFunc)(unsigned char *out, int *outlen,
                                          const unsigned char *in, int *inlen);
# 139 "./include/libxml/encoding.h"
typedef struct _xmlCharEncodingHandler xmlCharEncodingHandler;
typedef xmlCharEncodingHandler *xmlCharEncodingHandlerPtr;
struct _xmlCharEncodingHandler {
    char *name;
    xmlCharEncodingInputFunc input;
    xmlCharEncodingOutputFunc output;

    iconv_t iconv_in;
    iconv_t iconv_out;





};
# 166 "./include/libxml/encoding.h"
 void
 xmlInitCharEncodingHandlers (void);
 void
 xmlCleanupCharEncodingHandlers (void);
 void
 xmlRegisterCharEncodingHandler (xmlCharEncodingHandlerPtr handler);
 xmlCharEncodingHandlerPtr
 xmlGetCharEncodingHandler (xmlCharEncoding enc);
 xmlCharEncodingHandlerPtr
 xmlFindCharEncodingHandler (const char *name);
 xmlCharEncodingHandlerPtr
 xmlNewCharEncodingHandler (const char *name,
      xmlCharEncodingInputFunc input,
      xmlCharEncodingOutputFunc output);




 int
 xmlAddEncodingAlias (const char *name,
      const char *alias);
 int
 xmlDelEncodingAlias (const char *alias);
 const char *
 xmlGetEncodingAlias (const char *alias);
 void
 xmlCleanupEncodingAliases (void);
 xmlCharEncoding
 xmlParseCharEncoding (const char *name);
 const char *
 xmlGetCharEncodingName (xmlCharEncoding enc);




 xmlCharEncoding
 xmlDetectCharEncoding (const unsigned char *in,
      int len);

 int
 xmlCharEncOutFunc (xmlCharEncodingHandler *handler,
      xmlBufferPtr out,
      xmlBufferPtr in);

 int
 xmlCharEncInFunc (xmlCharEncodingHandler *handler,
      xmlBufferPtr out,
      xmlBufferPtr in);
 int
 xmlCharEncFirstLine (xmlCharEncodingHandler *handler,
      xmlBufferPtr out,
      xmlBufferPtr in);
 int
 xmlCharEncCloseFunc (xmlCharEncodingHandler *handler);





 int
 UTF8Toisolat1 (unsigned char *out,
      int *outlen,
      const unsigned char *in,
      int *inlen);

 int
 isolat1ToUTF8 (unsigned char *out,
      int *outlen,
      const unsigned char *in,
      int *inlen);
# 810 "./include/libxml/parser.h" 2
# 1 "./include/libxml/xmlIO.h" 1
# 34 "./include/libxml/xmlIO.h"
typedef int ( *xmlInputMatchCallback) (char const *filename);
# 43 "./include/libxml/xmlIO.h"
typedef void * ( *xmlInputOpenCallback) (char const *filename);
# 54 "./include/libxml/xmlIO.h"
typedef int ( *xmlInputReadCallback) (void * context, char * buffer, int len);
# 63 "./include/libxml/xmlIO.h"
typedef int ( *xmlInputCloseCallback) (void * context);
# 80 "./include/libxml/xmlIO.h"
typedef int ( *xmlOutputMatchCallback) (char const *filename);
# 89 "./include/libxml/xmlIO.h"
typedef void * ( *xmlOutputOpenCallback) (char const *filename);
# 100 "./include/libxml/xmlIO.h"
typedef int ( *xmlOutputWriteCallback) (void * context, const char * buffer,
                                       int len);
# 110 "./include/libxml/xmlIO.h"
typedef int ( *xmlOutputCloseCallback) (void * context);






# 1 "./include/libxml/globals.h" 1
# 118 "./include/libxml/xmlIO.h" 2







struct _xmlParserInputBuffer {
    void* context;
    xmlInputReadCallback readcallback;
    xmlInputCloseCallback closecallback;

    xmlCharEncodingHandlerPtr encoder;

    xmlBufPtr buffer;
    xmlBufPtr raw;
    int compressed;
    int error;
    unsigned long rawconsumed;
};



struct _xmlOutputBuffer {
    void* context;
    xmlOutputWriteCallback writecallback;
    xmlOutputCloseCallback closecallback;

    xmlCharEncodingHandlerPtr encoder;

    xmlBufPtr buffer;
    xmlBufPtr conv;
    int written;
    int error;
};





 void
 xmlCleanupInputCallbacks (void);

 int
 xmlPopInputCallbacks (void);

 void
 xmlRegisterDefaultInputCallbacks (void);
 xmlParserInputBufferPtr
 xmlAllocParserInputBuffer (xmlCharEncoding enc);

 xmlParserInputBufferPtr
 xmlParserInputBufferCreateFilename (const char *URI,
                                                 xmlCharEncoding enc);
 xmlParserInputBufferPtr
 xmlParserInputBufferCreateFile (FILE *file,
                                                 xmlCharEncoding enc);
 xmlParserInputBufferPtr
 xmlParserInputBufferCreateFd (int fd,
                                          xmlCharEncoding enc);
 xmlParserInputBufferPtr
 xmlParserInputBufferCreateMem (const char *mem, int size,
                                          xmlCharEncoding enc);
 xmlParserInputBufferPtr
 xmlParserInputBufferCreateStatic (const char *mem, int size,
                                          xmlCharEncoding enc);
 xmlParserInputBufferPtr
 xmlParserInputBufferCreateIO (xmlInputReadCallback ioread,
       xmlInputCloseCallback ioclose,
       void *ioctx,
                                          xmlCharEncoding enc);
 int
 xmlParserInputBufferRead (xmlParserInputBufferPtr in,
       int len);
 int
 xmlParserInputBufferGrow (xmlParserInputBufferPtr in,
       int len);
 int
 xmlParserInputBufferPush (xmlParserInputBufferPtr in,
       int len,
       const char *buf);
 void
 xmlFreeParserInputBuffer (xmlParserInputBufferPtr in);
 char *
 xmlParserGetDirectory (const char *filename);

 int
 xmlRegisterInputCallbacks (xmlInputMatchCallback matchFunc,
       xmlInputOpenCallback openFunc,
       xmlInputReadCallback readFunc,
       xmlInputCloseCallback closeFunc);

xmlParserInputBufferPtr
 __xmlParserInputBufferCreateFilename(const char *URI,
          xmlCharEncoding enc);





 void
 xmlCleanupOutputCallbacks (void);
 void
 xmlRegisterDefaultOutputCallbacks(void);
 xmlOutputBufferPtr
 xmlAllocOutputBuffer (xmlCharEncodingHandlerPtr encoder);

 xmlOutputBufferPtr
 xmlOutputBufferCreateFilename (const char *URI,
      xmlCharEncodingHandlerPtr encoder,
      int compression);

 xmlOutputBufferPtr
 xmlOutputBufferCreateFile (FILE *file,
      xmlCharEncodingHandlerPtr encoder);

 xmlOutputBufferPtr
 xmlOutputBufferCreateBuffer (xmlBufferPtr buffer,
      xmlCharEncodingHandlerPtr encoder);

 xmlOutputBufferPtr
 xmlOutputBufferCreateFd (int fd,
      xmlCharEncodingHandlerPtr encoder);

 xmlOutputBufferPtr
 xmlOutputBufferCreateIO (xmlOutputWriteCallback iowrite,
      xmlOutputCloseCallback ioclose,
      void *ioctx,
      xmlCharEncodingHandlerPtr encoder);


 const xmlChar *
        xmlOutputBufferGetContent (xmlOutputBufferPtr out);
 size_t
        xmlOutputBufferGetSize (xmlOutputBufferPtr out);

 int
 xmlOutputBufferWrite (xmlOutputBufferPtr out,
      int len,
      const char *buf);
 int
 xmlOutputBufferWriteString (xmlOutputBufferPtr out,
      const char *str);
 int
 xmlOutputBufferWriteEscape (xmlOutputBufferPtr out,
      const xmlChar *str,
      xmlCharEncodingOutputFunc escaping);

 int
 xmlOutputBufferFlush (xmlOutputBufferPtr out);
 int
 xmlOutputBufferClose (xmlOutputBufferPtr out);

 int
 xmlRegisterOutputCallbacks (xmlOutputMatchCallback matchFunc,
      xmlOutputOpenCallback openFunc,
      xmlOutputWriteCallback writeFunc,
      xmlOutputCloseCallback closeFunc);

xmlOutputBufferPtr
 __xmlOutputBufferCreateFilename(const char *URI,
                              xmlCharEncodingHandlerPtr encoder,
                              int compression);



 void
 xmlRegisterHTTPPostCallbacks (void );




 xmlParserInputPtr
 xmlCheckHTTPInput (xmlParserCtxtPtr ctxt,
      xmlParserInputPtr ret);




 xmlParserInputPtr
 xmlNoNetExternalEntityLoader (const char *URL,
      const char *ID,
      xmlParserCtxtPtr ctxt);





 xmlChar *
 xmlNormalizeWindowsPath (const xmlChar *path);

 int
 xmlCheckFilename (const char *path);



 int
 xmlFileMatch (const char *filename);
 void *
 xmlFileOpen (const char *filename);
 int
 xmlFileRead (void * context,
      char * buffer,
      int len);
 int
 xmlFileClose (void * context);





 int
 xmlIOHTTPMatch (const char *filename);
 void *
 xmlIOHTTPOpen (const char *filename);

 void *
 xmlIOHTTPOpenW (const char * post_uri,
      int compression );

 int
 xmlIOHTTPRead (void * context,
      char * buffer,
      int len);
 int
 xmlIOHTTPClose (void * context);






 int
 xmlIOFTPMatch (const char *filename);
 void *
 xmlIOFTPOpen (const char *filename);
 int
 xmlIOFTPRead (void * context,
      char * buffer,
      int len);
 int
 xmlIOFTPClose (void * context);
# 811 "./include/libxml/parser.h" 2
# 821 "./include/libxml/parser.h"
 void
  xmlInitParser (void);
 void
  xmlCleanupParser (void);




 int
  xmlParserInputRead (xmlParserInputPtr in,
      int len);
 int
  xmlParserInputGrow (xmlParserInputPtr in,
      int len);





 xmlDocPtr
  xmlParseDoc (const xmlChar *cur);
 xmlDocPtr
  xmlParseFile (const char *filename);
 xmlDocPtr
  xmlParseMemory (const char *buffer,
      int size);

 int
  xmlSubstituteEntitiesDefault(int val);
 int
  xmlKeepBlanksDefault (int val);
 void
  xmlStopParser (xmlParserCtxtPtr ctxt);
 int
  xmlPedanticParserDefault(int val);
 int
  xmlLineNumbersDefault (int val);





 xmlDocPtr
  xmlRecoverDoc (const xmlChar *cur);
 xmlDocPtr
  xmlRecoverMemory (const char *buffer,
      int size);
 xmlDocPtr
  xmlRecoverFile (const char *filename);





 int
  xmlParseDocument (xmlParserCtxtPtr ctxt);
 int
  xmlParseExtParsedEnt (xmlParserCtxtPtr ctxt);

 int
  xmlSAXUserParseFile (xmlSAXHandlerPtr sax,
      void *user_data,
      const char *filename);
 int
  xmlSAXUserParseMemory (xmlSAXHandlerPtr sax,
      void *user_data,
      const char *buffer,
      int size);
 xmlDocPtr
  xmlSAXParseDoc (xmlSAXHandlerPtr sax,
      const xmlChar *cur,
      int recovery);
 xmlDocPtr
  xmlSAXParseMemory (xmlSAXHandlerPtr sax,
      const char *buffer,
      int size,
      int recovery);
 xmlDocPtr
  xmlSAXParseMemoryWithData (xmlSAXHandlerPtr sax,
      const char *buffer,
      int size,
      int recovery,
      void *data);
 xmlDocPtr
  xmlSAXParseFile (xmlSAXHandlerPtr sax,
      const char *filename,
      int recovery);
 xmlDocPtr
  xmlSAXParseFileWithData (xmlSAXHandlerPtr sax,
      const char *filename,
      int recovery,
      void *data);
 xmlDocPtr
  xmlSAXParseEntity (xmlSAXHandlerPtr sax,
      const char *filename);
 xmlDocPtr
  xmlParseEntity (const char *filename);



 xmlDtdPtr
  xmlSAXParseDTD (xmlSAXHandlerPtr sax,
      const xmlChar *ExternalID,
      const xmlChar *SystemID);
 xmlDtdPtr
  xmlParseDTD (const xmlChar *ExternalID,
      const xmlChar *SystemID);
 xmlDtdPtr
  xmlIOParseDTD (xmlSAXHandlerPtr sax,
      xmlParserInputBufferPtr input,
      xmlCharEncoding enc);


 int
  xmlParseBalancedChunkMemory(xmlDocPtr doc,
      xmlSAXHandlerPtr sax,
      void *user_data,
      int depth,
      const xmlChar *string,
      xmlNodePtr *lst);

 xmlParserErrors
  xmlParseInNodeContext (xmlNodePtr node,
      const char *data,
      int datalen,
      int options,
      xmlNodePtr *lst);

 int
  xmlParseBalancedChunkMemoryRecover(xmlDocPtr doc,
                     xmlSAXHandlerPtr sax,
                     void *user_data,
                     int depth,
                     const xmlChar *string,
                     xmlNodePtr *lst,
                     int recover);
 int
  xmlParseExternalEntity (xmlDocPtr doc,
      xmlSAXHandlerPtr sax,
      void *user_data,
      int depth,
      const xmlChar *URL,
      const xmlChar *ID,
      xmlNodePtr *lst);

 int
  xmlParseCtxtExternalEntity(xmlParserCtxtPtr ctx,
      const xmlChar *URL,
      const xmlChar *ID,
      xmlNodePtr *lst);




 xmlParserCtxtPtr
  xmlNewParserCtxt (void);
 int
  xmlInitParserCtxt (xmlParserCtxtPtr ctxt);
 void
  xmlClearParserCtxt (xmlParserCtxtPtr ctxt);
 void
  xmlFreeParserCtxt (xmlParserCtxtPtr ctxt);

 void
  xmlSetupParserForBuffer (xmlParserCtxtPtr ctxt,
      const xmlChar* buffer,
      const char *filename);

 xmlParserCtxtPtr
  xmlCreateDocParserCtxt (const xmlChar *cur);





 int
  xmlGetFeaturesList (int *len,
      const char **result);
 int
  xmlGetFeature (xmlParserCtxtPtr ctxt,
      const char *name,
      void *result);
 int
  xmlSetFeature (xmlParserCtxtPtr ctxt,
      const char *name,
      void *value);






 xmlParserCtxtPtr
  xmlCreatePushParserCtxt(xmlSAXHandlerPtr sax,
      void *user_data,
      const char *chunk,
      int size,
      const char *filename);
 int
  xmlParseChunk (xmlParserCtxtPtr ctxt,
      const char *chunk,
      int size,
      int terminate);






 xmlParserCtxtPtr
  xmlCreateIOParserCtxt (xmlSAXHandlerPtr sax,
      void *user_data,
      xmlInputReadCallback ioread,
      xmlInputCloseCallback ioclose,
      void *ioctx,
      xmlCharEncoding enc);

 xmlParserInputPtr
  xmlNewIOInputStream (xmlParserCtxtPtr ctxt,
      xmlParserInputBufferPtr input,
      xmlCharEncoding enc);




 const xmlParserNodeInfo*
  xmlParserFindNodeInfo (const xmlParserCtxtPtr ctxt,
             const xmlNodePtr node);
 void
  xmlInitNodeInfoSeq (xmlParserNodeInfoSeqPtr seq);
 void
  xmlClearNodeInfoSeq (xmlParserNodeInfoSeqPtr seq);
 unsigned long
  xmlParserFindNodeInfoIndex(const xmlParserNodeInfoSeqPtr seq,
                                         const xmlNodePtr node);
 void
  xmlParserAddNodeInfo (xmlParserCtxtPtr ctxt,
      const xmlParserNodeInfoPtr info);





 void
  xmlSetExternalEntityLoader(xmlExternalEntityLoader f);
 xmlExternalEntityLoader
  xmlGetExternalEntityLoader(void);
 xmlParserInputPtr
  xmlLoadExternalEntity (const char *URL,
      const char *ID,
      xmlParserCtxtPtr ctxt);




 long
  xmlByteConsumed (xmlParserCtxtPtr ctxt);
# 1088 "./include/libxml/parser.h"
typedef enum {
    XML_PARSE_RECOVER = 1<<0,
    XML_PARSE_NOENT = 1<<1,
    XML_PARSE_DTDLOAD = 1<<2,
    XML_PARSE_DTDATTR = 1<<3,
    XML_PARSE_DTDVALID = 1<<4,
    XML_PARSE_NOERROR = 1<<5,
    XML_PARSE_NOWARNING = 1<<6,
    XML_PARSE_PEDANTIC = 1<<7,
    XML_PARSE_NOBLANKS = 1<<8,
    XML_PARSE_SAX1 = 1<<9,
    XML_PARSE_XINCLUDE = 1<<10,
    XML_PARSE_NONET = 1<<11,
    XML_PARSE_NODICT = 1<<12,
    XML_PARSE_NSCLEAN = 1<<13,
    XML_PARSE_NOCDATA = 1<<14,
    XML_PARSE_NOXINCNODE= 1<<15,
    XML_PARSE_COMPACT = 1<<16,


    XML_PARSE_OLD10 = 1<<17,
    XML_PARSE_NOBASEFIX = 1<<18,
    XML_PARSE_HUGE = 1<<19,
    XML_PARSE_OLDSAX = 1<<20,
    XML_PARSE_IGNORE_ENC= 1<<21,
    XML_PARSE_BIG_LINES = 1<<22
} xmlParserOption;

 void
  xmlCtxtReset (xmlParserCtxtPtr ctxt);
 int
  xmlCtxtResetPush (xmlParserCtxtPtr ctxt,
      const char *chunk,
      int size,
      const char *filename,
      const char *encoding);
 int
  xmlCtxtUseOptions (xmlParserCtxtPtr ctxt,
      int options);
 xmlDocPtr
  xmlReadDoc (const xmlChar *cur,
      const char *URL,
      const char *encoding,
      int options);
 xmlDocPtr
  xmlReadFile (const char *URL,
      const char *encoding,
      int options);
 xmlDocPtr
  xmlReadMemory (const char *buffer,
      int size,
      const char *URL,
      const char *encoding,
      int options);
 xmlDocPtr
  xmlReadFd (int fd,
      const char *URL,
      const char *encoding,
      int options);
 xmlDocPtr
  xmlReadIO (xmlInputReadCallback ioread,
      xmlInputCloseCallback ioclose,
      void *ioctx,
      const char *URL,
      const char *encoding,
      int options);
 xmlDocPtr
  xmlCtxtReadDoc (xmlParserCtxtPtr ctxt,
      const xmlChar *cur,
      const char *URL,
      const char *encoding,
      int options);
 xmlDocPtr
  xmlCtxtReadFile (xmlParserCtxtPtr ctxt,
      const char *filename,
      const char *encoding,
      int options);
 xmlDocPtr
  xmlCtxtReadMemory (xmlParserCtxtPtr ctxt,
      const char *buffer,
      int size,
      const char *URL,
      const char *encoding,
      int options);
 xmlDocPtr
  xmlCtxtReadFd (xmlParserCtxtPtr ctxt,
      int fd,
      const char *URL,
      const char *encoding,
      int options);
 xmlDocPtr
  xmlCtxtReadIO (xmlParserCtxtPtr ctxt,
      xmlInputReadCallback ioread,
      xmlInputCloseCallback ioclose,
      void *ioctx,
      const char *URL,
      const char *encoding,
      int options);
# 1197 "./include/libxml/parser.h"
typedef enum {
    XML_WITH_THREAD = 1,
    XML_WITH_TREE = 2,
    XML_WITH_OUTPUT = 3,
    XML_WITH_PUSH = 4,
    XML_WITH_READER = 5,
    XML_WITH_PATTERN = 6,
    XML_WITH_WRITER = 7,
    XML_WITH_SAX1 = 8,
    XML_WITH_FTP = 9,
    XML_WITH_HTTP = 10,
    XML_WITH_VALID = 11,
    XML_WITH_HTML = 12,
    XML_WITH_LEGACY = 13,
    XML_WITH_C14N = 14,
    XML_WITH_CATALOG = 15,
    XML_WITH_XPATH = 16,
    XML_WITH_XPTR = 17,
    XML_WITH_XINCLUDE = 18,
    XML_WITH_ICONV = 19,
    XML_WITH_ISO8859X = 20,
    XML_WITH_UNICODE = 21,
    XML_WITH_REGEXP = 22,
    XML_WITH_AUTOMATA = 23,
    XML_WITH_EXPR = 24,
    XML_WITH_SCHEMAS = 25,
    XML_WITH_SCHEMATRON = 26,
    XML_WITH_MODULES = 27,
    XML_WITH_DEBUG = 28,
    XML_WITH_DEBUG_MEM = 29,
    XML_WITH_DEBUG_RUN = 30,
    XML_WITH_ZLIB = 31,
    XML_WITH_ICU = 32,
    XML_WITH_LZMA = 33,
    XML_WITH_NONE = 99999
} xmlFeature;

 int
  xmlHasFeature (xmlFeature feature);
# 19 "./include/libxml/globals.h" 2
# 1 "./include/libxml/xmlerror.h" 1
# 20 "./include/libxml/globals.h" 2
# 1 "./include/libxml/SAX.h" 1
# 16 "./include/libxml/SAX.h"
# 1 "/usr/include/stdlib.h" 1 3 4
# 25 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 26 "/usr/include/stdlib.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 1 3 4
# 321 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 3 4

# 321 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 3 4
typedef int wchar_t;
# 32 "/usr/include/stdlib.h" 2 3 4







# 1 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 1 3 4
# 52 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3 4
typedef enum
{
  P_ALL,
  P_PID,
  P_PGID
} idtype_t;
# 40 "/usr/include/stdlib.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 1 3 4
# 41 "/usr/include/stdlib.h" 2 3 4
# 55 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 1 3 4
# 120 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/long-double.h" 1 3 4
# 25 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 2 3 4
# 121 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 2 3 4
# 56 "/usr/include/stdlib.h" 2 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;





__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;
# 97 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));



extern double atof (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));

extern int atoi (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));

extern long int atol (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));



__extension__ extern long long int atoll (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));



extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 176 "/usr/include/stdlib.h" 3 4
extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



__extension__
extern long long int strtoq (const char *__restrict __nptr,
        char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtouq (const char *__restrict __nptr,
           char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));




__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 360 "/usr/include/stdlib.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__nothrow__ , __leaf__)) atoi (const char *__nptr)
{
  return (int) strtol (__nptr, (char **) ((void *)0), 10);
}
extern __inline __attribute__ ((__gnu_inline__)) long int
__attribute__ ((__nothrow__ , __leaf__)) atol (const char *__nptr)
{
  return strtol (__nptr, (char **) ((void *)0), 10);
}


__extension__ extern __inline __attribute__ ((__gnu_inline__)) long long int
__attribute__ ((__nothrow__ , __leaf__)) atoll (const char *__nptr)
{
  return strtoll (__nptr, (char **) ((void *)0), 10);
}
# 385 "/usr/include/stdlib.h" 3 4
extern char *l64a (long int __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));


extern long int a64l (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));




# 1 "/usr/include/x86_64-linux-gnu/sys/types.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4






typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;


typedef __loff_t loff_t;






typedef __ino64_t ino_t;
# 59 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef __dev_t dev_t;




typedef __gid_t gid_t;




typedef __mode_t mode_t;




typedef __nlink_t nlink_t;




typedef __uid_t uid_t;
# 97 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef __pid_t pid_t;





typedef __id_t id_t;
# 114 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;





typedef __key_t key_t;




# 1 "/usr/include/x86_64-linux-gnu/bits/types/clock_t.h" 1 3 4






typedef __clock_t clock_t;
# 127 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h" 1 3 4






typedef __clockid_t clockid_t;
# 129 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/time_t.h" 1 3 4






typedef __time_t time_t;
# 130 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/timer_t.h" 1 3 4






typedef __timer_t timer_t;
# 131 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4
# 144 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 1 3 4
# 145 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;




# 1 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3 4
typedef __int8_t int8_t;
typedef __int16_t int16_t;
typedef __int32_t int32_t;
typedef __int64_t int64_t;
# 156 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4


typedef __uint8_t u_int8_t;
typedef __uint16_t u_int16_t;
typedef __uint32_t u_int32_t;
typedef __uint64_t u_int64_t;


typedef int register_t __attribute__ ((__mode__ (__word__)));
# 176 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/include/endian.h" 1 3 4
# 24 "/usr/include/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/endian.h" 1 3 4
# 35 "/usr/include/x86_64-linux-gnu/bits/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/endianness.h" 1 3 4
# 36 "/usr/include/x86_64-linux-gnu/bits/endian.h" 2 3 4
# 25 "/usr/include/endian.h" 2 3 4
# 35 "/usr/include/endian.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 1 3 4
# 33 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
static __inline __uint16_t
__bswap_16 (__uint16_t __bsx)
{

  return __builtin_bswap16 (__bsx);



}






static __inline __uint32_t
__bswap_32 (__uint32_t __bsx)
{

  return __builtin_bswap32 (__bsx);



}
# 69 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3 4
__extension__ static __inline __uint64_t
__bswap_64 (__uint64_t __bsx)
{

  return __builtin_bswap64 (__bsx);



}
# 36 "/usr/include/endian.h" 2 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 1 3 4
# 32 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3 4
static __inline __uint16_t
__uint16_identity (__uint16_t __x)
{
  return __x;
}

static __inline __uint32_t
__uint32_identity (__uint32_t __x)
{
  return __x;
}

static __inline __uint64_t
__uint64_identity (__uint64_t __x)
{
  return __x;
}
# 37 "/usr/include/endian.h" 2 3 4
# 177 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/sys/select.h" 1 3 4
# 30 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/select.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/select.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/select.h" 2 3 4
# 31 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4


# 1 "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h" 1 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 1 3 4




typedef struct
{
  unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
} __sigset_t;
# 5 "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h" 2 3 4


typedef __sigset_t sigset_t;
# 34 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 1 3 4







struct timeval
{
  __time_t tv_sec;
  __suseconds_t tv_usec;
};
# 38 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 1 3 4
# 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3 4
struct timespec
{
  __time_t tv_sec;



  __syscall_slong_t tv_nsec;
# 26 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3 4
};
# 40 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4



typedef __suseconds_t suseconds_t;





typedef long int __fd_mask;
# 59 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
typedef struct
  {






    __fd_mask __fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];


  } fd_set;






typedef __fd_mask fd_mask;
# 91 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4

# 101 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
# 113 "/usr/include/x86_64-linux-gnu/sys/select.h" 3 4
extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask);





# 1 "/usr/include/x86_64-linux-gnu/bits/select2.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/select2.h" 3 4
extern long int __fdelt_chk (long int __d);
extern long int __fdelt_warn (long int __d)
  __attribute__((__warning__ ("bit outside of fd_set selected")));
# 124 "/usr/include/x86_64-linux-gnu/sys/select.h" 2 3 4



# 180 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4





typedef __blksize_t blksize_t;
# 205 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
typedef __blkcnt64_t blkcnt_t;



typedef __fsblkcnt64_t fsblkcnt_t;



typedef __fsfilcnt64_t fsfilcnt_t;
# 227 "/usr/include/x86_64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 1 3 4
# 44 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 1 3 4
# 21 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h" 2 3 4
# 45 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4




typedef struct __pthread_internal_list
{
  struct __pthread_internal_list *__prev;
  struct __pthread_internal_list *__next;
} __pthread_list_t;

typedef struct __pthread_internal_slist
{
  struct __pthread_internal_slist *__next;
} __pthread_slist_t;
# 74 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3 4
struct __pthread_mutex_s
{
  int __lock;
  unsigned int __count;
  int __owner;

  unsigned int __nusers;



  int __kind;

  short __spins;
  short __elision;
  __pthread_list_t __list;
# 53 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3 4
};
# 75 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4
# 87 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3 4
struct __pthread_rwlock_arch_t
{
  unsigned int __readers;
  unsigned int __writers;
  unsigned int __wrphase_futex;
  unsigned int __writers_futex;
  unsigned int __pad3;
  unsigned int __pad4;

  int __cur_writer;
  int __shared;
  signed char __rwelision;




  unsigned char __pad1[7];


  unsigned long int __pad2;


  unsigned int __flags;
# 55 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3 4
};
# 88 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 2 3 4




struct __pthread_cond_s
{
  __extension__ union
  {
    __extension__ unsigned long long int __wseq;
    struct
    {
      unsigned int __low;
      unsigned int __high;
    } __wseq32;
  };
  __extension__ union
  {
    __extension__ unsigned long long int __g1_start;
    struct
    {
      unsigned int __low;
      unsigned int __high;
    } __g1_start32;
  };
  unsigned int __g_refs[2] ;
  unsigned int __g_size[2];
  unsigned int __g1_orig_size;
  unsigned int __wrefs;
  unsigned int __g_signals[2];
};
# 24 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 2 3 4



typedef unsigned long int pthread_t;




typedef union
{
  char __size[4];
  int __align;
} pthread_mutexattr_t;




typedef union
{
  char __size[4];
  int __align;
} pthread_condattr_t;



typedef unsigned int pthread_key_t;



typedef int pthread_once_t;


union pthread_attr_t
{
  char __size[56];
  long int __align;
};

typedef union pthread_attr_t pthread_attr_t;




typedef union
{
  struct __pthread_mutex_s __data;
  char __size[40];
  long int __align;
} pthread_mutex_t;


typedef union
{
  struct __pthread_cond_s __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;





typedef union
{
  struct __pthread_rwlock_arch_t __data;
  char __size[56];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;





typedef volatile int pthread_spinlock_t;




typedef union
{
  char __size[32];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;
# 228 "/usr/include/x86_64-linux-gnu/sys/types.h" 2 3 4



# 395 "/usr/include/stdlib.h" 2 3 4






extern long int random (void) __attribute__ ((__nothrow__ , __leaf__));


extern void srandom (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));





extern char *initstate (unsigned int __seed, char *__statebuf,
   size_t __statelen) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));



extern char *setstate (char *__statebuf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







struct random_data
  {
    int32_t *fptr;
    int32_t *rptr;
    int32_t *state;
    int rand_type;
    int rand_deg;
    int rand_sep;
    int32_t *end_ptr;
  };

extern int random_r (struct random_data *__restrict __buf,
       int32_t *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int srandom_r (unsigned int __seed, struct random_data *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

extern int initstate_r (unsigned int __seed, char *__restrict __statebuf,
   size_t __statelen,
   struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4)));

extern int setstate_r (char *__restrict __statebuf,
         struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));





extern int rand (void) __attribute__ ((__nothrow__ , __leaf__));

extern void srand (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));



extern int rand_r (unsigned int *__seed) __attribute__ ((__nothrow__ , __leaf__));







extern double drand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern double erand48 (unsigned short int __xsubi[3]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int lrand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern long int nrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int mrand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern long int jrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern void srand48 (long int __seedval) __attribute__ ((__nothrow__ , __leaf__));
extern unsigned short int *seed48 (unsigned short int __seed16v[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
extern void lcong48 (unsigned short int __param[7]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





struct drand48_data
  {
    unsigned short int __x[3];
    unsigned short int __old_x[3];
    unsigned short int __c;
    unsigned short int __init;
    __extension__ unsigned long long int __a;

  };


extern int drand48_r (struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int erand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int lrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int nrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int mrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int jrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int srand48_r (long int __seedval, struct drand48_data *__buffer)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

extern int seed48_r (unsigned short int __seed16v[3],
       struct drand48_data *__buffer) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int lcong48_r (unsigned short int __param[7],
        struct drand48_data *__buffer)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__))
     __attribute__ ((__alloc_size__ (1))) __attribute__ ((__warn_unused_result__));

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__alloc_size__ (1, 2))) __attribute__ ((__warn_unused_result__));






extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__)) __attribute__ ((__alloc_size__ (2)));







extern void *reallocarray (void *__ptr, size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__))
     __attribute__ ((__alloc_size__ (2, 3)));



extern void free (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));


# 1 "/usr/include/alloca.h" 1 3 4
# 24 "/usr/include/alloca.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 1 3 4
# 25 "/usr/include/alloca.h" 2 3 4







extern void *alloca (size_t __size) __attribute__ ((__nothrow__ , __leaf__));






# 569 "/usr/include/stdlib.h" 2 3 4





extern void *valloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__))
     __attribute__ ((__alloc_size__ (1))) __attribute__ ((__warn_unused_result__));




extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));




extern void *aligned_alloc (size_t __alignment, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__alloc_size__ (2))) __attribute__ ((__warn_unused_result__));



extern void abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







extern int at_quick_exit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern void exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));





extern void quick_exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));





extern void _Exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));




extern char *getenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 647 "/usr/include/stdlib.h" 3 4
extern int putenv (char *__string) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int setenv (const char *__name, const char *__value, int __replace)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));


extern int unsetenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern int clearenv (void) __attribute__ ((__nothrow__ , __leaf__));
# 675 "/usr/include/stdlib.h" 3 4
extern char *mktemp (char *__template) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 691 "/usr/include/stdlib.h" 3 4
extern int mkstemp (char *__template) __asm__ ("" "mkstemp64")
     __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 713 "/usr/include/stdlib.h" 3 4
extern int mkstemps (char *__template, int __suffixlen) __asm__ ("" "mkstemps64")
                     __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 731 "/usr/include/stdlib.h" 3 4
extern char *mkdtemp (char *__template) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 784 "/usr/include/stdlib.h" 3 4
extern int system (const char *__command) __attribute__ ((__warn_unused_result__));
# 800 "/usr/include/stdlib.h" 3 4
extern char *realpath (const char *__restrict __name,
         char *__restrict __resolved) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));






typedef int (*__compar_fn_t) (const void *, const void *);
# 820 "/usr/include/stdlib.h" 3 4
extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) __attribute__ ((__warn_unused_result__));


# 1 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 1 3 4
# 19 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) void *
bsearch (const void *__key, const void *__base, size_t __nmemb, size_t __size,
  __compar_fn_t __compar)
{
  size_t __l, __u, __idx;
  const void *__p;
  int __comparison;

  __l = 0;
  __u = __nmemb;
  while (__l < __u)
    {
      __idx = (__l + __u) / 2;
      __p = (void *) (((const char *) __base) + (__idx * __size));
      __comparison = (*__compar) (__key, __p);
      if (__comparison < 0)
 __u = __idx;
      else if (__comparison > 0)
 __l = __idx + 1;
      else
 return (void *) __p;
    }

  return ((void *)0);
}
# 826 "/usr/include/stdlib.h" 2 3 4




extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
# 840 "/usr/include/stdlib.h" 3 4
extern int abs (int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));
extern long int labs (long int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));


__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));






extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));


__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) __attribute__ ((__warn_unused_result__));
# 872 "/usr/include/stdlib.h" 3 4
extern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));




extern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));




extern char *gcvt (double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3))) __attribute__ ((__warn_unused_result__));




extern char *qecvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));
extern char *qfcvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) __attribute__ ((__warn_unused_result__));
extern char *qgcvt (long double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3))) __attribute__ ((__warn_unused_result__));




extern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));

extern int qecvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int qfcvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));





extern int mblen (const char *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));


extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__ , __leaf__));



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__));







extern int rpmatch (const char *__response) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__warn_unused_result__));
# 957 "/usr/include/stdlib.h" 3 4
extern int getsubopt (char **__restrict __optionp,
        char *const *__restrict __tokens,
        char **__restrict __valuep)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2, 3))) __attribute__ ((__warn_unused_result__));
# 1003 "/usr/include/stdlib.h" 3 4
extern int getloadavg (double __loadavg[], int __nelem)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 1013 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 1 3 4
# 24 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) double
__attribute__ ((__nothrow__ , __leaf__)) atof (const char *__nptr)
{
  return strtod (__nptr, (char **) ((void *)0));
}
# 1014 "/usr/include/stdlib.h" 2 3 4



# 1 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 1 3 4
# 23 "/usr/include/x86_64-linux-gnu/bits/stdlib.h" 3 4
extern char *__realpath_chk (const char *__restrict __name,
        char *__restrict __resolved,
        size_t __resolvedlen) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
extern char *__realpath_alias (const char *__restrict __name, char *__restrict __resolved) __asm__ ("" "realpath") __attribute__ ((__nothrow__ , __leaf__))

                                                 __attribute__ ((__warn_unused_result__));
extern char *__realpath_chk_warn (const char *__restrict __name, char *__restrict __resolved, size_t __resolvedlen) __asm__ ("" "__realpath_chk") __attribute__ ((__nothrow__ , __leaf__))


                                                __attribute__ ((__warn_unused_result__))
     __attribute__((__warning__ ("second argument of realpath must be either NULL or at " "least PATH_MAX bytes long buffer")))
                                      ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) char *
__attribute__ ((__nothrow__ , __leaf__)) realpath (const char *__restrict __name, char *__restrict __resolved)
{
  if (__builtin_object_size (__resolved, 2 > 1) != (size_t) -1)
    {

      if (__builtin_object_size (__resolved, 2 > 1) < 4096)
 return __realpath_chk_warn (__name, __resolved, __builtin_object_size (__resolved, 2 > 1));

      return __realpath_chk (__name, __resolved, __builtin_object_size (__resolved, 2 > 1));
    }

  return __realpath_alias (__name, __resolved);
}


extern int __ptsname_r_chk (int __fd, char *__buf, size_t __buflen,
       size_t __nreal) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
extern int __ptsname_r_alias (int __fd, char *__buf, size_t __buflen) __asm__ ("" "ptsname_r") __attribute__ ((__nothrow__ , __leaf__))

     __attribute__ ((__nonnull__ (2)));
extern int __ptsname_r_chk_warn (int __fd, char *__buf, size_t __buflen, size_t __nreal) __asm__ ("" "__ptsname_r_chk") __attribute__ ((__nothrow__ , __leaf__))


     __attribute__ ((__nonnull__ (2))) __attribute__((__warning__ ("ptsname_r called with buflen bigger than " "size of buf")))
                   ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) int
__attribute__ ((__nothrow__ , __leaf__)) ptsname_r (int __fd, char *__buf, size_t __buflen)
{
  if (__builtin_object_size (__buf, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__buflen))
 return __ptsname_r_chk (__fd, __buf, __buflen, __builtin_object_size (__buf, 2 > 1));
      if (__buflen > __builtin_object_size (__buf, 2 > 1))
 return __ptsname_r_chk_warn (__fd, __buf, __buflen, __builtin_object_size (__buf, 2 > 1));
    }
  return __ptsname_r_alias (__fd, __buf, __buflen);
}


extern int __wctomb_chk (char *__s, wchar_t __wchar, size_t __buflen)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
extern int __wctomb_alias (char *__s, wchar_t __wchar) __asm__ ("" "wctomb") __attribute__ ((__nothrow__ , __leaf__))
              __attribute__ ((__warn_unused_result__));

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) __attribute__ ((__warn_unused_result__)) int
__attribute__ ((__nothrow__ , __leaf__)) wctomb (char *__s, wchar_t __wchar)
{







  if (__builtin_object_size (__s, 2 > 1) != (size_t) -1 && 16 > __builtin_object_size (__s, 2 > 1))
    return __wctomb_chk (__s, __wchar, __builtin_object_size (__s, 2 > 1));
  return __wctomb_alias (__s, __wchar);
}


extern size_t __mbstowcs_chk (wchar_t *__restrict __dst,
         const char *__restrict __src,
         size_t __len, size_t __dstlen) __attribute__ ((__nothrow__ , __leaf__));
extern size_t __mbstowcs_alias (wchar_t *__restrict __dst, const char *__restrict __src, size_t __len) __asm__ ("" "mbstowcs") __attribute__ ((__nothrow__ , __leaf__))


                                  ;
extern size_t __mbstowcs_chk_warn (wchar_t *__restrict __dst, const char *__restrict __src, size_t __len, size_t __dstlen) __asm__ ("" "__mbstowcs_chk") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__((__warning__ ("mbstowcs called with dst buffer smaller than len " "* sizeof (wchar_t)")))
                        ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) size_t
__attribute__ ((__nothrow__ , __leaf__)) mbstowcs (wchar_t *__restrict __dst, const char *__restrict __src, size_t __len)

{
  if (__builtin_object_size (__dst, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__len))
 return __mbstowcs_chk (__dst, __src, __len,
          __builtin_object_size (__dst, 2 > 1) / sizeof (wchar_t));

      if (__len > __builtin_object_size (__dst, 2 > 1) / sizeof (wchar_t))
 return __mbstowcs_chk_warn (__dst, __src, __len,
         __builtin_object_size (__dst, 2 > 1) / sizeof (wchar_t));
    }
  return __mbstowcs_alias (__dst, __src, __len);
}


extern size_t __wcstombs_chk (char *__restrict __dst,
         const wchar_t *__restrict __src,
         size_t __len, size_t __dstlen) __attribute__ ((__nothrow__ , __leaf__));
extern size_t __wcstombs_alias (char *__restrict __dst, const wchar_t *__restrict __src, size_t __len) __asm__ ("" "wcstombs") __attribute__ ((__nothrow__ , __leaf__))


                                  ;
extern size_t __wcstombs_chk_warn (char *__restrict __dst, const wchar_t *__restrict __src, size_t __len, size_t __dstlen) __asm__ ("" "__wcstombs_chk") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__((__warning__ ("wcstombs called with dst buffer smaller than len")));

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) size_t
__attribute__ ((__nothrow__ , __leaf__)) wcstombs (char *__restrict __dst, const wchar_t *__restrict __src, size_t __len)

{
  if (__builtin_object_size (__dst, 2 > 1) != (size_t) -1)
    {
      if (!__builtin_constant_p (__len))
 return __wcstombs_chk (__dst, __src, __len, __builtin_object_size (__dst, 2 > 1));
      if (__len > __builtin_object_size (__dst, 2 > 1))
 return __wcstombs_chk_warn (__dst, __src, __len, __builtin_object_size (__dst, 2 > 1));
    }
  return __wcstombs_alias (__dst, __src, __len);
}
# 1018 "/usr/include/stdlib.h" 2 3 4






# 17 "./include/libxml/SAX.h" 2


# 1 "./include/libxml/xlink.h" 1
# 32 "./include/libxml/xlink.h"

# 32 "./include/libxml/xlink.h"
typedef xmlChar *xlinkHRef;
typedef xmlChar *xlinkRole;
typedef xmlChar *xlinkTitle;

typedef enum {
    XLINK_TYPE_NONE = 0,
    XLINK_TYPE_SIMPLE,
    XLINK_TYPE_EXTENDED,
    XLINK_TYPE_EXTENDED_SET
} xlinkType;

typedef enum {
    XLINK_SHOW_NONE = 0,
    XLINK_SHOW_NEW,
    XLINK_SHOW_EMBED,
    XLINK_SHOW_REPLACE
} xlinkShow;

typedef enum {
    XLINK_ACTUATE_NONE = 0,
    XLINK_ACTUATE_AUTO,
    XLINK_ACTUATE_ONREQUEST
} xlinkActuate;
# 64 "./include/libxml/xlink.h"
typedef void (*xlinkNodeDetectFunc) (void *ctx, xmlNodePtr node);
# 81 "./include/libxml/xlink.h"
typedef void
(*xlinkSimpleLinkFunk) (void *ctx,
    xmlNodePtr node,
    const xlinkHRef href,
    const xlinkRole role,
    const xlinkTitle title);
# 106 "./include/libxml/xlink.h"
typedef void
(*xlinkExtendedLinkFunk)(void *ctx,
    xmlNodePtr node,
    int nbLocators,
    const xlinkHRef *hrefs,
    const xlinkRole *roles,
    int nbArcs,
    const xlinkRole *from,
    const xlinkRole *to,
    xlinkShow *show,
    xlinkActuate *actuate,
    int nbTitles,
    const xlinkTitle *titles,
    const xmlChar **langs);
# 134 "./include/libxml/xlink.h"
typedef void
(*xlinkExtendedLinkSetFunk) (void *ctx,
     xmlNodePtr node,
     int nbLocators,
     const xlinkHRef *hrefs,
     const xlinkRole *roles,
     int nbTitles,
     const xlinkTitle *titles,
     const xmlChar **langs);







typedef struct _xlinkHandler xlinkHandler;
typedef xlinkHandler *xlinkHandlerPtr;
struct _xlinkHandler {
    xlinkSimpleLinkFunk simple;
    xlinkExtendedLinkFunk extended;
    xlinkExtendedLinkSetFunk set;
};






 xlinkNodeDetectFunc
  xlinkGetDefaultDetect (void);
 void
  xlinkSetDefaultDetect (xlinkNodeDetectFunc func);




 xlinkHandlerPtr
  xlinkGetDefaultHandler (void);
 void
  xlinkSetDefaultHandler (xlinkHandlerPtr handler);




 xlinkType
  xlinkIsLink (xmlDocPtr doc,
      xmlNodePtr node);
# 20 "./include/libxml/SAX.h" 2






 const xmlChar *
  getPublicId (void *ctx);
 const xmlChar *
  getSystemId (void *ctx);
 void
  setDocumentLocator (void *ctx,
       xmlSAXLocatorPtr loc);

 int
  getLineNumber (void *ctx);
 int
  getColumnNumber (void *ctx);

 int
  isStandalone (void *ctx);
 int
  hasInternalSubset (void *ctx);
 int
  hasExternalSubset (void *ctx);

 void
  internalSubset (void *ctx,
       const xmlChar *name,
       const xmlChar *ExternalID,
       const xmlChar *SystemID);
 void
  externalSubset (void *ctx,
       const xmlChar *name,
       const xmlChar *ExternalID,
       const xmlChar *SystemID);
 xmlEntityPtr
  getEntity (void *ctx,
       const xmlChar *name);
 xmlEntityPtr
  getParameterEntity (void *ctx,
       const xmlChar *name);
 xmlParserInputPtr
  resolveEntity (void *ctx,
       const xmlChar *publicId,
       const xmlChar *systemId);

 void
  entityDecl (void *ctx,
       const xmlChar *name,
       int type,
       const xmlChar *publicId,
       const xmlChar *systemId,
       xmlChar *content);
 void
  attributeDecl (void *ctx,
       const xmlChar *elem,
       const xmlChar *fullname,
       int type,
       int def,
       const xmlChar *defaultValue,
       xmlEnumerationPtr tree);
 void
  elementDecl (void *ctx,
       const xmlChar *name,
       int type,
       xmlElementContentPtr content);
 void
  notationDecl (void *ctx,
       const xmlChar *name,
       const xmlChar *publicId,
       const xmlChar *systemId);
 void
  unparsedEntityDecl (void *ctx,
       const xmlChar *name,
       const xmlChar *publicId,
       const xmlChar *systemId,
       const xmlChar *notationName);

 void
  startDocument (void *ctx);
 void
  endDocument (void *ctx);
 void
  attribute (void *ctx,
       const xmlChar *fullname,
       const xmlChar *value);
 void
  startElement (void *ctx,
       const xmlChar *fullname,
       const xmlChar **atts);
 void
  endElement (void *ctx,
       const xmlChar *name);
 void
  reference (void *ctx,
       const xmlChar *name);
 void
  characters (void *ctx,
       const xmlChar *ch,
       int len);
 void
  ignorableWhitespace (void *ctx,
       const xmlChar *ch,
       int len);
 void
  processingInstruction (void *ctx,
       const xmlChar *target,
       const xmlChar *data);
 void
  globalNamespace (void *ctx,
       const xmlChar *href,
       const xmlChar *prefix);
 void
  setNamespace (void *ctx,
       const xmlChar *name);
 xmlNsPtr
  getNamespace (void *ctx);
 int
  checkNamespace (void *ctx,
       xmlChar *nameSpace);
 void
  namespaceDecl (void *ctx,
       const xmlChar *href,
       const xmlChar *prefix);
 void
  comment (void *ctx,
       const xmlChar *value);
 void
  cdataBlock (void *ctx,
       const xmlChar *value,
       int len);


 void
  initxmlDefaultSAXHandler (xmlSAXHandlerV1 *hdlr,
       int warning);

 void
  inithtmlDefaultSAXHandler (xmlSAXHandlerV1 *hdlr);


 void
  initdocbDefaultSAXHandler (xmlSAXHandlerV1 *hdlr);
# 21 "./include/libxml/globals.h" 2
# 1 "./include/libxml/SAX2.h" 1
# 24 "./include/libxml/SAX2.h"
 const xmlChar *
  xmlSAX2GetPublicId (void *ctx);
 const xmlChar *
  xmlSAX2GetSystemId (void *ctx);
 void
  xmlSAX2SetDocumentLocator (void *ctx,
       xmlSAXLocatorPtr loc);

 int
  xmlSAX2GetLineNumber (void *ctx);
 int
  xmlSAX2GetColumnNumber (void *ctx);

 int
  xmlSAX2IsStandalone (void *ctx);
 int
  xmlSAX2HasInternalSubset (void *ctx);
 int
  xmlSAX2HasExternalSubset (void *ctx);

 void
  xmlSAX2InternalSubset (void *ctx,
       const xmlChar *name,
       const xmlChar *ExternalID,
       const xmlChar *SystemID);
 void
  xmlSAX2ExternalSubset (void *ctx,
       const xmlChar *name,
       const xmlChar *ExternalID,
       const xmlChar *SystemID);
 xmlEntityPtr
  xmlSAX2GetEntity (void *ctx,
       const xmlChar *name);
 xmlEntityPtr
  xmlSAX2GetParameterEntity (void *ctx,
       const xmlChar *name);
 xmlParserInputPtr
  xmlSAX2ResolveEntity (void *ctx,
       const xmlChar *publicId,
       const xmlChar *systemId);

 void
  xmlSAX2EntityDecl (void *ctx,
       const xmlChar *name,
       int type,
       const xmlChar *publicId,
       const xmlChar *systemId,
       xmlChar *content);
 void
  xmlSAX2AttributeDecl (void *ctx,
       const xmlChar *elem,
       const xmlChar *fullname,
       int type,
       int def,
       const xmlChar *defaultValue,
       xmlEnumerationPtr tree);
 void
  xmlSAX2ElementDecl (void *ctx,
       const xmlChar *name,
       int type,
       xmlElementContentPtr content);
 void
  xmlSAX2NotationDecl (void *ctx,
       const xmlChar *name,
       const xmlChar *publicId,
       const xmlChar *systemId);
 void
  xmlSAX2UnparsedEntityDecl (void *ctx,
       const xmlChar *name,
       const xmlChar *publicId,
       const xmlChar *systemId,
       const xmlChar *notationName);

 void
  xmlSAX2StartDocument (void *ctx);
 void
  xmlSAX2EndDocument (void *ctx);

 void
  xmlSAX2StartElement (void *ctx,
       const xmlChar *fullname,
       const xmlChar **atts);
 void
  xmlSAX2EndElement (void *ctx,
       const xmlChar *name);

 void
  xmlSAX2StartElementNs (void *ctx,
       const xmlChar *localname,
       const xmlChar *prefix,
       const xmlChar *URI,
       int nb_namespaces,
       const xmlChar **namespaces,
       int nb_attributes,
       int nb_defaulted,
       const xmlChar **attributes);
 void
  xmlSAX2EndElementNs (void *ctx,
       const xmlChar *localname,
       const xmlChar *prefix,
       const xmlChar *URI);
 void
  xmlSAX2Reference (void *ctx,
       const xmlChar *name);
 void
  xmlSAX2Characters (void *ctx,
       const xmlChar *ch,
       int len);
 void
  xmlSAX2IgnorableWhitespace (void *ctx,
       const xmlChar *ch,
       int len);
 void
  xmlSAX2ProcessingInstruction (void *ctx,
       const xmlChar *target,
       const xmlChar *data);
 void
  xmlSAX2Comment (void *ctx,
       const xmlChar *value);
 void
  xmlSAX2CDataBlock (void *ctx,
       const xmlChar *value,
       int len);


 int
  xmlSAXDefaultVersion (int version);


 int
  xmlSAXVersion (xmlSAXHandler *hdlr,
       int version);
 void
  xmlSAX2InitDefaultSAXHandler (xmlSAXHandler *hdlr,
       int warning);

 void
  xmlSAX2InitHtmlDefaultSAXHandler(xmlSAXHandler *hdlr);
 void
  htmlDefaultSAXHandlerInit (void);


 void
  xmlSAX2InitDocbDefaultSAXHandler(xmlSAXHandler *hdlr);
 void
  docbDefaultSAXHandlerInit (void);

 void
  xmlDefaultSAXHandlerInit (void);
# 22 "./include/libxml/globals.h" 2
# 1 "./include/libxml/xmlmemory.h" 1
# 23 "./include/libxml/globals.h" 2





 void xmlInitGlobals(void);
 void xmlCleanupGlobals(void);
# 42 "./include/libxml/globals.h"
typedef xmlParserInputBufferPtr (*xmlParserInputBufferCreateFilenameFunc) (const char *URI, xmlCharEncoding enc);
# 55 "./include/libxml/globals.h"
typedef xmlOutputBufferPtr (*xmlOutputBufferCreateFilenameFunc) (const char *URI, xmlCharEncodingHandlerPtr encoder, int compression);

 xmlParserInputBufferCreateFilenameFunc
 xmlParserInputBufferCreateFilenameDefault (xmlParserInputBufferCreateFilenameFunc func);
 xmlOutputBufferCreateFilenameFunc
 xmlOutputBufferCreateFilenameDefault (xmlOutputBufferCreateFilenameFunc func);
# 107 "./include/libxml/globals.h"
typedef void (*xmlRegisterNodeFunc) (xmlNodePtr node);






typedef void (*xmlDeregisterNodeFunc) (xmlNodePtr node);

typedef struct _xmlGlobalState xmlGlobalState;
typedef xmlGlobalState *xmlGlobalStatePtr;
struct _xmlGlobalState
{
 const char *xmlParserVersion;

 xmlSAXLocator xmlDefaultSAXLocator;
 xmlSAXHandlerV1 xmlDefaultSAXHandler;
 xmlSAXHandlerV1 docbDefaultSAXHandler;
 xmlSAXHandlerV1 htmlDefaultSAXHandler;

 xmlFreeFunc xmlFree;
 xmlMallocFunc xmlMalloc;
 xmlStrdupFunc xmlMemStrdup;
 xmlReallocFunc xmlRealloc;

 xmlGenericErrorFunc xmlGenericError;
 xmlStructuredErrorFunc xmlStructuredError;
 void *xmlGenericErrorContext;

 int oldXMLWDcompatibility;

 xmlBufferAllocationScheme xmlBufferAllocScheme;
 int xmlDefaultBufferSize;

 int xmlSubstituteEntitiesDefaultValue;
 int xmlDoValidityCheckingDefaultValue;
 int xmlGetWarningsDefaultValue;
 int xmlKeepBlanksDefaultValue;
 int xmlLineNumbersDefaultValue;
 int xmlLoadExtDtdDefaultValue;
 int xmlParserDebugEntities;
 int xmlPedanticParserDefaultValue;

 int xmlSaveNoEmptyTags;
 int xmlIndentTreeOutput;
 const char *xmlTreeIndentString;

 xmlRegisterNodeFunc xmlRegisterNodeDefaultValue;
 xmlDeregisterNodeFunc xmlDeregisterNodeDefaultValue;

 xmlMallocFunc xmlMallocAtomic;
 xmlError xmlLastError;

 xmlParserInputBufferCreateFilenameFunc xmlParserInputBufferCreateFilenameValue;
 xmlOutputBufferCreateFilenameFunc xmlOutputBufferCreateFilenameValue;

 void *xmlStructuredErrorContext;
};




# 1 "./include/libxml/threads.h" 1
# 170 "./include/libxml/globals.h" 2




 void xmlInitializeGlobalState(xmlGlobalStatePtr gs);

 void xmlThrDefSetGenericErrorFunc(void *ctx, xmlGenericErrorFunc handler);

 void xmlThrDefSetStructuredErrorFunc(void *ctx, xmlStructuredErrorFunc handler);

 xmlRegisterNodeFunc xmlRegisterNodeDefault(xmlRegisterNodeFunc func);
 xmlRegisterNodeFunc xmlThrDefRegisterNodeDefault(xmlRegisterNodeFunc func);
 xmlDeregisterNodeFunc xmlDeregisterNodeDefault(xmlDeregisterNodeFunc func);
 xmlDeregisterNodeFunc xmlThrDefDeregisterNodeDefault(xmlDeregisterNodeFunc func);

 xmlOutputBufferCreateFilenameFunc
 xmlThrDefOutputBufferCreateFilenameDefault(xmlOutputBufferCreateFilenameFunc func);
 xmlParserInputBufferCreateFilenameFunc
 xmlThrDefParserInputBufferCreateFilenameDefault(xmlParserInputBufferCreateFilenameFunc func);
# 243 "./include/libxml/globals.h"
extern xmlMallocFunc xmlMalloc;
extern xmlMallocFunc xmlMallocAtomic;
extern xmlReallocFunc xmlRealloc;
extern xmlFreeFunc xmlFree;
extern xmlStrdupFunc xmlMemStrdup;



 xmlSAXHandlerV1 * __docbDefaultSAXHandler(void);
# 261 "./include/libxml/globals.h"
 xmlSAXHandlerV1 * __htmlDefaultSAXHandler(void);
# 270 "./include/libxml/globals.h"
 xmlError * __xmlLastError(void);
# 285 "./include/libxml/globals.h"
 int * __oldXMLWDcompatibility(void);







 xmlBufferAllocationScheme * __xmlBufferAllocScheme(void);






 xmlBufferAllocationScheme xmlThrDefBufferAllocScheme(xmlBufferAllocationScheme v);

 int * __xmlDefaultBufferSize(void);






 int xmlThrDefDefaultBufferSize(int v);

 xmlSAXHandlerV1 * __xmlDefaultSAXHandler(void);







 xmlSAXLocator * __xmlDefaultSAXLocator(void);







 int * __xmlDoValidityCheckingDefaultValue(void);






 int xmlThrDefDoValidityCheckingDefaultValue(int v);

 xmlGenericErrorFunc * __xmlGenericError(void);







 xmlStructuredErrorFunc * __xmlStructuredError(void);







 void * * __xmlGenericErrorContext(void);







 void * * __xmlStructuredErrorContext(void);







 int * __xmlGetWarningsDefaultValue(void);






 int xmlThrDefGetWarningsDefaultValue(int v);

 int * __xmlIndentTreeOutput(void);






 int xmlThrDefIndentTreeOutput(int v);

 const char * * __xmlTreeIndentString(void);






 const char * xmlThrDefTreeIndentString(const char * v);

 int * __xmlKeepBlanksDefaultValue(void);






 int xmlThrDefKeepBlanksDefaultValue(int v);

 int * __xmlLineNumbersDefaultValue(void);






 int xmlThrDefLineNumbersDefaultValue(int v);

 int * __xmlLoadExtDtdDefaultValue(void);






 int xmlThrDefLoadExtDtdDefaultValue(int v);

 int * __xmlParserDebugEntities(void);






 int xmlThrDefParserDebugEntities(int v);

 const char * * __xmlParserVersion(void);







 int * __xmlPedanticParserDefaultValue(void);






 int xmlThrDefPedanticParserDefaultValue(int v);

 int * __xmlSaveNoEmptyTags(void);






 int xmlThrDefSaveNoEmptyTags(int v);

 int * __xmlSubstituteEntitiesDefaultValue(void);






 int xmlThrDefSubstituteEntitiesDefaultValue(int v);

 xmlRegisterNodeFunc * __xmlRegisterNodeDefaultValue(void);







 xmlDeregisterNodeFunc * __xmlDeregisterNodeDefaultValue(void);







 xmlParserInputBufferCreateFilenameFunc * __xmlParserInputBufferCreateFilenameValue(void);







 xmlOutputBufferCreateFilenameFunc * __xmlOutputBufferCreateFilenameValue(void);
# 36 "./include/libxml/threads.h" 2



 xmlMutexPtr
   xmlNewMutex (void);
 void
   xmlMutexLock (xmlMutexPtr tok);
 void
   xmlMutexUnlock (xmlMutexPtr tok);
 void
   xmlFreeMutex (xmlMutexPtr tok);

 xmlRMutexPtr
   xmlNewRMutex (void);
 void
   xmlRMutexLock (xmlRMutexPtr tok);
 void
   xmlRMutexUnlock (xmlRMutexPtr tok);
 void
   xmlFreeRMutex (xmlRMutexPtr tok);




 void
   xmlInitThreads (void);
 void
   xmlLockLibrary (void);
 void
   xmlUnlockLibrary(void);
 int
   xmlGetThreadId (void);
 int
   xmlIsMainThread (void);
 void
   xmlCleanupThreads(void);
 xmlGlobalStatePtr
   xmlGetGlobalState(void);
# 219 "./include/libxml/xmlmemory.h" 2
# 1300 "./include/libxml/tree.h" 2
# 28 "./include/libxml/c14n.h" 2
# 1 "./include/libxml/xpath.h" 1
# 26 "./include/libxml/xpath.h"
# 1 "./include/libxml/xmlerror.h" 1
# 27 "./include/libxml/xpath.h" 2
# 39 "./include/libxml/xpath.h"
typedef struct _xmlXPathContext xmlXPathContext;
typedef xmlXPathContext *xmlXPathContextPtr;
typedef struct _xmlXPathParserContext xmlXPathParserContext;
typedef xmlXPathParserContext *xmlXPathParserContextPtr;





typedef enum {
    XPATH_EXPRESSION_OK = 0,
    XPATH_NUMBER_ERROR,
    XPATH_UNFINISHED_LITERAL_ERROR,
    XPATH_START_LITERAL_ERROR,
    XPATH_VARIABLE_REF_ERROR,
    XPATH_UNDEF_VARIABLE_ERROR,
    XPATH_INVALID_PREDICATE_ERROR,
    XPATH_EXPR_ERROR,
    XPATH_UNCLOSED_ERROR,
    XPATH_UNKNOWN_FUNC_ERROR,
    XPATH_INVALID_OPERAND,
    XPATH_INVALID_TYPE,
    XPATH_INVALID_ARITY,
    XPATH_INVALID_CTXT_SIZE,
    XPATH_INVALID_CTXT_POSITION,
    XPATH_MEMORY_ERROR,
    XPTR_SYNTAX_ERROR,
    XPTR_RESOURCE_ERROR,
    XPTR_SUB_RESOURCE_ERROR,
    XPATH_UNDEF_PREFIX_ERROR,
    XPATH_ENCODING_ERROR,
    XPATH_INVALID_CHAR_ERROR,
    XPATH_INVALID_CTXT,
    XPATH_STACK_ERROR,
    XPATH_FORBID_VARIABLE_ERROR
} xmlXPathError;




typedef struct _xmlNodeSet xmlNodeSet;
typedef xmlNodeSet *xmlNodeSetPtr;
struct _xmlNodeSet {
    int nodeNr;
    int nodeMax;
    xmlNodePtr *nodeTab;

};
# 99 "./include/libxml/xpath.h"
typedef enum {
    XPATH_UNDEFINED = 0,
    XPATH_NODESET = 1,
    XPATH_BOOLEAN = 2,
    XPATH_NUMBER = 3,
    XPATH_STRING = 4,
    XPATH_POINT = 5,
    XPATH_RANGE = 6,
    XPATH_LOCATIONSET = 7,
    XPATH_USERS = 8,
    XPATH_XSLT_TREE = 9
} xmlXPathObjectType;

typedef struct _xmlXPathObject xmlXPathObject;
typedef xmlXPathObject *xmlXPathObjectPtr;
struct _xmlXPathObject {
    xmlXPathObjectType type;
    xmlNodeSetPtr nodesetval;
    int boolval;
    double floatval;
    xmlChar *stringval;
    void *user;
    int index;
    void *user2;
    int index2;
};
# 136 "./include/libxml/xpath.h"
typedef int (*xmlXPathConvertFunc) (xmlXPathObjectPtr obj, int type);





typedef struct _xmlXPathType xmlXPathType;
typedef xmlXPathType *xmlXPathTypePtr;
struct _xmlXPathType {
    const xmlChar *name;
    xmlXPathConvertFunc func;
};





typedef struct _xmlXPathVariable xmlXPathVariable;
typedef xmlXPathVariable *xmlXPathVariablePtr;
struct _xmlXPathVariable {
    const xmlChar *name;
    xmlXPathObjectPtr value;
};
# 168 "./include/libxml/xpath.h"
typedef void (*xmlXPathEvalFunc)(xmlXPathParserContextPtr ctxt,
                          int nargs);





typedef struct _xmlXPathFunct xmlXPathFunct;
typedef xmlXPathFunct *xmlXPathFuncPtr;
struct _xmlXPathFunct {
    const xmlChar *name;
    xmlXPathEvalFunc func;
};
# 194 "./include/libxml/xpath.h"
typedef xmlXPathObjectPtr (*xmlXPathAxisFunc) (xmlXPathParserContextPtr ctxt,
     xmlXPathObjectPtr cur);





typedef struct _xmlXPathAxis xmlXPathAxis;
typedef xmlXPathAxis *xmlXPathAxisPtr;
struct _xmlXPathAxis {
    const xmlChar *name;
    xmlXPathAxisFunc func;
};
# 218 "./include/libxml/xpath.h"
typedef void (*xmlXPathFunction) (xmlXPathParserContextPtr ctxt, int nargs);
# 235 "./include/libxml/xpath.h"
typedef xmlXPathObjectPtr (*xmlXPathVariableLookupFunc) (void *ctxt,
                                         const xmlChar *name,
                                         const xmlChar *ns_uri);
# 250 "./include/libxml/xpath.h"
typedef xmlXPathFunction (*xmlXPathFuncLookupFunc) (void *ctxt,
      const xmlChar *name,
      const xmlChar *ns_uri);
# 288 "./include/libxml/xpath.h"
struct _xmlXPathContext {
    xmlDocPtr doc;
    xmlNodePtr node;

    int nb_variables_unused;
    int max_variables_unused;
    xmlHashTablePtr varHash;

    int nb_types;
    int max_types;
    xmlXPathTypePtr types;

    int nb_funcs_unused;
    int max_funcs_unused;
    xmlHashTablePtr funcHash;

    int nb_axis;
    int max_axis;
    xmlXPathAxisPtr axis;


    xmlNsPtr *namespaces;
    int nsNr;
    void *user;


    int contextSize;
    int proximityPosition;


    int xptr;
    xmlNodePtr here;
    xmlNodePtr origin;


    xmlHashTablePtr nsHash;
    xmlXPathVariableLookupFunc varLookupFunc;
    void *varLookupData;


    void *extra;


    const xmlChar *function;
    const xmlChar *functionURI;


    xmlXPathFuncLookupFunc funcLookupFunc;
    void *funcLookupData;


    xmlNsPtr *tmpNsList;
    int tmpNsNr;


    void *userData;
    xmlStructuredErrorFunc error;
    xmlError lastError;
    xmlNodePtr debugNode;


    xmlDictPtr dict;

    int flags;


    void *cache;
};





typedef struct _xmlXPathCompExpr xmlXPathCompExpr;
typedef xmlXPathCompExpr *xmlXPathCompExprPtr;







struct _xmlXPathParserContext {
    const xmlChar *cur;
    const xmlChar *base;

    int error;

    xmlXPathContextPtr context;
    xmlXPathObjectPtr value;
    int valueNr;
    int valueMax;
    xmlXPathObjectPtr *valueTab;

    xmlXPathCompExprPtr comp;
    int xptr;
    xmlNodePtr ancestor;

    int valueFrame;
};
# 399 "./include/libxml/xpath.h"
extern double xmlXPathNAN;
extern double xmlXPathPINF;
extern double xmlXPathNINF;
# 440 "./include/libxml/xpath.h"
 void
      xmlXPathFreeObject (xmlXPathObjectPtr obj);
 xmlNodeSetPtr
      xmlXPathNodeSetCreate (xmlNodePtr val);
 void
      xmlXPathFreeNodeSetList (xmlXPathObjectPtr obj);
 void
      xmlXPathFreeNodeSet (xmlNodeSetPtr obj);
 xmlXPathObjectPtr
      xmlXPathObjectCopy (xmlXPathObjectPtr val);
 int
      xmlXPathCmpNodes (xmlNodePtr node1,
       xmlNodePtr node2);



 int
      xmlXPathCastNumberToBoolean (double val);
 int
      xmlXPathCastStringToBoolean (const xmlChar * val);
 int
      xmlXPathCastNodeSetToBoolean(xmlNodeSetPtr ns);
 int
      xmlXPathCastToBoolean (xmlXPathObjectPtr val);

 double
      xmlXPathCastBooleanToNumber (int val);
 double
      xmlXPathCastStringToNumber (const xmlChar * val);
 double
      xmlXPathCastNodeToNumber (xmlNodePtr node);
 double
      xmlXPathCastNodeSetToNumber (xmlNodeSetPtr ns);
 double
      xmlXPathCastToNumber (xmlXPathObjectPtr val);

 xmlChar *
      xmlXPathCastBooleanToString (int val);
 xmlChar *
      xmlXPathCastNumberToString (double val);
 xmlChar *
      xmlXPathCastNodeToString (xmlNodePtr node);
 xmlChar *
      xmlXPathCastNodeSetToString (xmlNodeSetPtr ns);
 xmlChar *
      xmlXPathCastToString (xmlXPathObjectPtr val);

 xmlXPathObjectPtr
      xmlXPathConvertBoolean (xmlXPathObjectPtr val);
 xmlXPathObjectPtr
      xmlXPathConvertNumber (xmlXPathObjectPtr val);
 xmlXPathObjectPtr
      xmlXPathConvertString (xmlXPathObjectPtr val);




 xmlXPathContextPtr
      xmlXPathNewContext (xmlDocPtr doc);
 void
      xmlXPathFreeContext (xmlXPathContextPtr ctxt);
 int
      xmlXPathContextSetCache(xmlXPathContextPtr ctxt,
                int active,
         int value,
         int options);



 long
      xmlXPathOrderDocElems (xmlDocPtr doc);
 xmlXPathObjectPtr
      xmlXPathEval (const xmlChar *str,
       xmlXPathContextPtr ctx);
 xmlXPathObjectPtr
      xmlXPathEvalExpression (const xmlChar *str,
       xmlXPathContextPtr ctxt);
 int
      xmlXPathEvalPredicate (xmlXPathContextPtr ctxt,
       xmlXPathObjectPtr res);



 xmlXPathCompExprPtr
      xmlXPathCompile (const xmlChar *str);
 xmlXPathCompExprPtr
      xmlXPathCtxtCompile (xmlXPathContextPtr ctxt,
       const xmlChar *str);
 xmlXPathObjectPtr
      xmlXPathCompiledEval (xmlXPathCompExprPtr comp,
       xmlXPathContextPtr ctx);
 int
      xmlXPathCompiledEvalToBoolean(xmlXPathCompExprPtr comp,
       xmlXPathContextPtr ctxt);
 void
      xmlXPathFreeCompExpr (xmlXPathCompExprPtr comp);


 void
      xmlXPathInit (void);
 int
  xmlXPathIsNaN (double val);
 int
  xmlXPathIsInf (double val);
# 29 "./include/libxml/c14n.h" 2
# 61 "./include/libxml/c14n.h"
typedef enum {
    XML_C14N_1_0 = 0,
    XML_C14N_EXCLUSIVE_1_0 = 1,
    XML_C14N_1_1 = 2
} xmlC14NMode;

 int
  xmlC14NDocSaveTo (xmlDocPtr doc,
      xmlNodeSetPtr nodes,
      int mode,
      xmlChar **inclusive_ns_prefixes,
      int with_comments,
      xmlOutputBufferPtr buf);

 int
  xmlC14NDocDumpMemory (xmlDocPtr doc,
      xmlNodeSetPtr nodes,
      int mode,
      xmlChar **inclusive_ns_prefixes,
      int with_comments,
      xmlChar **doc_txt_ptr);

 int
  xmlC14NDocSave (xmlDocPtr doc,
      xmlNodeSetPtr nodes,
      int mode,
      xmlChar **inclusive_ns_prefixes,
      int with_comments,
      const char* filename,
      int compression);
# 106 "./include/libxml/c14n.h"
typedef int (*xmlC14NIsVisibleCallback) (void* user_data,
      xmlNodePtr node,
      xmlNodePtr parent);

 int
  xmlC14NExecute (xmlDocPtr doc,
      xmlC14NIsVisibleCallback is_visible_callback,
      void* user_data,
      int mode,
      xmlChar **inclusive_ns_prefixes,
      int with_comments,
      xmlOutputBufferPtr buf);
# 18 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2
# 1 "./include/libxml/catalog.h" 1
# 50 "./include/libxml/catalog.h"
typedef enum {
    XML_CATA_PREFER_NONE = 0,
    XML_CATA_PREFER_PUBLIC = 1,
    XML_CATA_PREFER_SYSTEM
} xmlCatalogPrefer;

typedef enum {
    XML_CATA_ALLOW_NONE = 0,
    XML_CATA_ALLOW_GLOBAL = 1,
    XML_CATA_ALLOW_DOCUMENT = 2,
    XML_CATA_ALLOW_ALL = 3
} xmlCatalogAllow;

typedef struct _xmlCatalog xmlCatalog;
typedef xmlCatalog *xmlCatalogPtr;




 xmlCatalogPtr
  xmlNewCatalog (int sgml);
 xmlCatalogPtr
  xmlLoadACatalog (const char *filename);
 xmlCatalogPtr
  xmlLoadSGMLSuperCatalog (const char *filename);
 int
  xmlConvertSGMLCatalog (xmlCatalogPtr catal);
 int
  xmlACatalogAdd (xmlCatalogPtr catal,
      const xmlChar *type,
      const xmlChar *orig,
      const xmlChar *replace);
 int
  xmlACatalogRemove (xmlCatalogPtr catal,
      const xmlChar *value);
 xmlChar *
  xmlACatalogResolve (xmlCatalogPtr catal,
      const xmlChar *pubID,
                                  const xmlChar *sysID);
 xmlChar *
  xmlACatalogResolveSystem(xmlCatalogPtr catal,
      const xmlChar *sysID);
 xmlChar *
  xmlACatalogResolvePublic(xmlCatalogPtr catal,
      const xmlChar *pubID);
 xmlChar *
  xmlACatalogResolveURI (xmlCatalogPtr catal,
      const xmlChar *URI);

 void
  xmlACatalogDump (xmlCatalogPtr catal,
      FILE *out);

 void
  xmlFreeCatalog (xmlCatalogPtr catal);
 int
  xmlCatalogIsEmpty (xmlCatalogPtr catal);




 void
  xmlInitializeCatalog (void);
 int
  xmlLoadCatalog (const char *filename);
 void
  xmlLoadCatalogs (const char *paths);
 void
  xmlCatalogCleanup (void);

 void
  xmlCatalogDump (FILE *out);

 xmlChar *
  xmlCatalogResolve (const xmlChar *pubID,
                                  const xmlChar *sysID);
 xmlChar *
  xmlCatalogResolveSystem (const xmlChar *sysID);
 xmlChar *
  xmlCatalogResolvePublic (const xmlChar *pubID);
 xmlChar *
  xmlCatalogResolveURI (const xmlChar *URI);
 int
  xmlCatalogAdd (const xmlChar *type,
      const xmlChar *orig,
      const xmlChar *replace);
 int
  xmlCatalogRemove (const xmlChar *value);
 xmlDocPtr
  xmlParseCatalogFile (const char *filename);
 int
  xmlCatalogConvert (void);





 void
  xmlCatalogFreeLocal (void *catalogs);
 void *
  xmlCatalogAddLocal (void *catalogs,
      const xmlChar *URL);
 xmlChar *
  xmlCatalogLocalResolve (void *catalogs,
      const xmlChar *pubID,
                                  const xmlChar *sysID);
 xmlChar *
  xmlCatalogLocalResolveURI(void *catalogs,
      const xmlChar *URI);



 int
  xmlCatalogSetDebug (int level);
 xmlCatalogPrefer
  xmlCatalogSetDefaultPrefer(xmlCatalogPrefer prefer);
 void
  xmlCatalogSetDefaults (xmlCatalogAllow allow);
 xmlCatalogAllow
  xmlCatalogGetDefaults (void);



 const xmlChar *
  xmlCatalogGetSystem (const xmlChar *sysID);
 const xmlChar *
  xmlCatalogGetPublic (const xmlChar *pubID);
# 19 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2
# 1 "./include/libxml/chvalid.h" 1
# 28 "./include/libxml/chvalid.h"
typedef struct _xmlChSRange xmlChSRange;
typedef xmlChSRange *xmlChSRangePtr;
struct _xmlChSRange {
    unsigned short low;
    unsigned short high;
};

typedef struct _xmlChLRange xmlChLRange;
typedef xmlChLRange *xmlChLRangePtr;
struct _xmlChLRange {
    unsigned int low;
    unsigned int high;
};

typedef struct _xmlChRangeGroup xmlChRangeGroup;
typedef xmlChRangeGroup *xmlChRangeGroupPtr;
struct _xmlChRangeGroup {
    int nbShortRange;
    int nbLongRange;
    const xmlChSRange *shortRange;
    const xmlChLRange *longRange;
};




 int
  xmlCharInRange(unsigned int val, const xmlChRangeGroup *group);
# 80 "./include/libxml/chvalid.h"
extern const xmlChRangeGroup xmlIsBaseCharGroup;
# 124 "./include/libxml/chvalid.h"
extern const xmlChRangeGroup xmlIsCharGroup;
# 136 "./include/libxml/chvalid.h"
extern const xmlChRangeGroup xmlIsCombiningGroup;
# 156 "./include/libxml/chvalid.h"
extern const xmlChRangeGroup xmlIsDigitGroup;
# 176 "./include/libxml/chvalid.h"
extern const xmlChRangeGroup xmlIsExtenderGroup;
# 190 "./include/libxml/chvalid.h"
extern const xmlChRangeGroup xmlIsIdeographicGroup;
extern const unsigned char xmlIsPubidChar_tab[256];
# 210 "./include/libxml/chvalid.h"
 int
  xmlIsBaseChar(unsigned int ch);
 int
  xmlIsBlank(unsigned int ch);
 int
  xmlIsChar(unsigned int ch);
 int
  xmlIsCombining(unsigned int ch);
 int
  xmlIsDigit(unsigned int ch);
 int
  xmlIsExtender(unsigned int ch);
 int
  xmlIsIdeographic(unsigned int ch);
 int
  xmlIsPubidChar(unsigned int ch);
# 20 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2
# 1 "./include/libxml/debugXML.h" 1
# 28 "./include/libxml/debugXML.h"
 void
 xmlDebugDumpString (FILE *output,
     const xmlChar *str);
 void
 xmlDebugDumpAttr (FILE *output,
     xmlAttrPtr attr,
     int depth);
 void
 xmlDebugDumpAttrList (FILE *output,
     xmlAttrPtr attr,
     int depth);
 void
 xmlDebugDumpOneNode (FILE *output,
     xmlNodePtr node,
     int depth);
 void
 xmlDebugDumpNode (FILE *output,
     xmlNodePtr node,
     int depth);
 void
 xmlDebugDumpNodeList (FILE *output,
     xmlNodePtr node,
     int depth);
 void
 xmlDebugDumpDocumentHead(FILE *output,
     xmlDocPtr doc);
 void
 xmlDebugDumpDocument (FILE *output,
     xmlDocPtr doc);
 void
 xmlDebugDumpDTD (FILE *output,
     xmlDtdPtr dtd);
 void
 xmlDebugDumpEntities (FILE *output,
     xmlDocPtr doc);







 int
 xmlDebugCheckDocument (FILE * output,
     xmlDocPtr doc);







 void
 xmlLsOneNode (FILE *output, xmlNodePtr node);
 int
 xmlLsCountNode (xmlNodePtr node);

 const char *
 xmlBoolToText (int boolval);
# 103 "./include/libxml/debugXML.h"
typedef char * (* xmlShellReadlineFunc)(char *prompt);







typedef struct _xmlShellCtxt xmlShellCtxt;
typedef xmlShellCtxt *xmlShellCtxtPtr;
struct _xmlShellCtxt {
    char *filename;
    xmlDocPtr doc;
    xmlNodePtr node;
    xmlXPathContextPtr pctxt;
    int loaded;
    FILE *output;
    xmlShellReadlineFunc input;
};
# 134 "./include/libxml/debugXML.h"
typedef int (* xmlShellCmd) (xmlShellCtxtPtr ctxt,
                             char *arg,
        xmlNodePtr node,
        xmlNodePtr node2);

 void
 xmlShellPrintXPathError (int errorType,
     const char *arg);
 void
 xmlShellPrintXPathResult(xmlXPathObjectPtr list);
 int
 xmlShellList (xmlShellCtxtPtr ctxt,
     char *arg,
     xmlNodePtr node,
     xmlNodePtr node2);
 int
 xmlShellBase (xmlShellCtxtPtr ctxt,
     char *arg,
     xmlNodePtr node,
     xmlNodePtr node2);
 int
 xmlShellDir (xmlShellCtxtPtr ctxt,
     char *arg,
     xmlNodePtr node,
     xmlNodePtr node2);
 int
 xmlShellLoad (xmlShellCtxtPtr ctxt,
     char *filename,
     xmlNodePtr node,
     xmlNodePtr node2);

 void
 xmlShellPrintNode (xmlNodePtr node);
 int
 xmlShellCat (xmlShellCtxtPtr ctxt,
     char *arg,
     xmlNodePtr node,
     xmlNodePtr node2);
 int
 xmlShellWrite (xmlShellCtxtPtr ctxt,
     char *filename,
     xmlNodePtr node,
     xmlNodePtr node2);
 int
 xmlShellSave (xmlShellCtxtPtr ctxt,
     char *filename,
     xmlNodePtr node,
     xmlNodePtr node2);


 int
 xmlShellValidate (xmlShellCtxtPtr ctxt,
     char *dtd,
     xmlNodePtr node,
     xmlNodePtr node2);

 int
 xmlShellDu (xmlShellCtxtPtr ctxt,
     char *arg,
     xmlNodePtr tree,
     xmlNodePtr node2);
 int
 xmlShellPwd (xmlShellCtxtPtr ctxt,
     char *buffer,
     xmlNodePtr node,
     xmlNodePtr node2);




 void
 xmlShell (xmlDocPtr doc,
     char *filename,
     xmlShellReadlineFunc input,
     FILE *output);
# 21 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2

# 1 "./include/libxml/DOCBparser.h" 1
# 18 "./include/libxml/DOCBparser.h"
# 1 "./include/libxml/parserInternals.h" 1
# 17 "./include/libxml/parserInternals.h"
# 1 "./include/libxml/HTMLparser.h" 1
# 27 "./include/libxml/HTMLparser.h"
typedef xmlParserCtxt htmlParserCtxt;
typedef xmlParserCtxtPtr htmlParserCtxtPtr;
typedef xmlParserNodeInfo htmlParserNodeInfo;
typedef xmlSAXHandler htmlSAXHandler;
typedef xmlSAXHandlerPtr htmlSAXHandlerPtr;
typedef xmlParserInput htmlParserInput;
typedef xmlParserInputPtr htmlParserInputPtr;
typedef xmlDocPtr htmlDocPtr;
typedef xmlNodePtr htmlNodePtr;





typedef struct _htmlElemDesc htmlElemDesc;
typedef htmlElemDesc *htmlElemDescPtr;
struct _htmlElemDesc {
    const char *name;
    char startTag;
    char endTag;
    char saveEndTag;
    char empty;
    char depr;
    char dtd;
    char isinline;
    const char *desc;
# 64 "./include/libxml/HTMLparser.h"
    const char** subelts;
    const char* defaultsubelt;

    const char** attrs_opt;
    const char** attrs_depr;
    const char** attrs_req;
};




typedef struct _htmlEntityDesc htmlEntityDesc;
typedef htmlEntityDesc *htmlEntityDescPtr;
struct _htmlEntityDesc {
    unsigned int value;
    const char *name;
    const char *desc;
};




 const htmlElemDesc *
   htmlTagLookup (const xmlChar *tag);
 const htmlEntityDesc *
   htmlEntityLookup(const xmlChar *name);
 const htmlEntityDesc *
   htmlEntityValueLookup(unsigned int value);

 int
   htmlIsAutoClosed(htmlDocPtr doc,
      htmlNodePtr elem);
 int
   htmlAutoCloseTag(htmlDocPtr doc,
      const xmlChar *name,
      htmlNodePtr elem);
 const htmlEntityDesc *
   htmlParseEntityRef(htmlParserCtxtPtr ctxt,
      const xmlChar **str);
 int
   htmlParseCharRef(htmlParserCtxtPtr ctxt);
 void
   htmlParseElement(htmlParserCtxtPtr ctxt);

 htmlParserCtxtPtr
   htmlNewParserCtxt(void);

 htmlParserCtxtPtr
   htmlCreateMemoryParserCtxt(const char *buffer,
         int size);

 int
   htmlParseDocument(htmlParserCtxtPtr ctxt);
 htmlDocPtr
   htmlSAXParseDoc (xmlChar *cur,
      const char *encoding,
      htmlSAXHandlerPtr sax,
      void *userData);
 htmlDocPtr
   htmlParseDoc (xmlChar *cur,
      const char *encoding);
 htmlDocPtr
   htmlSAXParseFile(const char *filename,
      const char *encoding,
      htmlSAXHandlerPtr sax,
      void *userData);
 htmlDocPtr
   htmlParseFile (const char *filename,
      const char *encoding);
 int
   UTF8ToHtml (unsigned char *out,
      int *outlen,
      const unsigned char *in,
      int *inlen);
 int
   htmlEncodeEntities(unsigned char *out,
      int *outlen,
      const unsigned char *in,
      int *inlen, int quoteChar);
 int
   htmlIsScriptAttribute(const xmlChar *name);
 int
   htmlHandleOmittedElem(int val);





 htmlParserCtxtPtr
   htmlCreatePushParserCtxt(htmlSAXHandlerPtr sax,
       void *user_data,
       const char *chunk,
       int size,
       const char *filename,
       xmlCharEncoding enc);
 int
   htmlParseChunk (htmlParserCtxtPtr ctxt,
       const char *chunk,
       int size,
       int terminate);


 void
   htmlFreeParserCtxt (htmlParserCtxtPtr ctxt);
# 178 "./include/libxml/HTMLparser.h"
typedef enum {
    HTML_PARSE_RECOVER = 1<<0,
    HTML_PARSE_NODEFDTD = 1<<2,
    HTML_PARSE_NOERROR = 1<<5,
    HTML_PARSE_NOWARNING= 1<<6,
    HTML_PARSE_PEDANTIC = 1<<7,
    HTML_PARSE_NOBLANKS = 1<<8,
    HTML_PARSE_NONET = 1<<11,
    HTML_PARSE_NOIMPLIED= 1<<13,
    HTML_PARSE_COMPACT = 1<<16,
    HTML_PARSE_IGNORE_ENC=1<<21
} htmlParserOption;

 void
  htmlCtxtReset (htmlParserCtxtPtr ctxt);
 int
  htmlCtxtUseOptions (htmlParserCtxtPtr ctxt,
      int options);
 htmlDocPtr
  htmlReadDoc (const xmlChar *cur,
      const char *URL,
      const char *encoding,
      int options);
 htmlDocPtr
  htmlReadFile (const char *URL,
      const char *encoding,
      int options);
 htmlDocPtr
  htmlReadMemory (const char *buffer,
      int size,
      const char *URL,
      const char *encoding,
      int options);
 htmlDocPtr
  htmlReadFd (int fd,
      const char *URL,
      const char *encoding,
      int options);
 htmlDocPtr
  htmlReadIO (xmlInputReadCallback ioread,
      xmlInputCloseCallback ioclose,
      void *ioctx,
      const char *URL,
      const char *encoding,
      int options);
 htmlDocPtr
  htmlCtxtReadDoc (xmlParserCtxtPtr ctxt,
      const xmlChar *cur,
      const char *URL,
      const char *encoding,
      int options);
 htmlDocPtr
  htmlCtxtReadFile (xmlParserCtxtPtr ctxt,
      const char *filename,
      const char *encoding,
      int options);
 htmlDocPtr
  htmlCtxtReadMemory (xmlParserCtxtPtr ctxt,
      const char *buffer,
      int size,
      const char *URL,
      const char *encoding,
      int options);
 htmlDocPtr
  htmlCtxtReadFd (xmlParserCtxtPtr ctxt,
      int fd,
      const char *URL,
      const char *encoding,
      int options);
 htmlDocPtr
  htmlCtxtReadIO (xmlParserCtxtPtr ctxt,
      xmlInputReadCallback ioread,
      xmlInputCloseCallback ioclose,
      void *ioctx,
      const char *URL,
      const char *encoding,
      int options);



typedef enum {
  HTML_NA = 0 ,
  HTML_INVALID = 0x1 ,
  HTML_DEPRECATED = 0x2 ,
  HTML_VALID = 0x4 ,
  HTML_REQUIRED = 0xc
} htmlStatus ;




 htmlStatus htmlAttrAllowed(const htmlElemDesc*, const xmlChar*, int) ;
 int htmlElementAllowedHere(const htmlElemDesc*, const xmlChar*) ;
 htmlStatus htmlElementStatusHere(const htmlElemDesc*, const htmlElemDesc*) ;
 htmlStatus htmlNodeStatus(const htmlNodePtr, int) ;
# 18 "./include/libxml/parserInternals.h" 2
# 31 "./include/libxml/parserInternals.h"
extern unsigned int xmlParserMaxDepth;
# 312 "./include/libxml/parserInternals.h"
extern const xmlChar xmlStringText[];
extern const xmlChar xmlStringTextNoenc[];
extern const xmlChar xmlStringComment[];




 int xmlIsLetter (int c);




 xmlParserCtxtPtr
   xmlCreateFileParserCtxt (const char *filename);
 xmlParserCtxtPtr
   xmlCreateURLParserCtxt (const char *filename,
       int options);
 xmlParserCtxtPtr
   xmlCreateMemoryParserCtxt(const char *buffer,
       int size);
 xmlParserCtxtPtr
   xmlCreateEntityParserCtxt(const xmlChar *URL,
       const xmlChar *ID,
       const xmlChar *base);
 int
   xmlSwitchEncoding (xmlParserCtxtPtr ctxt,
       xmlCharEncoding enc);
 int
   xmlSwitchToEncoding (xmlParserCtxtPtr ctxt,
      xmlCharEncodingHandlerPtr handler);
 int
   xmlSwitchInputEncoding (xmlParserCtxtPtr ctxt,
       xmlParserInputPtr input,
      xmlCharEncodingHandlerPtr handler);



 void
   __xmlErrEncoding (xmlParserCtxtPtr ctxt,
       xmlParserErrors xmlerr,
       const char *msg,
       const xmlChar * str1,
       const xmlChar * str2);





 xmlParserInputPtr
   xmlNewStringInputStream (xmlParserCtxtPtr ctxt,
       const xmlChar *buffer);
 xmlParserInputPtr
   xmlNewEntityInputStream (xmlParserCtxtPtr ctxt,
       xmlEntityPtr entity);
 int
   xmlPushInput (xmlParserCtxtPtr ctxt,
       xmlParserInputPtr input);
 xmlChar
   xmlPopInput (xmlParserCtxtPtr ctxt);
 void
   xmlFreeInputStream (xmlParserInputPtr input);
 xmlParserInputPtr
   xmlNewInputFromFile (xmlParserCtxtPtr ctxt,
       const char *filename);
 xmlParserInputPtr
   xmlNewInputStream (xmlParserCtxtPtr ctxt);




 xmlChar *
   xmlSplitQName (xmlParserCtxtPtr ctxt,
       const xmlChar *name,
       xmlChar **prefix);




 const xmlChar *
   xmlParseName (xmlParserCtxtPtr ctxt);
 xmlChar *
   xmlParseNmtoken (xmlParserCtxtPtr ctxt);
 xmlChar *
   xmlParseEntityValue (xmlParserCtxtPtr ctxt,
       xmlChar **orig);
 xmlChar *
   xmlParseAttValue (xmlParserCtxtPtr ctxt);
 xmlChar *
   xmlParseSystemLiteral (xmlParserCtxtPtr ctxt);
 xmlChar *
   xmlParsePubidLiteral (xmlParserCtxtPtr ctxt);
 void
   xmlParseCharData (xmlParserCtxtPtr ctxt,
       int cdata);
 xmlChar *
   xmlParseExternalID (xmlParserCtxtPtr ctxt,
       xmlChar **publicID,
       int strict);
 void
   xmlParseComment (xmlParserCtxtPtr ctxt);
 const xmlChar *
   xmlParsePITarget (xmlParserCtxtPtr ctxt);
 void
   xmlParsePI (xmlParserCtxtPtr ctxt);
 void
   xmlParseNotationDecl (xmlParserCtxtPtr ctxt);
 void
   xmlParseEntityDecl (xmlParserCtxtPtr ctxt);
 int
   xmlParseDefaultDecl (xmlParserCtxtPtr ctxt,
       xmlChar **value);
 xmlEnumerationPtr
   xmlParseNotationType (xmlParserCtxtPtr ctxt);
 xmlEnumerationPtr
   xmlParseEnumerationType (xmlParserCtxtPtr ctxt);
 int
   xmlParseEnumeratedType (xmlParserCtxtPtr ctxt,
       xmlEnumerationPtr *tree);
 int
   xmlParseAttributeType (xmlParserCtxtPtr ctxt,
       xmlEnumerationPtr *tree);
 void
   xmlParseAttributeListDecl(xmlParserCtxtPtr ctxt);
 xmlElementContentPtr
   xmlParseElementMixedContentDecl
      (xmlParserCtxtPtr ctxt,
       int inputchk);
 xmlElementContentPtr
   xmlParseElementChildrenContentDecl
      (xmlParserCtxtPtr ctxt,
       int inputchk);
 int
   xmlParseElementContentDecl(xmlParserCtxtPtr ctxt,
       const xmlChar *name,
       xmlElementContentPtr *result);
 int
   xmlParseElementDecl (xmlParserCtxtPtr ctxt);
 void
   xmlParseMarkupDecl (xmlParserCtxtPtr ctxt);
 int
   xmlParseCharRef (xmlParserCtxtPtr ctxt);
 xmlEntityPtr
   xmlParseEntityRef (xmlParserCtxtPtr ctxt);
 void
   xmlParseReference (xmlParserCtxtPtr ctxt);
 void
   xmlParsePEReference (xmlParserCtxtPtr ctxt);
 void
   xmlParseDocTypeDecl (xmlParserCtxtPtr ctxt);

 const xmlChar *
   xmlParseAttribute (xmlParserCtxtPtr ctxt,
       xmlChar **value);
 const xmlChar *
   xmlParseStartTag (xmlParserCtxtPtr ctxt);
 void
   xmlParseEndTag (xmlParserCtxtPtr ctxt);

 void
   xmlParseCDSect (xmlParserCtxtPtr ctxt);
 void
   xmlParseContent (xmlParserCtxtPtr ctxt);
 void
   xmlParseElement (xmlParserCtxtPtr ctxt);
 xmlChar *
   xmlParseVersionNum (xmlParserCtxtPtr ctxt);
 xmlChar *
   xmlParseVersionInfo (xmlParserCtxtPtr ctxt);
 xmlChar *
   xmlParseEncName (xmlParserCtxtPtr ctxt);
 const xmlChar *
   xmlParseEncodingDecl (xmlParserCtxtPtr ctxt);
 int
   xmlParseSDDecl (xmlParserCtxtPtr ctxt);
 void
   xmlParseXMLDecl (xmlParserCtxtPtr ctxt);
 void
   xmlParseTextDecl (xmlParserCtxtPtr ctxt);
 void
   xmlParseMisc (xmlParserCtxtPtr ctxt);
 void
   xmlParseExternalSubset (xmlParserCtxtPtr ctxt,
       const xmlChar *ExternalID,
       const xmlChar *SystemID);
# 521 "./include/libxml/parserInternals.h"
 xmlChar *
  xmlStringDecodeEntities (xmlParserCtxtPtr ctxt,
       const xmlChar *str,
       int what,
       xmlChar end,
       xmlChar end2,
       xmlChar end3);
 xmlChar *
  xmlStringLenDecodeEntities (xmlParserCtxtPtr ctxt,
       const xmlChar *str,
       int len,
       int what,
       xmlChar end,
       xmlChar end2,
       xmlChar end3);




 int nodePush (xmlParserCtxtPtr ctxt,
       xmlNodePtr value);
 xmlNodePtr nodePop (xmlParserCtxtPtr ctxt);
 int inputPush (xmlParserCtxtPtr ctxt,
       xmlParserInputPtr value);
 xmlParserInputPtr inputPop (xmlParserCtxtPtr ctxt);
 const xmlChar * namePop (xmlParserCtxtPtr ctxt);
 int namePush (xmlParserCtxtPtr ctxt,
       const xmlChar *value);




 int xmlSkipBlankChars (xmlParserCtxtPtr ctxt);
 int xmlStringCurrentChar (xmlParserCtxtPtr ctxt,
       const xmlChar *cur,
       int *len);
 void xmlParserHandlePEReference(xmlParserCtxtPtr ctxt);
 int xmlCheckLanguageID (const xmlChar *lang);




 int xmlCurrentChar (xmlParserCtxtPtr ctxt,
       int *len);
 int xmlCopyCharMultiByte (xmlChar *out,
       int val);
 int xmlCopyChar (int len,
       xmlChar *out,
       int val);
 void xmlNextChar (xmlParserCtxtPtr ctxt);
 void xmlParserInputShrink (xmlParserInputPtr in);





 void htmlInitAutoClose (void);
 htmlParserCtxtPtr htmlCreateFileParserCtxt(const char *filename,
                                          const char *encoding);
# 596 "./include/libxml/parserInternals.h"
typedef void (*xmlEntityReferenceFunc) (xmlEntityPtr ent,
       xmlNodePtr firstNode,
       xmlNodePtr lastNode);

 void xmlSetEntityReferenceFunc (xmlEntityReferenceFunc func);

 xmlChar *
   xmlParseQuotedString (xmlParserCtxtPtr ctxt);
 void
                        xmlParseNamespace (xmlParserCtxtPtr ctxt);
 xmlChar *
   xmlNamespaceParseNSDef (xmlParserCtxtPtr ctxt);
 xmlChar *
   xmlScanName (xmlParserCtxtPtr ctxt);
 xmlChar *
   xmlNamespaceParseNCName (xmlParserCtxtPtr ctxt);
 void xmlParserHandleReference(xmlParserCtxtPtr ctxt);
 xmlChar *
   xmlNamespaceParseQName (xmlParserCtxtPtr ctxt,
       xmlChar **prefix);



 xmlChar *
  xmlDecodeEntities (xmlParserCtxtPtr ctxt,
       int len,
       int what,
       xmlChar end,
       xmlChar end2,
       xmlChar end3);
 void
   xmlHandleEntity (xmlParserCtxtPtr ctxt,
       xmlEntityPtr entity);







 void
 xmlErrMemory (xmlParserCtxtPtr ctxt,
     const char *extra);
# 19 "./include/libxml/DOCBparser.h" 2
# 33 "./include/libxml/DOCBparser.h"
typedef xmlParserCtxt docbParserCtxt;
typedef xmlParserCtxtPtr docbParserCtxtPtr;
typedef xmlSAXHandler docbSAXHandler;
typedef xmlSAXHandlerPtr docbSAXHandlerPtr;
typedef xmlParserInput docbParserInput;
typedef xmlParserInputPtr docbParserInputPtr;
typedef xmlDocPtr docbDocPtr;




 int
       docbEncodeEntities(unsigned char *out,
                                        int *outlen,
                                        const unsigned char *in,
                                        int *inlen, int quoteChar);

 docbDocPtr
       docbSAXParseDoc (xmlChar *cur,
                                        const char *encoding,
                                        docbSAXHandlerPtr sax,
                                        void *userData);
 docbDocPtr
       docbParseDoc (xmlChar *cur,
                                        const char *encoding);
 docbDocPtr
       docbSAXParseFile (const char *filename,
                                        const char *encoding,
                                        docbSAXHandlerPtr sax,
                                        void *userData);
 docbDocPtr
       docbParseFile (const char *filename,
                                        const char *encoding);




 void
       docbFreeParserCtxt (docbParserCtxtPtr ctxt);
 docbParserCtxtPtr
       docbCreatePushParserCtxt(docbSAXHandlerPtr sax,
                                              void *user_data,
                                              const char *chunk,
                                              int size,
                                              const char *filename,
                                              xmlCharEncoding enc);
 int
       docbParseChunk (docbParserCtxtPtr ctxt,
                                              const char *chunk,
                                              int size,
                                              int terminate);
 docbParserCtxtPtr
       docbCreateFileParserCtxt(const char *filename,
                                              const char *encoding);
 int
       docbParseDocument (docbParserCtxtPtr ctxt);
# 23 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2





# 1 "./include/libxml/HTMLtree.h" 1
# 62 "./include/libxml/HTMLtree.h"
 htmlDocPtr
  htmlNewDoc (const xmlChar *URI,
      const xmlChar *ExternalID);
 htmlDocPtr
  htmlNewDocNoDtD (const xmlChar *URI,
      const xmlChar *ExternalID);
 const xmlChar *
  htmlGetMetaEncoding (htmlDocPtr doc);
 int
  htmlSetMetaEncoding (htmlDocPtr doc,
      const xmlChar *encoding);

 void
  htmlDocDumpMemory (xmlDocPtr cur,
      xmlChar **mem,
      int *size);
 void
  htmlDocDumpMemoryFormat (xmlDocPtr cur,
      xmlChar **mem,
      int *size,
      int format);
 int
  htmlDocDump (FILE *f,
      xmlDocPtr cur);
 int
  htmlSaveFile (const char *filename,
      xmlDocPtr cur);
 int
  htmlNodeDump (xmlBufferPtr buf,
      xmlDocPtr doc,
      xmlNodePtr cur);
 void
  htmlNodeDumpFile (FILE *out,
      xmlDocPtr doc,
      xmlNodePtr cur);
 int
  htmlNodeDumpFileFormat (FILE *out,
      xmlDocPtr doc,
      xmlNodePtr cur,
      const char *encoding,
      int format);
 int
  htmlSaveFileEnc (const char *filename,
      xmlDocPtr cur,
      const char *encoding);
 int
  htmlSaveFileFormat (const char *filename,
      xmlDocPtr cur,
      const char *encoding,
      int format);

 void
  htmlNodeDumpFormatOutput(xmlOutputBufferPtr buf,
      xmlDocPtr doc,
      xmlNodePtr cur,
      const char *encoding,
      int format);
 void
  htmlDocContentDumpOutput(xmlOutputBufferPtr buf,
      xmlDocPtr cur,
      const char *encoding);
 void
  htmlDocContentDumpFormatOutput(xmlOutputBufferPtr buf,
      xmlDocPtr cur,
      const char *encoding,
      int format);
 void
  htmlNodeDumpOutput (xmlOutputBufferPtr buf,
      xmlDocPtr doc,
      xmlNodePtr cur,
      const char *encoding);



 int
  htmlIsBooleanAttr (const xmlChar *name);
# 29 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2

# 1 "./include/libxml/nanoftp.h" 1
# 60 "./include/libxml/nanoftp.h"
typedef void (*ftpListCallback) (void *userData,
                          const char *filename, const char *attrib,
                          const char *owner, const char *group,
     unsigned long size, int links, int year,
     const char *month, int day, int hour,
     int minute);
# 74 "./include/libxml/nanoftp.h"
typedef void (*ftpDataCallback) (void *userData,
     const char *data,
     int len);




 void
 xmlNanoFTPInit (void);
 void
 xmlNanoFTPCleanup (void);




 void *
 xmlNanoFTPNewCtxt (const char *URL);
 void
 xmlNanoFTPFreeCtxt (void * ctx);
 void *
 xmlNanoFTPConnectTo (const char *server,
     int port);



 void *
 xmlNanoFTPOpen (const char *URL);
 int
 xmlNanoFTPConnect (void *ctx);
 int
 xmlNanoFTPClose (void *ctx);
 int
 xmlNanoFTPQuit (void *ctx);
 void
 xmlNanoFTPScanProxy (const char *URL);
 void
 xmlNanoFTPProxy (const char *host,
     int port,
     const char *user,
     const char *passwd,
     int type);
 int
 xmlNanoFTPUpdateURL (void *ctx,
     const char *URL);




 int
 xmlNanoFTPGetResponse (void *ctx);
 int
 xmlNanoFTPCheckResponse (void *ctx);




 int
 xmlNanoFTPCwd (void *ctx,
     const char *directory);
 int
 xmlNanoFTPDele (void *ctx,
     const char *file);

 int
 xmlNanoFTPGetConnection (void *ctx);
 int
 xmlNanoFTPCloseConnection(void *ctx);
 int
 xmlNanoFTPList (void *ctx,
     ftpListCallback callback,
     void *userData,
     const char *filename);
 int
 xmlNanoFTPGetSocket (void *ctx,
     const char *filename);
 int
 xmlNanoFTPGet (void *ctx,
     ftpDataCallback callback,
     void *userData,
     const char *filename);
 int
 xmlNanoFTPRead (void *ctx,
     void *dest,
     int len);
# 31 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2
# 1 "./include/libxml/nanohttp.h" 1
# 21 "./include/libxml/nanohttp.h"
 void
 xmlNanoHTTPInit (void);
 void
 xmlNanoHTTPCleanup (void);
 void
 xmlNanoHTTPScanProxy (const char *URL);
 int
 xmlNanoHTTPFetch (const char *URL,
     const char *filename,
     char **contentType);
 void *
 xmlNanoHTTPMethod (const char *URL,
     const char *method,
     const char *input,
     char **contentType,
     const char *headers,
     int ilen);
 void *
 xmlNanoHTTPMethodRedir (const char *URL,
     const char *method,
     const char *input,
     char **contentType,
     char **redir,
     const char *headers,
     int ilen);
 void *
 xmlNanoHTTPOpen (const char *URL,
     char **contentType);
 void *
 xmlNanoHTTPOpenRedir (const char *URL,
     char **contentType,
     char **redir);
 int
 xmlNanoHTTPReturnCode (void *ctx);
 const char *
 xmlNanoHTTPAuthHeader (void *ctx);
 const char *
 xmlNanoHTTPRedir (void *ctx);
 int
 xmlNanoHTTPContentLength( void * ctx );
 const char *
 xmlNanoHTTPEncoding (void *ctx);
 const char *
 xmlNanoHTTPMimeType (void *ctx);
 int
 xmlNanoHTTPRead (void *ctx,
     void *dest,
     int len);

 int
 xmlNanoHTTPSave (void *ctxt,
     const char *filename);

 void
 xmlNanoHTTPClose (void *ctx);
# 32 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2


# 1 "./include/libxml/pattern.h" 1
# 29 "./include/libxml/pattern.h"
typedef struct _xmlPattern xmlPattern;
typedef xmlPattern *xmlPatternPtr;
# 39 "./include/libxml/pattern.h"
typedef enum {
    XML_PATTERN_DEFAULT = 0,
    XML_PATTERN_XPATH = 1<<0,
    XML_PATTERN_XSSEL = 1<<1,
    XML_PATTERN_XSFIELD = 1<<2
} xmlPatternFlags;

 void
   xmlFreePattern (xmlPatternPtr comp);

 void
   xmlFreePatternList (xmlPatternPtr comp);

 xmlPatternPtr
   xmlPatterncompile (const xmlChar *pattern,
       xmlDict *dict,
       int flags,
       const xmlChar **namespaces);
 int
   xmlPatternMatch (xmlPatternPtr comp,
       xmlNodePtr node);


typedef struct _xmlStreamCtxt xmlStreamCtxt;
typedef xmlStreamCtxt *xmlStreamCtxtPtr;

 int
   xmlPatternStreamable (xmlPatternPtr comp);
 int
   xmlPatternMaxDepth (xmlPatternPtr comp);
 int
   xmlPatternMinDepth (xmlPatternPtr comp);
 int
   xmlPatternFromRoot (xmlPatternPtr comp);
 xmlStreamCtxtPtr
   xmlPatternGetStreamCtxt (xmlPatternPtr comp);
 void
   xmlFreeStreamCtxt (xmlStreamCtxtPtr stream);
 int
   xmlStreamPushNode (xmlStreamCtxtPtr stream,
       const xmlChar *name,
       const xmlChar *ns,
       int nodeType);
 int
   xmlStreamPush (xmlStreamCtxtPtr stream,
       const xmlChar *name,
       const xmlChar *ns);
 int
   xmlStreamPushAttr (xmlStreamCtxtPtr stream,
       const xmlChar *name,
       const xmlChar *ns);
 int
   xmlStreamPop (xmlStreamCtxtPtr stream);
 int
   xmlStreamWantsAnyNode (xmlStreamCtxtPtr stream);
# 35 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2
# 1 "./include/libxml/relaxng.h" 1
# 23 "./include/libxml/relaxng.h"
typedef struct _xmlRelaxNG xmlRelaxNG;
typedef xmlRelaxNG *xmlRelaxNGPtr;
# 35 "./include/libxml/relaxng.h"
typedef void ( *xmlRelaxNGValidityErrorFunc) (void *ctx, const char *msg, ...) __attribute__((__format__(__printf__,2,3)));
# 45 "./include/libxml/relaxng.h"
typedef void ( *xmlRelaxNGValidityWarningFunc) (void *ctx, const char *msg, ...) __attribute__((__format__(__printf__,2,3)));




typedef struct _xmlRelaxNGParserCtxt xmlRelaxNGParserCtxt;
typedef xmlRelaxNGParserCtxt *xmlRelaxNGParserCtxtPtr;

typedef struct _xmlRelaxNGValidCtxt xmlRelaxNGValidCtxt;
typedef xmlRelaxNGValidCtxt *xmlRelaxNGValidCtxtPtr;






typedef enum {
    XML_RELAXNG_OK = 0,
    XML_RELAXNG_ERR_MEMORY,
    XML_RELAXNG_ERR_TYPE,
    XML_RELAXNG_ERR_TYPEVAL,
    XML_RELAXNG_ERR_DUPID,
    XML_RELAXNG_ERR_TYPECMP,
    XML_RELAXNG_ERR_NOSTATE,
    XML_RELAXNG_ERR_NODEFINE,
    XML_RELAXNG_ERR_LISTEXTRA,
    XML_RELAXNG_ERR_LISTEMPTY,
    XML_RELAXNG_ERR_INTERNODATA,
    XML_RELAXNG_ERR_INTERSEQ,
    XML_RELAXNG_ERR_INTEREXTRA,
    XML_RELAXNG_ERR_ELEMNAME,
    XML_RELAXNG_ERR_ATTRNAME,
    XML_RELAXNG_ERR_ELEMNONS,
    XML_RELAXNG_ERR_ATTRNONS,
    XML_RELAXNG_ERR_ELEMWRONGNS,
    XML_RELAXNG_ERR_ATTRWRONGNS,
    XML_RELAXNG_ERR_ELEMEXTRANS,
    XML_RELAXNG_ERR_ATTREXTRANS,
    XML_RELAXNG_ERR_ELEMNOTEMPTY,
    XML_RELAXNG_ERR_NOELEM,
    XML_RELAXNG_ERR_NOTELEM,
    XML_RELAXNG_ERR_ATTRVALID,
    XML_RELAXNG_ERR_CONTENTVALID,
    XML_RELAXNG_ERR_EXTRACONTENT,
    XML_RELAXNG_ERR_INVALIDATTR,
    XML_RELAXNG_ERR_DATAELEM,
    XML_RELAXNG_ERR_VALELEM,
    XML_RELAXNG_ERR_LISTELEM,
    XML_RELAXNG_ERR_DATATYPE,
    XML_RELAXNG_ERR_VALUE,
    XML_RELAXNG_ERR_LIST,
    XML_RELAXNG_ERR_NOGRAMMAR,
    XML_RELAXNG_ERR_EXTRADATA,
    XML_RELAXNG_ERR_LACKDATA,
    XML_RELAXNG_ERR_INTERNAL,
    XML_RELAXNG_ERR_ELEMWRONG,
    XML_RELAXNG_ERR_TEXTWRONG
} xmlRelaxNGValidErr;






typedef enum {
    XML_RELAXNGP_NONE = 0,
    XML_RELAXNGP_FREE_DOC = 1,
    XML_RELAXNGP_CRNG = 2
} xmlRelaxNGParserFlag;

 int
      xmlRelaxNGInitTypes (void);
 void
      xmlRelaxNGCleanupTypes (void);




 xmlRelaxNGParserCtxtPtr
      xmlRelaxNGNewParserCtxt (const char *URL);
 xmlRelaxNGParserCtxtPtr
      xmlRelaxNGNewMemParserCtxt (const char *buffer,
       int size);
 xmlRelaxNGParserCtxtPtr
      xmlRelaxNGNewDocParserCtxt (xmlDocPtr doc);

 int
      xmlRelaxParserSetFlag (xmlRelaxNGParserCtxtPtr ctxt,
       int flag);

 void
      xmlRelaxNGFreeParserCtxt (xmlRelaxNGParserCtxtPtr ctxt);
 void
      xmlRelaxNGSetParserErrors(xmlRelaxNGParserCtxtPtr ctxt,
      xmlRelaxNGValidityErrorFunc err,
      xmlRelaxNGValidityWarningFunc warn,
      void *ctx);
 int
      xmlRelaxNGGetParserErrors(xmlRelaxNGParserCtxtPtr ctxt,
      xmlRelaxNGValidityErrorFunc *err,
      xmlRelaxNGValidityWarningFunc *warn,
      void **ctx);
 void
      xmlRelaxNGSetParserStructuredErrors(
      xmlRelaxNGParserCtxtPtr ctxt,
      xmlStructuredErrorFunc serror,
      void *ctx);
 xmlRelaxNGPtr
      xmlRelaxNGParse (xmlRelaxNGParserCtxtPtr ctxt);
 void
      xmlRelaxNGFree (xmlRelaxNGPtr schema);

 void
      xmlRelaxNGDump (FILE *output,
      xmlRelaxNGPtr schema);
 void
      xmlRelaxNGDumpTree (FILE * output,
      xmlRelaxNGPtr schema);




 void
      xmlRelaxNGSetValidErrors(xmlRelaxNGValidCtxtPtr ctxt,
      xmlRelaxNGValidityErrorFunc err,
      xmlRelaxNGValidityWarningFunc warn,
      void *ctx);
 int
      xmlRelaxNGGetValidErrors(xmlRelaxNGValidCtxtPtr ctxt,
      xmlRelaxNGValidityErrorFunc *err,
      xmlRelaxNGValidityWarningFunc *warn,
      void **ctx);
 void
   xmlRelaxNGSetValidStructuredErrors(xmlRelaxNGValidCtxtPtr ctxt,
       xmlStructuredErrorFunc serror, void *ctx);
 xmlRelaxNGValidCtxtPtr
      xmlRelaxNGNewValidCtxt (xmlRelaxNGPtr schema);
 void
      xmlRelaxNGFreeValidCtxt (xmlRelaxNGValidCtxtPtr ctxt);
 int
      xmlRelaxNGValidateDoc (xmlRelaxNGValidCtxtPtr ctxt,
       xmlDocPtr doc);



 int
      xmlRelaxNGValidatePushElement (xmlRelaxNGValidCtxtPtr ctxt,
      xmlDocPtr doc,
      xmlNodePtr elem);
 int
      xmlRelaxNGValidatePushCData (xmlRelaxNGValidCtxtPtr ctxt,
      const xmlChar *data,
      int len);
 int
      xmlRelaxNGValidatePopElement (xmlRelaxNGValidCtxtPtr ctxt,
      xmlDocPtr doc,
      xmlNodePtr elem);
 int
      xmlRelaxNGValidateFullElement (xmlRelaxNGValidCtxtPtr ctxt,
      xmlDocPtr doc,
      xmlNodePtr elem);
# 36 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2


# 1 "./include/libxml/schemasInternals.h" 1
# 29 "./include/libxml/schemasInternals.h"
typedef enum {
    XML_SCHEMAS_UNKNOWN = 0,
    XML_SCHEMAS_STRING,
    XML_SCHEMAS_NORMSTRING,
    XML_SCHEMAS_DECIMAL,
    XML_SCHEMAS_TIME,
    XML_SCHEMAS_GDAY,
    XML_SCHEMAS_GMONTH,
    XML_SCHEMAS_GMONTHDAY,
    XML_SCHEMAS_GYEAR,
    XML_SCHEMAS_GYEARMONTH,
    XML_SCHEMAS_DATE,
    XML_SCHEMAS_DATETIME,
    XML_SCHEMAS_DURATION,
    XML_SCHEMAS_FLOAT,
    XML_SCHEMAS_DOUBLE,
    XML_SCHEMAS_BOOLEAN,
    XML_SCHEMAS_TOKEN,
    XML_SCHEMAS_LANGUAGE,
    XML_SCHEMAS_NMTOKEN,
    XML_SCHEMAS_NMTOKENS,
    XML_SCHEMAS_NAME,
    XML_SCHEMAS_QNAME,
    XML_SCHEMAS_NCNAME,
    XML_SCHEMAS_ID,
    XML_SCHEMAS_IDREF,
    XML_SCHEMAS_IDREFS,
    XML_SCHEMAS_ENTITY,
    XML_SCHEMAS_ENTITIES,
    XML_SCHEMAS_NOTATION,
    XML_SCHEMAS_ANYURI,
    XML_SCHEMAS_INTEGER,
    XML_SCHEMAS_NPINTEGER,
    XML_SCHEMAS_NINTEGER,
    XML_SCHEMAS_NNINTEGER,
    XML_SCHEMAS_PINTEGER,
    XML_SCHEMAS_INT,
    XML_SCHEMAS_UINT,
    XML_SCHEMAS_LONG,
    XML_SCHEMAS_ULONG,
    XML_SCHEMAS_SHORT,
    XML_SCHEMAS_USHORT,
    XML_SCHEMAS_BYTE,
    XML_SCHEMAS_UBYTE,
    XML_SCHEMAS_HEXBINARY,
    XML_SCHEMAS_BASE64BINARY,
    XML_SCHEMAS_ANYTYPE,
    XML_SCHEMAS_ANYSIMPLETYPE
} xmlSchemaValType;




typedef enum {
    XML_SCHEMA_TYPE_BASIC = 1,
    XML_SCHEMA_TYPE_ANY,
    XML_SCHEMA_TYPE_FACET,
    XML_SCHEMA_TYPE_SIMPLE,
    XML_SCHEMA_TYPE_COMPLEX,
    XML_SCHEMA_TYPE_SEQUENCE = 6,
    XML_SCHEMA_TYPE_CHOICE,
    XML_SCHEMA_TYPE_ALL,
    XML_SCHEMA_TYPE_SIMPLE_CONTENT,
    XML_SCHEMA_TYPE_COMPLEX_CONTENT,
    XML_SCHEMA_TYPE_UR,
    XML_SCHEMA_TYPE_RESTRICTION,
    XML_SCHEMA_TYPE_EXTENSION,
    XML_SCHEMA_TYPE_ELEMENT,
    XML_SCHEMA_TYPE_ATTRIBUTE,
    XML_SCHEMA_TYPE_ATTRIBUTEGROUP,
    XML_SCHEMA_TYPE_GROUP,
    XML_SCHEMA_TYPE_NOTATION,
    XML_SCHEMA_TYPE_LIST,
    XML_SCHEMA_TYPE_UNION,
    XML_SCHEMA_TYPE_ANY_ATTRIBUTE,
    XML_SCHEMA_TYPE_IDC_UNIQUE,
    XML_SCHEMA_TYPE_IDC_KEY,
    XML_SCHEMA_TYPE_IDC_KEYREF,
    XML_SCHEMA_TYPE_PARTICLE = 25,
    XML_SCHEMA_TYPE_ATTRIBUTE_USE,
    XML_SCHEMA_FACET_MININCLUSIVE = 1000,
    XML_SCHEMA_FACET_MINEXCLUSIVE,
    XML_SCHEMA_FACET_MAXINCLUSIVE,
    XML_SCHEMA_FACET_MAXEXCLUSIVE,
    XML_SCHEMA_FACET_TOTALDIGITS,
    XML_SCHEMA_FACET_FRACTIONDIGITS,
    XML_SCHEMA_FACET_PATTERN,
    XML_SCHEMA_FACET_ENUMERATION,
    XML_SCHEMA_FACET_WHITESPACE,
    XML_SCHEMA_FACET_LENGTH,
    XML_SCHEMA_FACET_MAXLENGTH,
    XML_SCHEMA_FACET_MINLENGTH,
    XML_SCHEMA_EXTRA_QNAMEREF = 2000,
    XML_SCHEMA_EXTRA_ATTR_USE_PROHIB
} xmlSchemaTypeType;

typedef enum {
    XML_SCHEMA_CONTENT_UNKNOWN = 0,
    XML_SCHEMA_CONTENT_EMPTY = 1,
    XML_SCHEMA_CONTENT_ELEMENTS,
    XML_SCHEMA_CONTENT_MIXED,
    XML_SCHEMA_CONTENT_SIMPLE,
    XML_SCHEMA_CONTENT_MIXED_OR_ELEMENTS,
    XML_SCHEMA_CONTENT_BASIC,
    XML_SCHEMA_CONTENT_ANY
} xmlSchemaContentType;

typedef struct _xmlSchemaVal xmlSchemaVal;
typedef xmlSchemaVal *xmlSchemaValPtr;

typedef struct _xmlSchemaType xmlSchemaType;
typedef xmlSchemaType *xmlSchemaTypePtr;

typedef struct _xmlSchemaFacet xmlSchemaFacet;
typedef xmlSchemaFacet *xmlSchemaFacetPtr;




typedef struct _xmlSchemaAnnot xmlSchemaAnnot;
typedef xmlSchemaAnnot *xmlSchemaAnnotPtr;
struct _xmlSchemaAnnot {
    struct _xmlSchemaAnnot *next;
    xmlNodePtr content;
};
# 246 "./include/libxml/schemasInternals.h"
typedef struct _xmlSchemaAttribute xmlSchemaAttribute;
typedef xmlSchemaAttribute *xmlSchemaAttributePtr;
struct _xmlSchemaAttribute {
    xmlSchemaTypeType type;
    struct _xmlSchemaAttribute *next;
    const xmlChar *name;
    const xmlChar *id;
    const xmlChar *ref;
    const xmlChar *refNs;
    const xmlChar *typeName;
    const xmlChar *typeNs;
    xmlSchemaAnnotPtr annot;

    xmlSchemaTypePtr base;
    int occurs;
    const xmlChar *defValue;
    xmlSchemaTypePtr subtypes;
    xmlNodePtr node;
    const xmlChar *targetNamespace;
    int flags;
    const xmlChar *refPrefix;
    xmlSchemaValPtr defVal;
    xmlSchemaAttributePtr refDecl;
};






typedef struct _xmlSchemaAttributeLink xmlSchemaAttributeLink;
typedef xmlSchemaAttributeLink *xmlSchemaAttributeLinkPtr;
struct _xmlSchemaAttributeLink {
    struct _xmlSchemaAttributeLink *next;
    struct _xmlSchemaAttribute *attr;
};
# 294 "./include/libxml/schemasInternals.h"
typedef struct _xmlSchemaWildcardNs xmlSchemaWildcardNs;
typedef xmlSchemaWildcardNs *xmlSchemaWildcardNsPtr;
struct _xmlSchemaWildcardNs {
    struct _xmlSchemaWildcardNs *next;
    const xmlChar *value;
};





typedef struct _xmlSchemaWildcard xmlSchemaWildcard;
typedef xmlSchemaWildcard *xmlSchemaWildcardPtr;
struct _xmlSchemaWildcard {
    xmlSchemaTypeType type;
    const xmlChar *id;
    xmlSchemaAnnotPtr annot;
    xmlNodePtr node;
    int minOccurs;
    int maxOccurs;
    int processContents;
    int any;
    xmlSchemaWildcardNsPtr nsSet;
    xmlSchemaWildcardNsPtr negNsSet;
    int flags;
};
# 359 "./include/libxml/schemasInternals.h"
typedef struct _xmlSchemaAttributeGroup xmlSchemaAttributeGroup;
typedef xmlSchemaAttributeGroup *xmlSchemaAttributeGroupPtr;
struct _xmlSchemaAttributeGroup {
    xmlSchemaTypeType type;
    struct _xmlSchemaAttribute *next;
    const xmlChar *name;
    const xmlChar *id;
    const xmlChar *ref;
    const xmlChar *refNs;
    xmlSchemaAnnotPtr annot;

    xmlSchemaAttributePtr attributes;
    xmlNodePtr node;
    int flags;
    xmlSchemaWildcardPtr attributeWildcard;
    const xmlChar *refPrefix;
    xmlSchemaAttributeGroupPtr refItem;
    const xmlChar *targetNamespace;
    void *attrUses;
};






typedef struct _xmlSchemaTypeLink xmlSchemaTypeLink;
typedef xmlSchemaTypeLink *xmlSchemaTypeLinkPtr;
struct _xmlSchemaTypeLink {
    struct _xmlSchemaTypeLink *next;
    xmlSchemaTypePtr type;
};





typedef struct _xmlSchemaFacetLink xmlSchemaFacetLink;
typedef xmlSchemaFacetLink *xmlSchemaFacetLinkPtr;
struct _xmlSchemaFacetLink {
    struct _xmlSchemaFacetLink *next;
    xmlSchemaFacetPtr facet;
};
# 602 "./include/libxml/schemasInternals.h"
struct _xmlSchemaType {
    xmlSchemaTypeType type;
    struct _xmlSchemaType *next;
    const xmlChar *name;
    const xmlChar *id ;
    const xmlChar *ref;
    const xmlChar *refNs;
    xmlSchemaAnnotPtr annot;
    xmlSchemaTypePtr subtypes;
    xmlSchemaAttributePtr attributes;
    xmlNodePtr node;
    int minOccurs;
    int maxOccurs;

    int flags;
    xmlSchemaContentType contentType;
    const xmlChar *base;
    const xmlChar *baseNs;
    xmlSchemaTypePtr baseType;
    xmlSchemaFacetPtr facets;
    struct _xmlSchemaType *redef;
    int recurse;
    xmlSchemaAttributeLinkPtr *attributeUses;
    xmlSchemaWildcardPtr attributeWildcard;
    int builtInType;
    xmlSchemaTypeLinkPtr memberTypes;
    xmlSchemaFacetLinkPtr facetSet;
    const xmlChar *refPrefix;
    xmlSchemaTypePtr contentTypeDef;

    xmlRegexpPtr contModel;
    const xmlChar *targetNamespace;
    void *attrUses;
};
# 763 "./include/libxml/schemasInternals.h"
typedef struct _xmlSchemaElement xmlSchemaElement;
typedef xmlSchemaElement *xmlSchemaElementPtr;
struct _xmlSchemaElement {
    xmlSchemaTypeType type;
    struct _xmlSchemaType *next;
    const xmlChar *name;
    const xmlChar *id;
    const xmlChar *ref;
    const xmlChar *refNs;
    xmlSchemaAnnotPtr annot;
    xmlSchemaTypePtr subtypes;
    xmlSchemaAttributePtr attributes;
    xmlNodePtr node;
    int minOccurs;
    int maxOccurs;

    int flags;
    const xmlChar *targetNamespace;
    const xmlChar *namedType;
    const xmlChar *namedTypeNs;
    const xmlChar *substGroup;
    const xmlChar *substGroupNs;
    const xmlChar *scope;
    const xmlChar *value;
    struct _xmlSchemaElement *refDecl;

    xmlRegexpPtr contModel;
    xmlSchemaContentType contentType;
    const xmlChar *refPrefix;
    xmlSchemaValPtr defVal;
    void *idcs;
};
# 823 "./include/libxml/schemasInternals.h"
struct _xmlSchemaFacet {
    xmlSchemaTypeType type;
    struct _xmlSchemaFacet *next;
    const xmlChar *value;
    const xmlChar *id;
    xmlSchemaAnnotPtr annot;
    xmlNodePtr node;
    int fixed;
    int whitespace;
    xmlSchemaValPtr val;
    xmlRegexpPtr regexp;
};




typedef struct _xmlSchemaNotation xmlSchemaNotation;
typedef xmlSchemaNotation *xmlSchemaNotationPtr;
struct _xmlSchemaNotation {
    xmlSchemaTypeType type;
    const xmlChar *name;
    xmlSchemaAnnotPtr annot;
    const xmlChar *identifier;
    const xmlChar *targetNamespace;
};
# 923 "./include/libxml/schemasInternals.h"
struct _xmlSchema {
    const xmlChar *name;
    const xmlChar *targetNamespace;
    const xmlChar *version;
    const xmlChar *id;
    xmlDocPtr doc;
    xmlSchemaAnnotPtr annot;
    int flags;

    xmlHashTablePtr typeDecl;
    xmlHashTablePtr attrDecl;
    xmlHashTablePtr attrgrpDecl;
    xmlHashTablePtr elemDecl;
    xmlHashTablePtr notaDecl;

    xmlHashTablePtr schemasImports;

    void *_private;
    xmlHashTablePtr groupDecl;
    xmlDictPtr dict;
    void *includes;
    int preserve;
    int counter;
    xmlHashTablePtr idcDef;
    void *volatiles;
};

 void xmlSchemaFreeType (xmlSchemaTypePtr type);
 void xmlSchemaFreeWildcard(xmlSchemaWildcardPtr wildcard);
# 39 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2
# 1 "./include/libxml/schematron.h" 1
# 24 "./include/libxml/schematron.h"
typedef enum {
    XML_SCHEMATRON_OUT_QUIET = 1 << 0,
    XML_SCHEMATRON_OUT_TEXT = 1 << 1,
    XML_SCHEMATRON_OUT_XML = 1 << 2,
    XML_SCHEMATRON_OUT_ERROR = 1 << 3,
    XML_SCHEMATRON_OUT_FILE = 1 << 8,
    XML_SCHEMATRON_OUT_BUFFER = 1 << 9,
    XML_SCHEMATRON_OUT_IO = 1 << 10
} xmlSchematronValidOptions;




typedef struct _xmlSchematron xmlSchematron;
typedef xmlSchematron *xmlSchematronPtr;
# 48 "./include/libxml/schematron.h"
typedef void (*xmlSchematronValidityErrorFunc) (void *ctx, const char *msg, ...);
# 58 "./include/libxml/schematron.h"
typedef void (*xmlSchematronValidityWarningFunc) (void *ctx, const char *msg, ...);




typedef struct _xmlSchematronParserCtxt xmlSchematronParserCtxt;
typedef xmlSchematronParserCtxt *xmlSchematronParserCtxtPtr;

typedef struct _xmlSchematronValidCtxt xmlSchematronValidCtxt;
typedef xmlSchematronValidCtxt *xmlSchematronValidCtxtPtr;




 xmlSchematronParserCtxtPtr
     xmlSchematronNewParserCtxt (const char *URL);
 xmlSchematronParserCtxtPtr
     xmlSchematronNewMemParserCtxt(const char *buffer,
      int size);
 xmlSchematronParserCtxtPtr
     xmlSchematronNewDocParserCtxt(xmlDocPtr doc);
 void
     xmlSchematronFreeParserCtxt (xmlSchematronParserCtxtPtr ctxt);
# 95 "./include/libxml/schematron.h"
 xmlSchematronPtr
     xmlSchematronParse (xmlSchematronParserCtxtPtr ctxt);
 void
     xmlSchematronFree (xmlSchematronPtr schema);



 void
     xmlSchematronSetValidStructuredErrors(
                                   xmlSchematronValidCtxtPtr ctxt,
       xmlStructuredErrorFunc serror,
       void *ctx);
# 128 "./include/libxml/schematron.h"
 xmlSchematronValidCtxtPtr
     xmlSchematronNewValidCtxt (xmlSchematronPtr schema,
      int options);
 void
     xmlSchematronFreeValidCtxt (xmlSchematronValidCtxtPtr ctxt);
 int
     xmlSchematronValidateDoc (xmlSchematronValidCtxtPtr ctxt,
      xmlDocPtr instance);
# 40 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2


# 1 "./include/libxml/uri.h" 1
# 31 "./include/libxml/uri.h"
typedef struct _xmlURI xmlURI;
typedef xmlURI *xmlURIPtr;
struct _xmlURI {
    char *scheme;
    char *opaque;
    char *authority;
    char *server;
    char *user;
    int port;
    char *path;
    char *query;
    char *fragment;
    int cleanup;
    char *query_raw;
};






 xmlURIPtr
  xmlCreateURI (void);
 xmlChar *
  xmlBuildURI (const xmlChar *URI,
      const xmlChar *base);
 xmlChar *
  xmlBuildRelativeURI (const xmlChar *URI,
      const xmlChar *base);
 xmlURIPtr
  xmlParseURI (const char *str);
 xmlURIPtr
  xmlParseURIRaw (const char *str,
      int raw);
 int
  xmlParseURIReference (xmlURIPtr uri,
      const char *str);
 xmlChar *
  xmlSaveUri (xmlURIPtr uri);
 void
  xmlPrintURI (FILE *stream,
      xmlURIPtr uri);
 xmlChar *
  xmlURIEscapeStr (const xmlChar *str,
      const xmlChar *list);
 char *
  xmlURIUnescapeString (const char *str,
      int len,
      char *target);
 int
  xmlNormalizeURIPath (char *path);
 xmlChar *
  xmlURIEscape (const xmlChar *str);
 void
  xmlFreeURI (xmlURIPtr uri);
 xmlChar*
  xmlCanonicPath (const xmlChar *path);
 xmlChar*
  xmlPathToURI (const xmlChar *path);
# 43 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2

# 1 "./include/libxml/xinclude.h" 1
# 86 "./include/libxml/xinclude.h"
typedef struct _xmlXIncludeCtxt xmlXIncludeCtxt;
typedef xmlXIncludeCtxt *xmlXIncludeCtxtPtr;




 int
  xmlXIncludeProcess (xmlDocPtr doc);
 int
  xmlXIncludeProcessFlags (xmlDocPtr doc,
      int flags);
 int
  xmlXIncludeProcessFlagsData(xmlDocPtr doc,
      int flags,
      void *data);
 int
                xmlXIncludeProcessTreeFlagsData(xmlNodePtr tree,
                                         int flags,
                                         void *data);
 int
  xmlXIncludeProcessTree (xmlNodePtr tree);
 int
  xmlXIncludeProcessTreeFlags(xmlNodePtr tree,
      int flags);



 xmlXIncludeCtxtPtr
  xmlXIncludeNewContext (xmlDocPtr doc);
 int
  xmlXIncludeSetFlags (xmlXIncludeCtxtPtr ctxt,
      int flags);
 void
  xmlXIncludeFreeContext (xmlXIncludeCtxtPtr ctxt);
 int
  xmlXIncludeProcessNode (xmlXIncludeCtxtPtr ctxt,
      xmlNodePtr tree);
# 45 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2


# 1 "./include/libxml/xmlerror.h" 1
# 48 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2



# 1 "./include/libxml/xmlreader.h" 1
# 18 "./include/libxml/xmlreader.h"
# 1 "./include/libxml/xmlschemas.h" 1
# 28 "./include/libxml/xmlschemas.h"
typedef enum {
    XML_SCHEMAS_ERR_OK = 0,
    XML_SCHEMAS_ERR_NOROOT = 1,
    XML_SCHEMAS_ERR_UNDECLAREDELEM,
    XML_SCHEMAS_ERR_NOTTOPLEVEL,
    XML_SCHEMAS_ERR_MISSING,
    XML_SCHEMAS_ERR_WRONGELEM,
    XML_SCHEMAS_ERR_NOTYPE,
    XML_SCHEMAS_ERR_NOROLLBACK,
    XML_SCHEMAS_ERR_ISABSTRACT,
    XML_SCHEMAS_ERR_NOTEMPTY,
    XML_SCHEMAS_ERR_ELEMCONT,
    XML_SCHEMAS_ERR_HAVEDEFAULT,
    XML_SCHEMAS_ERR_NOTNILLABLE,
    XML_SCHEMAS_ERR_EXTRACONTENT,
    XML_SCHEMAS_ERR_INVALIDATTR,
    XML_SCHEMAS_ERR_INVALIDELEM,
    XML_SCHEMAS_ERR_NOTDETERMINIST,
    XML_SCHEMAS_ERR_CONSTRUCT,
    XML_SCHEMAS_ERR_INTERNAL,
    XML_SCHEMAS_ERR_NOTSIMPLE,
    XML_SCHEMAS_ERR_ATTRUNKNOWN,
    XML_SCHEMAS_ERR_ATTRINVALID,
    XML_SCHEMAS_ERR_VALUE,
    XML_SCHEMAS_ERR_FACET,
    XML_SCHEMAS_ERR_,
    XML_SCHEMAS_ERR_XXX
} xmlSchemaValidError;
# 67 "./include/libxml/xmlschemas.h"
typedef enum {
    XML_SCHEMA_VAL_VC_I_CREATE = 1<<0



} xmlSchemaValidOption;
# 84 "./include/libxml/xmlschemas.h"
typedef struct _xmlSchema xmlSchema;
typedef xmlSchema *xmlSchemaPtr;
# 95 "./include/libxml/xmlschemas.h"
typedef void ( *xmlSchemaValidityErrorFunc)
                 (void *ctx, const char *msg, ...) __attribute__((__format__(__printf__,2,3)));
# 106 "./include/libxml/xmlschemas.h"
typedef void ( *xmlSchemaValidityWarningFunc)
                 (void *ctx, const char *msg, ...) __attribute__((__format__(__printf__,2,3)));




typedef struct _xmlSchemaParserCtxt xmlSchemaParserCtxt;
typedef xmlSchemaParserCtxt *xmlSchemaParserCtxtPtr;

typedef struct _xmlSchemaValidCtxt xmlSchemaValidCtxt;
typedef xmlSchemaValidCtxt *xmlSchemaValidCtxtPtr;
# 131 "./include/libxml/xmlschemas.h"
typedef int ( *xmlSchemaValidityLocatorFunc) (void *ctx,
                           const char **file, unsigned long *line);




 xmlSchemaParserCtxtPtr
     xmlSchemaNewParserCtxt (const char *URL);
 xmlSchemaParserCtxtPtr
     xmlSchemaNewMemParserCtxt (const char *buffer,
      int size);
 xmlSchemaParserCtxtPtr
     xmlSchemaNewDocParserCtxt (xmlDocPtr doc);
 void
     xmlSchemaFreeParserCtxt (xmlSchemaParserCtxtPtr ctxt);
 void
     xmlSchemaSetParserErrors (xmlSchemaParserCtxtPtr ctxt,
      xmlSchemaValidityErrorFunc err,
      xmlSchemaValidityWarningFunc warn,
      void *ctx);
 void
     xmlSchemaSetParserStructuredErrors(xmlSchemaParserCtxtPtr ctxt,
      xmlStructuredErrorFunc serror,
      void *ctx);
 int
  xmlSchemaGetParserErrors(xmlSchemaParserCtxtPtr ctxt,
     xmlSchemaValidityErrorFunc * err,
     xmlSchemaValidityWarningFunc * warn,
     void **ctx);
 int
  xmlSchemaIsValid (xmlSchemaValidCtxtPtr ctxt);

 xmlSchemaPtr
     xmlSchemaParse (xmlSchemaParserCtxtPtr ctxt);
 void
     xmlSchemaFree (xmlSchemaPtr schema);

 void
     xmlSchemaDump (FILE *output,
      xmlSchemaPtr schema);




 void
     xmlSchemaSetValidErrors (xmlSchemaValidCtxtPtr ctxt,
      xmlSchemaValidityErrorFunc err,
      xmlSchemaValidityWarningFunc warn,
      void *ctx);
 void
     xmlSchemaSetValidStructuredErrors(xmlSchemaValidCtxtPtr ctxt,
      xmlStructuredErrorFunc serror,
      void *ctx);
 int
     xmlSchemaGetValidErrors (xmlSchemaValidCtxtPtr ctxt,
      xmlSchemaValidityErrorFunc *err,
      xmlSchemaValidityWarningFunc *warn,
      void **ctx);
 int
     xmlSchemaSetValidOptions (xmlSchemaValidCtxtPtr ctxt,
      int options);
 void
            xmlSchemaValidateSetFilename(xmlSchemaValidCtxtPtr vctxt,
                                  const char *filename);
 int
     xmlSchemaValidCtxtGetOptions(xmlSchemaValidCtxtPtr ctxt);

 xmlSchemaValidCtxtPtr
     xmlSchemaNewValidCtxt (xmlSchemaPtr schema);
 void
     xmlSchemaFreeValidCtxt (xmlSchemaValidCtxtPtr ctxt);
 int
     xmlSchemaValidateDoc (xmlSchemaValidCtxtPtr ctxt,
      xmlDocPtr instance);
 int
            xmlSchemaValidateOneElement (xmlSchemaValidCtxtPtr ctxt,
                    xmlNodePtr elem);
 int
     xmlSchemaValidateStream (xmlSchemaValidCtxtPtr ctxt,
      xmlParserInputBufferPtr input,
      xmlCharEncoding enc,
      xmlSAXHandlerPtr sax,
      void *user_data);
 int
     xmlSchemaValidateFile (xmlSchemaValidCtxtPtr ctxt,
      const char * filename,
      int options);

 xmlParserCtxtPtr
     xmlSchemaValidCtxtGetParserCtxt(xmlSchemaValidCtxtPtr ctxt);




typedef struct _xmlSchemaSAXPlug xmlSchemaSAXPlugStruct;
typedef xmlSchemaSAXPlugStruct *xmlSchemaSAXPlugPtr;

 xmlSchemaSAXPlugPtr
            xmlSchemaSAXPlug (xmlSchemaValidCtxtPtr ctxt,
      xmlSAXHandlerPtr *sax,
      void **user_data);
 int
            xmlSchemaSAXUnplug (xmlSchemaSAXPlugPtr plug);


 void
            xmlSchemaValidateSetLocator (xmlSchemaValidCtxtPtr vctxt,
      xmlSchemaValidityLocatorFunc f,
      void *ctxt);
# 19 "./include/libxml/xmlreader.h" 2
# 31 "./include/libxml/xmlreader.h"
typedef enum {
    XML_PARSER_SEVERITY_VALIDITY_WARNING = 1,
    XML_PARSER_SEVERITY_VALIDITY_ERROR = 2,
    XML_PARSER_SEVERITY_WARNING = 3,
    XML_PARSER_SEVERITY_ERROR = 4
} xmlParserSeverities;
# 45 "./include/libxml/xmlreader.h"
typedef enum {
    XML_TEXTREADER_MODE_INITIAL = 0,
    XML_TEXTREADER_MODE_INTERACTIVE = 1,
    XML_TEXTREADER_MODE_ERROR = 2,
    XML_TEXTREADER_MODE_EOF =3,
    XML_TEXTREADER_MODE_CLOSED = 4,
    XML_TEXTREADER_MODE_READING = 5
} xmlTextReaderMode;
# 61 "./include/libxml/xmlreader.h"
typedef enum {
    XML_PARSER_LOADDTD = 1,
    XML_PARSER_DEFAULTATTRS = 2,
    XML_PARSER_VALIDATE = 3,
    XML_PARSER_SUBST_ENTITIES = 4
} xmlParserProperties;






typedef enum {
    XML_READER_TYPE_NONE = 0,
    XML_READER_TYPE_ELEMENT = 1,
    XML_READER_TYPE_ATTRIBUTE = 2,
    XML_READER_TYPE_TEXT = 3,
    XML_READER_TYPE_CDATA = 4,
    XML_READER_TYPE_ENTITY_REFERENCE = 5,
    XML_READER_TYPE_ENTITY = 6,
    XML_READER_TYPE_PROCESSING_INSTRUCTION = 7,
    XML_READER_TYPE_COMMENT = 8,
    XML_READER_TYPE_DOCUMENT = 9,
    XML_READER_TYPE_DOCUMENT_TYPE = 10,
    XML_READER_TYPE_DOCUMENT_FRAGMENT = 11,
    XML_READER_TYPE_NOTATION = 12,
    XML_READER_TYPE_WHITESPACE = 13,
    XML_READER_TYPE_SIGNIFICANT_WHITESPACE = 14,
    XML_READER_TYPE_END_ELEMENT = 15,
    XML_READER_TYPE_END_ENTITY = 16,
    XML_READER_TYPE_XML_DECLARATION = 17
} xmlReaderTypes;






typedef struct _xmlTextReader xmlTextReader;






typedef xmlTextReader *xmlTextReaderPtr;




 xmlTextReaderPtr
   xmlNewTextReader (xmlParserInputBufferPtr input,
                                          const char *URI);
 xmlTextReaderPtr
   xmlNewTextReaderFilename(const char *URI);

 void
   xmlFreeTextReader (xmlTextReaderPtr reader);

 int
            xmlTextReaderSetup(xmlTextReaderPtr reader,
                   xmlParserInputBufferPtr input, const char *URL,
                   const char *encoding, int options);




 int
   xmlTextReaderRead (xmlTextReaderPtr reader);


 xmlChar *
   xmlTextReaderReadInnerXml(xmlTextReaderPtr reader);

 xmlChar *
   xmlTextReaderReadOuterXml(xmlTextReaderPtr reader);


 xmlChar *
   xmlTextReaderReadString (xmlTextReaderPtr reader);
 int
   xmlTextReaderReadAttributeValue(xmlTextReaderPtr reader);




 int
   xmlTextReaderAttributeCount(xmlTextReaderPtr reader);
 int
   xmlTextReaderDepth (xmlTextReaderPtr reader);
 int
   xmlTextReaderHasAttributes(xmlTextReaderPtr reader);
 int
   xmlTextReaderHasValue(xmlTextReaderPtr reader);
 int
   xmlTextReaderIsDefault (xmlTextReaderPtr reader);
 int
   xmlTextReaderIsEmptyElement(xmlTextReaderPtr reader);
 int
   xmlTextReaderNodeType (xmlTextReaderPtr reader);
 int
   xmlTextReaderQuoteChar (xmlTextReaderPtr reader);
 int
   xmlTextReaderReadState (xmlTextReaderPtr reader);
 int
                        xmlTextReaderIsNamespaceDecl(xmlTextReaderPtr reader);

 const xmlChar *
      xmlTextReaderConstBaseUri (xmlTextReaderPtr reader);
 const xmlChar *
      xmlTextReaderConstLocalName (xmlTextReaderPtr reader);
 const xmlChar *
      xmlTextReaderConstName (xmlTextReaderPtr reader);
 const xmlChar *
      xmlTextReaderConstNamespaceUri(xmlTextReaderPtr reader);
 const xmlChar *
      xmlTextReaderConstPrefix (xmlTextReaderPtr reader);
 const xmlChar *
      xmlTextReaderConstXmlLang (xmlTextReaderPtr reader);
 const xmlChar *
      xmlTextReaderConstString (xmlTextReaderPtr reader,
       const xmlChar *str);
 const xmlChar *
      xmlTextReaderConstValue (xmlTextReaderPtr reader);





 xmlChar *
   xmlTextReaderBaseUri (xmlTextReaderPtr reader);
 xmlChar *
   xmlTextReaderLocalName (xmlTextReaderPtr reader);
 xmlChar *
   xmlTextReaderName (xmlTextReaderPtr reader);
 xmlChar *
   xmlTextReaderNamespaceUri(xmlTextReaderPtr reader);
 xmlChar *
   xmlTextReaderPrefix (xmlTextReaderPtr reader);
 xmlChar *
   xmlTextReaderXmlLang (xmlTextReaderPtr reader);
 xmlChar *
   xmlTextReaderValue (xmlTextReaderPtr reader);




 int
      xmlTextReaderClose (xmlTextReaderPtr reader);
 xmlChar *
      xmlTextReaderGetAttributeNo (xmlTextReaderPtr reader,
       int no);
 xmlChar *
      xmlTextReaderGetAttribute (xmlTextReaderPtr reader,
       const xmlChar *name);
 xmlChar *
      xmlTextReaderGetAttributeNs (xmlTextReaderPtr reader,
       const xmlChar *localName,
       const xmlChar *namespaceURI);
 xmlParserInputBufferPtr
      xmlTextReaderGetRemainder (xmlTextReaderPtr reader);
 xmlChar *
      xmlTextReaderLookupNamespace(xmlTextReaderPtr reader,
       const xmlChar *prefix);
 int
      xmlTextReaderMoveToAttributeNo(xmlTextReaderPtr reader,
       int no);
 int
      xmlTextReaderMoveToAttribute(xmlTextReaderPtr reader,
       const xmlChar *name);
 int
      xmlTextReaderMoveToAttributeNs(xmlTextReaderPtr reader,
       const xmlChar *localName,
       const xmlChar *namespaceURI);
 int
      xmlTextReaderMoveToFirstAttribute(xmlTextReaderPtr reader);
 int
      xmlTextReaderMoveToNextAttribute(xmlTextReaderPtr reader);
 int
      xmlTextReaderMoveToElement (xmlTextReaderPtr reader);
 int
      xmlTextReaderNormalization (xmlTextReaderPtr reader);
 const xmlChar *
      xmlTextReaderConstEncoding (xmlTextReaderPtr reader);




 int
      xmlTextReaderSetParserProp (xmlTextReaderPtr reader,
       int prop,
       int value);
 int
      xmlTextReaderGetParserProp (xmlTextReaderPtr reader,
       int prop);
 xmlNodePtr
      xmlTextReaderCurrentNode (xmlTextReaderPtr reader);

 int
            xmlTextReaderGetParserLineNumber(xmlTextReaderPtr reader);

 int
            xmlTextReaderGetParserColumnNumber(xmlTextReaderPtr reader);

 xmlNodePtr
      xmlTextReaderPreserve (xmlTextReaderPtr reader);

 int
      xmlTextReaderPreservePattern(xmlTextReaderPtr reader,
       const xmlChar *pattern,
       const xmlChar **namespaces);

 xmlDocPtr
      xmlTextReaderCurrentDoc (xmlTextReaderPtr reader);
 xmlNodePtr
      xmlTextReaderExpand (xmlTextReaderPtr reader);
 int
      xmlTextReaderNext (xmlTextReaderPtr reader);
 int
      xmlTextReaderNextSibling (xmlTextReaderPtr reader);
 int
      xmlTextReaderIsValid (xmlTextReaderPtr reader);

 int
      xmlTextReaderRelaxNGValidate(xmlTextReaderPtr reader,
       const char *rng);
 int
      xmlTextReaderRelaxNGValidateCtxt(xmlTextReaderPtr reader,
       xmlRelaxNGValidCtxtPtr ctxt,
       int options);

 int
      xmlTextReaderRelaxNGSetSchema(xmlTextReaderPtr reader,
       xmlRelaxNGPtr schema);
 int
      xmlTextReaderSchemaValidate (xmlTextReaderPtr reader,
       const char *xsd);
 int
      xmlTextReaderSchemaValidateCtxt(xmlTextReaderPtr reader,
       xmlSchemaValidCtxtPtr ctxt,
       int options);
 int
      xmlTextReaderSetSchema (xmlTextReaderPtr reader,
       xmlSchemaPtr schema);

 const xmlChar *
      xmlTextReaderConstXmlVersion(xmlTextReaderPtr reader);
 int
      xmlTextReaderStandalone (xmlTextReaderPtr reader);





 long
  xmlTextReaderByteConsumed (xmlTextReaderPtr reader);




 xmlTextReaderPtr
  xmlReaderWalker (xmlDocPtr doc);
 xmlTextReaderPtr
  xmlReaderForDoc (const xmlChar * cur,
      const char *URL,
      const char *encoding,
      int options);
 xmlTextReaderPtr
  xmlReaderForFile (const char *filename,
      const char *encoding,
      int options);
 xmlTextReaderPtr
  xmlReaderForMemory (const char *buffer,
      int size,
      const char *URL,
      const char *encoding,
      int options);
 xmlTextReaderPtr
  xmlReaderForFd (int fd,
      const char *URL,
      const char *encoding,
      int options);
 xmlTextReaderPtr
  xmlReaderForIO (xmlInputReadCallback ioread,
      xmlInputCloseCallback ioclose,
      void *ioctx,
      const char *URL,
      const char *encoding,
      int options);

 int
  xmlReaderNewWalker (xmlTextReaderPtr reader,
      xmlDocPtr doc);
 int
  xmlReaderNewDoc (xmlTextReaderPtr reader,
      const xmlChar * cur,
      const char *URL,
      const char *encoding,
      int options);
 int
  xmlReaderNewFile (xmlTextReaderPtr reader,
      const char *filename,
      const char *encoding,
      int options);
 int
  xmlReaderNewMemory (xmlTextReaderPtr reader,
      const char *buffer,
      int size,
      const char *URL,
      const char *encoding,
      int options);
 int
  xmlReaderNewFd (xmlTextReaderPtr reader,
      int fd,
      const char *URL,
      const char *encoding,
      int options);
 int
  xmlReaderNewIO (xmlTextReaderPtr reader,
      xmlInputReadCallback ioread,
      xmlInputCloseCallback ioclose,
      void *ioctx,
      const char *URL,
      const char *encoding,
      int options);



typedef void * xmlTextReaderLocatorPtr;
# 400 "./include/libxml/xmlreader.h"
typedef void ( *xmlTextReaderErrorFunc)(void *arg,
            const char *msg,
            xmlParserSeverities severity,
            xmlTextReaderLocatorPtr locator);
 int
     xmlTextReaderLocatorLineNumber(xmlTextReaderLocatorPtr locator);
 xmlChar *
     xmlTextReaderLocatorBaseURI (xmlTextReaderLocatorPtr locator);
 void
     xmlTextReaderSetErrorHandler(xmlTextReaderPtr reader,
      xmlTextReaderErrorFunc f,
      void *arg);
 void
     xmlTextReaderSetStructuredErrorHandler(xmlTextReaderPtr reader,
         xmlStructuredErrorFunc f,
         void *arg);
 void
     xmlTextReaderGetErrorHandler(xmlTextReaderPtr reader,
      xmlTextReaderErrorFunc *f,
      void **arg);
# 52 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2

# 1 "./include/libxml/xmlsave.h" 1
# 29 "./include/libxml/xmlsave.h"
typedef enum {
    XML_SAVE_FORMAT = 1<<0,
    XML_SAVE_NO_DECL = 1<<1,
    XML_SAVE_NO_EMPTY = 1<<2,
    XML_SAVE_NO_XHTML = 1<<3,
    XML_SAVE_XHTML = 1<<4,
    XML_SAVE_AS_XML = 1<<5,
    XML_SAVE_AS_HTML = 1<<6,
    XML_SAVE_WSNONSIG = 1<<7
} xmlSaveOption;


typedef struct _xmlSaveCtxt xmlSaveCtxt;
typedef xmlSaveCtxt *xmlSaveCtxtPtr;

 xmlSaveCtxtPtr
  xmlSaveToFd (int fd,
      const char *encoding,
      int options);
 xmlSaveCtxtPtr
  xmlSaveToFilename (const char *filename,
      const char *encoding,
      int options);

 xmlSaveCtxtPtr
  xmlSaveToBuffer (xmlBufferPtr buffer,
      const char *encoding,
      int options);

 xmlSaveCtxtPtr
  xmlSaveToIO (xmlOutputWriteCallback iowrite,
      xmlOutputCloseCallback ioclose,
      void *ioctx,
      const char *encoding,
      int options);

 long
  xmlSaveDoc (xmlSaveCtxtPtr ctxt,
      xmlDocPtr doc);
 long
  xmlSaveTree (xmlSaveCtxtPtr ctxt,
      xmlNodePtr node);

 int
  xmlSaveFlush (xmlSaveCtxtPtr ctxt);
 int
  xmlSaveClose (xmlSaveCtxtPtr ctxt);
 int
  xmlSaveSetEscape (xmlSaveCtxtPtr ctxt,
      xmlCharEncodingOutputFunc escape);
 int
  xmlSaveSetAttrEscape (xmlSaveCtxtPtr ctxt,
      xmlCharEncodingOutputFunc escape);
# 54 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2

# 1 "./include/libxml/xmlschemastypes.h" 1
# 26 "./include/libxml/xmlschemastypes.h"
typedef enum {
    XML_SCHEMA_WHITESPACE_UNKNOWN = 0,
    XML_SCHEMA_WHITESPACE_PRESERVE = 1,
    XML_SCHEMA_WHITESPACE_REPLACE = 2,
    XML_SCHEMA_WHITESPACE_COLLAPSE = 3
} xmlSchemaWhitespaceValueType;

 void
  xmlSchemaInitTypes (void);
 void
  xmlSchemaCleanupTypes (void);
 xmlSchemaTypePtr
  xmlSchemaGetPredefinedType (const xmlChar *name,
       const xmlChar *ns);
 int
  xmlSchemaValidatePredefinedType (xmlSchemaTypePtr type,
       const xmlChar *value,
       xmlSchemaValPtr *val);
 int
  xmlSchemaValPredefTypeNode (xmlSchemaTypePtr type,
       const xmlChar *value,
       xmlSchemaValPtr *val,
       xmlNodePtr node);
 int
  xmlSchemaValidateFacet (xmlSchemaTypePtr base,
       xmlSchemaFacetPtr facet,
       const xmlChar *value,
       xmlSchemaValPtr val);
 int
  xmlSchemaValidateFacetWhtsp (xmlSchemaFacetPtr facet,
       xmlSchemaWhitespaceValueType fws,
       xmlSchemaValType valType,
       const xmlChar *value,
       xmlSchemaValPtr val,
       xmlSchemaWhitespaceValueType ws);
 void
  xmlSchemaFreeValue (xmlSchemaValPtr val);
 xmlSchemaFacetPtr
  xmlSchemaNewFacet (void);
 int
  xmlSchemaCheckFacet (xmlSchemaFacetPtr facet,
       xmlSchemaTypePtr typeDecl,
       xmlSchemaParserCtxtPtr ctxt,
       const xmlChar *name);
 void
  xmlSchemaFreeFacet (xmlSchemaFacetPtr facet);
 int
  xmlSchemaCompareValues (xmlSchemaValPtr x,
       xmlSchemaValPtr y);
 xmlSchemaTypePtr
    xmlSchemaGetBuiltInListSimpleTypeItemType (xmlSchemaTypePtr type);
 int
    xmlSchemaValidateListSimpleTypeFacet (xmlSchemaFacetPtr facet,
       const xmlChar *value,
       unsigned long actualLen,
       unsigned long *expectedLen);
 xmlSchemaTypePtr
  xmlSchemaGetBuiltInType (xmlSchemaValType type);
 int
  xmlSchemaIsBuiltInTypeFacet (xmlSchemaTypePtr type,
       int facetType);
 xmlChar *
  xmlSchemaCollapseString (const xmlChar *value);
 xmlChar *
  xmlSchemaWhiteSpaceReplace (const xmlChar *value);
 unsigned long
  xmlSchemaGetFacetValueAsULong (xmlSchemaFacetPtr facet);
 int
  xmlSchemaValidateLengthFacet (xmlSchemaTypePtr type,
       xmlSchemaFacetPtr facet,
       const xmlChar *value,
       xmlSchemaValPtr val,
       unsigned long *length);
 int
  xmlSchemaValidateLengthFacetWhtsp(xmlSchemaFacetPtr facet,
        xmlSchemaValType valType,
        const xmlChar *value,
        xmlSchemaValPtr val,
        unsigned long *length,
        xmlSchemaWhitespaceValueType ws);
 int
  xmlSchemaValPredefTypeNodeNoNorm(xmlSchemaTypePtr type,
       const xmlChar *value,
       xmlSchemaValPtr *val,
       xmlNodePtr node);
 int
  xmlSchemaGetCanonValue (xmlSchemaValPtr val,
       const xmlChar **retValue);
 int
  xmlSchemaGetCanonValueWhtsp (xmlSchemaValPtr val,
       const xmlChar **retValue,
       xmlSchemaWhitespaceValueType ws);
 int
  xmlSchemaValueAppend (xmlSchemaValPtr prev,
       xmlSchemaValPtr cur);
 xmlSchemaValPtr
  xmlSchemaValueGetNext (xmlSchemaValPtr cur);
 const xmlChar *
  xmlSchemaValueGetAsString (xmlSchemaValPtr val);
 int
  xmlSchemaValueGetAsBoolean (xmlSchemaValPtr val);
 xmlSchemaValPtr
  xmlSchemaNewStringValue (xmlSchemaValType type,
       const xmlChar *value);
 xmlSchemaValPtr
  xmlSchemaNewNOTATIONValue (const xmlChar *name,
       const xmlChar *ns);
 xmlSchemaValPtr
  xmlSchemaNewQNameValue (const xmlChar *namespaceName,
       const xmlChar *localName);
 int
  xmlSchemaCompareValuesWhtsp (xmlSchemaValPtr x,
       xmlSchemaWhitespaceValueType xws,
       xmlSchemaValPtr y,
       xmlSchemaWhitespaceValueType yws);
 xmlSchemaValPtr
  xmlSchemaCopyValue (xmlSchemaValPtr val);
 xmlSchemaValType
  xmlSchemaGetValType (xmlSchemaValPtr val);
# 56 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2

# 1 "./include/libxml/xmlunicode.h" 1
# 26 "./include/libxml/xmlunicode.h"
 int xmlUCSIsAegeanNumbers (int code);
 int xmlUCSIsAlphabeticPresentationForms (int code);
 int xmlUCSIsArabic (int code);
 int xmlUCSIsArabicPresentationFormsA (int code);
 int xmlUCSIsArabicPresentationFormsB (int code);
 int xmlUCSIsArmenian (int code);
 int xmlUCSIsArrows (int code);
 int xmlUCSIsBasicLatin (int code);
 int xmlUCSIsBengali (int code);
 int xmlUCSIsBlockElements (int code);
 int xmlUCSIsBopomofo (int code);
 int xmlUCSIsBopomofoExtended (int code);
 int xmlUCSIsBoxDrawing (int code);
 int xmlUCSIsBraillePatterns (int code);
 int xmlUCSIsBuhid (int code);
 int xmlUCSIsByzantineMusicalSymbols (int code);
 int xmlUCSIsCJKCompatibility (int code);
 int xmlUCSIsCJKCompatibilityForms (int code);
 int xmlUCSIsCJKCompatibilityIdeographs (int code);
 int xmlUCSIsCJKCompatibilityIdeographsSupplement (int code);
 int xmlUCSIsCJKRadicalsSupplement (int code);
 int xmlUCSIsCJKSymbolsandPunctuation (int code);
 int xmlUCSIsCJKUnifiedIdeographs (int code);
 int xmlUCSIsCJKUnifiedIdeographsExtensionA (int code);
 int xmlUCSIsCJKUnifiedIdeographsExtensionB (int code);
 int xmlUCSIsCherokee (int code);
 int xmlUCSIsCombiningDiacriticalMarks (int code);
 int xmlUCSIsCombiningDiacriticalMarksforSymbols (int code);
 int xmlUCSIsCombiningHalfMarks (int code);
 int xmlUCSIsCombiningMarksforSymbols (int code);
 int xmlUCSIsControlPictures (int code);
 int xmlUCSIsCurrencySymbols (int code);
 int xmlUCSIsCypriotSyllabary (int code);
 int xmlUCSIsCyrillic (int code);
 int xmlUCSIsCyrillicSupplement (int code);
 int xmlUCSIsDeseret (int code);
 int xmlUCSIsDevanagari (int code);
 int xmlUCSIsDingbats (int code);
 int xmlUCSIsEnclosedAlphanumerics (int code);
 int xmlUCSIsEnclosedCJKLettersandMonths (int code);
 int xmlUCSIsEthiopic (int code);
 int xmlUCSIsGeneralPunctuation (int code);
 int xmlUCSIsGeometricShapes (int code);
 int xmlUCSIsGeorgian (int code);
 int xmlUCSIsGothic (int code);
 int xmlUCSIsGreek (int code);
 int xmlUCSIsGreekExtended (int code);
 int xmlUCSIsGreekandCoptic (int code);
 int xmlUCSIsGujarati (int code);
 int xmlUCSIsGurmukhi (int code);
 int xmlUCSIsHalfwidthandFullwidthForms (int code);
 int xmlUCSIsHangulCompatibilityJamo (int code);
 int xmlUCSIsHangulJamo (int code);
 int xmlUCSIsHangulSyllables (int code);
 int xmlUCSIsHanunoo (int code);
 int xmlUCSIsHebrew (int code);
 int xmlUCSIsHighPrivateUseSurrogates (int code);
 int xmlUCSIsHighSurrogates (int code);
 int xmlUCSIsHiragana (int code);
 int xmlUCSIsIPAExtensions (int code);
 int xmlUCSIsIdeographicDescriptionCharacters (int code);
 int xmlUCSIsKanbun (int code);
 int xmlUCSIsKangxiRadicals (int code);
 int xmlUCSIsKannada (int code);
 int xmlUCSIsKatakana (int code);
 int xmlUCSIsKatakanaPhoneticExtensions (int code);
 int xmlUCSIsKhmer (int code);
 int xmlUCSIsKhmerSymbols (int code);
 int xmlUCSIsLao (int code);
 int xmlUCSIsLatin1Supplement (int code);
 int xmlUCSIsLatinExtendedA (int code);
 int xmlUCSIsLatinExtendedB (int code);
 int xmlUCSIsLatinExtendedAdditional (int code);
 int xmlUCSIsLetterlikeSymbols (int code);
 int xmlUCSIsLimbu (int code);
 int xmlUCSIsLinearBIdeograms (int code);
 int xmlUCSIsLinearBSyllabary (int code);
 int xmlUCSIsLowSurrogates (int code);
 int xmlUCSIsMalayalam (int code);
 int xmlUCSIsMathematicalAlphanumericSymbols (int code);
 int xmlUCSIsMathematicalOperators (int code);
 int xmlUCSIsMiscellaneousMathematicalSymbolsA (int code);
 int xmlUCSIsMiscellaneousMathematicalSymbolsB (int code);
 int xmlUCSIsMiscellaneousSymbols (int code);
 int xmlUCSIsMiscellaneousSymbolsandArrows (int code);
 int xmlUCSIsMiscellaneousTechnical (int code);
 int xmlUCSIsMongolian (int code);
 int xmlUCSIsMusicalSymbols (int code);
 int xmlUCSIsMyanmar (int code);
 int xmlUCSIsNumberForms (int code);
 int xmlUCSIsOgham (int code);
 int xmlUCSIsOldItalic (int code);
 int xmlUCSIsOpticalCharacterRecognition (int code);
 int xmlUCSIsOriya (int code);
 int xmlUCSIsOsmanya (int code);
 int xmlUCSIsPhoneticExtensions (int code);
 int xmlUCSIsPrivateUse (int code);
 int xmlUCSIsPrivateUseArea (int code);
 int xmlUCSIsRunic (int code);
 int xmlUCSIsShavian (int code);
 int xmlUCSIsSinhala (int code);
 int xmlUCSIsSmallFormVariants (int code);
 int xmlUCSIsSpacingModifierLetters (int code);
 int xmlUCSIsSpecials (int code);
 int xmlUCSIsSuperscriptsandSubscripts (int code);
 int xmlUCSIsSupplementalArrowsA (int code);
 int xmlUCSIsSupplementalArrowsB (int code);
 int xmlUCSIsSupplementalMathematicalOperators (int code);
 int xmlUCSIsSupplementaryPrivateUseAreaA (int code);
 int xmlUCSIsSupplementaryPrivateUseAreaB (int code);
 int xmlUCSIsSyriac (int code);
 int xmlUCSIsTagalog (int code);
 int xmlUCSIsTagbanwa (int code);
 int xmlUCSIsTags (int code);
 int xmlUCSIsTaiLe (int code);
 int xmlUCSIsTaiXuanJingSymbols (int code);
 int xmlUCSIsTamil (int code);
 int xmlUCSIsTelugu (int code);
 int xmlUCSIsThaana (int code);
 int xmlUCSIsThai (int code);
 int xmlUCSIsTibetan (int code);
 int xmlUCSIsUgaritic (int code);
 int xmlUCSIsUnifiedCanadianAboriginalSyllabics (int code);
 int xmlUCSIsVariationSelectors (int code);
 int xmlUCSIsVariationSelectorsSupplement (int code);
 int xmlUCSIsYiRadicals (int code);
 int xmlUCSIsYiSyllables (int code);
 int xmlUCSIsYijingHexagramSymbols (int code);

 int xmlUCSIsBlock (int code, const char *block);

 int xmlUCSIsCatC (int code);
 int xmlUCSIsCatCc (int code);
 int xmlUCSIsCatCf (int code);
 int xmlUCSIsCatCo (int code);
 int xmlUCSIsCatCs (int code);
 int xmlUCSIsCatL (int code);
 int xmlUCSIsCatLl (int code);
 int xmlUCSIsCatLm (int code);
 int xmlUCSIsCatLo (int code);
 int xmlUCSIsCatLt (int code);
 int xmlUCSIsCatLu (int code);
 int xmlUCSIsCatM (int code);
 int xmlUCSIsCatMc (int code);
 int xmlUCSIsCatMe (int code);
 int xmlUCSIsCatMn (int code);
 int xmlUCSIsCatN (int code);
 int xmlUCSIsCatNd (int code);
 int xmlUCSIsCatNl (int code);
 int xmlUCSIsCatNo (int code);
 int xmlUCSIsCatP (int code);
 int xmlUCSIsCatPc (int code);
 int xmlUCSIsCatPd (int code);
 int xmlUCSIsCatPe (int code);
 int xmlUCSIsCatPf (int code);
 int xmlUCSIsCatPi (int code);
 int xmlUCSIsCatPo (int code);
 int xmlUCSIsCatPs (int code);
 int xmlUCSIsCatS (int code);
 int xmlUCSIsCatSc (int code);
 int xmlUCSIsCatSk (int code);
 int xmlUCSIsCatSm (int code);
 int xmlUCSIsCatSo (int code);
 int xmlUCSIsCatZ (int code);
 int xmlUCSIsCatZl (int code);
 int xmlUCSIsCatZp (int code);
 int xmlUCSIsCatZs (int code);

 int xmlUCSIsCat (int code, const char *cat);
# 58 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2

# 1 "./include/libxml/xmlwriter.h" 1
# 26 "./include/libxml/xmlwriter.h"
    typedef struct _xmlTextWriter xmlTextWriter;
    typedef xmlTextWriter *xmlTextWriterPtr;




    xmlTextWriterPtr
        xmlNewTextWriter(xmlOutputBufferPtr out);
    xmlTextWriterPtr
        xmlNewTextWriterFilename(const char *uri, int compression);
    xmlTextWriterPtr
        xmlNewTextWriterMemory(xmlBufferPtr buf, int compression);
    xmlTextWriterPtr
        xmlNewTextWriterPushParser(xmlParserCtxtPtr ctxt, int compression);
    xmlTextWriterPtr
        xmlNewTextWriterDoc(xmlDocPtr * doc, int compression);
    xmlTextWriterPtr
        xmlNewTextWriterTree(xmlDocPtr doc, xmlNodePtr node,
                             int compression);
    void xmlFreeTextWriter(xmlTextWriterPtr writer);
# 55 "./include/libxml/xmlwriter.h"
    int
        xmlTextWriterStartDocument(xmlTextWriterPtr writer,
                                   const char *version,
                                   const char *encoding,
                                   const char *standalone);
    int xmlTextWriterEndDocument(xmlTextWriterPtr
                                                   writer);




    int xmlTextWriterStartComment(xmlTextWriterPtr
                                                    writer);
    int xmlTextWriterEndComment(xmlTextWriterPtr writer);
    int
        xmlTextWriterWriteFormatComment(xmlTextWriterPtr writer,
                                        const char *format, ...)
     __attribute__((__format__(__printf__,2,3)));
    int
        xmlTextWriterWriteVFormatComment(xmlTextWriterPtr writer,
                                         const char *format,
                                         va_list argptr)
      __attribute__((__format__(__printf__,2,0)));
    int xmlTextWriterWriteComment(xmlTextWriterPtr
                                                    writer,
                                                    const xmlChar *
                                                    content);




    int
        xmlTextWriterStartElement(xmlTextWriterPtr writer,
                                  const xmlChar * name);
    int xmlTextWriterStartElementNS(xmlTextWriterPtr
                                                      writer,
                                                      const xmlChar *
                                                      prefix,
                                                      const xmlChar * name,
                                                      const xmlChar *
                                                      namespaceURI);
    int xmlTextWriterEndElement(xmlTextWriterPtr writer);
    int xmlTextWriterFullEndElement(xmlTextWriterPtr
                                                      writer);




    int
        xmlTextWriterWriteFormatElement(xmlTextWriterPtr writer,
                                        const xmlChar * name,
                                        const char *format, ...)
     __attribute__((__format__(__printf__,3,4)));
    int
        xmlTextWriterWriteVFormatElement(xmlTextWriterPtr writer,
                                         const xmlChar * name,
                                         const char *format,
                                         va_list argptr)
      __attribute__((__format__(__printf__,3,0)));
    int xmlTextWriterWriteElement(xmlTextWriterPtr
                                                    writer,
                                                    const xmlChar * name,
                                                    const xmlChar *
                                                    content);
    int
        xmlTextWriterWriteFormatElementNS(xmlTextWriterPtr writer,
                                          const xmlChar * prefix,
                                          const xmlChar * name,
                                          const xmlChar * namespaceURI,
                                          const char *format, ...)
       __attribute__((__format__(__printf__,5,6)));
    int
        xmlTextWriterWriteVFormatElementNS(xmlTextWriterPtr writer,
                                           const xmlChar * prefix,
                                           const xmlChar * name,
                                           const xmlChar * namespaceURI,
                                           const char *format,
                                           va_list argptr)
        __attribute__((__format__(__printf__,5,0)));
    int xmlTextWriterWriteElementNS(xmlTextWriterPtr
                                                      writer,
                                                      const xmlChar *
                                                      prefix,
                                                      const xmlChar * name,
                                                      const xmlChar *
                                                      namespaceURI,
                                                      const xmlChar *
                                                      content);




    int
        xmlTextWriterWriteFormatRaw(xmlTextWriterPtr writer,
                                    const char *format, ...)
        __attribute__((__format__(__printf__,2,3)));
    int
        xmlTextWriterWriteVFormatRaw(xmlTextWriterPtr writer,
                                     const char *format, va_list argptr)
         __attribute__((__format__(__printf__,2,0)));
    int
        xmlTextWriterWriteRawLen(xmlTextWriterPtr writer,
                                 const xmlChar * content, int len);
    int
        xmlTextWriterWriteRaw(xmlTextWriterPtr writer,
                              const xmlChar * content);
    int xmlTextWriterWriteFormatString(xmlTextWriterPtr
                                                         writer,
                                                         const char
                                                         *format, ...)
        __attribute__((__format__(__printf__,2,3)));
    int xmlTextWriterWriteVFormatString(xmlTextWriterPtr
                                                          writer,
                                                          const char
                                                          *format,
                                                          va_list argptr)
         __attribute__((__format__(__printf__,2,0)));
    int xmlTextWriterWriteString(xmlTextWriterPtr writer,
                                                   const xmlChar *
                                                   content);
    int xmlTextWriterWriteBase64(xmlTextWriterPtr writer,
                                                   const char *data,
                                                   int start, int len);
    int xmlTextWriterWriteBinHex(xmlTextWriterPtr writer,
                                                   const char *data,
                                                   int start, int len);




    int
        xmlTextWriterStartAttribute(xmlTextWriterPtr writer,
                                    const xmlChar * name);
    int xmlTextWriterStartAttributeNS(xmlTextWriterPtr
                                                        writer,
                                                        const xmlChar *
                                                        prefix,
                                                        const xmlChar *
                                                        name,
                                                        const xmlChar *
                                                        namespaceURI);
    int xmlTextWriterEndAttribute(xmlTextWriterPtr
                                                    writer);




    int
        xmlTextWriterWriteFormatAttribute(xmlTextWriterPtr writer,
                                          const xmlChar * name,
                                          const char *format, ...)
       __attribute__((__format__(__printf__,3,4)));
    int
        xmlTextWriterWriteVFormatAttribute(xmlTextWriterPtr writer,
                                           const xmlChar * name,
                                           const char *format,
                                           va_list argptr)
        __attribute__((__format__(__printf__,3,0)));
    int xmlTextWriterWriteAttribute(xmlTextWriterPtr
                                                      writer,
                                                      const xmlChar * name,
                                                      const xmlChar *
                                                      content);
    int
        xmlTextWriterWriteFormatAttributeNS(xmlTextWriterPtr writer,
                                            const xmlChar * prefix,
                                            const xmlChar * name,
                                            const xmlChar * namespaceURI,
                                            const char *format, ...)
         __attribute__((__format__(__printf__,5,6)));
    int
        xmlTextWriterWriteVFormatAttributeNS(xmlTextWriterPtr writer,
                                             const xmlChar * prefix,
                                             const xmlChar * name,
                                             const xmlChar * namespaceURI,
                                             const char *format,
                                             va_list argptr)
          __attribute__((__format__(__printf__,5,0)));
    int xmlTextWriterWriteAttributeNS(xmlTextWriterPtr
                                                        writer,
                                                        const xmlChar *
                                                        prefix,
                                                        const xmlChar *
                                                        name,
                                                        const xmlChar *
                                                        namespaceURI,
                                                        const xmlChar *
                                                        content);




    int
        xmlTextWriterStartPI(xmlTextWriterPtr writer,
                             const xmlChar * target);
    int xmlTextWriterEndPI(xmlTextWriterPtr writer);




    int
        xmlTextWriterWriteFormatPI(xmlTextWriterPtr writer,
                                   const xmlChar * target,
                                   const char *format, ...)
       __attribute__((__format__(__printf__,3,4)));
    int
        xmlTextWriterWriteVFormatPI(xmlTextWriterPtr writer,
                                    const xmlChar * target,
                                    const char *format, va_list argptr)
        __attribute__((__format__(__printf__,3,0)));
    int
        xmlTextWriterWritePI(xmlTextWriterPtr writer,
                             const xmlChar * target,
                             const xmlChar * content);
# 280 "./include/libxml/xmlwriter.h"
    int xmlTextWriterStartCDATA(xmlTextWriterPtr writer);
    int xmlTextWriterEndCDATA(xmlTextWriterPtr writer);




    int
        xmlTextWriterWriteFormatCDATA(xmlTextWriterPtr writer,
                                      const char *format, ...)
          __attribute__((__format__(__printf__,2,3)));
    int
        xmlTextWriterWriteVFormatCDATA(xmlTextWriterPtr writer,
                                       const char *format, va_list argptr)
           __attribute__((__format__(__printf__,2,0)));
    int
        xmlTextWriterWriteCDATA(xmlTextWriterPtr writer,
                                const xmlChar * content);




    int
        xmlTextWriterStartDTD(xmlTextWriterPtr writer,
                              const xmlChar * name,
                              const xmlChar * pubid,
                              const xmlChar * sysid);
    int xmlTextWriterEndDTD(xmlTextWriterPtr writer);




    int
        xmlTextWriterWriteFormatDTD(xmlTextWriterPtr writer,
                                    const xmlChar * name,
                                    const xmlChar * pubid,
                                    const xmlChar * sysid,
                                    const char *format, ...)
        __attribute__((__format__(__printf__,5,6)));
    int
        xmlTextWriterWriteVFormatDTD(xmlTextWriterPtr writer,
                                     const xmlChar * name,
                                     const xmlChar * pubid,
                                     const xmlChar * sysid,
                                     const char *format, va_list argptr)
         __attribute__((__format__(__printf__,5,0)));
    int
        xmlTextWriterWriteDTD(xmlTextWriterPtr writer,
                              const xmlChar * name,
                              const xmlChar * pubid,
                              const xmlChar * sysid,
                              const xmlChar * subset);
# 342 "./include/libxml/xmlwriter.h"
    int
        xmlTextWriterStartDTDElement(xmlTextWriterPtr writer,
                                     const xmlChar * name);
    int xmlTextWriterEndDTDElement(xmlTextWriterPtr
                                                     writer);




    int
        xmlTextWriterWriteFormatDTDElement(xmlTextWriterPtr writer,
                                           const xmlChar * name,
                                           const char *format, ...)
        __attribute__((__format__(__printf__,3,4)));
    int
        xmlTextWriterWriteVFormatDTDElement(xmlTextWriterPtr writer,
                                            const xmlChar * name,
                                            const char *format,
                                            va_list argptr)
         __attribute__((__format__(__printf__,3,0)));
    int xmlTextWriterWriteDTDElement(xmlTextWriterPtr
                                                       writer,
                                                       const xmlChar *
                                                       name,
                                                       const xmlChar *
                                                       content);




    int
        xmlTextWriterStartDTDAttlist(xmlTextWriterPtr writer,
                                     const xmlChar * name);
    int xmlTextWriterEndDTDAttlist(xmlTextWriterPtr
                                                     writer);




    int
        xmlTextWriterWriteFormatDTDAttlist(xmlTextWriterPtr writer,
                                           const xmlChar * name,
                                           const char *format, ...)
        __attribute__((__format__(__printf__,3,4)));
    int
        xmlTextWriterWriteVFormatDTDAttlist(xmlTextWriterPtr writer,
                                            const xmlChar * name,
                                            const char *format,
                                            va_list argptr)
         __attribute__((__format__(__printf__,3,0)));
    int xmlTextWriterWriteDTDAttlist(xmlTextWriterPtr
                                                       writer,
                                                       const xmlChar *
                                                       name,
                                                       const xmlChar *
                                                       content);




    int
        xmlTextWriterStartDTDEntity(xmlTextWriterPtr writer,
                                    int pe, const xmlChar * name);
    int xmlTextWriterEndDTDEntity(xmlTextWriterPtr
                                                    writer);




    int
        xmlTextWriterWriteFormatDTDInternalEntity(xmlTextWriterPtr writer,
                                                  int pe,
                                                  const xmlChar * name,
                                                  const char *format, ...)
        __attribute__((__format__(__printf__,4,5)));
    int
        xmlTextWriterWriteVFormatDTDInternalEntity(xmlTextWriterPtr writer,
                                                   int pe,
                                                   const xmlChar * name,
                                                   const char *format,
                                                   va_list argptr)
         __attribute__((__format__(__printf__,4,0)));
    int
        xmlTextWriterWriteDTDInternalEntity(xmlTextWriterPtr writer,
                                            int pe,
                                            const xmlChar * name,
                                            const xmlChar * content);
    int
        xmlTextWriterWriteDTDExternalEntity(xmlTextWriterPtr writer,
                                            int pe,
                                            const xmlChar * name,
                                            const xmlChar * pubid,
                                            const xmlChar * sysid,
                                            const xmlChar * ndataid);
    int
        xmlTextWriterWriteDTDExternalEntityContents(xmlTextWriterPtr
                                                    writer,
                                                    const xmlChar * pubid,
                                                    const xmlChar * sysid,
                                                    const xmlChar *
                                                    ndataid);
    int xmlTextWriterWriteDTDEntity(xmlTextWriterPtr
                                                      writer, int pe,
                                                      const xmlChar * name,
                                                      const xmlChar *
                                                      pubid,
                                                      const xmlChar *
                                                      sysid,
                                                      const xmlChar *
                                                      ndataid,
                                                      const xmlChar *
                                                      content);




    int
        xmlTextWriterWriteDTDNotation(xmlTextWriterPtr writer,
                                      const xmlChar * name,
                                      const xmlChar * pubid,
                                      const xmlChar * sysid);




    int
        xmlTextWriterSetIndent(xmlTextWriterPtr writer, int indent);
    int
        xmlTextWriterSetIndentString(xmlTextWriterPtr writer,
                                     const xmlChar * str);

    int
        xmlTextWriterSetQuoteChar(xmlTextWriterPtr writer, xmlChar quotechar);





    int xmlTextWriterFlush(xmlTextWriterPtr writer);
# 60 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2

# 1 "./include/libxml/xpathInternals.h" 1
# 103 "./include/libxml/xpathInternals.h"
 int
  xmlXPathPopBoolean (xmlXPathParserContextPtr ctxt);
 double
  xmlXPathPopNumber (xmlXPathParserContextPtr ctxt);
 xmlChar *
  xmlXPathPopString (xmlXPathParserContextPtr ctxt);
 xmlNodeSetPtr
  xmlXPathPopNodeSet (xmlXPathParserContextPtr ctxt);
 void *
  xmlXPathPopExternal (xmlXPathParserContextPtr ctxt);
# 334 "./include/libxml/xpathInternals.h"
 void
 xmlXPathRegisterVariableLookup (xmlXPathContextPtr ctxt,
      xmlXPathVariableLookupFunc f,
      void *data);





 void
     xmlXPathRegisterFuncLookup (xmlXPathContextPtr ctxt,
      xmlXPathFuncLookupFunc f,
      void *funcCtxt);




 void
  xmlXPatherror (xmlXPathParserContextPtr ctxt,
     const char *file,
     int line,
     int no);

 void
  xmlXPathErr (xmlXPathParserContextPtr ctxt,
     int error);


 void
  xmlXPathDebugDumpObject (FILE *output,
      xmlXPathObjectPtr cur,
      int depth);
 void
     xmlXPathDebugDumpCompExpr(FILE *output,
      xmlXPathCompExprPtr comp,
      int depth);




 int
  xmlXPathNodeSetContains (xmlNodeSetPtr cur,
       xmlNodePtr val);
 xmlNodeSetPtr
  xmlXPathDifference (xmlNodeSetPtr nodes1,
       xmlNodeSetPtr nodes2);
 xmlNodeSetPtr
  xmlXPathIntersection (xmlNodeSetPtr nodes1,
       xmlNodeSetPtr nodes2);

 xmlNodeSetPtr
  xmlXPathDistinctSorted (xmlNodeSetPtr nodes);
 xmlNodeSetPtr
  xmlXPathDistinct (xmlNodeSetPtr nodes);

 int
  xmlXPathHasSameNodes (xmlNodeSetPtr nodes1,
       xmlNodeSetPtr nodes2);

 xmlNodeSetPtr
  xmlXPathNodeLeadingSorted (xmlNodeSetPtr nodes,
       xmlNodePtr node);
 xmlNodeSetPtr
  xmlXPathLeadingSorted (xmlNodeSetPtr nodes1,
       xmlNodeSetPtr nodes2);
 xmlNodeSetPtr
  xmlXPathNodeLeading (xmlNodeSetPtr nodes,
       xmlNodePtr node);
 xmlNodeSetPtr
  xmlXPathLeading (xmlNodeSetPtr nodes1,
       xmlNodeSetPtr nodes2);

 xmlNodeSetPtr
  xmlXPathNodeTrailingSorted (xmlNodeSetPtr nodes,
       xmlNodePtr node);
 xmlNodeSetPtr
  xmlXPathTrailingSorted (xmlNodeSetPtr nodes1,
       xmlNodeSetPtr nodes2);
 xmlNodeSetPtr
  xmlXPathNodeTrailing (xmlNodeSetPtr nodes,
       xmlNodePtr node);
 xmlNodeSetPtr
  xmlXPathTrailing (xmlNodeSetPtr nodes1,
       xmlNodeSetPtr nodes2);






 int
  xmlXPathRegisterNs (xmlXPathContextPtr ctxt,
       const xmlChar *prefix,
       const xmlChar *ns_uri);
 const xmlChar *
  xmlXPathNsLookup (xmlXPathContextPtr ctxt,
       const xmlChar *prefix);
 void
  xmlXPathRegisteredNsCleanup (xmlXPathContextPtr ctxt);

 int
  xmlXPathRegisterFunc (xmlXPathContextPtr ctxt,
       const xmlChar *name,
       xmlXPathFunction f);
 int
  xmlXPathRegisterFuncNS (xmlXPathContextPtr ctxt,
       const xmlChar *name,
       const xmlChar *ns_uri,
       xmlXPathFunction f);
 int
  xmlXPathRegisterVariable (xmlXPathContextPtr ctxt,
       const xmlChar *name,
       xmlXPathObjectPtr value);
 int
  xmlXPathRegisterVariableNS (xmlXPathContextPtr ctxt,
       const xmlChar *name,
       const xmlChar *ns_uri,
       xmlXPathObjectPtr value);
 xmlXPathFunction
  xmlXPathFunctionLookup (xmlXPathContextPtr ctxt,
       const xmlChar *name);
 xmlXPathFunction
  xmlXPathFunctionLookupNS (xmlXPathContextPtr ctxt,
       const xmlChar *name,
       const xmlChar *ns_uri);
 void
  xmlXPathRegisteredFuncsCleanup (xmlXPathContextPtr ctxt);
 xmlXPathObjectPtr
  xmlXPathVariableLookup (xmlXPathContextPtr ctxt,
       const xmlChar *name);
 xmlXPathObjectPtr
  xmlXPathVariableLookupNS (xmlXPathContextPtr ctxt,
       const xmlChar *name,
       const xmlChar *ns_uri);
 void
  xmlXPathRegisteredVariablesCleanup(xmlXPathContextPtr ctxt);




 xmlXPathParserContextPtr
    xmlXPathNewParserContext (const xmlChar *str,
       xmlXPathContextPtr ctxt);
 void
  xmlXPathFreeParserContext (xmlXPathParserContextPtr ctxt);


 xmlXPathObjectPtr
  valuePop (xmlXPathParserContextPtr ctxt);
 int
  valuePush (xmlXPathParserContextPtr ctxt,
       xmlXPathObjectPtr value);

 xmlXPathObjectPtr
  xmlXPathNewString (const xmlChar *val);
 xmlXPathObjectPtr
  xmlXPathNewCString (const char *val);
 xmlXPathObjectPtr
  xmlXPathWrapString (xmlChar *val);
 xmlXPathObjectPtr
  xmlXPathWrapCString (char * val);
 xmlXPathObjectPtr
  xmlXPathNewFloat (double val);
 xmlXPathObjectPtr
  xmlXPathNewBoolean (int val);
 xmlXPathObjectPtr
  xmlXPathNewNodeSet (xmlNodePtr val);
 xmlXPathObjectPtr
  xmlXPathNewValueTree (xmlNodePtr val);
 int
  xmlXPathNodeSetAdd (xmlNodeSetPtr cur,
       xmlNodePtr val);
 int
  xmlXPathNodeSetAddUnique (xmlNodeSetPtr cur,
       xmlNodePtr val);
 int
  xmlXPathNodeSetAddNs (xmlNodeSetPtr cur,
       xmlNodePtr node,
       xmlNsPtr ns);
 void
  xmlXPathNodeSetSort (xmlNodeSetPtr set);

 void
  xmlXPathRoot (xmlXPathParserContextPtr ctxt);
 void
  xmlXPathEvalExpr (xmlXPathParserContextPtr ctxt);
 xmlChar *
  xmlXPathParseName (xmlXPathParserContextPtr ctxt);
 xmlChar *
  xmlXPathParseNCName (xmlXPathParserContextPtr ctxt);




 double
  xmlXPathStringEvalNumber (const xmlChar *str);
 int
  xmlXPathEvaluatePredicateResult (xmlXPathParserContextPtr ctxt,
       xmlXPathObjectPtr res);
 void
  xmlXPathRegisterAllFunctions (xmlXPathContextPtr ctxt);
 xmlNodeSetPtr
  xmlXPathNodeSetMerge (xmlNodeSetPtr val1,
       xmlNodeSetPtr val2);
 void
  xmlXPathNodeSetDel (xmlNodeSetPtr cur,
       xmlNodePtr val);
 void
  xmlXPathNodeSetRemove (xmlNodeSetPtr cur,
       int val);
 xmlXPathObjectPtr
  xmlXPathNewNodeSetList (xmlNodeSetPtr val);
 xmlXPathObjectPtr
  xmlXPathWrapNodeSet (xmlNodeSetPtr val);
 xmlXPathObjectPtr
  xmlXPathWrapExternal (void *val);

 int xmlXPathEqualValues(xmlXPathParserContextPtr ctxt);
 int xmlXPathNotEqualValues(xmlXPathParserContextPtr ctxt);
 int xmlXPathCompareValues(xmlXPathParserContextPtr ctxt, int inf, int strict);
 void xmlXPathValueFlipSign(xmlXPathParserContextPtr ctxt);
 void xmlXPathAddValues(xmlXPathParserContextPtr ctxt);
 void xmlXPathSubValues(xmlXPathParserContextPtr ctxt);
 void xmlXPathMultValues(xmlXPathParserContextPtr ctxt);
 void xmlXPathDivValues(xmlXPathParserContextPtr ctxt);
 void xmlXPathModValues(xmlXPathParserContextPtr ctxt);

 int xmlXPathIsNodeType(const xmlChar *name);




 xmlNodePtr xmlXPathNextSelf(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);
 xmlNodePtr xmlXPathNextChild(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);
 xmlNodePtr xmlXPathNextDescendant(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);
 xmlNodePtr xmlXPathNextDescendantOrSelf(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);
 xmlNodePtr xmlXPathNextParent(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);
 xmlNodePtr xmlXPathNextAncestorOrSelf(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);
 xmlNodePtr xmlXPathNextFollowingSibling(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);
 xmlNodePtr xmlXPathNextFollowing(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);
 xmlNodePtr xmlXPathNextNamespace(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);
 xmlNodePtr xmlXPathNextAttribute(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);
 xmlNodePtr xmlXPathNextPreceding(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);
 xmlNodePtr xmlXPathNextAncestor(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);
 xmlNodePtr xmlXPathNextPrecedingSibling(xmlXPathParserContextPtr ctxt,
   xmlNodePtr cur);



 void xmlXPathLastFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathPositionFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathCountFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathIdFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathLocalNameFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathNamespaceURIFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathStringFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathStringLengthFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathConcatFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathContainsFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathStartsWithFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathSubstringFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathSubstringBeforeFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathSubstringAfterFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathNormalizeFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathTranslateFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathNotFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathTrueFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathFalseFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathLangFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathNumberFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathSumFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathFloorFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathCeilingFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathRoundFunction(xmlXPathParserContextPtr ctxt, int nargs);
 void xmlXPathBooleanFunction(xmlXPathParserContextPtr ctxt, int nargs);




 void xmlXPathNodeSetFreeNs(xmlNsPtr ns);
# 62 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2
# 1 "./include/libxml/xpointer.h" 1
# 34 "./include/libxml/xpointer.h"
typedef struct _xmlLocationSet xmlLocationSet;
typedef xmlLocationSet *xmlLocationSetPtr;
struct _xmlLocationSet {
    int locNr;
    int locMax;
    xmlXPathObjectPtr *locTab;
};





 xmlLocationSetPtr
      xmlXPtrLocationSetCreate (xmlXPathObjectPtr val);
 void
      xmlXPtrFreeLocationSet (xmlLocationSetPtr obj);
 xmlLocationSetPtr
      xmlXPtrLocationSetMerge (xmlLocationSetPtr val1,
       xmlLocationSetPtr val2);
 xmlXPathObjectPtr
      xmlXPtrNewRange (xmlNodePtr start,
       int startindex,
       xmlNodePtr end,
       int endindex);
 xmlXPathObjectPtr
      xmlXPtrNewRangePoints (xmlXPathObjectPtr start,
       xmlXPathObjectPtr end);
 xmlXPathObjectPtr
      xmlXPtrNewRangeNodePoint (xmlNodePtr start,
       xmlXPathObjectPtr end);
 xmlXPathObjectPtr
      xmlXPtrNewRangePointNode (xmlXPathObjectPtr start,
       xmlNodePtr end);
 xmlXPathObjectPtr
      xmlXPtrNewRangeNodes (xmlNodePtr start,
       xmlNodePtr end);
 xmlXPathObjectPtr
      xmlXPtrNewLocationSetNodes (xmlNodePtr start,
       xmlNodePtr end);
 xmlXPathObjectPtr
      xmlXPtrNewLocationSetNodeSet(xmlNodeSetPtr set);
 xmlXPathObjectPtr
      xmlXPtrNewRangeNodeObject (xmlNodePtr start,
       xmlXPathObjectPtr end);
 xmlXPathObjectPtr
      xmlXPtrNewCollapsedRange (xmlNodePtr start);
 void
      xmlXPtrLocationSetAdd (xmlLocationSetPtr cur,
       xmlXPathObjectPtr val);
 xmlXPathObjectPtr
      xmlXPtrWrapLocationSet (xmlLocationSetPtr val);
 void
      xmlXPtrLocationSetDel (xmlLocationSetPtr cur,
       xmlXPathObjectPtr val);
 void
      xmlXPtrLocationSetRemove (xmlLocationSetPtr cur,
       int val);




 xmlXPathContextPtr
      xmlXPtrNewContext (xmlDocPtr doc,
       xmlNodePtr here,
       xmlNodePtr origin);
 xmlXPathObjectPtr
      xmlXPtrEval (const xmlChar *str,
       xmlXPathContextPtr ctx);
 void
      xmlXPtrRangeToFunction (xmlXPathParserContextPtr ctxt,
       int nargs);
 xmlNodePtr
      xmlXPtrBuildNodeList (xmlXPathObjectPtr obj);
 void
      xmlXPtrEvalRangePredicate (xmlXPathParserContextPtr ctxt);
# 63 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2
# 1 "./include/libxml/xmlmodule.h" 1
# 27 "./include/libxml/xmlmodule.h"
typedef struct _xmlModule xmlModule;
typedef xmlModule *xmlModulePtr;






typedef enum {
    XML_MODULE_LAZY = 1,
    XML_MODULE_LOCAL= 2
} xmlModuleOption;

 xmlModulePtr xmlModuleOpen (const char *filename,
       int options);

 int xmlModuleSymbol (xmlModulePtr module,
       const char* name,
       void **result);

 int xmlModuleClose (xmlModulePtr module);

 int xmlModuleFree (xmlModulePtr module);
# 64 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2
# 72 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (__xmlGenericError) __xmlGenericError__internal_alias __attribute((visibility("hidden")));
# 82 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (__xmlGenericErrorContext) __xmlGenericErrorContext__internal_alias __attribute((visibility("hidden")));
# 94 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (docbCreatePushParserCtxt) docbCreatePushParserCtxt__internal_alias __attribute((visibility("hidden")));
# 106 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlAttrAllowed) htmlAttrAllowed__internal_alias __attribute((visibility("hidden")));
# 118 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlAutoCloseTag) htmlAutoCloseTag__internal_alias __attribute((visibility("hidden")));
# 130 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlCreateFileParserCtxt) htmlCreateFileParserCtxt__internal_alias __attribute((visibility("hidden")));
# 142 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlCreateMemoryParserCtxt) htmlCreateMemoryParserCtxt__internal_alias __attribute((visibility("hidden")));
# 154 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlCreatePushParserCtxt) htmlCreatePushParserCtxt__internal_alias __attribute((visibility("hidden")));
# 166 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlCtxtReadDoc) htmlCtxtReadDoc__internal_alias __attribute((visibility("hidden")));
# 178 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlCtxtReadFd) htmlCtxtReadFd__internal_alias __attribute((visibility("hidden")));
# 190 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlCtxtReadFile) htmlCtxtReadFile__internal_alias __attribute((visibility("hidden")));
# 202 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlCtxtReadIO) htmlCtxtReadIO__internal_alias __attribute((visibility("hidden")));
# 214 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlCtxtReadMemory) htmlCtxtReadMemory__internal_alias __attribute((visibility("hidden")));
# 226 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlCtxtReset) htmlCtxtReset__internal_alias __attribute((visibility("hidden")));
# 238 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlCtxtUseOptions) htmlCtxtUseOptions__internal_alias __attribute((visibility("hidden")));
# 250 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlDefaultSAXHandlerInit) htmlDefaultSAXHandlerInit__internal_alias __attribute((visibility("hidden")));
# 262 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlDocContentDumpFormatOutput) htmlDocContentDumpFormatOutput__internal_alias __attribute((visibility("hidden")));
# 274 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlDocContentDumpOutput) htmlDocContentDumpOutput__internal_alias __attribute((visibility("hidden")));
# 286 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlDocDump) htmlDocDump__internal_alias __attribute((visibility("hidden")));
# 298 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlDocDumpMemory) htmlDocDumpMemory__internal_alias __attribute((visibility("hidden")));
# 310 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlDocDumpMemoryFormat) htmlDocDumpMemoryFormat__internal_alias __attribute((visibility("hidden")));
# 322 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlElementAllowedHere) htmlElementAllowedHere__internal_alias __attribute((visibility("hidden")));
# 334 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlElementStatusHere) htmlElementStatusHere__internal_alias __attribute((visibility("hidden")));
# 346 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlEncodeEntities) htmlEncodeEntities__internal_alias __attribute((visibility("hidden")));
# 358 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlEntityLookup) htmlEntityLookup__internal_alias __attribute((visibility("hidden")));
# 370 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlEntityValueLookup) htmlEntityValueLookup__internal_alias __attribute((visibility("hidden")));
# 382 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlFreeParserCtxt) htmlFreeParserCtxt__internal_alias __attribute((visibility("hidden")));
# 394 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlGetMetaEncoding) htmlGetMetaEncoding__internal_alias __attribute((visibility("hidden")));
# 406 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlHandleOmittedElem) htmlHandleOmittedElem__internal_alias __attribute((visibility("hidden")));
# 418 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlInitAutoClose) htmlInitAutoClose__internal_alias __attribute((visibility("hidden")));
# 430 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlIsAutoClosed) htmlIsAutoClosed__internal_alias __attribute((visibility("hidden")));
# 442 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlIsBooleanAttr) htmlIsBooleanAttr__internal_alias __attribute((visibility("hidden")));
# 454 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlIsScriptAttribute) htmlIsScriptAttribute__internal_alias __attribute((visibility("hidden")));
# 466 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlNewDoc) htmlNewDoc__internal_alias __attribute((visibility("hidden")));
# 478 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlNewDocNoDtD) htmlNewDocNoDtD__internal_alias __attribute((visibility("hidden")));
# 490 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlNewParserCtxt) htmlNewParserCtxt__internal_alias __attribute((visibility("hidden")));
# 502 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlNodeDump) htmlNodeDump__internal_alias __attribute((visibility("hidden")));
# 514 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlNodeDumpFile) htmlNodeDumpFile__internal_alias __attribute((visibility("hidden")));
# 526 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlNodeDumpFileFormat) htmlNodeDumpFileFormat__internal_alias __attribute((visibility("hidden")));
# 538 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlNodeDumpFormatOutput) htmlNodeDumpFormatOutput__internal_alias __attribute((visibility("hidden")));
# 550 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlNodeDumpOutput) htmlNodeDumpOutput__internal_alias __attribute((visibility("hidden")));
# 562 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlNodeStatus) htmlNodeStatus__internal_alias __attribute((visibility("hidden")));
# 574 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlParseCharRef) htmlParseCharRef__internal_alias __attribute((visibility("hidden")));
# 586 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlParseChunk) htmlParseChunk__internal_alias __attribute((visibility("hidden")));
# 598 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlParseDoc) htmlParseDoc__internal_alias __attribute((visibility("hidden")));
# 610 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlParseDocument) htmlParseDocument__internal_alias __attribute((visibility("hidden")));
# 622 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlParseElement) htmlParseElement__internal_alias __attribute((visibility("hidden")));
# 634 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlParseEntityRef) htmlParseEntityRef__internal_alias __attribute((visibility("hidden")));
# 646 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlParseFile) htmlParseFile__internal_alias __attribute((visibility("hidden")));
# 658 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlReadDoc) htmlReadDoc__internal_alias __attribute((visibility("hidden")));
# 670 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlReadFd) htmlReadFd__internal_alias __attribute((visibility("hidden")));
# 682 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlReadFile) htmlReadFile__internal_alias __attribute((visibility("hidden")));
# 694 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlReadIO) htmlReadIO__internal_alias __attribute((visibility("hidden")));
# 706 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlReadMemory) htmlReadMemory__internal_alias __attribute((visibility("hidden")));
# 718 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlSAXParseDoc) htmlSAXParseDoc__internal_alias __attribute((visibility("hidden")));
# 730 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlSAXParseFile) htmlSAXParseFile__internal_alias __attribute((visibility("hidden")));
# 742 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlSaveFile) htmlSaveFile__internal_alias __attribute((visibility("hidden")));
# 754 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlSaveFileEnc) htmlSaveFileEnc__internal_alias __attribute((visibility("hidden")));
# 766 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlSaveFileFormat) htmlSaveFileFormat__internal_alias __attribute((visibility("hidden")));
# 778 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlSetMetaEncoding) htmlSetMetaEncoding__internal_alias __attribute((visibility("hidden")));
# 790 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (htmlTagLookup) htmlTagLookup__internal_alias __attribute((visibility("hidden")));
# 801 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (inputPop) inputPop__internal_alias __attribute((visibility("hidden")));
# 811 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (inputPush) inputPush__internal_alias __attribute((visibility("hidden")));
# 821 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (namePop) namePop__internal_alias __attribute((visibility("hidden")));
# 831 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (namePush) namePush__internal_alias __attribute((visibility("hidden")));
# 841 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (nodePop) nodePop__internal_alias __attribute((visibility("hidden")));
# 851 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (nodePush) nodePush__internal_alias __attribute((visibility("hidden")));
# 862 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (valuePop) valuePop__internal_alias __attribute((visibility("hidden")));
# 874 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (valuePush) valuePush__internal_alias __attribute((visibility("hidden")));
# 886 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlACatalogAdd) xmlACatalogAdd__internal_alias __attribute((visibility("hidden")));
# 898 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlACatalogDump) xmlACatalogDump__internal_alias __attribute((visibility("hidden")));
# 910 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlACatalogRemove) xmlACatalogRemove__internal_alias __attribute((visibility("hidden")));
# 922 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlACatalogResolve) xmlACatalogResolve__internal_alias __attribute((visibility("hidden")));
# 934 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlACatalogResolvePublic) xmlACatalogResolvePublic__internal_alias __attribute((visibility("hidden")));
# 946 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlACatalogResolveSystem) xmlACatalogResolveSystem__internal_alias __attribute((visibility("hidden")));
# 958 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlACatalogResolveURI) xmlACatalogResolveURI__internal_alias __attribute((visibility("hidden")));
# 969 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddAttributeDecl) xmlAddAttributeDecl__internal_alias __attribute((visibility("hidden")));
# 979 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddChild) xmlAddChild__internal_alias __attribute((visibility("hidden")));
# 989 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddChildList) xmlAddChildList__internal_alias __attribute((visibility("hidden")));
# 999 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddDocEntity) xmlAddDocEntity__internal_alias __attribute((visibility("hidden")));
# 1009 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddDtdEntity) xmlAddDtdEntity__internal_alias __attribute((visibility("hidden")));
# 1019 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddElementDecl) xmlAddElementDecl__internal_alias __attribute((visibility("hidden")));
# 1029 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddEncodingAlias) xmlAddEncodingAlias__internal_alias __attribute((visibility("hidden")));
# 1039 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddID) xmlAddID__internal_alias __attribute((visibility("hidden")));
# 1049 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddNextSibling) xmlAddNextSibling__internal_alias __attribute((visibility("hidden")));
# 1059 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddNotationDecl) xmlAddNotationDecl__internal_alias __attribute((visibility("hidden")));
# 1070 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddPrevSibling) xmlAddPrevSibling__internal_alias __attribute((visibility("hidden")));
# 1081 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddRef) xmlAddRef__internal_alias __attribute((visibility("hidden")));
# 1091 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAddSibling) xmlAddSibling__internal_alias __attribute((visibility("hidden")));
# 1102 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAllocOutputBuffer) xmlAllocOutputBuffer__internal_alias __attribute((visibility("hidden")));
# 1113 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAllocParserInputBuffer) xmlAllocParserInputBuffer__internal_alias __attribute((visibility("hidden")));
# 1124 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAttrSerializeTxtContent) xmlAttrSerializeTxtContent__internal_alias __attribute((visibility("hidden")));
# 1136 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataCompile) xmlAutomataCompile__internal_alias __attribute((visibility("hidden")));
# 1148 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataGetInitState) xmlAutomataGetInitState__internal_alias __attribute((visibility("hidden")));
# 1160 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataIsDeterminist) xmlAutomataIsDeterminist__internal_alias __attribute((visibility("hidden")));
# 1172 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewAllTrans) xmlAutomataNewAllTrans__internal_alias __attribute((visibility("hidden")));
# 1184 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewCountTrans) xmlAutomataNewCountTrans__internal_alias __attribute((visibility("hidden")));
# 1196 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewCountTrans2) xmlAutomataNewCountTrans2__internal_alias __attribute((visibility("hidden")));
# 1208 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewCountedTrans) xmlAutomataNewCountedTrans__internal_alias __attribute((visibility("hidden")));
# 1220 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewCounter) xmlAutomataNewCounter__internal_alias __attribute((visibility("hidden")));
# 1232 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewCounterTrans) xmlAutomataNewCounterTrans__internal_alias __attribute((visibility("hidden")));
# 1244 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewEpsilon) xmlAutomataNewEpsilon__internal_alias __attribute((visibility("hidden")));
# 1256 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewNegTrans) xmlAutomataNewNegTrans__internal_alias __attribute((visibility("hidden")));
# 1268 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewOnceTrans) xmlAutomataNewOnceTrans__internal_alias __attribute((visibility("hidden")));
# 1280 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewOnceTrans2) xmlAutomataNewOnceTrans2__internal_alias __attribute((visibility("hidden")));
# 1292 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewState) xmlAutomataNewState__internal_alias __attribute((visibility("hidden")));
# 1304 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewTransition) xmlAutomataNewTransition__internal_alias __attribute((visibility("hidden")));
# 1316 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataNewTransition2) xmlAutomataNewTransition2__internal_alias __attribute((visibility("hidden")));
# 1328 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlAutomataSetFinalState) xmlAutomataSetFinalState__internal_alias __attribute((visibility("hidden")));
# 1340 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBoolToText) xmlBoolToText__internal_alias __attribute((visibility("hidden")));
# 1351 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferAdd) xmlBufferAdd__internal_alias __attribute((visibility("hidden")));
# 1361 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferAddHead) xmlBufferAddHead__internal_alias __attribute((visibility("hidden")));
# 1371 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferCCat) xmlBufferCCat__internal_alias __attribute((visibility("hidden")));
# 1381 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferCat) xmlBufferCat__internal_alias __attribute((visibility("hidden")));
# 1391 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferContent) xmlBufferContent__internal_alias __attribute((visibility("hidden")));
# 1401 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferCreate) xmlBufferCreate__internal_alias __attribute((visibility("hidden")));
# 1411 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferCreateSize) xmlBufferCreateSize__internal_alias __attribute((visibility("hidden")));
# 1421 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferCreateStatic) xmlBufferCreateStatic__internal_alias __attribute((visibility("hidden")));
# 1431 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferDump) xmlBufferDump__internal_alias __attribute((visibility("hidden")));
# 1441 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferEmpty) xmlBufferEmpty__internal_alias __attribute((visibility("hidden")));
# 1451 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferFree) xmlBufferFree__internal_alias __attribute((visibility("hidden")));
# 1461 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferGrow) xmlBufferGrow__internal_alias __attribute((visibility("hidden")));
# 1471 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferLength) xmlBufferLength__internal_alias __attribute((visibility("hidden")));
# 1481 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferResize) xmlBufferResize__internal_alias __attribute((visibility("hidden")));
# 1491 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferSetAllocationScheme) xmlBufferSetAllocationScheme__internal_alias __attribute((visibility("hidden")));
# 1501 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferShrink) xmlBufferShrink__internal_alias __attribute((visibility("hidden")));
# 1511 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferWriteCHAR) xmlBufferWriteCHAR__internal_alias __attribute((visibility("hidden")));
# 1521 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferWriteChar) xmlBufferWriteChar__internal_alias __attribute((visibility("hidden")));
# 1531 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBufferWriteQuotedString) xmlBufferWriteQuotedString__internal_alias __attribute((visibility("hidden")));
# 1541 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBuildQName) xmlBuildQName__internal_alias __attribute((visibility("hidden")));
# 1551 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBuildRelativeURI) xmlBuildRelativeURI__internal_alias __attribute((visibility("hidden")));
# 1561 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlBuildURI) xmlBuildURI__internal_alias __attribute((visibility("hidden")));
# 1571 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlByteConsumed) xmlByteConsumed__internal_alias __attribute((visibility("hidden")));
# 1582 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlC14NDocDumpMemory) xmlC14NDocDumpMemory__internal_alias __attribute((visibility("hidden")));
# 1594 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlC14NDocSave) xmlC14NDocSave__internal_alias __attribute((visibility("hidden")));
# 1606 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlC14NDocSaveTo) xmlC14NDocSaveTo__internal_alias __attribute((visibility("hidden")));
# 1618 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlC14NExecute) xmlC14NExecute__internal_alias __attribute((visibility("hidden")));
# 1629 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCanonicPath) xmlCanonicPath__internal_alias __attribute((visibility("hidden")));
# 1640 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogAdd) xmlCatalogAdd__internal_alias __attribute((visibility("hidden")));
# 1652 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogAddLocal) xmlCatalogAddLocal__internal_alias __attribute((visibility("hidden")));
# 1664 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogCleanup) xmlCatalogCleanup__internal_alias __attribute((visibility("hidden")));
# 1676 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogConvert) xmlCatalogConvert__internal_alias __attribute((visibility("hidden")));
# 1688 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogDump) xmlCatalogDump__internal_alias __attribute((visibility("hidden")));
# 1700 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogFreeLocal) xmlCatalogFreeLocal__internal_alias __attribute((visibility("hidden")));
# 1712 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogGetDefaults) xmlCatalogGetDefaults__internal_alias __attribute((visibility("hidden")));
# 1724 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogGetPublic) xmlCatalogGetPublic__internal_alias __attribute((visibility("hidden")));
# 1736 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogGetSystem) xmlCatalogGetSystem__internal_alias __attribute((visibility("hidden")));
# 1748 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogIsEmpty) xmlCatalogIsEmpty__internal_alias __attribute((visibility("hidden")));
# 1760 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogLocalResolve) xmlCatalogLocalResolve__internal_alias __attribute((visibility("hidden")));
# 1772 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogLocalResolveURI) xmlCatalogLocalResolveURI__internal_alias __attribute((visibility("hidden")));
# 1784 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogRemove) xmlCatalogRemove__internal_alias __attribute((visibility("hidden")));
# 1796 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogResolve) xmlCatalogResolve__internal_alias __attribute((visibility("hidden")));
# 1808 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogResolvePublic) xmlCatalogResolvePublic__internal_alias __attribute((visibility("hidden")));
# 1820 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogResolveSystem) xmlCatalogResolveSystem__internal_alias __attribute((visibility("hidden")));
# 1832 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogResolveURI) xmlCatalogResolveURI__internal_alias __attribute((visibility("hidden")));
# 1844 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogSetDebug) xmlCatalogSetDebug__internal_alias __attribute((visibility("hidden")));
# 1856 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogSetDefaultPrefer) xmlCatalogSetDefaultPrefer__internal_alias __attribute((visibility("hidden")));
# 1868 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCatalogSetDefaults) xmlCatalogSetDefaults__internal_alias __attribute((visibility("hidden")));
# 1879 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCharEncCloseFunc) xmlCharEncCloseFunc__internal_alias __attribute((visibility("hidden")));
# 1889 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCharEncFirstLine) xmlCharEncFirstLine__internal_alias __attribute((visibility("hidden")));
# 1899 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCharEncInFunc) xmlCharEncInFunc__internal_alias __attribute((visibility("hidden")));
# 1909 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCharEncOutFunc) xmlCharEncOutFunc__internal_alias __attribute((visibility("hidden")));
# 1919 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCharInRange) xmlCharInRange__internal_alias __attribute((visibility("hidden")));
# 1929 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCharStrdup) xmlCharStrdup__internal_alias __attribute((visibility("hidden")));
# 1939 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCharStrndup) xmlCharStrndup__internal_alias __attribute((visibility("hidden")));
# 1949 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCheckFilename) xmlCheckFilename__internal_alias __attribute((visibility("hidden")));
# 1959 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCheckHTTPInput) xmlCheckHTTPInput__internal_alias __attribute((visibility("hidden")));
# 1969 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCheckLanguageID) xmlCheckLanguageID__internal_alias __attribute((visibility("hidden")));
# 1979 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCheckUTF8) xmlCheckUTF8__internal_alias __attribute((visibility("hidden")));
# 1989 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCheckVersion) xmlCheckVersion__internal_alias __attribute((visibility("hidden")));
# 2000 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlChildElementCount) xmlChildElementCount__internal_alias __attribute((visibility("hidden")));
# 2011 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCleanupCharEncodingHandlers) xmlCleanupCharEncodingHandlers__internal_alias __attribute((visibility("hidden")));
# 2021 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCleanupEncodingAliases) xmlCleanupEncodingAliases__internal_alias __attribute((visibility("hidden")));
# 2031 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCleanupGlobals) xmlCleanupGlobals__internal_alias __attribute((visibility("hidden")));
# 2041 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCleanupInputCallbacks) xmlCleanupInputCallbacks__internal_alias __attribute((visibility("hidden")));
# 2051 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCleanupMemory) xmlCleanupMemory__internal_alias __attribute((visibility("hidden")));
# 2062 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCleanupOutputCallbacks) xmlCleanupOutputCallbacks__internal_alias __attribute((visibility("hidden")));
# 2073 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCleanupParser) xmlCleanupParser__internal_alias __attribute((visibility("hidden")));
# 2084 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCleanupPredefinedEntities) xmlCleanupPredefinedEntities__internal_alias __attribute((visibility("hidden")));
# 2095 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCleanupThreads) xmlCleanupThreads__internal_alias __attribute((visibility("hidden")));
# 2105 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlClearNodeInfoSeq) xmlClearNodeInfoSeq__internal_alias __attribute((visibility("hidden")));
# 2115 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlClearParserCtxt) xmlClearParserCtxt__internal_alias __attribute((visibility("hidden")));
# 2126 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlConvertSGMLCatalog) xmlConvertSGMLCatalog__internal_alias __attribute((visibility("hidden")));
# 2138 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyAttributeTable) xmlCopyAttributeTable__internal_alias __attribute((visibility("hidden")));
# 2149 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyChar) xmlCopyChar__internal_alias __attribute((visibility("hidden")));
# 2159 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyCharMultiByte) xmlCopyCharMultiByte__internal_alias __attribute((visibility("hidden")));
# 2170 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyDoc) xmlCopyDoc__internal_alias __attribute((visibility("hidden")));
# 2181 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyDocElementContent) xmlCopyDocElementContent__internal_alias __attribute((visibility("hidden")));
# 2192 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyDtd) xmlCopyDtd__internal_alias __attribute((visibility("hidden")));
# 2203 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyElementContent) xmlCopyElementContent__internal_alias __attribute((visibility("hidden")));
# 2214 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyElementTable) xmlCopyElementTable__internal_alias __attribute((visibility("hidden")));
# 2226 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyEntitiesTable) xmlCopyEntitiesTable__internal_alias __attribute((visibility("hidden")));
# 2238 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyEnumeration) xmlCopyEnumeration__internal_alias __attribute((visibility("hidden")));
# 2249 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyError) xmlCopyError__internal_alias __attribute((visibility("hidden")));
# 2259 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyNamespace) xmlCopyNamespace__internal_alias __attribute((visibility("hidden")));
# 2269 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyNamespaceList) xmlCopyNamespaceList__internal_alias __attribute((visibility("hidden")));
# 2279 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyNode) xmlCopyNode__internal_alias __attribute((visibility("hidden")));
# 2289 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyNodeList) xmlCopyNodeList__internal_alias __attribute((visibility("hidden")));
# 2300 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyNotationTable) xmlCopyNotationTable__internal_alias __attribute((visibility("hidden")));
# 2311 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyProp) xmlCopyProp__internal_alias __attribute((visibility("hidden")));
# 2321 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCopyPropList) xmlCopyPropList__internal_alias __attribute((visibility("hidden")));
# 2331 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateDocParserCtxt) xmlCreateDocParserCtxt__internal_alias __attribute((visibility("hidden")));
# 2341 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateEntitiesTable) xmlCreateEntitiesTable__internal_alias __attribute((visibility("hidden")));
# 2351 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateEntityParserCtxt) xmlCreateEntityParserCtxt__internal_alias __attribute((visibility("hidden")));
# 2361 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateEnumeration) xmlCreateEnumeration__internal_alias __attribute((visibility("hidden")));
# 2371 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateFileParserCtxt) xmlCreateFileParserCtxt__internal_alias __attribute((visibility("hidden")));
# 2381 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateIOParserCtxt) xmlCreateIOParserCtxt__internal_alias __attribute((visibility("hidden")));
# 2391 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateIntSubset) xmlCreateIntSubset__internal_alias __attribute((visibility("hidden")));
# 2401 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateMemoryParserCtxt) xmlCreateMemoryParserCtxt__internal_alias __attribute((visibility("hidden")));
# 2412 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreatePushParserCtxt) xmlCreatePushParserCtxt__internal_alias __attribute((visibility("hidden")));
# 2423 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateURI) xmlCreateURI__internal_alias __attribute((visibility("hidden")));
# 2433 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCreateURLParserCtxt) xmlCreateURLParserCtxt__internal_alias __attribute((visibility("hidden")));
# 2443 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtGetLastError) xmlCtxtGetLastError__internal_alias __attribute((visibility("hidden")));
# 2453 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtReadDoc) xmlCtxtReadDoc__internal_alias __attribute((visibility("hidden")));
# 2463 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtReadFd) xmlCtxtReadFd__internal_alias __attribute((visibility("hidden")));
# 2473 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtReadFile) xmlCtxtReadFile__internal_alias __attribute((visibility("hidden")));
# 2483 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtReadIO) xmlCtxtReadIO__internal_alias __attribute((visibility("hidden")));
# 2493 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtReadMemory) xmlCtxtReadMemory__internal_alias __attribute((visibility("hidden")));
# 2503 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtReset) xmlCtxtReset__internal_alias __attribute((visibility("hidden")));
# 2513 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtResetLastError) xmlCtxtResetLastError__internal_alias __attribute((visibility("hidden")));
# 2523 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtResetPush) xmlCtxtResetPush__internal_alias __attribute((visibility("hidden")));
# 2533 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCtxtUseOptions) xmlCtxtUseOptions__internal_alias __attribute((visibility("hidden")));
# 2543 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlCurrentChar) xmlCurrentChar__internal_alias __attribute((visibility("hidden")));
# 2553 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDOMWrapAdoptNode) xmlDOMWrapAdoptNode__internal_alias __attribute((visibility("hidden")));
# 2563 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDOMWrapCloneNode) xmlDOMWrapCloneNode__internal_alias __attribute((visibility("hidden")));
# 2573 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDOMWrapFreeCtxt) xmlDOMWrapFreeCtxt__internal_alias __attribute((visibility("hidden")));
# 2583 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDOMWrapNewCtxt) xmlDOMWrapNewCtxt__internal_alias __attribute((visibility("hidden")));
# 2593 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDOMWrapReconcileNamespaces) xmlDOMWrapReconcileNamespaces__internal_alias __attribute((visibility("hidden")));
# 2603 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDOMWrapRemoveNode) xmlDOMWrapRemoveNode__internal_alias __attribute((visibility("hidden")));
# 2614 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDebugCheckDocument) xmlDebugCheckDocument__internal_alias __attribute((visibility("hidden")));
# 2626 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDebugDumpAttr) xmlDebugDumpAttr__internal_alias __attribute((visibility("hidden")));
# 2638 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDebugDumpAttrList) xmlDebugDumpAttrList__internal_alias __attribute((visibility("hidden")));
# 2650 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDebugDumpDTD) xmlDebugDumpDTD__internal_alias __attribute((visibility("hidden")));
# 2662 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDebugDumpDocument) xmlDebugDumpDocument__internal_alias __attribute((visibility("hidden")));
# 2674 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDebugDumpDocumentHead) xmlDebugDumpDocumentHead__internal_alias __attribute((visibility("hidden")));
# 2686 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDebugDumpEntities) xmlDebugDumpEntities__internal_alias __attribute((visibility("hidden")));
# 2698 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDebugDumpNode) xmlDebugDumpNode__internal_alias __attribute((visibility("hidden")));
# 2710 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDebugDumpNodeList) xmlDebugDumpNodeList__internal_alias __attribute((visibility("hidden")));
# 2722 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDebugDumpOneNode) xmlDebugDumpOneNode__internal_alias __attribute((visibility("hidden")));
# 2734 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDebugDumpString) xmlDebugDumpString__internal_alias __attribute((visibility("hidden")));
# 2746 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDecodeEntities) xmlDecodeEntities__internal_alias __attribute((visibility("hidden")));
# 2757 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDefaultSAXHandlerInit) xmlDefaultSAXHandlerInit__internal_alias __attribute((visibility("hidden")));
# 2767 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDelEncodingAlias) xmlDelEncodingAlias__internal_alias __attribute((visibility("hidden")));
# 2777 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDeregisterNodeDefault) xmlDeregisterNodeDefault__internal_alias __attribute((visibility("hidden")));
# 2787 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDetectCharEncoding) xmlDetectCharEncoding__internal_alias __attribute((visibility("hidden")));
# 2797 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDictCleanup) xmlDictCleanup__internal_alias __attribute((visibility("hidden")));
# 2807 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDictCreate) xmlDictCreate__internal_alias __attribute((visibility("hidden")));
# 2817 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDictCreateSub) xmlDictCreateSub__internal_alias __attribute((visibility("hidden")));
# 2827 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDictExists) xmlDictExists__internal_alias __attribute((visibility("hidden")));
# 2837 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDictFree) xmlDictFree__internal_alias __attribute((visibility("hidden")));
# 2847 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDictLookup) xmlDictLookup__internal_alias __attribute((visibility("hidden")));
# 2857 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDictOwns) xmlDictOwns__internal_alias __attribute((visibility("hidden")));
# 2867 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDictQLookup) xmlDictQLookup__internal_alias __attribute((visibility("hidden")));
# 2877 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDictReference) xmlDictReference__internal_alias __attribute((visibility("hidden")));
# 2887 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDictSize) xmlDictSize__internal_alias __attribute((visibility("hidden")));
# 2897 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDocCopyNode) xmlDocCopyNode__internal_alias __attribute((visibility("hidden")));
# 2907 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDocCopyNodeList) xmlDocCopyNodeList__internal_alias __attribute((visibility("hidden")));
# 2918 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDocDump) xmlDocDump__internal_alias __attribute((visibility("hidden")));
# 2930 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDocDumpFormatMemory) xmlDocDumpFormatMemory__internal_alias __attribute((visibility("hidden")));
# 2942 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDocDumpFormatMemoryEnc) xmlDocDumpFormatMemoryEnc__internal_alias __attribute((visibility("hidden")));
# 2954 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDocDumpMemory) xmlDocDumpMemory__internal_alias __attribute((visibility("hidden")));
# 2966 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDocDumpMemoryEnc) xmlDocDumpMemoryEnc__internal_alias __attribute((visibility("hidden")));
# 2978 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDocFormatDump) xmlDocFormatDump__internal_alias __attribute((visibility("hidden")));
# 2989 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDocGetRootElement) xmlDocGetRootElement__internal_alias __attribute((visibility("hidden")));
# 3000 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDocSetRootElement) xmlDocSetRootElement__internal_alias __attribute((visibility("hidden")));
# 3012 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDumpAttributeDecl) xmlDumpAttributeDecl__internal_alias __attribute((visibility("hidden")));
# 3024 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDumpAttributeTable) xmlDumpAttributeTable__internal_alias __attribute((visibility("hidden")));
# 3036 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDumpElementDecl) xmlDumpElementDecl__internal_alias __attribute((visibility("hidden")));
# 3048 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDumpElementTable) xmlDumpElementTable__internal_alias __attribute((visibility("hidden")));
# 3060 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDumpEntitiesTable) xmlDumpEntitiesTable__internal_alias __attribute((visibility("hidden")));
# 3072 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDumpEntityDecl) xmlDumpEntityDecl__internal_alias __attribute((visibility("hidden")));
# 3084 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDumpNotationDecl) xmlDumpNotationDecl__internal_alias __attribute((visibility("hidden")));
# 3096 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlDumpNotationTable) xmlDumpNotationTable__internal_alias __attribute((visibility("hidden")));
# 3108 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlElemDump) xmlElemDump__internal_alias __attribute((visibility("hidden")));
# 3120 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlEncodeEntities) xmlEncodeEntities__internal_alias __attribute((visibility("hidden")));
# 3131 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlEncodeEntitiesReentrant) xmlEncodeEntitiesReentrant__internal_alias __attribute((visibility("hidden")));
# 3141 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlEncodeSpecialChars) xmlEncodeSpecialChars__internal_alias __attribute((visibility("hidden")));
# 3151 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlErrMemory) xmlErrMemory__internal_alias __attribute((visibility("hidden")));
# 3162 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpCtxtNbCons) xmlExpCtxtNbCons__internal_alias __attribute((visibility("hidden")));
# 3174 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpCtxtNbNodes) xmlExpCtxtNbNodes__internal_alias __attribute((visibility("hidden")));
# 3186 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpDump) xmlExpDump__internal_alias __attribute((visibility("hidden")));
# 3198 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpExpDerive) xmlExpExpDerive__internal_alias __attribute((visibility("hidden")));
# 3210 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpFree) xmlExpFree__internal_alias __attribute((visibility("hidden")));
# 3222 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpFreeCtxt) xmlExpFreeCtxt__internal_alias __attribute((visibility("hidden")));
# 3234 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpGetLanguage) xmlExpGetLanguage__internal_alias __attribute((visibility("hidden")));
# 3246 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpGetStart) xmlExpGetStart__internal_alias __attribute((visibility("hidden")));
# 3258 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpIsNillable) xmlExpIsNillable__internal_alias __attribute((visibility("hidden")));
# 3270 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpMaxToken) xmlExpMaxToken__internal_alias __attribute((visibility("hidden")));
# 3282 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpNewAtom) xmlExpNewAtom__internal_alias __attribute((visibility("hidden")));
# 3294 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpNewCtxt) xmlExpNewCtxt__internal_alias __attribute((visibility("hidden")));
# 3306 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpNewOr) xmlExpNewOr__internal_alias __attribute((visibility("hidden")));
# 3318 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpNewRange) xmlExpNewRange__internal_alias __attribute((visibility("hidden")));
# 3330 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpNewSeq) xmlExpNewSeq__internal_alias __attribute((visibility("hidden")));
# 3342 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpParse) xmlExpParse__internal_alias __attribute((visibility("hidden")));
# 3354 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpRef) xmlExpRef__internal_alias __attribute((visibility("hidden")));
# 3366 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpStringDerive) xmlExpStringDerive__internal_alias __attribute((visibility("hidden")));
# 3378 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlExpSubsume) xmlExpSubsume__internal_alias __attribute((visibility("hidden")));
# 3389 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFileClose) xmlFileClose__internal_alias __attribute((visibility("hidden")));
# 3399 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFileMatch) xmlFileMatch__internal_alias __attribute((visibility("hidden")));
# 3409 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFileOpen) xmlFileOpen__internal_alias __attribute((visibility("hidden")));
# 3419 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFileRead) xmlFileRead__internal_alias __attribute((visibility("hidden")));
# 3429 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFindCharEncodingHandler) xmlFindCharEncodingHandler__internal_alias __attribute((visibility("hidden")));
# 3440 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFirstElementChild) xmlFirstElementChild__internal_alias __attribute((visibility("hidden")));
# 3451 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeAttributeTable) xmlFreeAttributeTable__internal_alias __attribute((visibility("hidden")));
# 3462 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeAutomata) xmlFreeAutomata__internal_alias __attribute((visibility("hidden")));
# 3474 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeCatalog) xmlFreeCatalog__internal_alias __attribute((visibility("hidden")));
# 3485 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeDoc) xmlFreeDoc__internal_alias __attribute((visibility("hidden")));
# 3495 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeDocElementContent) xmlFreeDocElementContent__internal_alias __attribute((visibility("hidden")));
# 3505 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeDtd) xmlFreeDtd__internal_alias __attribute((visibility("hidden")));
# 3515 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeElementContent) xmlFreeElementContent__internal_alias __attribute((visibility("hidden")));
# 3525 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeElementTable) xmlFreeElementTable__internal_alias __attribute((visibility("hidden")));
# 3535 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeEntitiesTable) xmlFreeEntitiesTable__internal_alias __attribute((visibility("hidden")));
# 3545 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeEnumeration) xmlFreeEnumeration__internal_alias __attribute((visibility("hidden")));
# 3555 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeIDTable) xmlFreeIDTable__internal_alias __attribute((visibility("hidden")));
# 3565 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeInputStream) xmlFreeInputStream__internal_alias __attribute((visibility("hidden")));
# 3575 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeMutex) xmlFreeMutex__internal_alias __attribute((visibility("hidden")));
# 3585 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeNode) xmlFreeNode__internal_alias __attribute((visibility("hidden")));
# 3595 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeNodeList) xmlFreeNodeList__internal_alias __attribute((visibility("hidden")));
# 3605 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeNotationTable) xmlFreeNotationTable__internal_alias __attribute((visibility("hidden")));
# 3615 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeNs) xmlFreeNs__internal_alias __attribute((visibility("hidden")));
# 3625 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeNsList) xmlFreeNsList__internal_alias __attribute((visibility("hidden")));
# 3635 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeParserCtxt) xmlFreeParserCtxt__internal_alias __attribute((visibility("hidden")));
# 3645 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeParserInputBuffer) xmlFreeParserInputBuffer__internal_alias __attribute((visibility("hidden")));
# 3656 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreePattern) xmlFreePattern__internal_alias __attribute((visibility("hidden")));
# 3668 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreePatternList) xmlFreePatternList__internal_alias __attribute((visibility("hidden")));
# 3679 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeProp) xmlFreeProp__internal_alias __attribute((visibility("hidden")));
# 3689 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreePropList) xmlFreePropList__internal_alias __attribute((visibility("hidden")));
# 3699 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeRMutex) xmlFreeRMutex__internal_alias __attribute((visibility("hidden")));
# 3709 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeRefTable) xmlFreeRefTable__internal_alias __attribute((visibility("hidden")));
# 3720 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeStreamCtxt) xmlFreeStreamCtxt__internal_alias __attribute((visibility("hidden")));
# 3732 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeTextReader) xmlFreeTextReader__internal_alias __attribute((visibility("hidden")));
# 3744 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeTextWriter) xmlFreeTextWriter__internal_alias __attribute((visibility("hidden")));
# 3755 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeURI) xmlFreeURI__internal_alias __attribute((visibility("hidden")));
# 3766 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlFreeValidCtxt) xmlFreeValidCtxt__internal_alias __attribute((visibility("hidden")));
# 3777 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGcMemGet) xmlGcMemGet__internal_alias __attribute((visibility("hidden")));
# 3787 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGcMemSetup) xmlGcMemSetup__internal_alias __attribute((visibility("hidden")));
# 3797 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetBufferAllocationScheme) xmlGetBufferAllocationScheme__internal_alias __attribute((visibility("hidden")));
# 3807 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetCharEncodingHandler) xmlGetCharEncodingHandler__internal_alias __attribute((visibility("hidden")));
# 3817 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetCharEncodingName) xmlGetCharEncodingName__internal_alias __attribute((visibility("hidden")));
# 3827 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetCompressMode) xmlGetCompressMode__internal_alias __attribute((visibility("hidden")));
# 3837 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetDocCompressMode) xmlGetDocCompressMode__internal_alias __attribute((visibility("hidden")));
# 3847 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetDocEntity) xmlGetDocEntity__internal_alias __attribute((visibility("hidden")));
# 3857 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetDtdAttrDesc) xmlGetDtdAttrDesc__internal_alias __attribute((visibility("hidden")));
# 3867 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetDtdElementDesc) xmlGetDtdElementDesc__internal_alias __attribute((visibility("hidden")));
# 3877 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetDtdEntity) xmlGetDtdEntity__internal_alias __attribute((visibility("hidden")));
# 3887 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetDtdNotationDesc) xmlGetDtdNotationDesc__internal_alias __attribute((visibility("hidden")));
# 3897 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetDtdQAttrDesc) xmlGetDtdQAttrDesc__internal_alias __attribute((visibility("hidden")));
# 3907 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetDtdQElementDesc) xmlGetDtdQElementDesc__internal_alias __attribute((visibility("hidden")));
# 3917 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetEncodingAlias) xmlGetEncodingAlias__internal_alias __attribute((visibility("hidden")));
# 3927 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetExternalEntityLoader) xmlGetExternalEntityLoader__internal_alias __attribute((visibility("hidden")));
# 3938 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetFeature) xmlGetFeature__internal_alias __attribute((visibility("hidden")));
# 3950 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetFeaturesList) xmlGetFeaturesList__internal_alias __attribute((visibility("hidden")));
# 3961 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetGlobalState) xmlGetGlobalState__internal_alias __attribute((visibility("hidden")));
# 3971 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetID) xmlGetID__internal_alias __attribute((visibility("hidden")));
# 3981 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetIntSubset) xmlGetIntSubset__internal_alias __attribute((visibility("hidden")));
# 3991 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetLastChild) xmlGetLastChild__internal_alias __attribute((visibility("hidden")));
# 4001 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetLastError) xmlGetLastError__internal_alias __attribute((visibility("hidden")));
# 4011 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetLineNo) xmlGetLineNo__internal_alias __attribute((visibility("hidden")));
# 4021 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetNoNsProp) xmlGetNoNsProp__internal_alias __attribute((visibility("hidden")));
# 4032 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetNodePath) xmlGetNodePath__internal_alias __attribute((visibility("hidden")));
# 4044 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetNsList) xmlGetNsList__internal_alias __attribute((visibility("hidden")));
# 4055 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetNsProp) xmlGetNsProp__internal_alias __attribute((visibility("hidden")));
# 4065 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetParameterEntity) xmlGetParameterEntity__internal_alias __attribute((visibility("hidden")));
# 4075 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetPredefinedEntity) xmlGetPredefinedEntity__internal_alias __attribute((visibility("hidden")));
# 4085 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetProp) xmlGetProp__internal_alias __attribute((visibility("hidden")));
# 4095 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetRefs) xmlGetRefs__internal_alias __attribute((visibility("hidden")));
# 4105 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetThreadId) xmlGetThreadId__internal_alias __attribute((visibility("hidden")));
# 4115 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlGetUTF8Char) xmlGetUTF8Char__internal_alias __attribute((visibility("hidden")));
# 4126 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHandleEntity) xmlHandleEntity__internal_alias __attribute((visibility("hidden")));
# 4137 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHasFeature) xmlHasFeature__internal_alias __attribute((visibility("hidden")));
# 4147 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHasNsProp) xmlHasNsProp__internal_alias __attribute((visibility("hidden")));
# 4157 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHasProp) xmlHasProp__internal_alias __attribute((visibility("hidden")));
# 4167 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashAddEntry) xmlHashAddEntry__internal_alias __attribute((visibility("hidden")));
# 4177 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashAddEntry2) xmlHashAddEntry2__internal_alias __attribute((visibility("hidden")));
# 4187 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashAddEntry3) xmlHashAddEntry3__internal_alias __attribute((visibility("hidden")));
# 4197 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashCopy) xmlHashCopy__internal_alias __attribute((visibility("hidden")));
# 4207 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashCreate) xmlHashCreate__internal_alias __attribute((visibility("hidden")));
# 4217 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashCreateDict) xmlHashCreateDict__internal_alias __attribute((visibility("hidden")));
# 4227 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashFree) xmlHashFree__internal_alias __attribute((visibility("hidden")));
# 4237 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashLookup) xmlHashLookup__internal_alias __attribute((visibility("hidden")));
# 4247 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashLookup2) xmlHashLookup2__internal_alias __attribute((visibility("hidden")));
# 4257 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashLookup3) xmlHashLookup3__internal_alias __attribute((visibility("hidden")));
# 4267 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashQLookup) xmlHashQLookup__internal_alias __attribute((visibility("hidden")));
# 4277 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashQLookup2) xmlHashQLookup2__internal_alias __attribute((visibility("hidden")));
# 4287 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashQLookup3) xmlHashQLookup3__internal_alias __attribute((visibility("hidden")));
# 4297 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashRemoveEntry) xmlHashRemoveEntry__internal_alias __attribute((visibility("hidden")));
# 4307 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashRemoveEntry2) xmlHashRemoveEntry2__internal_alias __attribute((visibility("hidden")));
# 4317 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashRemoveEntry3) xmlHashRemoveEntry3__internal_alias __attribute((visibility("hidden")));
# 4327 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashScan) xmlHashScan__internal_alias __attribute((visibility("hidden")));
# 4337 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashScan3) xmlHashScan3__internal_alias __attribute((visibility("hidden")));
# 4347 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashScanFull) xmlHashScanFull__internal_alias __attribute((visibility("hidden")));
# 4357 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashScanFull3) xmlHashScanFull3__internal_alias __attribute((visibility("hidden")));
# 4367 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashSize) xmlHashSize__internal_alias __attribute((visibility("hidden")));
# 4377 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashUpdateEntry) xmlHashUpdateEntry__internal_alias __attribute((visibility("hidden")));
# 4387 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashUpdateEntry2) xmlHashUpdateEntry2__internal_alias __attribute((visibility("hidden")));
# 4397 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlHashUpdateEntry3) xmlHashUpdateEntry3__internal_alias __attribute((visibility("hidden")));
# 4408 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIOFTPClose) xmlIOFTPClose__internal_alias __attribute((visibility("hidden")));
# 4420 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIOFTPMatch) xmlIOFTPMatch__internal_alias __attribute((visibility("hidden")));
# 4432 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIOFTPOpen) xmlIOFTPOpen__internal_alias __attribute((visibility("hidden")));
# 4444 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIOFTPRead) xmlIOFTPRead__internal_alias __attribute((visibility("hidden")));
# 4456 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIOHTTPClose) xmlIOHTTPClose__internal_alias __attribute((visibility("hidden")));
# 4468 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIOHTTPMatch) xmlIOHTTPMatch__internal_alias __attribute((visibility("hidden")));
# 4480 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIOHTTPOpen) xmlIOHTTPOpen__internal_alias __attribute((visibility("hidden")));
# 4492 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIOHTTPOpenW) xmlIOHTTPOpenW__internal_alias __attribute((visibility("hidden")));
# 4504 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIOHTTPRead) xmlIOHTTPRead__internal_alias __attribute((visibility("hidden")));
# 4516 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIOParseDTD) xmlIOParseDTD__internal_alias __attribute((visibility("hidden")));
# 4527 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlInitCharEncodingHandlers) xmlInitCharEncodingHandlers__internal_alias __attribute((visibility("hidden")));
# 4537 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlInitGlobals) xmlInitGlobals__internal_alias __attribute((visibility("hidden")));
# 4547 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlInitMemory) xmlInitMemory__internal_alias __attribute((visibility("hidden")));
# 4557 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlInitNodeInfoSeq) xmlInitNodeInfoSeq__internal_alias __attribute((visibility("hidden")));
# 4567 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlInitParser) xmlInitParser__internal_alias __attribute((visibility("hidden")));
# 4577 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlInitParserCtxt) xmlInitParserCtxt__internal_alias __attribute((visibility("hidden")));
# 4587 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlInitThreads) xmlInitThreads__internal_alias __attribute((visibility("hidden")));
# 4598 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlInitializeCatalog) xmlInitializeCatalog__internal_alias __attribute((visibility("hidden")));
# 4609 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlInitializeGlobalState) xmlInitializeGlobalState__internal_alias __attribute((visibility("hidden")));
# 4620 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlInitializePredefinedEntities) xmlInitializePredefinedEntities__internal_alias __attribute((visibility("hidden")));
# 4631 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsBaseChar) xmlIsBaseChar__internal_alias __attribute((visibility("hidden")));
# 4641 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsBlank) xmlIsBlank__internal_alias __attribute((visibility("hidden")));
# 4651 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsBlankNode) xmlIsBlankNode__internal_alias __attribute((visibility("hidden")));
# 4661 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsChar) xmlIsChar__internal_alias __attribute((visibility("hidden")));
# 4671 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsCombining) xmlIsCombining__internal_alias __attribute((visibility("hidden")));
# 4681 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsDigit) xmlIsDigit__internal_alias __attribute((visibility("hidden")));
# 4691 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsExtender) xmlIsExtender__internal_alias __attribute((visibility("hidden")));
# 4701 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsID) xmlIsID__internal_alias __attribute((visibility("hidden")));
# 4711 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsIdeographic) xmlIsIdeographic__internal_alias __attribute((visibility("hidden")));
# 4721 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsLetter) xmlIsLetter__internal_alias __attribute((visibility("hidden")));
# 4731 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsMainThread) xmlIsMainThread__internal_alias __attribute((visibility("hidden")));
# 4741 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsMixedElement) xmlIsMixedElement__internal_alias __attribute((visibility("hidden")));
# 4751 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsPubidChar) xmlIsPubidChar__internal_alias __attribute((visibility("hidden")));
# 4761 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsRef) xmlIsRef__internal_alias __attribute((visibility("hidden")));
# 4771 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlIsXHTML) xmlIsXHTML__internal_alias __attribute((visibility("hidden")));
# 4781 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlKeepBlanksDefault) xmlKeepBlanksDefault__internal_alias __attribute((visibility("hidden")));
# 4792 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlLastElementChild) xmlLastElementChild__internal_alias __attribute((visibility("hidden")));
# 4803 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlLineNumbersDefault) xmlLineNumbersDefault__internal_alias __attribute((visibility("hidden")));
# 4813 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlLinkGetData) xmlLinkGetData__internal_alias __attribute((visibility("hidden")));
# 4823 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListAppend) xmlListAppend__internal_alias __attribute((visibility("hidden")));
# 4833 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListClear) xmlListClear__internal_alias __attribute((visibility("hidden")));
# 4843 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListCopy) xmlListCopy__internal_alias __attribute((visibility("hidden")));
# 4853 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListCreate) xmlListCreate__internal_alias __attribute((visibility("hidden")));
# 4863 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListDelete) xmlListDelete__internal_alias __attribute((visibility("hidden")));
# 4873 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListDup) xmlListDup__internal_alias __attribute((visibility("hidden")));
# 4883 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListEmpty) xmlListEmpty__internal_alias __attribute((visibility("hidden")));
# 4893 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListEnd) xmlListEnd__internal_alias __attribute((visibility("hidden")));
# 4903 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListFront) xmlListFront__internal_alias __attribute((visibility("hidden")));
# 4913 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListInsert) xmlListInsert__internal_alias __attribute((visibility("hidden")));
# 4923 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListMerge) xmlListMerge__internal_alias __attribute((visibility("hidden")));
# 4933 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListPopBack) xmlListPopBack__internal_alias __attribute((visibility("hidden")));
# 4943 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListPopFront) xmlListPopFront__internal_alias __attribute((visibility("hidden")));
# 4953 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListPushBack) xmlListPushBack__internal_alias __attribute((visibility("hidden")));
# 4963 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListPushFront) xmlListPushFront__internal_alias __attribute((visibility("hidden")));
# 4973 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListRemoveAll) xmlListRemoveAll__internal_alias __attribute((visibility("hidden")));
# 4983 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListRemoveFirst) xmlListRemoveFirst__internal_alias __attribute((visibility("hidden")));
# 4993 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListRemoveLast) xmlListRemoveLast__internal_alias __attribute((visibility("hidden")));
# 5003 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListReverse) xmlListReverse__internal_alias __attribute((visibility("hidden")));
# 5013 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListReverseSearch) xmlListReverseSearch__internal_alias __attribute((visibility("hidden")));
# 5023 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListReverseWalk) xmlListReverseWalk__internal_alias __attribute((visibility("hidden")));
# 5033 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListSearch) xmlListSearch__internal_alias __attribute((visibility("hidden")));
# 5043 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListSize) xmlListSize__internal_alias __attribute((visibility("hidden")));
# 5053 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListSort) xmlListSort__internal_alias __attribute((visibility("hidden")));
# 5063 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlListWalk) xmlListWalk__internal_alias __attribute((visibility("hidden")));
# 5074 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlLoadACatalog) xmlLoadACatalog__internal_alias __attribute((visibility("hidden")));
# 5086 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlLoadCatalog) xmlLoadCatalog__internal_alias __attribute((visibility("hidden")));
# 5098 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlLoadCatalogs) xmlLoadCatalogs__internal_alias __attribute((visibility("hidden")));
# 5109 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlLoadExternalEntity) xmlLoadExternalEntity__internal_alias __attribute((visibility("hidden")));
# 5120 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlLoadSGMLSuperCatalog) xmlLoadSGMLSuperCatalog__internal_alias __attribute((visibility("hidden")));
# 5131 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlLockLibrary) xmlLockLibrary__internal_alias __attribute((visibility("hidden")));
# 5142 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlLsCountNode) xmlLsCountNode__internal_alias __attribute((visibility("hidden")));
# 5154 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlLsOneNode) xmlLsOneNode__internal_alias __attribute((visibility("hidden")));
# 5165 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMallocAtomicLoc) xmlMallocAtomicLoc__internal_alias __attribute((visibility("hidden")));
# 5175 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMallocLoc) xmlMallocLoc__internal_alias __attribute((visibility("hidden")));
# 5185 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemBlocks) xmlMemBlocks__internal_alias __attribute((visibility("hidden")));
# 5195 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemDisplay) xmlMemDisplay__internal_alias __attribute((visibility("hidden")));
# 5205 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemDisplayLast) xmlMemDisplayLast__internal_alias __attribute((visibility("hidden")));
# 5215 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemFree) xmlMemFree__internal_alias __attribute((visibility("hidden")));
# 5225 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemGet) xmlMemGet__internal_alias __attribute((visibility("hidden")));
# 5235 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemMalloc) xmlMemMalloc__internal_alias __attribute((visibility("hidden")));
# 5245 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemRealloc) xmlMemRealloc__internal_alias __attribute((visibility("hidden")));
# 5255 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemSetup) xmlMemSetup__internal_alias __attribute((visibility("hidden")));
# 5265 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemShow) xmlMemShow__internal_alias __attribute((visibility("hidden")));
# 5275 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemStrdupLoc) xmlMemStrdupLoc__internal_alias __attribute((visibility("hidden")));
# 5285 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemUsed) xmlMemUsed__internal_alias __attribute((visibility("hidden")));
# 5295 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemoryDump) xmlMemoryDump__internal_alias __attribute((visibility("hidden")));
# 5305 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMemoryStrdup) xmlMemoryStrdup__internal_alias __attribute((visibility("hidden")));
# 5316 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlModuleClose) xmlModuleClose__internal_alias __attribute((visibility("hidden")));
# 5328 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlModuleFree) xmlModuleFree__internal_alias __attribute((visibility("hidden")));
# 5340 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlModuleOpen) xmlModuleOpen__internal_alias __attribute((visibility("hidden")));
# 5352 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlModuleSymbol) xmlModuleSymbol__internal_alias __attribute((visibility("hidden")));
# 5363 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMutexLock) xmlMutexLock__internal_alias __attribute((visibility("hidden")));
# 5373 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlMutexUnlock) xmlMutexUnlock__internal_alias __attribute((visibility("hidden")));
# 5384 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNamespaceParseNCName) xmlNamespaceParseNCName__internal_alias __attribute((visibility("hidden")));
# 5396 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNamespaceParseNSDef) xmlNamespaceParseNSDef__internal_alias __attribute((visibility("hidden")));
# 5408 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNamespaceParseQName) xmlNamespaceParseQName__internal_alias __attribute((visibility("hidden")));
# 5420 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPCheckResponse) xmlNanoFTPCheckResponse__internal_alias __attribute((visibility("hidden")));
# 5432 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPCleanup) xmlNanoFTPCleanup__internal_alias __attribute((visibility("hidden")));
# 5444 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPClose) xmlNanoFTPClose__internal_alias __attribute((visibility("hidden")));
# 5456 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPCloseConnection) xmlNanoFTPCloseConnection__internal_alias __attribute((visibility("hidden")));
# 5468 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPConnect) xmlNanoFTPConnect__internal_alias __attribute((visibility("hidden")));
# 5480 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPConnectTo) xmlNanoFTPConnectTo__internal_alias __attribute((visibility("hidden")));
# 5492 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPCwd) xmlNanoFTPCwd__internal_alias __attribute((visibility("hidden")));
# 5504 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPDele) xmlNanoFTPDele__internal_alias __attribute((visibility("hidden")));
# 5516 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPFreeCtxt) xmlNanoFTPFreeCtxt__internal_alias __attribute((visibility("hidden")));
# 5528 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPGet) xmlNanoFTPGet__internal_alias __attribute((visibility("hidden")));
# 5540 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPGetConnection) xmlNanoFTPGetConnection__internal_alias __attribute((visibility("hidden")));
# 5552 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPGetResponse) xmlNanoFTPGetResponse__internal_alias __attribute((visibility("hidden")));
# 5564 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPGetSocket) xmlNanoFTPGetSocket__internal_alias __attribute((visibility("hidden")));
# 5576 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPInit) xmlNanoFTPInit__internal_alias __attribute((visibility("hidden")));
# 5588 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPList) xmlNanoFTPList__internal_alias __attribute((visibility("hidden")));
# 5600 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPNewCtxt) xmlNanoFTPNewCtxt__internal_alias __attribute((visibility("hidden")));
# 5612 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPOpen) xmlNanoFTPOpen__internal_alias __attribute((visibility("hidden")));
# 5624 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPProxy) xmlNanoFTPProxy__internal_alias __attribute((visibility("hidden")));
# 5636 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPQuit) xmlNanoFTPQuit__internal_alias __attribute((visibility("hidden")));
# 5648 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPRead) xmlNanoFTPRead__internal_alias __attribute((visibility("hidden")));
# 5660 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPScanProxy) xmlNanoFTPScanProxy__internal_alias __attribute((visibility("hidden")));
# 5672 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoFTPUpdateURL) xmlNanoFTPUpdateURL__internal_alias __attribute((visibility("hidden")));
# 5684 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPAuthHeader) xmlNanoHTTPAuthHeader__internal_alias __attribute((visibility("hidden")));
# 5696 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPCleanup) xmlNanoHTTPCleanup__internal_alias __attribute((visibility("hidden")));
# 5708 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPClose) xmlNanoHTTPClose__internal_alias __attribute((visibility("hidden")));
# 5720 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPContentLength) xmlNanoHTTPContentLength__internal_alias __attribute((visibility("hidden")));
# 5732 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPEncoding) xmlNanoHTTPEncoding__internal_alias __attribute((visibility("hidden")));
# 5744 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPFetch) xmlNanoHTTPFetch__internal_alias __attribute((visibility("hidden")));
# 5756 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPInit) xmlNanoHTTPInit__internal_alias __attribute((visibility("hidden")));
# 5768 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPMethod) xmlNanoHTTPMethod__internal_alias __attribute((visibility("hidden")));
# 5780 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPMethodRedir) xmlNanoHTTPMethodRedir__internal_alias __attribute((visibility("hidden")));
# 5792 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPMimeType) xmlNanoHTTPMimeType__internal_alias __attribute((visibility("hidden")));
# 5804 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPOpen) xmlNanoHTTPOpen__internal_alias __attribute((visibility("hidden")));
# 5816 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPOpenRedir) xmlNanoHTTPOpenRedir__internal_alias __attribute((visibility("hidden")));
# 5828 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPRead) xmlNanoHTTPRead__internal_alias __attribute((visibility("hidden")));
# 5840 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPRedir) xmlNanoHTTPRedir__internal_alias __attribute((visibility("hidden")));
# 5852 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPReturnCode) xmlNanoHTTPReturnCode__internal_alias __attribute((visibility("hidden")));
# 5864 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPSave) xmlNanoHTTPSave__internal_alias __attribute((visibility("hidden")));
# 5876 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNanoHTTPScanProxy) xmlNanoHTTPScanProxy__internal_alias __attribute((visibility("hidden")));
# 5888 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewAutomata) xmlNewAutomata__internal_alias __attribute((visibility("hidden")));
# 5899 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewCDataBlock) xmlNewCDataBlock__internal_alias __attribute((visibility("hidden")));
# 5910 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewCatalog) xmlNewCatalog__internal_alias __attribute((visibility("hidden")));
# 5921 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewCharEncodingHandler) xmlNewCharEncodingHandler__internal_alias __attribute((visibility("hidden")));
# 5931 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewCharRef) xmlNewCharRef__internal_alias __attribute((visibility("hidden")));
# 5942 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewChild) xmlNewChild__internal_alias __attribute((visibility("hidden")));
# 5953 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewComment) xmlNewComment__internal_alias __attribute((visibility("hidden")));
# 5963 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewDoc) xmlNewDoc__internal_alias __attribute((visibility("hidden")));
# 5973 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewDocComment) xmlNewDocComment__internal_alias __attribute((visibility("hidden")));
# 5983 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewDocElementContent) xmlNewDocElementContent__internal_alias __attribute((visibility("hidden")));
# 5994 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewDocFragment) xmlNewDocFragment__internal_alias __attribute((visibility("hidden")));
# 6005 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewDocNode) xmlNewDocNode__internal_alias __attribute((visibility("hidden")));
# 6015 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewDocNodeEatName) xmlNewDocNodeEatName__internal_alias __attribute((visibility("hidden")));
# 6025 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewDocPI) xmlNewDocPI__internal_alias __attribute((visibility("hidden")));
# 6035 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewDocProp) xmlNewDocProp__internal_alias __attribute((visibility("hidden")));
# 6046 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewDocRawNode) xmlNewDocRawNode__internal_alias __attribute((visibility("hidden")));
# 6057 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewDocText) xmlNewDocText__internal_alias __attribute((visibility("hidden")));
# 6067 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewDocTextLen) xmlNewDocTextLen__internal_alias __attribute((visibility("hidden")));
# 6077 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewDtd) xmlNewDtd__internal_alias __attribute((visibility("hidden")));
# 6087 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewElementContent) xmlNewElementContent__internal_alias __attribute((visibility("hidden")));
# 6097 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewEntity) xmlNewEntity__internal_alias __attribute((visibility("hidden")));
# 6107 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewEntityInputStream) xmlNewEntityInputStream__internal_alias __attribute((visibility("hidden")));
# 6118 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewGlobalNs) xmlNewGlobalNs__internal_alias __attribute((visibility("hidden")));
# 6129 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewIOInputStream) xmlNewIOInputStream__internal_alias __attribute((visibility("hidden")));
# 6139 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewInputFromFile) xmlNewInputFromFile__internal_alias __attribute((visibility("hidden")));
# 6149 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewInputStream) xmlNewInputStream__internal_alias __attribute((visibility("hidden")));
# 6159 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewMutex) xmlNewMutex__internal_alias __attribute((visibility("hidden")));
# 6169 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewNode) xmlNewNode__internal_alias __attribute((visibility("hidden")));
# 6179 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewNodeEatName) xmlNewNodeEatName__internal_alias __attribute((visibility("hidden")));
# 6189 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewNs) xmlNewNs__internal_alias __attribute((visibility("hidden")));
# 6199 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewNsProp) xmlNewNsProp__internal_alias __attribute((visibility("hidden")));
# 6209 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewNsPropEatName) xmlNewNsPropEatName__internal_alias __attribute((visibility("hidden")));
# 6219 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewPI) xmlNewPI__internal_alias __attribute((visibility("hidden")));
# 6229 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewParserCtxt) xmlNewParserCtxt__internal_alias __attribute((visibility("hidden")));
# 6240 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewProp) xmlNewProp__internal_alias __attribute((visibility("hidden")));
# 6251 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewRMutex) xmlNewRMutex__internal_alias __attribute((visibility("hidden")));
# 6261 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewReference) xmlNewReference__internal_alias __attribute((visibility("hidden")));
# 6271 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewStringInputStream) xmlNewStringInputStream__internal_alias __attribute((visibility("hidden")));
# 6281 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewText) xmlNewText__internal_alias __attribute((visibility("hidden")));
# 6292 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewTextChild) xmlNewTextChild__internal_alias __attribute((visibility("hidden")));
# 6303 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewTextLen) xmlNewTextLen__internal_alias __attribute((visibility("hidden")));
# 6314 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewTextReader) xmlNewTextReader__internal_alias __attribute((visibility("hidden")));
# 6326 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewTextReaderFilename) xmlNewTextReaderFilename__internal_alias __attribute((visibility("hidden")));
# 6338 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewTextWriter) xmlNewTextWriter__internal_alias __attribute((visibility("hidden")));
# 6350 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewTextWriterDoc) xmlNewTextWriterDoc__internal_alias __attribute((visibility("hidden")));
# 6362 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewTextWriterFilename) xmlNewTextWriterFilename__internal_alias __attribute((visibility("hidden")));
# 6374 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewTextWriterMemory) xmlNewTextWriterMemory__internal_alias __attribute((visibility("hidden")));
# 6386 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewTextWriterPushParser) xmlNewTextWriterPushParser__internal_alias __attribute((visibility("hidden")));
# 6398 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewTextWriterTree) xmlNewTextWriterTree__internal_alias __attribute((visibility("hidden")));
# 6410 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNewValidCtxt) xmlNewValidCtxt__internal_alias __attribute((visibility("hidden")));
# 6421 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNextChar) xmlNextChar__internal_alias __attribute((visibility("hidden")));
# 6432 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNextElementSibling) xmlNextElementSibling__internal_alias __attribute((visibility("hidden")));
# 6443 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNoNetExternalEntityLoader) xmlNoNetExternalEntityLoader__internal_alias __attribute((visibility("hidden")));
# 6453 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeAddContent) xmlNodeAddContent__internal_alias __attribute((visibility("hidden")));
# 6463 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeAddContentLen) xmlNodeAddContentLen__internal_alias __attribute((visibility("hidden")));
# 6473 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeBufGetContent) xmlNodeBufGetContent__internal_alias __attribute((visibility("hidden")));
# 6484 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeDump) xmlNodeDump__internal_alias __attribute((visibility("hidden")));
# 6496 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeDumpOutput) xmlNodeDumpOutput__internal_alias __attribute((visibility("hidden")));
# 6507 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeGetBase) xmlNodeGetBase__internal_alias __attribute((visibility("hidden")));
# 6517 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeGetContent) xmlNodeGetContent__internal_alias __attribute((visibility("hidden")));
# 6527 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeGetLang) xmlNodeGetLang__internal_alias __attribute((visibility("hidden")));
# 6537 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeGetSpacePreserve) xmlNodeGetSpacePreserve__internal_alias __attribute((visibility("hidden")));
# 6547 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeIsText) xmlNodeIsText__internal_alias __attribute((visibility("hidden")));
# 6558 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeListGetRawString) xmlNodeListGetRawString__internal_alias __attribute((visibility("hidden")));
# 6569 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeListGetString) xmlNodeListGetString__internal_alias __attribute((visibility("hidden")));
# 6580 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeSetBase) xmlNodeSetBase__internal_alias __attribute((visibility("hidden")));
# 6591 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeSetContent) xmlNodeSetContent__internal_alias __attribute((visibility("hidden")));
# 6602 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeSetContentLen) xmlNodeSetContentLen__internal_alias __attribute((visibility("hidden")));
# 6614 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeSetLang) xmlNodeSetLang__internal_alias __attribute((visibility("hidden")));
# 6626 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeSetName) xmlNodeSetName__internal_alias __attribute((visibility("hidden")));
# 6638 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNodeSetSpacePreserve) xmlNodeSetSpacePreserve__internal_alias __attribute((visibility("hidden")));
# 6649 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNormalizeURIPath) xmlNormalizeURIPath__internal_alias __attribute((visibility("hidden")));
# 6659 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlNormalizeWindowsPath) xmlNormalizeWindowsPath__internal_alias __attribute((visibility("hidden")));
# 6670 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlOutputBufferClose) xmlOutputBufferClose__internal_alias __attribute((visibility("hidden")));
# 6682 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlOutputBufferCreateBuffer) xmlOutputBufferCreateBuffer__internal_alias __attribute((visibility("hidden")));
# 6694 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlOutputBufferCreateFd) xmlOutputBufferCreateFd__internal_alias __attribute((visibility("hidden")));
# 6706 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlOutputBufferCreateFile) xmlOutputBufferCreateFile__internal_alias __attribute((visibility("hidden")));
# 6718 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlOutputBufferCreateFilename) xmlOutputBufferCreateFilename__internal_alias __attribute((visibility("hidden")));
# 6729 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlOutputBufferCreateFilenameDefault) xmlOutputBufferCreateFilenameDefault__internal_alias __attribute((visibility("hidden")));
# 6740 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlOutputBufferCreateIO) xmlOutputBufferCreateIO__internal_alias __attribute((visibility("hidden")));
# 6752 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlOutputBufferFlush) xmlOutputBufferFlush__internal_alias __attribute((visibility("hidden")));
# 6764 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlOutputBufferWrite) xmlOutputBufferWrite__internal_alias __attribute((visibility("hidden")));
# 6776 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlOutputBufferWriteEscape) xmlOutputBufferWriteEscape__internal_alias __attribute((visibility("hidden")));
# 6788 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlOutputBufferWriteString) xmlOutputBufferWriteString__internal_alias __attribute((visibility("hidden")));
# 6799 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseAttValue) xmlParseAttValue__internal_alias __attribute((visibility("hidden")));
# 6810 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseAttribute) xmlParseAttribute__internal_alias __attribute((visibility("hidden")));
# 6821 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseAttributeListDecl) xmlParseAttributeListDecl__internal_alias __attribute((visibility("hidden")));
# 6831 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseAttributeType) xmlParseAttributeType__internal_alias __attribute((visibility("hidden")));
# 6842 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseBalancedChunkMemory) xmlParseBalancedChunkMemory__internal_alias __attribute((visibility("hidden")));
# 6854 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseBalancedChunkMemoryRecover) xmlParseBalancedChunkMemoryRecover__internal_alias __attribute((visibility("hidden")));
# 6865 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseCDSect) xmlParseCDSect__internal_alias __attribute((visibility("hidden")));
# 6876 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseCatalogFile) xmlParseCatalogFile__internal_alias __attribute((visibility("hidden")));
# 6887 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseCharData) xmlParseCharData__internal_alias __attribute((visibility("hidden")));
# 6897 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseCharEncoding) xmlParseCharEncoding__internal_alias __attribute((visibility("hidden")));
# 6907 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseCharRef) xmlParseCharRef__internal_alias __attribute((visibility("hidden")));
# 6918 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseChunk) xmlParseChunk__internal_alias __attribute((visibility("hidden")));
# 6929 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseComment) xmlParseComment__internal_alias __attribute((visibility("hidden")));
# 6939 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseContent) xmlParseContent__internal_alias __attribute((visibility("hidden")));
# 6949 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseCtxtExternalEntity) xmlParseCtxtExternalEntity__internal_alias __attribute((visibility("hidden")));
# 6960 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseDTD) xmlParseDTD__internal_alias __attribute((visibility("hidden")));
# 6971 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseDefaultDecl) xmlParseDefaultDecl__internal_alias __attribute((visibility("hidden")));
# 6982 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseDoc) xmlParseDoc__internal_alias __attribute((visibility("hidden")));
# 6993 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseDocTypeDecl) xmlParseDocTypeDecl__internal_alias __attribute((visibility("hidden")));
# 7003 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseDocument) xmlParseDocument__internal_alias __attribute((visibility("hidden")));
# 7013 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseElement) xmlParseElement__internal_alias __attribute((visibility("hidden")));
# 7023 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseElementChildrenContentDecl) xmlParseElementChildrenContentDecl__internal_alias __attribute((visibility("hidden")));
# 7033 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseElementContentDecl) xmlParseElementContentDecl__internal_alias __attribute((visibility("hidden")));
# 7043 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseElementDecl) xmlParseElementDecl__internal_alias __attribute((visibility("hidden")));
# 7053 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseElementMixedContentDecl) xmlParseElementMixedContentDecl__internal_alias __attribute((visibility("hidden")));
# 7063 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEncName) xmlParseEncName__internal_alias __attribute((visibility("hidden")));
# 7073 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEncodingDecl) xmlParseEncodingDecl__internal_alias __attribute((visibility("hidden")));
# 7084 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEndTag) xmlParseEndTag__internal_alias __attribute((visibility("hidden")));
# 7096 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEntity) xmlParseEntity__internal_alias __attribute((visibility("hidden")));
# 7107 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEntityDecl) xmlParseEntityDecl__internal_alias __attribute((visibility("hidden")));
# 7117 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEntityRef) xmlParseEntityRef__internal_alias __attribute((visibility("hidden")));
# 7127 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEntityValue) xmlParseEntityValue__internal_alias __attribute((visibility("hidden")));
# 7137 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEnumeratedType) xmlParseEnumeratedType__internal_alias __attribute((visibility("hidden")));
# 7147 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseEnumerationType) xmlParseEnumerationType__internal_alias __attribute((visibility("hidden")));
# 7157 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseExtParsedEnt) xmlParseExtParsedEnt__internal_alias __attribute((visibility("hidden")));
# 7168 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseExternalEntity) xmlParseExternalEntity__internal_alias __attribute((visibility("hidden")));
# 7179 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseExternalID) xmlParseExternalID__internal_alias __attribute((visibility("hidden")));
# 7189 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseExternalSubset) xmlParseExternalSubset__internal_alias __attribute((visibility("hidden")));
# 7200 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseFile) xmlParseFile__internal_alias __attribute((visibility("hidden")));
# 7211 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseInNodeContext) xmlParseInNodeContext__internal_alias __attribute((visibility("hidden")));
# 7221 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseMarkupDecl) xmlParseMarkupDecl__internal_alias __attribute((visibility("hidden")));
# 7232 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseMemory) xmlParseMemory__internal_alias __attribute((visibility("hidden")));
# 7243 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseMisc) xmlParseMisc__internal_alias __attribute((visibility("hidden")));
# 7253 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseName) xmlParseName__internal_alias __attribute((visibility("hidden")));
# 7264 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseNamespace) xmlParseNamespace__internal_alias __attribute((visibility("hidden")));
# 7275 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseNmtoken) xmlParseNmtoken__internal_alias __attribute((visibility("hidden")));
# 7285 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseNotationDecl) xmlParseNotationDecl__internal_alias __attribute((visibility("hidden")));
# 7295 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseNotationType) xmlParseNotationType__internal_alias __attribute((visibility("hidden")));
# 7305 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParsePEReference) xmlParsePEReference__internal_alias __attribute((visibility("hidden")));
# 7315 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParsePI) xmlParsePI__internal_alias __attribute((visibility("hidden")));
# 7325 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParsePITarget) xmlParsePITarget__internal_alias __attribute((visibility("hidden")));
# 7335 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParsePubidLiteral) xmlParsePubidLiteral__internal_alias __attribute((visibility("hidden")));
# 7346 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseQuotedString) xmlParseQuotedString__internal_alias __attribute((visibility("hidden")));
# 7357 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseReference) xmlParseReference__internal_alias __attribute((visibility("hidden")));
# 7367 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseSDDecl) xmlParseSDDecl__internal_alias __attribute((visibility("hidden")));
# 7378 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseStartTag) xmlParseStartTag__internal_alias __attribute((visibility("hidden")));
# 7389 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseSystemLiteral) xmlParseSystemLiteral__internal_alias __attribute((visibility("hidden")));
# 7399 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseTextDecl) xmlParseTextDecl__internal_alias __attribute((visibility("hidden")));
# 7409 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseURI) xmlParseURI__internal_alias __attribute((visibility("hidden")));
# 7419 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseURIRaw) xmlParseURIRaw__internal_alias __attribute((visibility("hidden")));
# 7429 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseURIReference) xmlParseURIReference__internal_alias __attribute((visibility("hidden")));
# 7439 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseVersionInfo) xmlParseVersionInfo__internal_alias __attribute((visibility("hidden")));
# 7449 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseVersionNum) xmlParseVersionNum__internal_alias __attribute((visibility("hidden")));
# 7459 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParseXMLDecl) xmlParseXMLDecl__internal_alias __attribute((visibility("hidden")));
# 7469 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserAddNodeInfo) xmlParserAddNodeInfo__internal_alias __attribute((visibility("hidden")));
# 7479 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserError) xmlParserError__internal_alias __attribute((visibility("hidden")));
# 7489 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserFindNodeInfo) xmlParserFindNodeInfo__internal_alias __attribute((visibility("hidden")));
# 7499 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserFindNodeInfoIndex) xmlParserFindNodeInfoIndex__internal_alias __attribute((visibility("hidden")));
# 7509 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserGetDirectory) xmlParserGetDirectory__internal_alias __attribute((visibility("hidden")));
# 7519 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserHandlePEReference) xmlParserHandlePEReference__internal_alias __attribute((visibility("hidden")));
# 7530 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserHandleReference) xmlParserHandleReference__internal_alias __attribute((visibility("hidden")));
# 7541 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputBufferCreateFd) xmlParserInputBufferCreateFd__internal_alias __attribute((visibility("hidden")));
# 7551 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputBufferCreateFile) xmlParserInputBufferCreateFile__internal_alias __attribute((visibility("hidden")));
# 7561 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputBufferCreateFilename) xmlParserInputBufferCreateFilename__internal_alias __attribute((visibility("hidden")));
# 7571 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputBufferCreateFilenameDefault) xmlParserInputBufferCreateFilenameDefault__internal_alias __attribute((visibility("hidden")));
# 7581 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputBufferCreateIO) xmlParserInputBufferCreateIO__internal_alias __attribute((visibility("hidden")));
# 7591 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputBufferCreateMem) xmlParserInputBufferCreateMem__internal_alias __attribute((visibility("hidden")));
# 7601 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputBufferCreateStatic) xmlParserInputBufferCreateStatic__internal_alias __attribute((visibility("hidden")));
# 7611 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputBufferGrow) xmlParserInputBufferGrow__internal_alias __attribute((visibility("hidden")));
# 7621 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputBufferPush) xmlParserInputBufferPush__internal_alias __attribute((visibility("hidden")));
# 7631 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputBufferRead) xmlParserInputBufferRead__internal_alias __attribute((visibility("hidden")));
# 7641 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputGrow) xmlParserInputGrow__internal_alias __attribute((visibility("hidden")));
# 7651 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputRead) xmlParserInputRead__internal_alias __attribute((visibility("hidden")));
# 7661 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserInputShrink) xmlParserInputShrink__internal_alias __attribute((visibility("hidden")));
# 7671 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserPrintFileContext) xmlParserPrintFileContext__internal_alias __attribute((visibility("hidden")));
# 7681 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserPrintFileInfo) xmlParserPrintFileInfo__internal_alias __attribute((visibility("hidden")));
# 7691 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserValidityError) xmlParserValidityError__internal_alias __attribute((visibility("hidden")));
# 7701 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserValidityWarning) xmlParserValidityWarning__internal_alias __attribute((visibility("hidden")));
# 7711 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlParserWarning) xmlParserWarning__internal_alias __attribute((visibility("hidden")));
# 7721 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPathToURI) xmlPathToURI__internal_alias __attribute((visibility("hidden")));
# 7732 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPatternFromRoot) xmlPatternFromRoot__internal_alias __attribute((visibility("hidden")));
# 7744 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPatternGetStreamCtxt) xmlPatternGetStreamCtxt__internal_alias __attribute((visibility("hidden")));
# 7756 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPatternMatch) xmlPatternMatch__internal_alias __attribute((visibility("hidden")));
# 7768 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPatternMaxDepth) xmlPatternMaxDepth__internal_alias __attribute((visibility("hidden")));
# 7780 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPatternMinDepth) xmlPatternMinDepth__internal_alias __attribute((visibility("hidden")));
# 7792 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPatternStreamable) xmlPatternStreamable__internal_alias __attribute((visibility("hidden")));
# 7804 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPatterncompile) xmlPatterncompile__internal_alias __attribute((visibility("hidden")));
# 7815 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPedanticParserDefault) xmlPedanticParserDefault__internal_alias __attribute((visibility("hidden")));
# 7825 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPopInput) xmlPopInput__internal_alias __attribute((visibility("hidden")));
# 7835 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPopInputCallbacks) xmlPopInputCallbacks__internal_alias __attribute((visibility("hidden")));
# 7846 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPreviousElementSibling) xmlPreviousElementSibling__internal_alias __attribute((visibility("hidden")));
# 7857 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPrintURI) xmlPrintURI__internal_alias __attribute((visibility("hidden")));
# 7867 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlPushInput) xmlPushInput__internal_alias __attribute((visibility("hidden")));
# 7877 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRMutexLock) xmlRMutexLock__internal_alias __attribute((visibility("hidden")));
# 7887 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRMutexUnlock) xmlRMutexUnlock__internal_alias __attribute((visibility("hidden")));
# 7897 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReadDoc) xmlReadDoc__internal_alias __attribute((visibility("hidden")));
# 7907 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReadFd) xmlReadFd__internal_alias __attribute((visibility("hidden")));
# 7917 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReadFile) xmlReadFile__internal_alias __attribute((visibility("hidden")));
# 7927 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReadIO) xmlReadIO__internal_alias __attribute((visibility("hidden")));
# 7937 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReadMemory) xmlReadMemory__internal_alias __attribute((visibility("hidden")));
# 7948 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReaderForDoc) xmlReaderForDoc__internal_alias __attribute((visibility("hidden")));
# 7960 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReaderForFd) xmlReaderForFd__internal_alias __attribute((visibility("hidden")));
# 7972 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReaderForFile) xmlReaderForFile__internal_alias __attribute((visibility("hidden")));
# 7984 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReaderForIO) xmlReaderForIO__internal_alias __attribute((visibility("hidden")));
# 7996 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReaderForMemory) xmlReaderForMemory__internal_alias __attribute((visibility("hidden")));
# 8008 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReaderNewDoc) xmlReaderNewDoc__internal_alias __attribute((visibility("hidden")));
# 8020 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReaderNewFd) xmlReaderNewFd__internal_alias __attribute((visibility("hidden")));
# 8032 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReaderNewFile) xmlReaderNewFile__internal_alias __attribute((visibility("hidden")));
# 8044 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReaderNewIO) xmlReaderNewIO__internal_alias __attribute((visibility("hidden")));
# 8056 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReaderNewMemory) xmlReaderNewMemory__internal_alias __attribute((visibility("hidden")));
# 8068 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReaderNewWalker) xmlReaderNewWalker__internal_alias __attribute((visibility("hidden")));
# 8080 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReaderWalker) xmlReaderWalker__internal_alias __attribute((visibility("hidden")));
# 8091 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReallocLoc) xmlReallocLoc__internal_alias __attribute((visibility("hidden")));
# 8102 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReconciliateNs) xmlReconciliateNs__internal_alias __attribute((visibility("hidden")));
# 8114 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRecoverDoc) xmlRecoverDoc__internal_alias __attribute((visibility("hidden")));
# 8126 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRecoverFile) xmlRecoverFile__internal_alias __attribute((visibility("hidden")));
# 8138 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRecoverMemory) xmlRecoverMemory__internal_alias __attribute((visibility("hidden")));
# 8150 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegExecErrInfo) xmlRegExecErrInfo__internal_alias __attribute((visibility("hidden")));
# 8162 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegExecNextValues) xmlRegExecNextValues__internal_alias __attribute((visibility("hidden")));
# 8174 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegExecPushString) xmlRegExecPushString__internal_alias __attribute((visibility("hidden")));
# 8186 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegExecPushString2) xmlRegExecPushString2__internal_alias __attribute((visibility("hidden")));
# 8198 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegFreeExecCtxt) xmlRegFreeExecCtxt__internal_alias __attribute((visibility("hidden")));
# 8210 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegFreeRegexp) xmlRegFreeRegexp__internal_alias __attribute((visibility("hidden")));
# 8222 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegNewExecCtxt) xmlRegNewExecCtxt__internal_alias __attribute((visibility("hidden")));
# 8234 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegexpCompile) xmlRegexpCompile__internal_alias __attribute((visibility("hidden")));
# 8246 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegexpExec) xmlRegexpExec__internal_alias __attribute((visibility("hidden")));
# 8258 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegexpIsDeterminist) xmlRegexpIsDeterminist__internal_alias __attribute((visibility("hidden")));
# 8270 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegexpPrint) xmlRegexpPrint__internal_alias __attribute((visibility("hidden")));
# 8281 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegisterCharEncodingHandler) xmlRegisterCharEncodingHandler__internal_alias __attribute((visibility("hidden")));
# 8291 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegisterDefaultInputCallbacks) xmlRegisterDefaultInputCallbacks__internal_alias __attribute((visibility("hidden")));
# 8302 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegisterDefaultOutputCallbacks) xmlRegisterDefaultOutputCallbacks__internal_alias __attribute((visibility("hidden")));
# 8314 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegisterHTTPPostCallbacks) xmlRegisterHTTPPostCallbacks__internal_alias __attribute((visibility("hidden")));
# 8325 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegisterInputCallbacks) xmlRegisterInputCallbacks__internal_alias __attribute((visibility("hidden")));
# 8335 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegisterNodeDefault) xmlRegisterNodeDefault__internal_alias __attribute((visibility("hidden")));
# 8346 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRegisterOutputCallbacks) xmlRegisterOutputCallbacks__internal_alias __attribute((visibility("hidden")));
# 8358 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGCleanupTypes) xmlRelaxNGCleanupTypes__internal_alias __attribute((visibility("hidden")));
# 8370 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGDump) xmlRelaxNGDump__internal_alias __attribute((visibility("hidden")));
# 8382 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGDumpTree) xmlRelaxNGDumpTree__internal_alias __attribute((visibility("hidden")));
# 8394 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGFree) xmlRelaxNGFree__internal_alias __attribute((visibility("hidden")));
# 8406 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGFreeParserCtxt) xmlRelaxNGFreeParserCtxt__internal_alias __attribute((visibility("hidden")));
# 8418 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGFreeValidCtxt) xmlRelaxNGFreeValidCtxt__internal_alias __attribute((visibility("hidden")));
# 8430 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGGetParserErrors) xmlRelaxNGGetParserErrors__internal_alias __attribute((visibility("hidden")));
# 8442 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGGetValidErrors) xmlRelaxNGGetValidErrors__internal_alias __attribute((visibility("hidden")));
# 8454 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGInitTypes) xmlRelaxNGInitTypes__internal_alias __attribute((visibility("hidden")));
# 8466 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGNewDocParserCtxt) xmlRelaxNGNewDocParserCtxt__internal_alias __attribute((visibility("hidden")));
# 8478 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGNewMemParserCtxt) xmlRelaxNGNewMemParserCtxt__internal_alias __attribute((visibility("hidden")));
# 8490 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGNewParserCtxt) xmlRelaxNGNewParserCtxt__internal_alias __attribute((visibility("hidden")));
# 8502 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGNewValidCtxt) xmlRelaxNGNewValidCtxt__internal_alias __attribute((visibility("hidden")));
# 8514 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGParse) xmlRelaxNGParse__internal_alias __attribute((visibility("hidden")));
# 8526 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGSetParserErrors) xmlRelaxNGSetParserErrors__internal_alias __attribute((visibility("hidden")));
# 8538 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGSetParserStructuredErrors) xmlRelaxNGSetParserStructuredErrors__internal_alias __attribute((visibility("hidden")));
# 8550 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGSetValidErrors) xmlRelaxNGSetValidErrors__internal_alias __attribute((visibility("hidden")));
# 8562 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGSetValidStructuredErrors) xmlRelaxNGSetValidStructuredErrors__internal_alias __attribute((visibility("hidden")));
# 8574 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGValidateDoc) xmlRelaxNGValidateDoc__internal_alias __attribute((visibility("hidden")));
# 8586 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGValidateFullElement) xmlRelaxNGValidateFullElement__internal_alias __attribute((visibility("hidden")));
# 8598 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGValidatePopElement) xmlRelaxNGValidatePopElement__internal_alias __attribute((visibility("hidden")));
# 8610 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGValidatePushCData) xmlRelaxNGValidatePushCData__internal_alias __attribute((visibility("hidden")));
# 8622 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGValidatePushElement) xmlRelaxNGValidatePushElement__internal_alias __attribute((visibility("hidden")));
# 8634 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxParserSetFlag) xmlRelaxParserSetFlag__internal_alias __attribute((visibility("hidden")));
# 8645 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRemoveID) xmlRemoveID__internal_alias __attribute((visibility("hidden")));
# 8655 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRemoveProp) xmlRemoveProp__internal_alias __attribute((visibility("hidden")));
# 8665 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRemoveRef) xmlRemoveRef__internal_alias __attribute((visibility("hidden")));
# 8676 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlReplaceNode) xmlReplaceNode__internal_alias __attribute((visibility("hidden")));
# 8687 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlResetError) xmlResetError__internal_alias __attribute((visibility("hidden")));
# 8697 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlResetLastError) xmlResetLastError__internal_alias __attribute((visibility("hidden")));
# 8707 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2AttributeDecl) xmlSAX2AttributeDecl__internal_alias __attribute((visibility("hidden")));
# 8717 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2CDataBlock) xmlSAX2CDataBlock__internal_alias __attribute((visibility("hidden")));
# 8727 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2Characters) xmlSAX2Characters__internal_alias __attribute((visibility("hidden")));
# 8737 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2Comment) xmlSAX2Comment__internal_alias __attribute((visibility("hidden")));
# 8747 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2ElementDecl) xmlSAX2ElementDecl__internal_alias __attribute((visibility("hidden")));
# 8757 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2EndDocument) xmlSAX2EndDocument__internal_alias __attribute((visibility("hidden")));
# 8768 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2EndElement) xmlSAX2EndElement__internal_alias __attribute((visibility("hidden")));
# 8779 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2EndElementNs) xmlSAX2EndElementNs__internal_alias __attribute((visibility("hidden")));
# 8789 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2EntityDecl) xmlSAX2EntityDecl__internal_alias __attribute((visibility("hidden")));
# 8799 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2ExternalSubset) xmlSAX2ExternalSubset__internal_alias __attribute((visibility("hidden")));
# 8809 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2GetColumnNumber) xmlSAX2GetColumnNumber__internal_alias __attribute((visibility("hidden")));
# 8819 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2GetEntity) xmlSAX2GetEntity__internal_alias __attribute((visibility("hidden")));
# 8829 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2GetLineNumber) xmlSAX2GetLineNumber__internal_alias __attribute((visibility("hidden")));
# 8839 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2GetParameterEntity) xmlSAX2GetParameterEntity__internal_alias __attribute((visibility("hidden")));
# 8849 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2GetPublicId) xmlSAX2GetPublicId__internal_alias __attribute((visibility("hidden")));
# 8859 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2GetSystemId) xmlSAX2GetSystemId__internal_alias __attribute((visibility("hidden")));
# 8869 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2HasExternalSubset) xmlSAX2HasExternalSubset__internal_alias __attribute((visibility("hidden")));
# 8879 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2HasInternalSubset) xmlSAX2HasInternalSubset__internal_alias __attribute((visibility("hidden")));
# 8889 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2IgnorableWhitespace) xmlSAX2IgnorableWhitespace__internal_alias __attribute((visibility("hidden")));
# 8899 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2InitDefaultSAXHandler) xmlSAX2InitDefaultSAXHandler__internal_alias __attribute((visibility("hidden")));
# 8910 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2InitDocbDefaultSAXHandler) xmlSAX2InitDocbDefaultSAXHandler__internal_alias __attribute((visibility("hidden")));
# 8922 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2InitHtmlDefaultSAXHandler) xmlSAX2InitHtmlDefaultSAXHandler__internal_alias __attribute((visibility("hidden")));
# 8933 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2InternalSubset) xmlSAX2InternalSubset__internal_alias __attribute((visibility("hidden")));
# 8943 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2IsStandalone) xmlSAX2IsStandalone__internal_alias __attribute((visibility("hidden")));
# 8953 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2NotationDecl) xmlSAX2NotationDecl__internal_alias __attribute((visibility("hidden")));
# 8963 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2ProcessingInstruction) xmlSAX2ProcessingInstruction__internal_alias __attribute((visibility("hidden")));
# 8973 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2Reference) xmlSAX2Reference__internal_alias __attribute((visibility("hidden")));
# 8983 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2ResolveEntity) xmlSAX2ResolveEntity__internal_alias __attribute((visibility("hidden")));
# 8993 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2SetDocumentLocator) xmlSAX2SetDocumentLocator__internal_alias __attribute((visibility("hidden")));
# 9003 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2StartDocument) xmlSAX2StartDocument__internal_alias __attribute((visibility("hidden")));
# 9014 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2StartElement) xmlSAX2StartElement__internal_alias __attribute((visibility("hidden")));
# 9025 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2StartElementNs) xmlSAX2StartElementNs__internal_alias __attribute((visibility("hidden")));
# 9035 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAX2UnparsedEntityDecl) xmlSAX2UnparsedEntityDecl__internal_alias __attribute((visibility("hidden")));
# 9046 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXDefaultVersion) xmlSAXDefaultVersion__internal_alias __attribute((visibility("hidden")));
# 9058 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXParseDTD) xmlSAXParseDTD__internal_alias __attribute((visibility("hidden")));
# 9070 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXParseDoc) xmlSAXParseDoc__internal_alias __attribute((visibility("hidden")));
# 9082 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXParseEntity) xmlSAXParseEntity__internal_alias __attribute((visibility("hidden")));
# 9094 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXParseFile) xmlSAXParseFile__internal_alias __attribute((visibility("hidden")));
# 9106 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXParseFileWithData) xmlSAXParseFileWithData__internal_alias __attribute((visibility("hidden")));
# 9118 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXParseMemory) xmlSAXParseMemory__internal_alias __attribute((visibility("hidden")));
# 9130 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXParseMemoryWithData) xmlSAXParseMemoryWithData__internal_alias __attribute((visibility("hidden")));
# 9142 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXUserParseFile) xmlSAXUserParseFile__internal_alias __attribute((visibility("hidden")));
# 9154 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXUserParseMemory) xmlSAXUserParseMemory__internal_alias __attribute((visibility("hidden")));
# 9165 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSAXVersion) xmlSAXVersion__internal_alias __attribute((visibility("hidden")));
# 9176 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveClose) xmlSaveClose__internal_alias __attribute((visibility("hidden")));
# 9188 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveDoc) xmlSaveDoc__internal_alias __attribute((visibility("hidden")));
# 9200 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveFile) xmlSaveFile__internal_alias __attribute((visibility("hidden")));
# 9212 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveFileEnc) xmlSaveFileEnc__internal_alias __attribute((visibility("hidden")));
# 9224 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveFileTo) xmlSaveFileTo__internal_alias __attribute((visibility("hidden")));
# 9236 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveFlush) xmlSaveFlush__internal_alias __attribute((visibility("hidden")));
# 9248 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveFormatFile) xmlSaveFormatFile__internal_alias __attribute((visibility("hidden")));
# 9260 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveFormatFileEnc) xmlSaveFormatFileEnc__internal_alias __attribute((visibility("hidden")));
# 9272 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveFormatFileTo) xmlSaveFormatFileTo__internal_alias __attribute((visibility("hidden")));
# 9284 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveSetAttrEscape) xmlSaveSetAttrEscape__internal_alias __attribute((visibility("hidden")));
# 9296 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveSetEscape) xmlSaveSetEscape__internal_alias __attribute((visibility("hidden")));
# 9308 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveToBuffer) xmlSaveToBuffer__internal_alias __attribute((visibility("hidden")));
# 9320 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveToFd) xmlSaveToFd__internal_alias __attribute((visibility("hidden")));
# 9332 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveToFilename) xmlSaveToFilename__internal_alias __attribute((visibility("hidden")));
# 9344 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveToIO) xmlSaveToIO__internal_alias __attribute((visibility("hidden")));
# 9356 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveTree) xmlSaveTree__internal_alias __attribute((visibility("hidden")));
# 9367 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSaveUri) xmlSaveUri__internal_alias __attribute((visibility("hidden")));
# 9378 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlScanName) xmlScanName__internal_alias __attribute((visibility("hidden")));
# 9390 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaCheckFacet) xmlSchemaCheckFacet__internal_alias __attribute((visibility("hidden")));
# 9402 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaCleanupTypes) xmlSchemaCleanupTypes__internal_alias __attribute((visibility("hidden")));
# 9414 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaCollapseString) xmlSchemaCollapseString__internal_alias __attribute((visibility("hidden")));
# 9426 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaCompareValues) xmlSchemaCompareValues__internal_alias __attribute((visibility("hidden")));
# 9438 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaCompareValuesWhtsp) xmlSchemaCompareValuesWhtsp__internal_alias __attribute((visibility("hidden")));
# 9450 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaCopyValue) xmlSchemaCopyValue__internal_alias __attribute((visibility("hidden")));
# 9462 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaDump) xmlSchemaDump__internal_alias __attribute((visibility("hidden")));
# 9474 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaFree) xmlSchemaFree__internal_alias __attribute((visibility("hidden")));
# 9486 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaFreeFacet) xmlSchemaFreeFacet__internal_alias __attribute((visibility("hidden")));
# 9498 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaFreeParserCtxt) xmlSchemaFreeParserCtxt__internal_alias __attribute((visibility("hidden")));
# 9510 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaFreeType) xmlSchemaFreeType__internal_alias __attribute((visibility("hidden")));
# 9522 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaFreeValidCtxt) xmlSchemaFreeValidCtxt__internal_alias __attribute((visibility("hidden")));
# 9534 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaFreeValue) xmlSchemaFreeValue__internal_alias __attribute((visibility("hidden")));
# 9546 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaFreeWildcard) xmlSchemaFreeWildcard__internal_alias __attribute((visibility("hidden")));
# 9558 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaGetBuiltInListSimpleTypeItemType) xmlSchemaGetBuiltInListSimpleTypeItemType__internal_alias __attribute((visibility("hidden")));
# 9570 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaGetBuiltInType) xmlSchemaGetBuiltInType__internal_alias __attribute((visibility("hidden")));
# 9582 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaGetCanonValue) xmlSchemaGetCanonValue__internal_alias __attribute((visibility("hidden")));
# 9594 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaGetCanonValueWhtsp) xmlSchemaGetCanonValueWhtsp__internal_alias __attribute((visibility("hidden")));
# 9606 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaGetFacetValueAsULong) xmlSchemaGetFacetValueAsULong__internal_alias __attribute((visibility("hidden")));
# 9618 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaGetParserErrors) xmlSchemaGetParserErrors__internal_alias __attribute((visibility("hidden")));
# 9630 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaGetPredefinedType) xmlSchemaGetPredefinedType__internal_alias __attribute((visibility("hidden")));
# 9642 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaGetValType) xmlSchemaGetValType__internal_alias __attribute((visibility("hidden")));
# 9654 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaGetValidErrors) xmlSchemaGetValidErrors__internal_alias __attribute((visibility("hidden")));
# 9666 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaInitTypes) xmlSchemaInitTypes__internal_alias __attribute((visibility("hidden")));
# 9678 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaIsBuiltInTypeFacet) xmlSchemaIsBuiltInTypeFacet__internal_alias __attribute((visibility("hidden")));
# 9690 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaIsValid) xmlSchemaIsValid__internal_alias __attribute((visibility("hidden")));
# 9702 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaNewDocParserCtxt) xmlSchemaNewDocParserCtxt__internal_alias __attribute((visibility("hidden")));
# 9714 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaNewFacet) xmlSchemaNewFacet__internal_alias __attribute((visibility("hidden")));
# 9726 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaNewMemParserCtxt) xmlSchemaNewMemParserCtxt__internal_alias __attribute((visibility("hidden")));
# 9738 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaNewNOTATIONValue) xmlSchemaNewNOTATIONValue__internal_alias __attribute((visibility("hidden")));
# 9750 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaNewParserCtxt) xmlSchemaNewParserCtxt__internal_alias __attribute((visibility("hidden")));
# 9762 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaNewQNameValue) xmlSchemaNewQNameValue__internal_alias __attribute((visibility("hidden")));
# 9774 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaNewStringValue) xmlSchemaNewStringValue__internal_alias __attribute((visibility("hidden")));
# 9786 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaNewValidCtxt) xmlSchemaNewValidCtxt__internal_alias __attribute((visibility("hidden")));
# 9798 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaParse) xmlSchemaParse__internal_alias __attribute((visibility("hidden")));
# 9810 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaSAXPlug) xmlSchemaSAXPlug__internal_alias __attribute((visibility("hidden")));
# 9822 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaSAXUnplug) xmlSchemaSAXUnplug__internal_alias __attribute((visibility("hidden")));
# 9834 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaSetParserErrors) xmlSchemaSetParserErrors__internal_alias __attribute((visibility("hidden")));
# 9846 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaSetParserStructuredErrors) xmlSchemaSetParserStructuredErrors__internal_alias __attribute((visibility("hidden")));
# 9858 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaSetValidErrors) xmlSchemaSetValidErrors__internal_alias __attribute((visibility("hidden")));
# 9870 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaSetValidOptions) xmlSchemaSetValidOptions__internal_alias __attribute((visibility("hidden")));
# 9882 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaSetValidStructuredErrors) xmlSchemaSetValidStructuredErrors__internal_alias __attribute((visibility("hidden")));
# 9894 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValPredefTypeNode) xmlSchemaValPredefTypeNode__internal_alias __attribute((visibility("hidden")));
# 9906 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValPredefTypeNodeNoNorm) xmlSchemaValPredefTypeNodeNoNorm__internal_alias __attribute((visibility("hidden")));
# 9918 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValidCtxtGetOptions) xmlSchemaValidCtxtGetOptions__internal_alias __attribute((visibility("hidden")));
# 9930 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValidCtxtGetParserCtxt) xmlSchemaValidCtxtGetParserCtxt__internal_alias __attribute((visibility("hidden")));
# 9942 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValidateDoc) xmlSchemaValidateDoc__internal_alias __attribute((visibility("hidden")));
# 9954 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValidateFacet) xmlSchemaValidateFacet__internal_alias __attribute((visibility("hidden")));
# 9966 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValidateFacetWhtsp) xmlSchemaValidateFacetWhtsp__internal_alias __attribute((visibility("hidden")));
# 9978 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValidateFile) xmlSchemaValidateFile__internal_alias __attribute((visibility("hidden")));
# 9990 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValidateLengthFacet) xmlSchemaValidateLengthFacet__internal_alias __attribute((visibility("hidden")));
# 10002 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValidateLengthFacetWhtsp) xmlSchemaValidateLengthFacetWhtsp__internal_alias __attribute((visibility("hidden")));
# 10014 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValidateListSimpleTypeFacet) xmlSchemaValidateListSimpleTypeFacet__internal_alias __attribute((visibility("hidden")));
# 10026 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValidateOneElement) xmlSchemaValidateOneElement__internal_alias __attribute((visibility("hidden")));
# 10038 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValidatePredefinedType) xmlSchemaValidatePredefinedType__internal_alias __attribute((visibility("hidden")));
# 10050 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValidateStream) xmlSchemaValidateStream__internal_alias __attribute((visibility("hidden")));
# 10062 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValueAppend) xmlSchemaValueAppend__internal_alias __attribute((visibility("hidden")));
# 10074 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValueGetAsBoolean) xmlSchemaValueGetAsBoolean__internal_alias __attribute((visibility("hidden")));
# 10086 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValueGetAsString) xmlSchemaValueGetAsString__internal_alias __attribute((visibility("hidden")));
# 10098 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaValueGetNext) xmlSchemaValueGetNext__internal_alias __attribute((visibility("hidden")));
# 10110 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchemaWhiteSpaceReplace) xmlSchemaWhiteSpaceReplace__internal_alias __attribute((visibility("hidden")));
# 10122 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchematronFree) xmlSchematronFree__internal_alias __attribute((visibility("hidden")));
# 10134 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchematronFreeParserCtxt) xmlSchematronFreeParserCtxt__internal_alias __attribute((visibility("hidden")));
# 10146 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchematronFreeValidCtxt) xmlSchematronFreeValidCtxt__internal_alias __attribute((visibility("hidden")));
# 10158 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchematronNewDocParserCtxt) xmlSchematronNewDocParserCtxt__internal_alias __attribute((visibility("hidden")));
# 10170 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchematronNewMemParserCtxt) xmlSchematronNewMemParserCtxt__internal_alias __attribute((visibility("hidden")));
# 10182 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchematronNewParserCtxt) xmlSchematronNewParserCtxt__internal_alias __attribute((visibility("hidden")));
# 10194 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchematronNewValidCtxt) xmlSchematronNewValidCtxt__internal_alias __attribute((visibility("hidden")));
# 10206 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchematronParse) xmlSchematronParse__internal_alias __attribute((visibility("hidden")));
# 10218 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchematronSetValidStructuredErrors) xmlSchematronSetValidStructuredErrors__internal_alias __attribute((visibility("hidden")));
# 10230 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSchematronValidateDoc) xmlSchematronValidateDoc__internal_alias __attribute((visibility("hidden")));
# 10241 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSearchNs) xmlSearchNs__internal_alias __attribute((visibility("hidden")));
# 10251 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSearchNsByHref) xmlSearchNsByHref__internal_alias __attribute((visibility("hidden")));
# 10261 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetBufferAllocationScheme) xmlSetBufferAllocationScheme__internal_alias __attribute((visibility("hidden")));
# 10271 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetCompressMode) xmlSetCompressMode__internal_alias __attribute((visibility("hidden")));
# 10281 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetDocCompressMode) xmlSetDocCompressMode__internal_alias __attribute((visibility("hidden")));
# 10292 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetEntityReferenceFunc) xmlSetEntityReferenceFunc__internal_alias __attribute((visibility("hidden")));
# 10303 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetExternalEntityLoader) xmlSetExternalEntityLoader__internal_alias __attribute((visibility("hidden")));
# 10314 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetFeature) xmlSetFeature__internal_alias __attribute((visibility("hidden")));
# 10325 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetGenericErrorFunc) xmlSetGenericErrorFunc__internal_alias __attribute((visibility("hidden")));
# 10335 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetListDoc) xmlSetListDoc__internal_alias __attribute((visibility("hidden")));
# 10345 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetNs) xmlSetNs__internal_alias __attribute((visibility("hidden")));
# 10356 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetNsProp) xmlSetNsProp__internal_alias __attribute((visibility("hidden")));
# 10368 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetProp) xmlSetProp__internal_alias __attribute((visibility("hidden")));
# 10379 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetStructuredErrorFunc) xmlSetStructuredErrorFunc__internal_alias __attribute((visibility("hidden")));
# 10389 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetTreeDoc) xmlSetTreeDoc__internal_alias __attribute((visibility("hidden")));
# 10400 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSetupParserForBuffer) xmlSetupParserForBuffer__internal_alias __attribute((visibility("hidden")));
# 10412 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShell) xmlShell__internal_alias __attribute((visibility("hidden")));
# 10424 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellBase) xmlShellBase__internal_alias __attribute((visibility("hidden")));
# 10436 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellCat) xmlShellCat__internal_alias __attribute((visibility("hidden")));
# 10448 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellDir) xmlShellDir__internal_alias __attribute((visibility("hidden")));
# 10460 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellDu) xmlShellDu__internal_alias __attribute((visibility("hidden")));
# 10472 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellList) xmlShellList__internal_alias __attribute((visibility("hidden")));
# 10484 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellLoad) xmlShellLoad__internal_alias __attribute((visibility("hidden")));
# 10496 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellPrintNode) xmlShellPrintNode__internal_alias __attribute((visibility("hidden")));
# 10508 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellPrintXPathError) xmlShellPrintXPathError__internal_alias __attribute((visibility("hidden")));
# 10520 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellPrintXPathResult) xmlShellPrintXPathResult__internal_alias __attribute((visibility("hidden")));
# 10532 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellPwd) xmlShellPwd__internal_alias __attribute((visibility("hidden")));
# 10544 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellSave) xmlShellSave__internal_alias __attribute((visibility("hidden")));
# 10556 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellValidate) xmlShellValidate__internal_alias __attribute((visibility("hidden")));
# 10568 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlShellWrite) xmlShellWrite__internal_alias __attribute((visibility("hidden")));
# 10579 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSkipBlankChars) xmlSkipBlankChars__internal_alias __attribute((visibility("hidden")));
# 10589 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSnprintfElementContent) xmlSnprintfElementContent__internal_alias __attribute((visibility("hidden")));
# 10599 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSplitQName) xmlSplitQName__internal_alias __attribute((visibility("hidden")));
# 10609 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSplitQName2) xmlSplitQName2__internal_alias __attribute((visibility("hidden")));
# 10619 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSplitQName3) xmlSplitQName3__internal_alias __attribute((visibility("hidden")));
# 10630 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSprintfElementContent) xmlSprintfElementContent__internal_alias __attribute((visibility("hidden")));
# 10641 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStopParser) xmlStopParser__internal_alias __attribute((visibility("hidden")));
# 10651 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrEqual) xmlStrEqual__internal_alias __attribute((visibility("hidden")));
# 10661 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrPrintf) xmlStrPrintf__internal_alias __attribute((visibility("hidden")));
# 10671 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrQEqual) xmlStrQEqual__internal_alias __attribute((visibility("hidden")));
# 10681 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrVPrintf) xmlStrVPrintf__internal_alias __attribute((visibility("hidden")));
# 10691 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrcasecmp) xmlStrcasecmp__internal_alias __attribute((visibility("hidden")));
# 10701 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrcasestr) xmlStrcasestr__internal_alias __attribute((visibility("hidden")));
# 10711 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrcat) xmlStrcat__internal_alias __attribute((visibility("hidden")));
# 10721 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrchr) xmlStrchr__internal_alias __attribute((visibility("hidden")));
# 10731 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrcmp) xmlStrcmp__internal_alias __attribute((visibility("hidden")));
# 10741 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrdup) xmlStrdup__internal_alias __attribute((visibility("hidden")));
# 10752 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStreamPop) xmlStreamPop__internal_alias __attribute((visibility("hidden")));
# 10764 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStreamPush) xmlStreamPush__internal_alias __attribute((visibility("hidden")));
# 10776 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStreamPushAttr) xmlStreamPushAttr__internal_alias __attribute((visibility("hidden")));
# 10788 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStreamPushNode) xmlStreamPushNode__internal_alias __attribute((visibility("hidden")));
# 10800 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStreamWantsAnyNode) xmlStreamWantsAnyNode__internal_alias __attribute((visibility("hidden")));
# 10811 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStringCurrentChar) xmlStringCurrentChar__internal_alias __attribute((visibility("hidden")));
# 10821 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStringDecodeEntities) xmlStringDecodeEntities__internal_alias __attribute((visibility("hidden")));
# 10831 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStringGetNodeList) xmlStringGetNodeList__internal_alias __attribute((visibility("hidden")));
# 10841 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStringLenDecodeEntities) xmlStringLenDecodeEntities__internal_alias __attribute((visibility("hidden")));
# 10851 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStringLenGetNodeList) xmlStringLenGetNodeList__internal_alias __attribute((visibility("hidden")));
# 10861 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrlen) xmlStrlen__internal_alias __attribute((visibility("hidden")));
# 10871 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrncasecmp) xmlStrncasecmp__internal_alias __attribute((visibility("hidden")));
# 10881 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrncat) xmlStrncat__internal_alias __attribute((visibility("hidden")));
# 10891 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrncatNew) xmlStrncatNew__internal_alias __attribute((visibility("hidden")));
# 10901 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrncmp) xmlStrncmp__internal_alias __attribute((visibility("hidden")));
# 10911 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrndup) xmlStrndup__internal_alias __attribute((visibility("hidden")));
# 10921 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrstr) xmlStrstr__internal_alias __attribute((visibility("hidden")));
# 10931 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlStrsub) xmlStrsub__internal_alias __attribute((visibility("hidden")));
# 10941 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSubstituteEntitiesDefault) xmlSubstituteEntitiesDefault__internal_alias __attribute((visibility("hidden")));
# 10951 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSwitchEncoding) xmlSwitchEncoding__internal_alias __attribute((visibility("hidden")));
# 10961 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSwitchInputEncoding) xmlSwitchInputEncoding__internal_alias __attribute((visibility("hidden")));
# 10971 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlSwitchToEncoding) xmlSwitchToEncoding__internal_alias __attribute((visibility("hidden")));
# 10981 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextConcat) xmlTextConcat__internal_alias __attribute((visibility("hidden")));
# 10991 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextMerge) xmlTextMerge__internal_alias __attribute((visibility("hidden")));
# 11002 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderAttributeCount) xmlTextReaderAttributeCount__internal_alias __attribute((visibility("hidden")));
# 11014 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderBaseUri) xmlTextReaderBaseUri__internal_alias __attribute((visibility("hidden")));
# 11026 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderByteConsumed) xmlTextReaderByteConsumed__internal_alias __attribute((visibility("hidden")));
# 11038 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderClose) xmlTextReaderClose__internal_alias __attribute((visibility("hidden")));
# 11050 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderConstBaseUri) xmlTextReaderConstBaseUri__internal_alias __attribute((visibility("hidden")));
# 11062 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderConstEncoding) xmlTextReaderConstEncoding__internal_alias __attribute((visibility("hidden")));
# 11074 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderConstLocalName) xmlTextReaderConstLocalName__internal_alias __attribute((visibility("hidden")));
# 11086 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderConstName) xmlTextReaderConstName__internal_alias __attribute((visibility("hidden")));
# 11098 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderConstNamespaceUri) xmlTextReaderConstNamespaceUri__internal_alias __attribute((visibility("hidden")));
# 11110 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderConstPrefix) xmlTextReaderConstPrefix__internal_alias __attribute((visibility("hidden")));
# 11122 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderConstString) xmlTextReaderConstString__internal_alias __attribute((visibility("hidden")));
# 11134 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderConstValue) xmlTextReaderConstValue__internal_alias __attribute((visibility("hidden")));
# 11146 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderConstXmlLang) xmlTextReaderConstXmlLang__internal_alias __attribute((visibility("hidden")));
# 11158 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderConstXmlVersion) xmlTextReaderConstXmlVersion__internal_alias __attribute((visibility("hidden")));
# 11170 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderCurrentDoc) xmlTextReaderCurrentDoc__internal_alias __attribute((visibility("hidden")));
# 11182 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderCurrentNode) xmlTextReaderCurrentNode__internal_alias __attribute((visibility("hidden")));
# 11194 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderDepth) xmlTextReaderDepth__internal_alias __attribute((visibility("hidden")));
# 11206 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderExpand) xmlTextReaderExpand__internal_alias __attribute((visibility("hidden")));
# 11218 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderGetAttribute) xmlTextReaderGetAttribute__internal_alias __attribute((visibility("hidden")));
# 11230 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderGetAttributeNo) xmlTextReaderGetAttributeNo__internal_alias __attribute((visibility("hidden")));
# 11242 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderGetAttributeNs) xmlTextReaderGetAttributeNs__internal_alias __attribute((visibility("hidden")));
# 11254 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderGetErrorHandler) xmlTextReaderGetErrorHandler__internal_alias __attribute((visibility("hidden")));
# 11266 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderGetParserColumnNumber) xmlTextReaderGetParserColumnNumber__internal_alias __attribute((visibility("hidden")));
# 11278 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderGetParserLineNumber) xmlTextReaderGetParserLineNumber__internal_alias __attribute((visibility("hidden")));
# 11290 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderGetParserProp) xmlTextReaderGetParserProp__internal_alias __attribute((visibility("hidden")));
# 11302 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderGetRemainder) xmlTextReaderGetRemainder__internal_alias __attribute((visibility("hidden")));
# 11314 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderHasAttributes) xmlTextReaderHasAttributes__internal_alias __attribute((visibility("hidden")));
# 11326 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderHasValue) xmlTextReaderHasValue__internal_alias __attribute((visibility("hidden")));
# 11338 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderIsDefault) xmlTextReaderIsDefault__internal_alias __attribute((visibility("hidden")));
# 11350 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderIsEmptyElement) xmlTextReaderIsEmptyElement__internal_alias __attribute((visibility("hidden")));
# 11362 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderIsNamespaceDecl) xmlTextReaderIsNamespaceDecl__internal_alias __attribute((visibility("hidden")));
# 11374 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderIsValid) xmlTextReaderIsValid__internal_alias __attribute((visibility("hidden")));
# 11386 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderLocalName) xmlTextReaderLocalName__internal_alias __attribute((visibility("hidden")));
# 11398 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderLocatorBaseURI) xmlTextReaderLocatorBaseURI__internal_alias __attribute((visibility("hidden")));
# 11410 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderLocatorLineNumber) xmlTextReaderLocatorLineNumber__internal_alias __attribute((visibility("hidden")));
# 11422 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderLookupNamespace) xmlTextReaderLookupNamespace__internal_alias __attribute((visibility("hidden")));
# 11434 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderMoveToAttribute) xmlTextReaderMoveToAttribute__internal_alias __attribute((visibility("hidden")));
# 11446 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderMoveToAttributeNo) xmlTextReaderMoveToAttributeNo__internal_alias __attribute((visibility("hidden")));
# 11458 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderMoveToAttributeNs) xmlTextReaderMoveToAttributeNs__internal_alias __attribute((visibility("hidden")));
# 11470 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderMoveToElement) xmlTextReaderMoveToElement__internal_alias __attribute((visibility("hidden")));
# 11482 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderMoveToFirstAttribute) xmlTextReaderMoveToFirstAttribute__internal_alias __attribute((visibility("hidden")));
# 11494 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderMoveToNextAttribute) xmlTextReaderMoveToNextAttribute__internal_alias __attribute((visibility("hidden")));
# 11506 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderName) xmlTextReaderName__internal_alias __attribute((visibility("hidden")));
# 11518 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderNamespaceUri) xmlTextReaderNamespaceUri__internal_alias __attribute((visibility("hidden")));
# 11530 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderNext) xmlTextReaderNext__internal_alias __attribute((visibility("hidden")));
# 11542 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderNextSibling) xmlTextReaderNextSibling__internal_alias __attribute((visibility("hidden")));
# 11554 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderNodeType) xmlTextReaderNodeType__internal_alias __attribute((visibility("hidden")));
# 11566 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderNormalization) xmlTextReaderNormalization__internal_alias __attribute((visibility("hidden")));
# 11578 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderPrefix) xmlTextReaderPrefix__internal_alias __attribute((visibility("hidden")));
# 11590 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderPreserve) xmlTextReaderPreserve__internal_alias __attribute((visibility("hidden")));
# 11602 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderPreservePattern) xmlTextReaderPreservePattern__internal_alias __attribute((visibility("hidden")));
# 11614 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderQuoteChar) xmlTextReaderQuoteChar__internal_alias __attribute((visibility("hidden")));
# 11626 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderRead) xmlTextReaderRead__internal_alias __attribute((visibility("hidden")));
# 11638 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderReadAttributeValue) xmlTextReaderReadAttributeValue__internal_alias __attribute((visibility("hidden")));
# 11650 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderReadInnerXml) xmlTextReaderReadInnerXml__internal_alias __attribute((visibility("hidden")));
# 11662 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderReadOuterXml) xmlTextReaderReadOuterXml__internal_alias __attribute((visibility("hidden")));
# 11674 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderReadState) xmlTextReaderReadState__internal_alias __attribute((visibility("hidden")));
# 11686 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderReadString) xmlTextReaderReadString__internal_alias __attribute((visibility("hidden")));
# 11698 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderRelaxNGSetSchema) xmlTextReaderRelaxNGSetSchema__internal_alias __attribute((visibility("hidden")));
# 11710 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderRelaxNGValidate) xmlTextReaderRelaxNGValidate__internal_alias __attribute((visibility("hidden")));
# 11722 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderSchemaValidate) xmlTextReaderSchemaValidate__internal_alias __attribute((visibility("hidden")));
# 11734 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderSchemaValidateCtxt) xmlTextReaderSchemaValidateCtxt__internal_alias __attribute((visibility("hidden")));
# 11746 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderSetErrorHandler) xmlTextReaderSetErrorHandler__internal_alias __attribute((visibility("hidden")));
# 11758 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderSetParserProp) xmlTextReaderSetParserProp__internal_alias __attribute((visibility("hidden")));
# 11770 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderSetSchema) xmlTextReaderSetSchema__internal_alias __attribute((visibility("hidden")));
# 11782 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderSetStructuredErrorHandler) xmlTextReaderSetStructuredErrorHandler__internal_alias __attribute((visibility("hidden")));
# 11794 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderSetup) xmlTextReaderSetup__internal_alias __attribute((visibility("hidden")));
# 11806 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderStandalone) xmlTextReaderStandalone__internal_alias __attribute((visibility("hidden")));
# 11818 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderValue) xmlTextReaderValue__internal_alias __attribute((visibility("hidden")));
# 11830 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextReaderXmlLang) xmlTextReaderXmlLang__internal_alias __attribute((visibility("hidden")));
# 11842 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterEndAttribute) xmlTextWriterEndAttribute__internal_alias __attribute((visibility("hidden")));
# 11854 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterEndCDATA) xmlTextWriterEndCDATA__internal_alias __attribute((visibility("hidden")));
# 11866 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterEndComment) xmlTextWriterEndComment__internal_alias __attribute((visibility("hidden")));
# 11878 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterEndDTD) xmlTextWriterEndDTD__internal_alias __attribute((visibility("hidden")));
# 11890 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterEndDTDAttlist) xmlTextWriterEndDTDAttlist__internal_alias __attribute((visibility("hidden")));
# 11902 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterEndDTDElement) xmlTextWriterEndDTDElement__internal_alias __attribute((visibility("hidden")));
# 11914 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterEndDTDEntity) xmlTextWriterEndDTDEntity__internal_alias __attribute((visibility("hidden")));
# 11926 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterEndDocument) xmlTextWriterEndDocument__internal_alias __attribute((visibility("hidden")));
# 11938 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterEndElement) xmlTextWriterEndElement__internal_alias __attribute((visibility("hidden")));
# 11950 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterEndPI) xmlTextWriterEndPI__internal_alias __attribute((visibility("hidden")));
# 11962 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterFlush) xmlTextWriterFlush__internal_alias __attribute((visibility("hidden")));
# 11974 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterFullEndElement) xmlTextWriterFullEndElement__internal_alias __attribute((visibility("hidden")));
# 11986 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterSetIndent) xmlTextWriterSetIndent__internal_alias __attribute((visibility("hidden")));
# 11998 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterSetIndentString) xmlTextWriterSetIndentString__internal_alias __attribute((visibility("hidden")));
# 12010 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterStartAttribute) xmlTextWriterStartAttribute__internal_alias __attribute((visibility("hidden")));
# 12022 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterStartAttributeNS) xmlTextWriterStartAttributeNS__internal_alias __attribute((visibility("hidden")));
# 12034 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterStartCDATA) xmlTextWriterStartCDATA__internal_alias __attribute((visibility("hidden")));
# 12046 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterStartComment) xmlTextWriterStartComment__internal_alias __attribute((visibility("hidden")));
# 12058 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterStartDTD) xmlTextWriterStartDTD__internal_alias __attribute((visibility("hidden")));
# 12070 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterStartDTDAttlist) xmlTextWriterStartDTDAttlist__internal_alias __attribute((visibility("hidden")));
# 12082 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterStartDTDElement) xmlTextWriterStartDTDElement__internal_alias __attribute((visibility("hidden")));
# 12094 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterStartDTDEntity) xmlTextWriterStartDTDEntity__internal_alias __attribute((visibility("hidden")));
# 12106 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterStartDocument) xmlTextWriterStartDocument__internal_alias __attribute((visibility("hidden")));
# 12118 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterStartElement) xmlTextWriterStartElement__internal_alias __attribute((visibility("hidden")));
# 12130 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterStartElementNS) xmlTextWriterStartElementNS__internal_alias __attribute((visibility("hidden")));
# 12142 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterStartPI) xmlTextWriterStartPI__internal_alias __attribute((visibility("hidden")));
# 12154 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteAttribute) xmlTextWriterWriteAttribute__internal_alias __attribute((visibility("hidden")));
# 12166 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteAttributeNS) xmlTextWriterWriteAttributeNS__internal_alias __attribute((visibility("hidden")));
# 12178 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteBase64) xmlTextWriterWriteBase64__internal_alias __attribute((visibility("hidden")));
# 12190 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteBinHex) xmlTextWriterWriteBinHex__internal_alias __attribute((visibility("hidden")));
# 12202 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteCDATA) xmlTextWriterWriteCDATA__internal_alias __attribute((visibility("hidden")));
# 12214 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteComment) xmlTextWriterWriteComment__internal_alias __attribute((visibility("hidden")));
# 12226 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteDTD) xmlTextWriterWriteDTD__internal_alias __attribute((visibility("hidden")));
# 12238 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteDTDAttlist) xmlTextWriterWriteDTDAttlist__internal_alias __attribute((visibility("hidden")));
# 12250 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteDTDElement) xmlTextWriterWriteDTDElement__internal_alias __attribute((visibility("hidden")));
# 12262 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteDTDEntity) xmlTextWriterWriteDTDEntity__internal_alias __attribute((visibility("hidden")));
# 12274 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteDTDExternalEntity) xmlTextWriterWriteDTDExternalEntity__internal_alias __attribute((visibility("hidden")));
# 12286 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteDTDExternalEntityContents) xmlTextWriterWriteDTDExternalEntityContents__internal_alias __attribute((visibility("hidden")));
# 12298 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteDTDInternalEntity) xmlTextWriterWriteDTDInternalEntity__internal_alias __attribute((visibility("hidden")));
# 12310 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteDTDNotation) xmlTextWriterWriteDTDNotation__internal_alias __attribute((visibility("hidden")));
# 12322 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteElement) xmlTextWriterWriteElement__internal_alias __attribute((visibility("hidden")));
# 12334 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteElementNS) xmlTextWriterWriteElementNS__internal_alias __attribute((visibility("hidden")));
# 12346 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatAttribute) xmlTextWriterWriteFormatAttribute__internal_alias __attribute((visibility("hidden")));
# 12358 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatAttributeNS) xmlTextWriterWriteFormatAttributeNS__internal_alias __attribute((visibility("hidden")));
# 12370 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatCDATA) xmlTextWriterWriteFormatCDATA__internal_alias __attribute((visibility("hidden")));
# 12382 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatComment) xmlTextWriterWriteFormatComment__internal_alias __attribute((visibility("hidden")));
# 12394 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatDTD) xmlTextWriterWriteFormatDTD__internal_alias __attribute((visibility("hidden")));
# 12406 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatDTDAttlist) xmlTextWriterWriteFormatDTDAttlist__internal_alias __attribute((visibility("hidden")));
# 12418 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatDTDElement) xmlTextWriterWriteFormatDTDElement__internal_alias __attribute((visibility("hidden")));
# 12430 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatDTDInternalEntity) xmlTextWriterWriteFormatDTDInternalEntity__internal_alias __attribute((visibility("hidden")));
# 12442 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatElement) xmlTextWriterWriteFormatElement__internal_alias __attribute((visibility("hidden")));
# 12454 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatElementNS) xmlTextWriterWriteFormatElementNS__internal_alias __attribute((visibility("hidden")));
# 12466 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatPI) xmlTextWriterWriteFormatPI__internal_alias __attribute((visibility("hidden")));
# 12478 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatRaw) xmlTextWriterWriteFormatRaw__internal_alias __attribute((visibility("hidden")));
# 12490 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteFormatString) xmlTextWriterWriteFormatString__internal_alias __attribute((visibility("hidden")));
# 12502 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWritePI) xmlTextWriterWritePI__internal_alias __attribute((visibility("hidden")));
# 12514 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteRaw) xmlTextWriterWriteRaw__internal_alias __attribute((visibility("hidden")));
# 12526 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteRawLen) xmlTextWriterWriteRawLen__internal_alias __attribute((visibility("hidden")));
# 12538 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteString) xmlTextWriterWriteString__internal_alias __attribute((visibility("hidden")));
# 12550 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatAttribute) xmlTextWriterWriteVFormatAttribute__internal_alias __attribute((visibility("hidden")));
# 12562 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatAttributeNS) xmlTextWriterWriteVFormatAttributeNS__internal_alias __attribute((visibility("hidden")));
# 12574 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatCDATA) xmlTextWriterWriteVFormatCDATA__internal_alias __attribute((visibility("hidden")));
# 12586 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatComment) xmlTextWriterWriteVFormatComment__internal_alias __attribute((visibility("hidden")));
# 12598 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatDTD) xmlTextWriterWriteVFormatDTD__internal_alias __attribute((visibility("hidden")));
# 12610 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatDTDAttlist) xmlTextWriterWriteVFormatDTDAttlist__internal_alias __attribute((visibility("hidden")));
# 12622 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatDTDElement) xmlTextWriterWriteVFormatDTDElement__internal_alias __attribute((visibility("hidden")));
# 12634 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatDTDInternalEntity) xmlTextWriterWriteVFormatDTDInternalEntity__internal_alias __attribute((visibility("hidden")));
# 12646 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatElement) xmlTextWriterWriteVFormatElement__internal_alias __attribute((visibility("hidden")));
# 12658 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatElementNS) xmlTextWriterWriteVFormatElementNS__internal_alias __attribute((visibility("hidden")));
# 12670 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatPI) xmlTextWriterWriteVFormatPI__internal_alias __attribute((visibility("hidden")));
# 12682 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatRaw) xmlTextWriterWriteVFormatRaw__internal_alias __attribute((visibility("hidden")));
# 12694 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlTextWriterWriteVFormatString) xmlTextWriterWriteVFormatString__internal_alias __attribute((visibility("hidden")));
# 12705 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefBufferAllocScheme) xmlThrDefBufferAllocScheme__internal_alias __attribute((visibility("hidden")));
# 12715 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefDefaultBufferSize) xmlThrDefDefaultBufferSize__internal_alias __attribute((visibility("hidden")));
# 12725 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefDeregisterNodeDefault) xmlThrDefDeregisterNodeDefault__internal_alias __attribute((visibility("hidden")));
# 12735 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefDoValidityCheckingDefaultValue) xmlThrDefDoValidityCheckingDefaultValue__internal_alias __attribute((visibility("hidden")));
# 12745 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefGetWarningsDefaultValue) xmlThrDefGetWarningsDefaultValue__internal_alias __attribute((visibility("hidden")));
# 12755 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefIndentTreeOutput) xmlThrDefIndentTreeOutput__internal_alias __attribute((visibility("hidden")));
# 12765 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefKeepBlanksDefaultValue) xmlThrDefKeepBlanksDefaultValue__internal_alias __attribute((visibility("hidden")));
# 12775 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefLineNumbersDefaultValue) xmlThrDefLineNumbersDefaultValue__internal_alias __attribute((visibility("hidden")));
# 12785 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefLoadExtDtdDefaultValue) xmlThrDefLoadExtDtdDefaultValue__internal_alias __attribute((visibility("hidden")));
# 12795 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefOutputBufferCreateFilenameDefault) xmlThrDefOutputBufferCreateFilenameDefault__internal_alias __attribute((visibility("hidden")));
# 12805 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefParserDebugEntities) xmlThrDefParserDebugEntities__internal_alias __attribute((visibility("hidden")));
# 12815 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefParserInputBufferCreateFilenameDefault) xmlThrDefParserInputBufferCreateFilenameDefault__internal_alias __attribute((visibility("hidden")));
# 12825 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefPedanticParserDefaultValue) xmlThrDefPedanticParserDefaultValue__internal_alias __attribute((visibility("hidden")));
# 12835 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefRegisterNodeDefault) xmlThrDefRegisterNodeDefault__internal_alias __attribute((visibility("hidden")));
# 12845 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefSaveNoEmptyTags) xmlThrDefSaveNoEmptyTags__internal_alias __attribute((visibility("hidden")));
# 12855 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefSetGenericErrorFunc) xmlThrDefSetGenericErrorFunc__internal_alias __attribute((visibility("hidden")));
# 12865 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefSetStructuredErrorFunc) xmlThrDefSetStructuredErrorFunc__internal_alias __attribute((visibility("hidden")));
# 12875 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefSubstituteEntitiesDefaultValue) xmlThrDefSubstituteEntitiesDefaultValue__internal_alias __attribute((visibility("hidden")));
# 12885 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlThrDefTreeIndentString) xmlThrDefTreeIndentString__internal_alias __attribute((visibility("hidden")));
# 12896 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsAegeanNumbers) xmlUCSIsAegeanNumbers__internal_alias __attribute((visibility("hidden")));
# 12908 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsAlphabeticPresentationForms) xmlUCSIsAlphabeticPresentationForms__internal_alias __attribute((visibility("hidden")));
# 12920 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsArabic) xmlUCSIsArabic__internal_alias __attribute((visibility("hidden")));
# 12932 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsArabicPresentationFormsA) xmlUCSIsArabicPresentationFormsA__internal_alias __attribute((visibility("hidden")));
# 12944 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsArabicPresentationFormsB) xmlUCSIsArabicPresentationFormsB__internal_alias __attribute((visibility("hidden")));
# 12956 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsArmenian) xmlUCSIsArmenian__internal_alias __attribute((visibility("hidden")));
# 12968 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsArrows) xmlUCSIsArrows__internal_alias __attribute((visibility("hidden")));
# 12980 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsBasicLatin) xmlUCSIsBasicLatin__internal_alias __attribute((visibility("hidden")));
# 12992 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsBengali) xmlUCSIsBengali__internal_alias __attribute((visibility("hidden")));
# 13004 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsBlock) xmlUCSIsBlock__internal_alias __attribute((visibility("hidden")));
# 13016 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsBlockElements) xmlUCSIsBlockElements__internal_alias __attribute((visibility("hidden")));
# 13028 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsBopomofo) xmlUCSIsBopomofo__internal_alias __attribute((visibility("hidden")));
# 13040 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsBopomofoExtended) xmlUCSIsBopomofoExtended__internal_alias __attribute((visibility("hidden")));
# 13052 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsBoxDrawing) xmlUCSIsBoxDrawing__internal_alias __attribute((visibility("hidden")));
# 13064 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsBraillePatterns) xmlUCSIsBraillePatterns__internal_alias __attribute((visibility("hidden")));
# 13076 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsBuhid) xmlUCSIsBuhid__internal_alias __attribute((visibility("hidden")));
# 13088 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsByzantineMusicalSymbols) xmlUCSIsByzantineMusicalSymbols__internal_alias __attribute((visibility("hidden")));
# 13100 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCJKCompatibility) xmlUCSIsCJKCompatibility__internal_alias __attribute((visibility("hidden")));
# 13112 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCJKCompatibilityForms) xmlUCSIsCJKCompatibilityForms__internal_alias __attribute((visibility("hidden")));
# 13124 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCJKCompatibilityIdeographs) xmlUCSIsCJKCompatibilityIdeographs__internal_alias __attribute((visibility("hidden")));
# 13136 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCJKCompatibilityIdeographsSupplement) xmlUCSIsCJKCompatibilityIdeographsSupplement__internal_alias __attribute((visibility("hidden")));
# 13148 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCJKRadicalsSupplement) xmlUCSIsCJKRadicalsSupplement__internal_alias __attribute((visibility("hidden")));
# 13160 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCJKSymbolsandPunctuation) xmlUCSIsCJKSymbolsandPunctuation__internal_alias __attribute((visibility("hidden")));
# 13172 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCJKUnifiedIdeographs) xmlUCSIsCJKUnifiedIdeographs__internal_alias __attribute((visibility("hidden")));
# 13184 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCJKUnifiedIdeographsExtensionA) xmlUCSIsCJKUnifiedIdeographsExtensionA__internal_alias __attribute((visibility("hidden")));
# 13196 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCJKUnifiedIdeographsExtensionB) xmlUCSIsCJKUnifiedIdeographsExtensionB__internal_alias __attribute((visibility("hidden")));
# 13208 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCat) xmlUCSIsCat__internal_alias __attribute((visibility("hidden")));
# 13220 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatC) xmlUCSIsCatC__internal_alias __attribute((visibility("hidden")));
# 13232 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatCc) xmlUCSIsCatCc__internal_alias __attribute((visibility("hidden")));
# 13244 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatCf) xmlUCSIsCatCf__internal_alias __attribute((visibility("hidden")));
# 13256 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatCo) xmlUCSIsCatCo__internal_alias __attribute((visibility("hidden")));
# 13268 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatCs) xmlUCSIsCatCs__internal_alias __attribute((visibility("hidden")));
# 13280 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatL) xmlUCSIsCatL__internal_alias __attribute((visibility("hidden")));
# 13292 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatLl) xmlUCSIsCatLl__internal_alias __attribute((visibility("hidden")));
# 13304 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatLm) xmlUCSIsCatLm__internal_alias __attribute((visibility("hidden")));
# 13316 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatLo) xmlUCSIsCatLo__internal_alias __attribute((visibility("hidden")));
# 13328 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatLt) xmlUCSIsCatLt__internal_alias __attribute((visibility("hidden")));
# 13340 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatLu) xmlUCSIsCatLu__internal_alias __attribute((visibility("hidden")));
# 13352 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatM) xmlUCSIsCatM__internal_alias __attribute((visibility("hidden")));
# 13364 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatMc) xmlUCSIsCatMc__internal_alias __attribute((visibility("hidden")));
# 13376 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatMe) xmlUCSIsCatMe__internal_alias __attribute((visibility("hidden")));
# 13388 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatMn) xmlUCSIsCatMn__internal_alias __attribute((visibility("hidden")));
# 13400 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatN) xmlUCSIsCatN__internal_alias __attribute((visibility("hidden")));
# 13412 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatNd) xmlUCSIsCatNd__internal_alias __attribute((visibility("hidden")));
# 13424 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatNl) xmlUCSIsCatNl__internal_alias __attribute((visibility("hidden")));
# 13436 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatNo) xmlUCSIsCatNo__internal_alias __attribute((visibility("hidden")));
# 13448 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatP) xmlUCSIsCatP__internal_alias __attribute((visibility("hidden")));
# 13460 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatPc) xmlUCSIsCatPc__internal_alias __attribute((visibility("hidden")));
# 13472 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatPd) xmlUCSIsCatPd__internal_alias __attribute((visibility("hidden")));
# 13484 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatPe) xmlUCSIsCatPe__internal_alias __attribute((visibility("hidden")));
# 13496 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatPf) xmlUCSIsCatPf__internal_alias __attribute((visibility("hidden")));
# 13508 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatPi) xmlUCSIsCatPi__internal_alias __attribute((visibility("hidden")));
# 13520 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatPo) xmlUCSIsCatPo__internal_alias __attribute((visibility("hidden")));
# 13532 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatPs) xmlUCSIsCatPs__internal_alias __attribute((visibility("hidden")));
# 13544 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatS) xmlUCSIsCatS__internal_alias __attribute((visibility("hidden")));
# 13556 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatSc) xmlUCSIsCatSc__internal_alias __attribute((visibility("hidden")));
# 13568 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatSk) xmlUCSIsCatSk__internal_alias __attribute((visibility("hidden")));
# 13580 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatSm) xmlUCSIsCatSm__internal_alias __attribute((visibility("hidden")));
# 13592 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatSo) xmlUCSIsCatSo__internal_alias __attribute((visibility("hidden")));
# 13604 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatZ) xmlUCSIsCatZ__internal_alias __attribute((visibility("hidden")));
# 13616 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatZl) xmlUCSIsCatZl__internal_alias __attribute((visibility("hidden")));
# 13628 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatZp) xmlUCSIsCatZp__internal_alias __attribute((visibility("hidden")));
# 13640 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCatZs) xmlUCSIsCatZs__internal_alias __attribute((visibility("hidden")));
# 13652 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCherokee) xmlUCSIsCherokee__internal_alias __attribute((visibility("hidden")));
# 13664 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCombiningDiacriticalMarks) xmlUCSIsCombiningDiacriticalMarks__internal_alias __attribute((visibility("hidden")));
# 13676 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCombiningDiacriticalMarksforSymbols) xmlUCSIsCombiningDiacriticalMarksforSymbols__internal_alias __attribute((visibility("hidden")));
# 13688 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCombiningHalfMarks) xmlUCSIsCombiningHalfMarks__internal_alias __attribute((visibility("hidden")));
# 13700 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCombiningMarksforSymbols) xmlUCSIsCombiningMarksforSymbols__internal_alias __attribute((visibility("hidden")));
# 13712 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsControlPictures) xmlUCSIsControlPictures__internal_alias __attribute((visibility("hidden")));
# 13724 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCurrencySymbols) xmlUCSIsCurrencySymbols__internal_alias __attribute((visibility("hidden")));
# 13736 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCypriotSyllabary) xmlUCSIsCypriotSyllabary__internal_alias __attribute((visibility("hidden")));
# 13748 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCyrillic) xmlUCSIsCyrillic__internal_alias __attribute((visibility("hidden")));
# 13760 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsCyrillicSupplement) xmlUCSIsCyrillicSupplement__internal_alias __attribute((visibility("hidden")));
# 13772 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsDeseret) xmlUCSIsDeseret__internal_alias __attribute((visibility("hidden")));
# 13784 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsDevanagari) xmlUCSIsDevanagari__internal_alias __attribute((visibility("hidden")));
# 13796 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsDingbats) xmlUCSIsDingbats__internal_alias __attribute((visibility("hidden")));
# 13808 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsEnclosedAlphanumerics) xmlUCSIsEnclosedAlphanumerics__internal_alias __attribute((visibility("hidden")));
# 13820 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsEnclosedCJKLettersandMonths) xmlUCSIsEnclosedCJKLettersandMonths__internal_alias __attribute((visibility("hidden")));
# 13832 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsEthiopic) xmlUCSIsEthiopic__internal_alias __attribute((visibility("hidden")));
# 13844 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsGeneralPunctuation) xmlUCSIsGeneralPunctuation__internal_alias __attribute((visibility("hidden")));
# 13856 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsGeometricShapes) xmlUCSIsGeometricShapes__internal_alias __attribute((visibility("hidden")));
# 13868 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsGeorgian) xmlUCSIsGeorgian__internal_alias __attribute((visibility("hidden")));
# 13880 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsGothic) xmlUCSIsGothic__internal_alias __attribute((visibility("hidden")));
# 13892 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsGreek) xmlUCSIsGreek__internal_alias __attribute((visibility("hidden")));
# 13904 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsGreekExtended) xmlUCSIsGreekExtended__internal_alias __attribute((visibility("hidden")));
# 13916 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsGreekandCoptic) xmlUCSIsGreekandCoptic__internal_alias __attribute((visibility("hidden")));
# 13928 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsGujarati) xmlUCSIsGujarati__internal_alias __attribute((visibility("hidden")));
# 13940 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsGurmukhi) xmlUCSIsGurmukhi__internal_alias __attribute((visibility("hidden")));
# 13952 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsHalfwidthandFullwidthForms) xmlUCSIsHalfwidthandFullwidthForms__internal_alias __attribute((visibility("hidden")));
# 13964 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsHangulCompatibilityJamo) xmlUCSIsHangulCompatibilityJamo__internal_alias __attribute((visibility("hidden")));
# 13976 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsHangulJamo) xmlUCSIsHangulJamo__internal_alias __attribute((visibility("hidden")));
# 13988 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsHangulSyllables) xmlUCSIsHangulSyllables__internal_alias __attribute((visibility("hidden")));
# 14000 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsHanunoo) xmlUCSIsHanunoo__internal_alias __attribute((visibility("hidden")));
# 14012 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsHebrew) xmlUCSIsHebrew__internal_alias __attribute((visibility("hidden")));
# 14024 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsHighPrivateUseSurrogates) xmlUCSIsHighPrivateUseSurrogates__internal_alias __attribute((visibility("hidden")));
# 14036 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsHighSurrogates) xmlUCSIsHighSurrogates__internal_alias __attribute((visibility("hidden")));
# 14048 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsHiragana) xmlUCSIsHiragana__internal_alias __attribute((visibility("hidden")));
# 14060 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsIPAExtensions) xmlUCSIsIPAExtensions__internal_alias __attribute((visibility("hidden")));
# 14072 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsIdeographicDescriptionCharacters) xmlUCSIsIdeographicDescriptionCharacters__internal_alias __attribute((visibility("hidden")));
# 14084 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsKanbun) xmlUCSIsKanbun__internal_alias __attribute((visibility("hidden")));
# 14096 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsKangxiRadicals) xmlUCSIsKangxiRadicals__internal_alias __attribute((visibility("hidden")));
# 14108 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsKannada) xmlUCSIsKannada__internal_alias __attribute((visibility("hidden")));
# 14120 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsKatakana) xmlUCSIsKatakana__internal_alias __attribute((visibility("hidden")));
# 14132 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsKatakanaPhoneticExtensions) xmlUCSIsKatakanaPhoneticExtensions__internal_alias __attribute((visibility("hidden")));
# 14144 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsKhmer) xmlUCSIsKhmer__internal_alias __attribute((visibility("hidden")));
# 14156 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsKhmerSymbols) xmlUCSIsKhmerSymbols__internal_alias __attribute((visibility("hidden")));
# 14168 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsLao) xmlUCSIsLao__internal_alias __attribute((visibility("hidden")));
# 14180 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsLatin1Supplement) xmlUCSIsLatin1Supplement__internal_alias __attribute((visibility("hidden")));
# 14192 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsLatinExtendedA) xmlUCSIsLatinExtendedA__internal_alias __attribute((visibility("hidden")));
# 14204 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsLatinExtendedAdditional) xmlUCSIsLatinExtendedAdditional__internal_alias __attribute((visibility("hidden")));
# 14216 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsLatinExtendedB) xmlUCSIsLatinExtendedB__internal_alias __attribute((visibility("hidden")));
# 14228 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsLetterlikeSymbols) xmlUCSIsLetterlikeSymbols__internal_alias __attribute((visibility("hidden")));
# 14240 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsLimbu) xmlUCSIsLimbu__internal_alias __attribute((visibility("hidden")));
# 14252 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsLinearBIdeograms) xmlUCSIsLinearBIdeograms__internal_alias __attribute((visibility("hidden")));
# 14264 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsLinearBSyllabary) xmlUCSIsLinearBSyllabary__internal_alias __attribute((visibility("hidden")));
# 14276 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsLowSurrogates) xmlUCSIsLowSurrogates__internal_alias __attribute((visibility("hidden")));
# 14288 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsMalayalam) xmlUCSIsMalayalam__internal_alias __attribute((visibility("hidden")));
# 14300 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsMathematicalAlphanumericSymbols) xmlUCSIsMathematicalAlphanumericSymbols__internal_alias __attribute((visibility("hidden")));
# 14312 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsMathematicalOperators) xmlUCSIsMathematicalOperators__internal_alias __attribute((visibility("hidden")));
# 14324 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsMiscellaneousMathematicalSymbolsA) xmlUCSIsMiscellaneousMathematicalSymbolsA__internal_alias __attribute((visibility("hidden")));
# 14336 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsMiscellaneousMathematicalSymbolsB) xmlUCSIsMiscellaneousMathematicalSymbolsB__internal_alias __attribute((visibility("hidden")));
# 14348 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsMiscellaneousSymbols) xmlUCSIsMiscellaneousSymbols__internal_alias __attribute((visibility("hidden")));
# 14360 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsMiscellaneousSymbolsandArrows) xmlUCSIsMiscellaneousSymbolsandArrows__internal_alias __attribute((visibility("hidden")));
# 14372 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsMiscellaneousTechnical) xmlUCSIsMiscellaneousTechnical__internal_alias __attribute((visibility("hidden")));
# 14384 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsMongolian) xmlUCSIsMongolian__internal_alias __attribute((visibility("hidden")));
# 14396 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsMusicalSymbols) xmlUCSIsMusicalSymbols__internal_alias __attribute((visibility("hidden")));
# 14408 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsMyanmar) xmlUCSIsMyanmar__internal_alias __attribute((visibility("hidden")));
# 14420 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsNumberForms) xmlUCSIsNumberForms__internal_alias __attribute((visibility("hidden")));
# 14432 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsOgham) xmlUCSIsOgham__internal_alias __attribute((visibility("hidden")));
# 14444 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsOldItalic) xmlUCSIsOldItalic__internal_alias __attribute((visibility("hidden")));
# 14456 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsOpticalCharacterRecognition) xmlUCSIsOpticalCharacterRecognition__internal_alias __attribute((visibility("hidden")));
# 14468 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsOriya) xmlUCSIsOriya__internal_alias __attribute((visibility("hidden")));
# 14480 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsOsmanya) xmlUCSIsOsmanya__internal_alias __attribute((visibility("hidden")));
# 14492 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsPhoneticExtensions) xmlUCSIsPhoneticExtensions__internal_alias __attribute((visibility("hidden")));
# 14504 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsPrivateUse) xmlUCSIsPrivateUse__internal_alias __attribute((visibility("hidden")));
# 14516 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsPrivateUseArea) xmlUCSIsPrivateUseArea__internal_alias __attribute((visibility("hidden")));
# 14528 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsRunic) xmlUCSIsRunic__internal_alias __attribute((visibility("hidden")));
# 14540 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsShavian) xmlUCSIsShavian__internal_alias __attribute((visibility("hidden")));
# 14552 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsSinhala) xmlUCSIsSinhala__internal_alias __attribute((visibility("hidden")));
# 14564 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsSmallFormVariants) xmlUCSIsSmallFormVariants__internal_alias __attribute((visibility("hidden")));
# 14576 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsSpacingModifierLetters) xmlUCSIsSpacingModifierLetters__internal_alias __attribute((visibility("hidden")));
# 14588 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsSpecials) xmlUCSIsSpecials__internal_alias __attribute((visibility("hidden")));
# 14600 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsSuperscriptsandSubscripts) xmlUCSIsSuperscriptsandSubscripts__internal_alias __attribute((visibility("hidden")));
# 14612 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsSupplementalArrowsA) xmlUCSIsSupplementalArrowsA__internal_alias __attribute((visibility("hidden")));
# 14624 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsSupplementalArrowsB) xmlUCSIsSupplementalArrowsB__internal_alias __attribute((visibility("hidden")));
# 14636 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsSupplementalMathematicalOperators) xmlUCSIsSupplementalMathematicalOperators__internal_alias __attribute((visibility("hidden")));
# 14648 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsSupplementaryPrivateUseAreaA) xmlUCSIsSupplementaryPrivateUseAreaA__internal_alias __attribute((visibility("hidden")));
# 14660 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsSupplementaryPrivateUseAreaB) xmlUCSIsSupplementaryPrivateUseAreaB__internal_alias __attribute((visibility("hidden")));
# 14672 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsSyriac) xmlUCSIsSyriac__internal_alias __attribute((visibility("hidden")));
# 14684 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsTagalog) xmlUCSIsTagalog__internal_alias __attribute((visibility("hidden")));
# 14696 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsTagbanwa) xmlUCSIsTagbanwa__internal_alias __attribute((visibility("hidden")));
# 14708 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsTags) xmlUCSIsTags__internal_alias __attribute((visibility("hidden")));
# 14720 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsTaiLe) xmlUCSIsTaiLe__internal_alias __attribute((visibility("hidden")));
# 14732 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsTaiXuanJingSymbols) xmlUCSIsTaiXuanJingSymbols__internal_alias __attribute((visibility("hidden")));
# 14744 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsTamil) xmlUCSIsTamil__internal_alias __attribute((visibility("hidden")));
# 14756 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsTelugu) xmlUCSIsTelugu__internal_alias __attribute((visibility("hidden")));
# 14768 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsThaana) xmlUCSIsThaana__internal_alias __attribute((visibility("hidden")));
# 14780 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsThai) xmlUCSIsThai__internal_alias __attribute((visibility("hidden")));
# 14792 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsTibetan) xmlUCSIsTibetan__internal_alias __attribute((visibility("hidden")));
# 14804 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsUgaritic) xmlUCSIsUgaritic__internal_alias __attribute((visibility("hidden")));
# 14816 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsUnifiedCanadianAboriginalSyllabics) xmlUCSIsUnifiedCanadianAboriginalSyllabics__internal_alias __attribute((visibility("hidden")));
# 14828 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsVariationSelectors) xmlUCSIsVariationSelectors__internal_alias __attribute((visibility("hidden")));
# 14840 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsVariationSelectorsSupplement) xmlUCSIsVariationSelectorsSupplement__internal_alias __attribute((visibility("hidden")));
# 14852 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsYiRadicals) xmlUCSIsYiRadicals__internal_alias __attribute((visibility("hidden")));
# 14864 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsYiSyllables) xmlUCSIsYiSyllables__internal_alias __attribute((visibility("hidden")));
# 14876 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUCSIsYijingHexagramSymbols) xmlUCSIsYijingHexagramSymbols__internal_alias __attribute((visibility("hidden")));
# 14887 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlURIEscape) xmlURIEscape__internal_alias __attribute((visibility("hidden")));
# 14897 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlURIEscapeStr) xmlURIEscapeStr__internal_alias __attribute((visibility("hidden")));
# 14907 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlURIUnescapeString) xmlURIUnescapeString__internal_alias __attribute((visibility("hidden")));
# 14917 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUTF8Charcmp) xmlUTF8Charcmp__internal_alias __attribute((visibility("hidden")));
# 14927 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUTF8Size) xmlUTF8Size__internal_alias __attribute((visibility("hidden")));
# 14937 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUTF8Strlen) xmlUTF8Strlen__internal_alias __attribute((visibility("hidden")));
# 14947 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUTF8Strloc) xmlUTF8Strloc__internal_alias __attribute((visibility("hidden")));
# 14957 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUTF8Strndup) xmlUTF8Strndup__internal_alias __attribute((visibility("hidden")));
# 14967 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUTF8Strpos) xmlUTF8Strpos__internal_alias __attribute((visibility("hidden")));
# 14977 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUTF8Strsize) xmlUTF8Strsize__internal_alias __attribute((visibility("hidden")));
# 14987 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUTF8Strsub) xmlUTF8Strsub__internal_alias __attribute((visibility("hidden")));
# 14997 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUnlinkNode) xmlUnlinkNode__internal_alias __attribute((visibility("hidden")));
# 15007 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUnlockLibrary) xmlUnlockLibrary__internal_alias __attribute((visibility("hidden")));
# 15018 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUnsetNsProp) xmlUnsetNsProp__internal_alias __attribute((visibility("hidden")));
# 15030 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlUnsetProp) xmlUnsetProp__internal_alias __attribute((visibility("hidden")));
# 15042 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidBuildContentModel) xmlValidBuildContentModel__internal_alias __attribute((visibility("hidden")));
# 15054 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidCtxtNormalizeAttributeValue) xmlValidCtxtNormalizeAttributeValue__internal_alias __attribute((visibility("hidden")));
# 15066 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidGetPotentialChildren) xmlValidGetPotentialChildren__internal_alias __attribute((visibility("hidden")));
# 15078 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidGetValidElements) xmlValidGetValidElements__internal_alias __attribute((visibility("hidden")));
# 15090 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidNormalizeAttributeValue) xmlValidNormalizeAttributeValue__internal_alias __attribute((visibility("hidden")));
# 15102 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateAttributeDecl) xmlValidateAttributeDecl__internal_alias __attribute((visibility("hidden")));
# 15114 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateAttributeValue) xmlValidateAttributeValue__internal_alias __attribute((visibility("hidden")));
# 15126 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateDocument) xmlValidateDocument__internal_alias __attribute((visibility("hidden")));
# 15138 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateDocumentFinal) xmlValidateDocumentFinal__internal_alias __attribute((visibility("hidden")));
# 15150 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateDtd) xmlValidateDtd__internal_alias __attribute((visibility("hidden")));
# 15162 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateDtdFinal) xmlValidateDtdFinal__internal_alias __attribute((visibility("hidden")));
# 15174 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateElement) xmlValidateElement__internal_alias __attribute((visibility("hidden")));
# 15186 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateElementDecl) xmlValidateElementDecl__internal_alias __attribute((visibility("hidden")));
# 15198 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateNCName) xmlValidateNCName__internal_alias __attribute((visibility("hidden")));
# 15210 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateNMToken) xmlValidateNMToken__internal_alias __attribute((visibility("hidden")));
# 15222 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateName) xmlValidateName__internal_alias __attribute((visibility("hidden")));
# 15234 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateNameValue) xmlValidateNameValue__internal_alias __attribute((visibility("hidden")));
# 15246 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateNamesValue) xmlValidateNamesValue__internal_alias __attribute((visibility("hidden")));
# 15258 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateNmtokenValue) xmlValidateNmtokenValue__internal_alias __attribute((visibility("hidden")));
# 15270 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateNmtokensValue) xmlValidateNmtokensValue__internal_alias __attribute((visibility("hidden")));
# 15282 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateNotationDecl) xmlValidateNotationDecl__internal_alias __attribute((visibility("hidden")));
# 15294 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateNotationUse) xmlValidateNotationUse__internal_alias __attribute((visibility("hidden")));
# 15306 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateOneAttribute) xmlValidateOneAttribute__internal_alias __attribute((visibility("hidden")));
# 15318 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateOneElement) xmlValidateOneElement__internal_alias __attribute((visibility("hidden")));
# 15330 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateOneNamespace) xmlValidateOneNamespace__internal_alias __attribute((visibility("hidden")));
# 15342 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidatePopElement) xmlValidatePopElement__internal_alias __attribute((visibility("hidden")));
# 15354 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidatePushCData) xmlValidatePushCData__internal_alias __attribute((visibility("hidden")));
# 15366 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidatePushElement) xmlValidatePushElement__internal_alias __attribute((visibility("hidden")));
# 15378 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateQName) xmlValidateQName__internal_alias __attribute((visibility("hidden")));
# 15390 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlValidateRoot) xmlValidateRoot__internal_alias __attribute((visibility("hidden")));
# 15402 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXIncludeFreeContext) xmlXIncludeFreeContext__internal_alias __attribute((visibility("hidden")));
# 15414 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXIncludeNewContext) xmlXIncludeNewContext__internal_alias __attribute((visibility("hidden")));
# 15426 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXIncludeProcess) xmlXIncludeProcess__internal_alias __attribute((visibility("hidden")));
# 15438 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXIncludeProcessFlags) xmlXIncludeProcessFlags__internal_alias __attribute((visibility("hidden")));
# 15450 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXIncludeProcessFlagsData) xmlXIncludeProcessFlagsData__internal_alias __attribute((visibility("hidden")));
# 15462 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXIncludeProcessNode) xmlXIncludeProcessNode__internal_alias __attribute((visibility("hidden")));
# 15474 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXIncludeProcessTree) xmlXIncludeProcessTree__internal_alias __attribute((visibility("hidden")));
# 15486 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXIncludeProcessTreeFlags) xmlXIncludeProcessTreeFlags__internal_alias __attribute((visibility("hidden")));
# 15498 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXIncludeProcessTreeFlagsData) xmlXIncludeProcessTreeFlagsData__internal_alias __attribute((visibility("hidden")));
# 15510 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXIncludeSetFlags) xmlXIncludeSetFlags__internal_alias __attribute((visibility("hidden")));
# 15522 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathAddValues) xmlXPathAddValues__internal_alias __attribute((visibility("hidden")));
# 15534 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathBooleanFunction) xmlXPathBooleanFunction__internal_alias __attribute((visibility("hidden")));
# 15546 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastBooleanToNumber) xmlXPathCastBooleanToNumber__internal_alias __attribute((visibility("hidden")));
# 15558 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastBooleanToString) xmlXPathCastBooleanToString__internal_alias __attribute((visibility("hidden")));
# 15570 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastNodeSetToBoolean) xmlXPathCastNodeSetToBoolean__internal_alias __attribute((visibility("hidden")));
# 15582 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastNodeSetToNumber) xmlXPathCastNodeSetToNumber__internal_alias __attribute((visibility("hidden")));
# 15594 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastNodeSetToString) xmlXPathCastNodeSetToString__internal_alias __attribute((visibility("hidden")));
# 15606 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastNodeToNumber) xmlXPathCastNodeToNumber__internal_alias __attribute((visibility("hidden")));
# 15618 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastNodeToString) xmlXPathCastNodeToString__internal_alias __attribute((visibility("hidden")));
# 15630 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastNumberToBoolean) xmlXPathCastNumberToBoolean__internal_alias __attribute((visibility("hidden")));
# 15642 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastNumberToString) xmlXPathCastNumberToString__internal_alias __attribute((visibility("hidden")));
# 15654 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastStringToBoolean) xmlXPathCastStringToBoolean__internal_alias __attribute((visibility("hidden")));
# 15666 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastStringToNumber) xmlXPathCastStringToNumber__internal_alias __attribute((visibility("hidden")));
# 15678 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastToBoolean) xmlXPathCastToBoolean__internal_alias __attribute((visibility("hidden")));
# 15690 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastToNumber) xmlXPathCastToNumber__internal_alias __attribute((visibility("hidden")));
# 15702 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCastToString) xmlXPathCastToString__internal_alias __attribute((visibility("hidden")));
# 15714 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCeilingFunction) xmlXPathCeilingFunction__internal_alias __attribute((visibility("hidden")));
# 15726 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCmpNodes) xmlXPathCmpNodes__internal_alias __attribute((visibility("hidden")));
# 15738 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCompareValues) xmlXPathCompareValues__internal_alias __attribute((visibility("hidden")));
# 15750 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCompile) xmlXPathCompile__internal_alias __attribute((visibility("hidden")));
# 15762 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCompiledEval) xmlXPathCompiledEval__internal_alias __attribute((visibility("hidden")));
# 15774 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCompiledEvalToBoolean) xmlXPathCompiledEvalToBoolean__internal_alias __attribute((visibility("hidden")));
# 15786 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathConcatFunction) xmlXPathConcatFunction__internal_alias __attribute((visibility("hidden")));
# 15798 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathContainsFunction) xmlXPathContainsFunction__internal_alias __attribute((visibility("hidden")));
# 15810 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathContextSetCache) xmlXPathContextSetCache__internal_alias __attribute((visibility("hidden")));
# 15822 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathConvertBoolean) xmlXPathConvertBoolean__internal_alias __attribute((visibility("hidden")));
# 15834 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathConvertNumber) xmlXPathConvertNumber__internal_alias __attribute((visibility("hidden")));
# 15846 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathConvertString) xmlXPathConvertString__internal_alias __attribute((visibility("hidden")));
# 15858 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCountFunction) xmlXPathCountFunction__internal_alias __attribute((visibility("hidden")));
# 15870 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathCtxtCompile) xmlXPathCtxtCompile__internal_alias __attribute((visibility("hidden")));
# 15882 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathDebugDumpCompExpr) xmlXPathDebugDumpCompExpr__internal_alias __attribute((visibility("hidden")));
# 15894 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathDebugDumpObject) xmlXPathDebugDumpObject__internal_alias __attribute((visibility("hidden")));
# 15906 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathDifference) xmlXPathDifference__internal_alias __attribute((visibility("hidden")));
# 15918 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathDistinct) xmlXPathDistinct__internal_alias __attribute((visibility("hidden")));
# 15930 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathDistinctSorted) xmlXPathDistinctSorted__internal_alias __attribute((visibility("hidden")));
# 15942 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathDivValues) xmlXPathDivValues__internal_alias __attribute((visibility("hidden")));
# 15954 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathEqualValues) xmlXPathEqualValues__internal_alias __attribute((visibility("hidden")));
# 15966 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathErr) xmlXPathErr__internal_alias __attribute((visibility("hidden")));
# 15978 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathEval) xmlXPathEval__internal_alias __attribute((visibility("hidden")));
# 15990 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathEvalExpr) xmlXPathEvalExpr__internal_alias __attribute((visibility("hidden")));
# 16002 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathEvalExpression) xmlXPathEvalExpression__internal_alias __attribute((visibility("hidden")));
# 16014 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathEvalPredicate) xmlXPathEvalPredicate__internal_alias __attribute((visibility("hidden")));
# 16026 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathEvaluatePredicateResult) xmlXPathEvaluatePredicateResult__internal_alias __attribute((visibility("hidden")));
# 16038 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathFalseFunction) xmlXPathFalseFunction__internal_alias __attribute((visibility("hidden")));
# 16050 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathFloorFunction) xmlXPathFloorFunction__internal_alias __attribute((visibility("hidden")));
# 16062 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathFreeCompExpr) xmlXPathFreeCompExpr__internal_alias __attribute((visibility("hidden")));
# 16074 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathFreeContext) xmlXPathFreeContext__internal_alias __attribute((visibility("hidden")));
# 16086 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathFreeNodeSet) xmlXPathFreeNodeSet__internal_alias __attribute((visibility("hidden")));
# 16098 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathFreeNodeSetList) xmlXPathFreeNodeSetList__internal_alias __attribute((visibility("hidden")));
# 16110 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathFreeObject) xmlXPathFreeObject__internal_alias __attribute((visibility("hidden")));
# 16122 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathFreeParserContext) xmlXPathFreeParserContext__internal_alias __attribute((visibility("hidden")));
# 16134 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathFunctionLookup) xmlXPathFunctionLookup__internal_alias __attribute((visibility("hidden")));
# 16146 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathFunctionLookupNS) xmlXPathFunctionLookupNS__internal_alias __attribute((visibility("hidden")));
# 16158 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathHasSameNodes) xmlXPathHasSameNodes__internal_alias __attribute((visibility("hidden")));
# 16170 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathIdFunction) xmlXPathIdFunction__internal_alias __attribute((visibility("hidden")));
# 16182 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathInit) xmlXPathInit__internal_alias __attribute((visibility("hidden")));
# 16194 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathIntersection) xmlXPathIntersection__internal_alias __attribute((visibility("hidden")));
# 16206 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathIsInf) xmlXPathIsInf__internal_alias __attribute((visibility("hidden")));
# 16218 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathIsNaN) xmlXPathIsNaN__internal_alias __attribute((visibility("hidden")));
# 16230 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathIsNodeType) xmlXPathIsNodeType__internal_alias __attribute((visibility("hidden")));
# 16242 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathLangFunction) xmlXPathLangFunction__internal_alias __attribute((visibility("hidden")));
# 16254 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathLastFunction) xmlXPathLastFunction__internal_alias __attribute((visibility("hidden")));
# 16266 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathLeading) xmlXPathLeading__internal_alias __attribute((visibility("hidden")));
# 16278 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathLeadingSorted) xmlXPathLeadingSorted__internal_alias __attribute((visibility("hidden")));
# 16290 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathLocalNameFunction) xmlXPathLocalNameFunction__internal_alias __attribute((visibility("hidden")));
# 16302 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathModValues) xmlXPathModValues__internal_alias __attribute((visibility("hidden")));
# 16314 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathMultValues) xmlXPathMultValues__internal_alias __attribute((visibility("hidden")));
# 16326 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNamespaceURIFunction) xmlXPathNamespaceURIFunction__internal_alias __attribute((visibility("hidden")));
# 16338 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNewBoolean) xmlXPathNewBoolean__internal_alias __attribute((visibility("hidden")));
# 16350 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNewCString) xmlXPathNewCString__internal_alias __attribute((visibility("hidden")));
# 16362 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNewContext) xmlXPathNewContext__internal_alias __attribute((visibility("hidden")));
# 16374 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNewFloat) xmlXPathNewFloat__internal_alias __attribute((visibility("hidden")));
# 16386 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNewNodeSet) xmlXPathNewNodeSet__internal_alias __attribute((visibility("hidden")));
# 16398 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNewNodeSetList) xmlXPathNewNodeSetList__internal_alias __attribute((visibility("hidden")));
# 16410 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNewParserContext) xmlXPathNewParserContext__internal_alias __attribute((visibility("hidden")));
# 16422 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNewString) xmlXPathNewString__internal_alias __attribute((visibility("hidden")));
# 16434 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNewValueTree) xmlXPathNewValueTree__internal_alias __attribute((visibility("hidden")));
# 16446 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextAncestor) xmlXPathNextAncestor__internal_alias __attribute((visibility("hidden")));
# 16458 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextAncestorOrSelf) xmlXPathNextAncestorOrSelf__internal_alias __attribute((visibility("hidden")));
# 16470 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextAttribute) xmlXPathNextAttribute__internal_alias __attribute((visibility("hidden")));
# 16482 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextChild) xmlXPathNextChild__internal_alias __attribute((visibility("hidden")));
# 16494 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextDescendant) xmlXPathNextDescendant__internal_alias __attribute((visibility("hidden")));
# 16506 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextDescendantOrSelf) xmlXPathNextDescendantOrSelf__internal_alias __attribute((visibility("hidden")));
# 16518 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextFollowing) xmlXPathNextFollowing__internal_alias __attribute((visibility("hidden")));
# 16530 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextFollowingSibling) xmlXPathNextFollowingSibling__internal_alias __attribute((visibility("hidden")));
# 16542 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextNamespace) xmlXPathNextNamespace__internal_alias __attribute((visibility("hidden")));
# 16554 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextParent) xmlXPathNextParent__internal_alias __attribute((visibility("hidden")));
# 16566 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextPreceding) xmlXPathNextPreceding__internal_alias __attribute((visibility("hidden")));
# 16578 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextPrecedingSibling) xmlXPathNextPrecedingSibling__internal_alias __attribute((visibility("hidden")));
# 16590 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNextSelf) xmlXPathNextSelf__internal_alias __attribute((visibility("hidden")));
# 16602 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeLeading) xmlXPathNodeLeading__internal_alias __attribute((visibility("hidden")));
# 16614 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeLeadingSorted) xmlXPathNodeLeadingSorted__internal_alias __attribute((visibility("hidden")));
# 16626 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeSetAdd) xmlXPathNodeSetAdd__internal_alias __attribute((visibility("hidden")));
# 16638 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeSetAddNs) xmlXPathNodeSetAddNs__internal_alias __attribute((visibility("hidden")));
# 16650 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeSetAddUnique) xmlXPathNodeSetAddUnique__internal_alias __attribute((visibility("hidden")));
# 16662 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeSetContains) xmlXPathNodeSetContains__internal_alias __attribute((visibility("hidden")));
# 16674 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeSetCreate) xmlXPathNodeSetCreate__internal_alias __attribute((visibility("hidden")));
# 16686 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeSetDel) xmlXPathNodeSetDel__internal_alias __attribute((visibility("hidden")));
# 16698 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeSetFreeNs) xmlXPathNodeSetFreeNs__internal_alias __attribute((visibility("hidden")));
# 16710 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeSetMerge) xmlXPathNodeSetMerge__internal_alias __attribute((visibility("hidden")));
# 16722 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeSetRemove) xmlXPathNodeSetRemove__internal_alias __attribute((visibility("hidden")));
# 16734 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeSetSort) xmlXPathNodeSetSort__internal_alias __attribute((visibility("hidden")));
# 16746 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeTrailing) xmlXPathNodeTrailing__internal_alias __attribute((visibility("hidden")));
# 16758 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNodeTrailingSorted) xmlXPathNodeTrailingSorted__internal_alias __attribute((visibility("hidden")));
# 16770 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNormalizeFunction) xmlXPathNormalizeFunction__internal_alias __attribute((visibility("hidden")));
# 16782 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNotEqualValues) xmlXPathNotEqualValues__internal_alias __attribute((visibility("hidden")));
# 16794 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNotFunction) xmlXPathNotFunction__internal_alias __attribute((visibility("hidden")));
# 16806 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNsLookup) xmlXPathNsLookup__internal_alias __attribute((visibility("hidden")));
# 16818 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathNumberFunction) xmlXPathNumberFunction__internal_alias __attribute((visibility("hidden")));
# 16830 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathObjectCopy) xmlXPathObjectCopy__internal_alias __attribute((visibility("hidden")));
# 16842 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathOrderDocElems) xmlXPathOrderDocElems__internal_alias __attribute((visibility("hidden")));
# 16854 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathParseNCName) xmlXPathParseNCName__internal_alias __attribute((visibility("hidden")));
# 16866 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathParseName) xmlXPathParseName__internal_alias __attribute((visibility("hidden")));
# 16878 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathPopBoolean) xmlXPathPopBoolean__internal_alias __attribute((visibility("hidden")));
# 16890 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathPopExternal) xmlXPathPopExternal__internal_alias __attribute((visibility("hidden")));
# 16902 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathPopNodeSet) xmlXPathPopNodeSet__internal_alias __attribute((visibility("hidden")));
# 16914 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathPopNumber) xmlXPathPopNumber__internal_alias __attribute((visibility("hidden")));
# 16926 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathPopString) xmlXPathPopString__internal_alias __attribute((visibility("hidden")));
# 16938 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathPositionFunction) xmlXPathPositionFunction__internal_alias __attribute((visibility("hidden")));
# 16950 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRegisterAllFunctions) xmlXPathRegisterAllFunctions__internal_alias __attribute((visibility("hidden")));
# 16962 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRegisterFunc) xmlXPathRegisterFunc__internal_alias __attribute((visibility("hidden")));
# 16974 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRegisterFuncLookup) xmlXPathRegisterFuncLookup__internal_alias __attribute((visibility("hidden")));
# 16986 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRegisterFuncNS) xmlXPathRegisterFuncNS__internal_alias __attribute((visibility("hidden")));
# 16998 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRegisterNs) xmlXPathRegisterNs__internal_alias __attribute((visibility("hidden")));
# 17010 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRegisterVariable) xmlXPathRegisterVariable__internal_alias __attribute((visibility("hidden")));
# 17022 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRegisterVariableLookup) xmlXPathRegisterVariableLookup__internal_alias __attribute((visibility("hidden")));
# 17034 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRegisterVariableNS) xmlXPathRegisterVariableNS__internal_alias __attribute((visibility("hidden")));
# 17046 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRegisteredFuncsCleanup) xmlXPathRegisteredFuncsCleanup__internal_alias __attribute((visibility("hidden")));
# 17058 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRegisteredNsCleanup) xmlXPathRegisteredNsCleanup__internal_alias __attribute((visibility("hidden")));
# 17070 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRegisteredVariablesCleanup) xmlXPathRegisteredVariablesCleanup__internal_alias __attribute((visibility("hidden")));
# 17082 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRoot) xmlXPathRoot__internal_alias __attribute((visibility("hidden")));
# 17094 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathRoundFunction) xmlXPathRoundFunction__internal_alias __attribute((visibility("hidden")));
# 17106 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathStartsWithFunction) xmlXPathStartsWithFunction__internal_alias __attribute((visibility("hidden")));
# 17118 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathStringEvalNumber) xmlXPathStringEvalNumber__internal_alias __attribute((visibility("hidden")));
# 17130 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathStringFunction) xmlXPathStringFunction__internal_alias __attribute((visibility("hidden")));
# 17142 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathStringLengthFunction) xmlXPathStringLengthFunction__internal_alias __attribute((visibility("hidden")));
# 17154 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathSubValues) xmlXPathSubValues__internal_alias __attribute((visibility("hidden")));
# 17166 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathSubstringAfterFunction) xmlXPathSubstringAfterFunction__internal_alias __attribute((visibility("hidden")));
# 17178 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathSubstringBeforeFunction) xmlXPathSubstringBeforeFunction__internal_alias __attribute((visibility("hidden")));
# 17190 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathSubstringFunction) xmlXPathSubstringFunction__internal_alias __attribute((visibility("hidden")));
# 17202 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathSumFunction) xmlXPathSumFunction__internal_alias __attribute((visibility("hidden")));
# 17214 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathTrailing) xmlXPathTrailing__internal_alias __attribute((visibility("hidden")));
# 17226 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathTrailingSorted) xmlXPathTrailingSorted__internal_alias __attribute((visibility("hidden")));
# 17238 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathTranslateFunction) xmlXPathTranslateFunction__internal_alias __attribute((visibility("hidden")));
# 17250 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathTrueFunction) xmlXPathTrueFunction__internal_alias __attribute((visibility("hidden")));
# 17262 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathValueFlipSign) xmlXPathValueFlipSign__internal_alias __attribute((visibility("hidden")));
# 17274 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathVariableLookup) xmlXPathVariableLookup__internal_alias __attribute((visibility("hidden")));
# 17286 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathVariableLookupNS) xmlXPathVariableLookupNS__internal_alias __attribute((visibility("hidden")));
# 17298 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathWrapCString) xmlXPathWrapCString__internal_alias __attribute((visibility("hidden")));
# 17310 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathWrapExternal) xmlXPathWrapExternal__internal_alias __attribute((visibility("hidden")));
# 17322 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathWrapNodeSet) xmlXPathWrapNodeSet__internal_alias __attribute((visibility("hidden")));
# 17334 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPathWrapString) xmlXPathWrapString__internal_alias __attribute((visibility("hidden")));
# 17346 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPatherror) xmlXPatherror__internal_alias __attribute((visibility("hidden")));
# 17358 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrBuildNodeList) xmlXPtrBuildNodeList__internal_alias __attribute((visibility("hidden")));
# 17370 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrEval) xmlXPtrEval__internal_alias __attribute((visibility("hidden")));
# 17382 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrEvalRangePredicate) xmlXPtrEvalRangePredicate__internal_alias __attribute((visibility("hidden")));
# 17394 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrFreeLocationSet) xmlXPtrFreeLocationSet__internal_alias __attribute((visibility("hidden")));
# 17406 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrLocationSetAdd) xmlXPtrLocationSetAdd__internal_alias __attribute((visibility("hidden")));
# 17418 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrLocationSetCreate) xmlXPtrLocationSetCreate__internal_alias __attribute((visibility("hidden")));
# 17430 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrLocationSetDel) xmlXPtrLocationSetDel__internal_alias __attribute((visibility("hidden")));
# 17442 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrLocationSetMerge) xmlXPtrLocationSetMerge__internal_alias __attribute((visibility("hidden")));
# 17454 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrLocationSetRemove) xmlXPtrLocationSetRemove__internal_alias __attribute((visibility("hidden")));
# 17466 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrNewCollapsedRange) xmlXPtrNewCollapsedRange__internal_alias __attribute((visibility("hidden")));
# 17478 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrNewContext) xmlXPtrNewContext__internal_alias __attribute((visibility("hidden")));
# 17490 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrNewLocationSetNodeSet) xmlXPtrNewLocationSetNodeSet__internal_alias __attribute((visibility("hidden")));
# 17502 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrNewLocationSetNodes) xmlXPtrNewLocationSetNodes__internal_alias __attribute((visibility("hidden")));
# 17514 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrNewRange) xmlXPtrNewRange__internal_alias __attribute((visibility("hidden")));
# 17526 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrNewRangeNodeObject) xmlXPtrNewRangeNodeObject__internal_alias __attribute((visibility("hidden")));
# 17538 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrNewRangeNodePoint) xmlXPtrNewRangeNodePoint__internal_alias __attribute((visibility("hidden")));
# 17550 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrNewRangeNodes) xmlXPtrNewRangeNodes__internal_alias __attribute((visibility("hidden")));
# 17562 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrNewRangePointNode) xmlXPtrNewRangePointNode__internal_alias __attribute((visibility("hidden")));
# 17574 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrNewRangePoints) xmlXPtrNewRangePoints__internal_alias __attribute((visibility("hidden")));
# 17586 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrRangeToFunction) xmlXPtrRangeToFunction__internal_alias __attribute((visibility("hidden")));
# 17598 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlXPtrWrapLocationSet) xmlXPtrWrapLocationSet__internal_alias __attribute((visibility("hidden")));
# 102 "/doner/libxml2/libxml2-4ea74a44/libxml2/libxml.h" 2
# 18 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 2



# 1 "/usr/include/string.h" 1 3 4
# 26 "/usr/include/string.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 27 "/usr/include/string.h" 2 3 4






# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 1 3 4
# 34 "/usr/include/string.h" 2 3 4
# 43 "/usr/include/string.h" 3 4

# 43 "/usr/include/string.h" 3 4
extern void *memcpy (void *__restrict __dest, const void *__restrict __src,
       size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern void *memmove (void *__dest, const void *__src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));





extern void *memccpy (void *__restrict __dest, const void *__restrict __src,
        int __c, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern void *memset (void *__s, int __c, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int memcmp (const void *__s1, const void *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 91 "/usr/include/string.h" 3 4
extern void *memchr (const void *__s, int __c, size_t __n)
      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 122 "/usr/include/string.h" 3 4
extern char *strcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strncpy (char *__restrict __dest,
        const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern char *strcat (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strncat (char *__restrict __dest, const char *__restrict __src,
        size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcmp (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern int strncmp (const char *__s1, const char *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcoll (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern size_t strxfrm (char *__restrict __dest,
         const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));



# 1 "/usr/include/x86_64-linux-gnu/bits/types/locale_t.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/types/locale_t.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3 4
struct __locale_struct
{

  struct __locale_data *__locales[13];


  const unsigned short int *__ctype_b;
  const int *__ctype_tolower;
  const int *__ctype_toupper;


  const char *__names[13];
};

typedef struct __locale_struct *__locale_t;
# 23 "/usr/include/x86_64-linux-gnu/bits/types/locale_t.h" 2 3 4

typedef __locale_t locale_t;
# 154 "/usr/include/string.h" 2 3 4


extern int strcoll_l (const char *__s1, const char *__s2, locale_t __l)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));


extern size_t strxfrm_l (char *__dest, const char *__src, size_t __n,
    locale_t __l) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4)));





extern char *strdup (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));






extern char *strndup (const char *__string, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));
# 226 "/usr/include/string.h" 3 4
extern char *strchr (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 253 "/usr/include/string.h" 3 4
extern char *strrchr (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 273 "/usr/include/string.h" 3 4
extern size_t strcspn (const char *__s, const char *__reject)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern size_t strspn (const char *__s, const char *__accept)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 303 "/usr/include/string.h" 3 4
extern char *strpbrk (const char *__s, const char *__accept)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 330 "/usr/include/string.h" 3 4
extern char *strstr (const char *__haystack, const char *__needle)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));




extern char *strtok (char *__restrict __s, const char *__restrict __delim)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));



extern char *__strtok_r (char *__restrict __s,
    const char *__restrict __delim,
    char **__restrict __save_ptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));

extern char *strtok_r (char *__restrict __s, const char *__restrict __delim,
         char **__restrict __save_ptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
# 385 "/usr/include/string.h" 3 4
extern size_t strlen (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));




extern size_t strnlen (const char *__string, size_t __maxlen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));




extern char *strerror (int __errnum) __attribute__ ((__nothrow__ , __leaf__));
# 410 "/usr/include/string.h" 3 4
extern int strerror_r (int __errnum, char *__buf, size_t __buflen) __asm__ ("" "__xpg_strerror_r") __attribute__ ((__nothrow__ , __leaf__))

                        __attribute__ ((__nonnull__ (2)));
# 428 "/usr/include/string.h" 3 4
extern char *strerror_l (int __errnum, locale_t __l) __attribute__ ((__nothrow__ , __leaf__));



# 1 "/usr/include/strings.h" 1 3 4
# 23 "/usr/include/strings.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h" 1 3 4
# 24 "/usr/include/strings.h" 2 3 4










extern int bcmp (const void *__s1, const void *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern void bcopy (const void *__src, void *__dest, size_t __n)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern void bzero (void *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 68 "/usr/include/strings.h" 3 4
extern char *index (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 96 "/usr/include/strings.h" 3 4
extern char *rindex (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));






extern int ffs (int __i) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));





extern int ffsl (long int __l) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
__extension__ extern int ffsll (long long int __ll)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern int strcasecmp (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strncasecmp (const char *__s1, const char *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));






extern int strcasecmp_l (const char *__s1, const char *__s2, locale_t __loc)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));



extern int strncasecmp_l (const char *__s1, const char *__s2,
     size_t __n, locale_t __loc)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 4)));








# 1 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 1 3 4
# 22 "/usr/include/x86_64-linux-gnu/bits/strings_fortified.h" 3 4
extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void
__attribute__ ((__nothrow__ , __leaf__)) bcopy (const void *__src, void *__dest, size_t __len)
{
  (void) __builtin___memmove_chk (__dest, __src, __len, __builtin_object_size (__dest, 0));
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void
__attribute__ ((__nothrow__ , __leaf__)) bzero (void *__dest, size_t __len)
{
  (void) __builtin___memset_chk (__dest, '\0', __len, __builtin_object_size (__dest, 0));
}
# 145 "/usr/include/strings.h" 2 3 4
# 433 "/usr/include/string.h" 2 3 4



extern void explicit_bzero (void *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern char *strsep (char **__restrict __stringp,
       const char *__restrict __delim)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern char *strsignal (int __sig) __attribute__ ((__nothrow__ , __leaf__));


extern char *__stpcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern char *__stpncpy (char *__restrict __dest,
   const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpncpy (char *__restrict __dest,
        const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
# 495 "/usr/include/string.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 1 3 4
# 30 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3 4
extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void *
__attribute__ ((__nothrow__ , __leaf__)) memcpy (void *__restrict __dest, const void *__restrict __src, size_t __len)

{
  return __builtin___memcpy_chk (__dest, __src, __len, __builtin_object_size (__dest, 0));
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void *
__attribute__ ((__nothrow__ , __leaf__)) memmove (void *__dest, const void *__src, size_t __len)
{
  return __builtin___memmove_chk (__dest, __src, __len, __builtin_object_size (__dest, 0));
}
# 58 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3 4
extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void *
__attribute__ ((__nothrow__ , __leaf__)) memset (void *__dest, int __ch, size_t __len)
{
# 71 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3 4
  return __builtin___memset_chk (__dest, __ch, __len, __builtin_object_size (__dest, 0));
}




void __explicit_bzero_chk (void *__dest, size_t __len, size_t __destlen)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) void
__attribute__ ((__nothrow__ , __leaf__)) explicit_bzero (void *__dest, size_t __len)
{
  __explicit_bzero_chk (__dest, __len, __builtin_object_size (__dest, 0));
}


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) strcpy (char *__restrict __dest, const char *__restrict __src)
{
  return __builtin___strcpy_chk (__dest, __src, __builtin_object_size (__dest, 2 > 1));
}
# 102 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h" 3 4
extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) strncpy (char *__restrict __dest, const char *__restrict __src, size_t __len)

{
  return __builtin___strncpy_chk (__dest, __src, __len, __builtin_object_size (__dest, 2 > 1));
}


extern char *__stpncpy_chk (char *__dest, const char *__src, size_t __n,
       size_t __destlen) __attribute__ ((__nothrow__ , __leaf__));
extern char *__stpncpy_alias (char *__dest, const char *__src, size_t __n) __asm__ ("" "stpncpy") __attribute__ ((__nothrow__ , __leaf__))
                                 ;

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) stpncpy (char *__dest, const char *__src, size_t __n)
{
  if (__builtin_object_size (__dest, 2 > 1) != (size_t) -1
      && (!__builtin_constant_p (__n) || __n > __builtin_object_size (__dest, 2 > 1)))
    return __stpncpy_chk (__dest, __src, __n, __builtin_object_size (__dest, 2 > 1));
  return __stpncpy_alias (__dest, __src, __n);
}


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) strcat (char *__restrict __dest, const char *__restrict __src)
{
  return __builtin___strcat_chk (__dest, __src, __builtin_object_size (__dest, 2 > 1));
}


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) __attribute__ ((__artificial__)) char *
__attribute__ ((__nothrow__ , __leaf__)) strncat (char *__restrict __dest, const char *__restrict __src, size_t __len)

{
  return __builtin___strncat_chk (__dest, __src, __len, __builtin_object_size (__dest, 2 > 1));
}
# 496 "/usr/include/string.h" 2 3 4




# 22 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 2
# 39 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"

# 39 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static const xmlChar *xmlRelaxNGNs = (const xmlChar *)
    "http://relaxng.org/ns/structure/1.0";
# 80 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
typedef struct _xmlRelaxNGSchema xmlRelaxNGSchema;
typedef xmlRelaxNGSchema *xmlRelaxNGSchemaPtr;

typedef struct _xmlRelaxNGDefine xmlRelaxNGDefine;
typedef xmlRelaxNGDefine *xmlRelaxNGDefinePtr;

typedef struct _xmlRelaxNGDocument xmlRelaxNGDocument;
typedef xmlRelaxNGDocument *xmlRelaxNGDocumentPtr;

typedef struct _xmlRelaxNGInclude xmlRelaxNGInclude;
typedef xmlRelaxNGInclude *xmlRelaxNGIncludePtr;

typedef enum {
    XML_RELAXNG_COMBINE_UNDEFINED = 0,
    XML_RELAXNG_COMBINE_CHOICE,
    XML_RELAXNG_COMBINE_INTERLEAVE
} xmlRelaxNGCombine;

typedef enum {
    XML_RELAXNG_CONTENT_ERROR = -1,
    XML_RELAXNG_CONTENT_EMPTY = 0,
    XML_RELAXNG_CONTENT_SIMPLE,
    XML_RELAXNG_CONTENT_COMPLEX
} xmlRelaxNGContentType;

typedef struct _xmlRelaxNGGrammar xmlRelaxNGGrammar;
typedef xmlRelaxNGGrammar *xmlRelaxNGGrammarPtr;

struct _xmlRelaxNGGrammar {
    xmlRelaxNGGrammarPtr parent;
    xmlRelaxNGGrammarPtr children;
    xmlRelaxNGGrammarPtr next;
    xmlRelaxNGDefinePtr start;
    xmlRelaxNGCombine combine;
    xmlRelaxNGDefinePtr startList;
    xmlHashTablePtr defs;
    xmlHashTablePtr refs;
};


typedef enum {
    XML_RELAXNG_NOOP = -1,
    XML_RELAXNG_EMPTY = 0,
    XML_RELAXNG_NOT_ALLOWED,
    XML_RELAXNG_EXCEPT,
    XML_RELAXNG_TEXT,
    XML_RELAXNG_ELEMENT,
    XML_RELAXNG_DATATYPE,
    XML_RELAXNG_PARAM,
    XML_RELAXNG_VALUE,
    XML_RELAXNG_LIST,
    XML_RELAXNG_ATTRIBUTE,
    XML_RELAXNG_DEF,
    XML_RELAXNG_REF,
    XML_RELAXNG_EXTERNALREF,
    XML_RELAXNG_PARENTREF,
    XML_RELAXNG_OPTIONAL,
    XML_RELAXNG_ZEROORMORE,
    XML_RELAXNG_ONEORMORE,
    XML_RELAXNG_CHOICE,
    XML_RELAXNG_GROUP,
    XML_RELAXNG_INTERLEAVE,
    XML_RELAXNG_START
} xmlRelaxNGType;
# 155 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
struct _xmlRelaxNGDefine {
    xmlRelaxNGType type;
    xmlNodePtr node;
    xmlChar *name;
    xmlChar *ns;
    xmlChar *value;
    void *data;
    xmlRelaxNGDefinePtr content;
    xmlRelaxNGDefinePtr parent;
    xmlRelaxNGDefinePtr next;
    xmlRelaxNGDefinePtr attrs;
    xmlRelaxNGDefinePtr nameClass;
    xmlRelaxNGDefinePtr nextHash;
    short depth;
    short dflags;
    xmlRegexpPtr contModel;
};






struct _xmlRelaxNG {
    void *_private;
    xmlRelaxNGGrammarPtr topgrammar;
    xmlDocPtr doc;

    int idref;

    xmlHashTablePtr defs;
    xmlHashTablePtr refs;
    xmlRelaxNGDocumentPtr documents;
    xmlRelaxNGIncludePtr includes;
    int defNr;
    xmlRelaxNGDefinePtr *defTab;

};
# 205 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
struct _xmlRelaxNGParserCtxt {
    void *userData;
    xmlRelaxNGValidityErrorFunc error;
    xmlRelaxNGValidityWarningFunc warning;
    xmlStructuredErrorFunc serror;
    xmlRelaxNGValidErr err;

    xmlRelaxNGPtr schema;
    xmlRelaxNGGrammarPtr grammar;
    xmlRelaxNGGrammarPtr parentgrammar;
    int flags;
    int nbErrors;
    int nbWarnings;
    const xmlChar *define;
    xmlRelaxNGDefinePtr def;

    int nbInterleaves;
    xmlHashTablePtr interleaves;

    xmlRelaxNGDocumentPtr documents;
    xmlRelaxNGIncludePtr includes;
    xmlChar *URL;
    xmlDocPtr document;

    int defNr;
    int defMax;
    xmlRelaxNGDefinePtr *defTab;

    const char *buffer;
    int size;


    xmlRelaxNGDocumentPtr doc;
    int docNr;
    int docMax;
    xmlRelaxNGDocumentPtr *docTab;


    xmlRelaxNGIncludePtr inc;
    int incNr;
    int incMax;
    xmlRelaxNGIncludePtr *incTab;

    int idref;


    xmlAutomataPtr am;
    xmlAutomataStatePtr state;

    int crng;
    int freedoc;
};
# 268 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
typedef struct _xmlRelaxNGInterleaveGroup xmlRelaxNGInterleaveGroup;
typedef xmlRelaxNGInterleaveGroup *xmlRelaxNGInterleaveGroupPtr;
struct _xmlRelaxNGInterleaveGroup {
    xmlRelaxNGDefinePtr rule;
    xmlRelaxNGDefinePtr *defs;
    xmlRelaxNGDefinePtr *attrs;
};
# 284 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
typedef struct _xmlRelaxNGPartition xmlRelaxNGPartition;
typedef xmlRelaxNGPartition *xmlRelaxNGPartitionPtr;
struct _xmlRelaxNGPartition {
    int nbgroups;
    xmlHashTablePtr triage;

    int flags;
    xmlRelaxNGInterleaveGroupPtr *groups;
};







typedef struct _xmlRelaxNGValidState xmlRelaxNGValidState;
typedef xmlRelaxNGValidState *xmlRelaxNGValidStatePtr;
struct _xmlRelaxNGValidState {
    xmlNodePtr node;
    xmlNodePtr seq;
    int nbAttrs;
    int maxAttrs;
    int nbAttrLeft;
    xmlChar *value;
    xmlChar *endvalue;
    xmlAttrPtr *attrs;
};






typedef struct _xmlRelaxNGStates xmlRelaxNGStates;
typedef xmlRelaxNGStates *xmlRelaxNGStatesPtr;
struct _xmlRelaxNGStates {
    int nbState;
    int maxState;
    xmlRelaxNGValidStatePtr *tabState;
};
# 333 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
typedef struct _xmlRelaxNGValidError xmlRelaxNGValidError;
typedef xmlRelaxNGValidError *xmlRelaxNGValidErrorPtr;
struct _xmlRelaxNGValidError {
    xmlRelaxNGValidErr err;
    int flags;
    xmlNodePtr node;
    xmlNodePtr seq;
    const xmlChar *arg1;
    const xmlChar *arg2;
};







struct _xmlRelaxNGValidCtxt {
    void *userData;
    xmlRelaxNGValidityErrorFunc error;
    xmlRelaxNGValidityWarningFunc warning;
    xmlStructuredErrorFunc serror;
    int nbErrors;

    xmlRelaxNGPtr schema;
    xmlDocPtr doc;
    int flags;
    int depth;
    int idref;
    int errNo;





    xmlRelaxNGValidErrorPtr err;
    int errNr;
    int errMax;
    xmlRelaxNGValidErrorPtr errTab;

    xmlRelaxNGValidStatePtr state;
    xmlRelaxNGStatesPtr states;

    xmlRelaxNGStatesPtr freeState;
    int freeStatesNr;
    int freeStatesMax;
    xmlRelaxNGStatesPtr *freeStates;




    xmlRegExecCtxtPtr elem;
    int elemNr;
    int elemMax;
    xmlRegExecCtxtPtr *elemTab;
    int pstate;
    xmlNodePtr pnode;
    xmlRelaxNGDefinePtr pdef;
    int perr;

};






struct _xmlRelaxNGInclude {
    xmlRelaxNGIncludePtr next;
    xmlChar *href;
    xmlDocPtr doc;
    xmlRelaxNGDefinePtr content;
    xmlRelaxNGPtr schema;
};






struct _xmlRelaxNGDocument {
    xmlRelaxNGDocumentPtr next;
    xmlChar *href;
    xmlDocPtr doc;
    xmlRelaxNGDefinePtr content;
    xmlRelaxNGPtr schema;
    int externalRef;
};
# 436 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRngPErrMemory(xmlRelaxNGParserCtxtPtr ctxt, const char *extra)
{
    xmlStructuredErrorFunc schannel = 
# 439 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 439 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                         ;
    xmlGenericErrorFunc channel = 
# 440 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 440 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     ;
    void *data = 
# 441 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 441 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ;

    if (ctxt != 
# 443 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 443 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) {
        if (ctxt->serror != 
# 444 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 444 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               )
     schannel = ctxt->serror;
 else
     channel = ctxt->error;
        data = ctxt->userData;
        ctxt->nbErrors++;
    }
    if (extra)
        __xmlRaiseError(schannel, channel, data,
                        
# 453 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 453 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           , 
# 453 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 453 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 , XML_FROM_RELAXNGP,
                        XML_ERR_NO_MEMORY, XML_ERR_FATAL, 
# 454 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                         ((void *)0)
# 454 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                             , 0, extra,
                        
# 455 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 455 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           , 
# 455 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 455 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 , 0, 0,
                        "Memory allocation failed : %s\n", extra);
    else
        __xmlRaiseError(schannel, channel, data,
                        
# 459 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 459 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           , 
# 459 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 459 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 , XML_FROM_RELAXNGP,
                        XML_ERR_NO_MEMORY, XML_ERR_FATAL, 
# 460 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                         ((void *)0)
# 460 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                             , 0, 
# 460 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                  ((void *)0)
# 460 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                      ,
                        
# 461 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 461 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           , 
# 461 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 461 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 , 0, 0, "Memory allocation failed\n");
}
# 471 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRngVErrMemory(xmlRelaxNGValidCtxtPtr ctxt, const char *extra)
{
    xmlStructuredErrorFunc schannel = 
# 474 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 474 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                         ;
    xmlGenericErrorFunc channel = 
# 475 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 475 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     ;
    void *data = 
# 476 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 476 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ;

    if (ctxt != 
# 478 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 478 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) {
        if (ctxt->serror != 
# 479 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 479 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               )
     schannel = ctxt->serror;
 else
     channel = ctxt->error;
        data = ctxt->userData;
        ctxt->nbErrors++;
    }
    if (extra)
        __xmlRaiseError(schannel, channel, data,
                        
# 488 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 488 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           , 
# 488 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 488 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 , XML_FROM_RELAXNGV,
                        XML_ERR_NO_MEMORY, XML_ERR_FATAL, 
# 489 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                         ((void *)0)
# 489 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                             , 0, extra,
                        
# 490 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 490 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           , 
# 490 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 490 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 , 0, 0,
                        "Memory allocation failed : %s\n", extra);
    else
        __xmlRaiseError(schannel, channel, data,
                        
# 494 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 494 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           , 
# 494 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 494 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 , XML_FROM_RELAXNGV,
                        XML_ERR_NO_MEMORY, XML_ERR_FATAL, 
# 495 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                         ((void *)0)
# 495 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                             , 0, 
# 495 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                  ((void *)0)
# 495 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                      ,
                        
# 496 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 496 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           , 
# 496 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 496 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 , 0, 0, "Memory allocation failed\n");
}
# 510 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRngPErr(xmlRelaxNGParserCtxtPtr ctxt, xmlNodePtr node, int error,
           const char *msg, const xmlChar * str1, const xmlChar * str2)
{
    xmlStructuredErrorFunc schannel = 
# 514 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 514 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                         ;
    xmlGenericErrorFunc channel = 
# 515 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 515 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     ;
    void *data = 
# 516 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 516 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ;

    if (ctxt != 
# 518 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 518 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) {
        if (ctxt->serror != 
# 519 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 519 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               )
     schannel = ctxt->serror;
 else
     channel = ctxt->error;
        data = ctxt->userData;
        ctxt->nbErrors++;
    }
    __xmlRaiseError(schannel, channel, data,
                    
# 527 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 527 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       , node, XML_FROM_RELAXNGP,
                    error, XML_ERR_ERROR, 
# 528 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                         ((void *)0)
# 528 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                             , 0,
                    (const char *) str1, (const char *) str2, 
# 529 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                             ((void *)0)
# 529 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                 , 0, 0,
                    msg, str1, str2);
}
# 544 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRngVErr(xmlRelaxNGValidCtxtPtr ctxt, xmlNodePtr node, int error,
           const char *msg, const xmlChar * str1, const xmlChar * str2)
{
    xmlStructuredErrorFunc schannel = 
# 548 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 548 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                         ;
    xmlGenericErrorFunc channel = 
# 549 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 549 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     ;
    void *data = 
# 550 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 550 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ;

    if (ctxt != 
# 552 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 552 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) {
        if (ctxt->serror != 
# 553 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 553 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               )
     schannel = ctxt->serror;
 else
     channel = ctxt->error;
        data = ctxt->userData;
        ctxt->nbErrors++;
    }
    __xmlRaiseError(schannel, channel, data,
                    
# 561 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 561 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       , node, XML_FROM_RELAXNGV,
                    error, XML_ERR_ERROR, 
# 562 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                         ((void *)0)
# 562 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                             , 0,
                    (const char *) str1, (const char *) str2, 
# 563 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                             ((void *)0)
# 563 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                 , 0, 0,
                    msg, str1, str2);
}
# 583 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
typedef int (*xmlRelaxNGTypeHave) (void *data, const xmlChar * type);
# 596 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
typedef int (*xmlRelaxNGTypeCheck) (void *data, const xmlChar * type,
                                    const xmlChar * value, void **result,
                                    xmlNodePtr node);
# 613 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
typedef int (*xmlRelaxNGFacetCheck) (void *data, const xmlChar * type,
                                     const xmlChar * facet,
                                     const xmlChar * val,
                                     const xmlChar * strval, void *value);
# 625 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
typedef void (*xmlRelaxNGTypeFree) (void *data, void *result);
# 639 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
typedef int (*xmlRelaxNGTypeCompare) (void *data, const xmlChar * type,
                                      const xmlChar * value1,
                                      xmlNodePtr ctxt1,
                                      void *comp1,
                                      const xmlChar * value2,
                                      xmlNodePtr ctxt2);
typedef struct _xmlRelaxNGTypeLibrary xmlRelaxNGTypeLibrary;
typedef xmlRelaxNGTypeLibrary *xmlRelaxNGTypeLibraryPtr;
struct _xmlRelaxNGTypeLibrary {
    const xmlChar *namespace;
    void *data;
    xmlRelaxNGTypeHave have;
    xmlRelaxNGTypeCheck check;
    xmlRelaxNGTypeCompare comp;
    xmlRelaxNGFacetCheck facet;
    xmlRelaxNGTypeFree freef;
};






static void xmlRelaxNGFreeGrammar(xmlRelaxNGGrammarPtr grammar);
static void xmlRelaxNGFreeDefine(xmlRelaxNGDefinePtr define);
static void xmlRelaxNGNormExtSpace(xmlChar * value);
static void xmlRelaxNGFreeInnerSchema(xmlRelaxNGPtr schema);
static int xmlRelaxNGEqualValidState(xmlRelaxNGValidCtxtPtr ctxt
                                     __attribute__((unused)),
                                     xmlRelaxNGValidStatePtr state1,
                                     xmlRelaxNGValidStatePtr state2);
static void xmlRelaxNGFreeValidState(xmlRelaxNGValidCtxtPtr ctxt,
                                     xmlRelaxNGValidStatePtr state);







static void
xmlRelaxNGFreeDocument(xmlRelaxNGDocumentPtr docu)
{
    if (docu == 
# 682 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 682 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   )
        return;

    if (docu->href != 
# 685 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 685 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         )
        xmlFree(docu->href);
    if (docu->doc != 
# 687 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                    ((void *)0)
# 687 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                        )
        xmlFreeDoc__internal_alias(docu->doc);
    if (docu->schema != 
# 689 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 689 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           )
        xmlRelaxNGFreeInnerSchema(docu->schema);
    xmlFree(docu);
}







static void
xmlRelaxNGFreeDocumentList(xmlRelaxNGDocumentPtr docu)
{
    xmlRelaxNGDocumentPtr next;

    while (docu != 
# 705 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 705 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) {
        next = docu->next;
        xmlRelaxNGFreeDocument(docu);
        docu = next;
    }
}







static void
xmlRelaxNGFreeInclude(xmlRelaxNGIncludePtr incl)
{
    if (incl == 
# 721 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 721 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   )
        return;

    if (incl->href != 
# 724 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 724 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         )
        xmlFree(incl->href);
    if (incl->doc != 
# 726 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                    ((void *)0)
# 726 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                        )
        xmlFreeDoc__internal_alias(incl->doc);
    if (incl->schema != 
# 728 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 728 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           )
        xmlRelaxNGFree__internal_alias(incl->schema);
    xmlFree(incl);
}







static void
xmlRelaxNGFreeIncludeList(xmlRelaxNGIncludePtr incl)
{
    xmlRelaxNGIncludePtr next;

    while (incl != 
# 744 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 744 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) {
        next = incl->next;
        xmlRelaxNGFreeInclude(incl);
        incl = next;
    }
}
# 759 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGPtr
xmlRelaxNGNewRelaxNG(xmlRelaxNGParserCtxtPtr ctxt)
{
    xmlRelaxNGPtr ret;

    ret = (xmlRelaxNGPtr) xmlMalloc(sizeof(xmlRelaxNG));
    if (ret == 
# 765 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 765 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) {
        xmlRngPErrMemory(ctxt, 
# 766 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 766 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  );
        return (
# 767 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 767 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }
    memset(ret, 0, sizeof(xmlRelaxNG));

    return (ret);
}







static void
xmlRelaxNGFreeInnerSchema(xmlRelaxNGPtr schema)
{
    if (schema == 
# 783 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 783 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     )
        return;

    if (schema->doc != 
# 786 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 786 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          )
        xmlFreeDoc__internal_alias(schema->doc);
    if (schema->defTab != 
# 788 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 788 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ) {
        int i;

        for (i = 0; i < schema->defNr; i++)
            xmlRelaxNGFreeDefine(schema->defTab[i]);
        xmlFree(schema->defTab);
    }

    xmlFree(schema);
}







void
xmlRelaxNGFree__internal_alias(xmlRelaxNGPtr schema)
{
    if (schema == 
# 808 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 808 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     )
        return;

    if (schema->topgrammar != 
# 811 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 811 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 )
        xmlRelaxNGFreeGrammar(schema->topgrammar);
    if (schema->doc != 
# 813 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 813 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          )
        xmlFreeDoc__internal_alias(schema->doc);
    if (schema->documents != 
# 815 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 815 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                )
        xmlRelaxNGFreeDocumentList(schema->documents);
    if (schema->includes != 
# 817 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 817 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               )
        xmlRelaxNGFreeIncludeList(schema->includes);
    if (schema->defTab != 
# 819 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 819 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ) {
        int i;

        for (i = 0; i < schema->defNr; i++)
            xmlRelaxNGFreeDefine(schema->defTab[i]);
        xmlFree(schema->defTab);
    }

    xmlFree(schema);
}
# 838 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGGrammarPtr
xmlRelaxNGNewGrammar(xmlRelaxNGParserCtxtPtr ctxt)
{
    xmlRelaxNGGrammarPtr ret;

    ret = (xmlRelaxNGGrammarPtr) xmlMalloc(sizeof(xmlRelaxNGGrammar));
    if (ret == 
# 844 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 844 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) {
        xmlRngPErrMemory(ctxt, 
# 845 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 845 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  );
        return (
# 846 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 846 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }
    memset(ret, 0, sizeof(xmlRelaxNGGrammar));

    return (ret);
}







static void
xmlRelaxNGFreeGrammar(xmlRelaxNGGrammarPtr grammar)
{
    if (grammar == 
# 862 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 862 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      )
        return;

    if (grammar->children != 
# 865 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 865 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ) {
        xmlRelaxNGFreeGrammar(grammar->children);
    }
    if (grammar->next != 
# 868 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 868 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ) {
        xmlRelaxNGFreeGrammar(grammar->next);
    }
    if (grammar->refs != 
# 871 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 871 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ) {
        xmlHashFree__internal_alias(grammar->refs, 
# 872 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 872 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      );
    }
    if (grammar->defs != 
# 874 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 874 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ) {
        xmlHashFree__internal_alias(grammar->defs, 
# 875 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 875 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      );
    }

    xmlFree(grammar);
}
# 890 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGDefinePtr
xmlRelaxNGNewDefine(xmlRelaxNGParserCtxtPtr ctxt, xmlNodePtr node)
{
    xmlRelaxNGDefinePtr ret;

    if (ctxt->defMax == 0) {
        ctxt->defMax = 16;
        ctxt->defNr = 0;
        ctxt->defTab = (xmlRelaxNGDefinePtr *)
            xmlMalloc(ctxt->defMax * sizeof(xmlRelaxNGDefinePtr));
        if (ctxt->defTab == 
# 900 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 900 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) {
            xmlRngPErrMemory(ctxt, "allocating define\n");
            return (
# 902 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 902 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       );
        }
    } else if (ctxt->defMax <= ctxt->defNr) {
        xmlRelaxNGDefinePtr *tmp;

        ctxt->defMax *= 2;
        tmp = (xmlRelaxNGDefinePtr *) xmlRealloc(ctxt->defTab,
                                                 ctxt->defMax *
                                                 sizeof
                                                 (xmlRelaxNGDefinePtr));
        if (tmp == 
# 912 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 912 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) {
            xmlRngPErrMemory(ctxt, "allocating define\n");
            return (
# 914 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 914 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       );
        }
        ctxt->defTab = tmp;
    }
    ret = (xmlRelaxNGDefinePtr) xmlMalloc(sizeof(xmlRelaxNGDefine));
    if (ret == 
# 919 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 919 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) {
        xmlRngPErrMemory(ctxt, "allocating define\n");
        return (
# 921 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 921 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }
    memset(ret, 0, sizeof(xmlRelaxNGDefine));
    ctxt->defTab[ctxt->defNr++] = ret;
    ret->node = node;
    ret->depth = -1;
    return (ret);
}







static void
xmlRelaxNGFreePartition(xmlRelaxNGPartitionPtr partitions)
{
    xmlRelaxNGInterleaveGroupPtr group;
    int j;

    if (partitions != 
# 942 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 942 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ) {
        if (partitions->groups != 
# 943 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 943 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     ) {
            for (j = 0; j < partitions->nbgroups; j++) {
                group = partitions->groups[j];
                if (group != 
# 946 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 946 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ) {
                    if (group->defs != 
# 947 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 947 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                          )
                        xmlFree(group->defs);
                    if (group->attrs != 
# 949 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                       ((void *)0)
# 949 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                           )
                        xmlFree(group->attrs);
                    xmlFree(group);
                }
            }
            xmlFree(partitions->groups);
        }
        if (partitions->triage != 
# 956 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 956 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     ) {
            xmlHashFree__internal_alias(partitions->triage, 
# 957 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                           ((void *)0)
# 957 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                               );
        }
        xmlFree(partitions);
    }
}







static void
xmlRelaxNGFreeDefine(xmlRelaxNGDefinePtr define)
{
    if (define == 
# 972 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 972 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     )
        return;

    if ((define->type == XML_RELAXNG_VALUE) && (define->attrs != 
# 975 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                ((void *)0)
# 975 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                    )) {
        xmlRelaxNGTypeLibraryPtr lib;

        lib = (xmlRelaxNGTypeLibraryPtr) define->data;
        if ((lib != 
# 979 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 979 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) && (lib->freef != 
# 979 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                           ((void *)0)
# 979 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                               ))
            lib->freef(lib->data, (void *) define->attrs);
    }
    if ((define->data != 
# 982 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 982 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ) && (define->type == XML_RELAXNG_INTERLEAVE))
        xmlRelaxNGFreePartition((xmlRelaxNGPartitionPtr) define->data);
    if ((define->data != 
# 984 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 984 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ) && (define->type == XML_RELAXNG_CHOICE))
        xmlHashFree__internal_alias((xmlHashTablePtr) define->data, 
# 985 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                   ((void *)0)
# 985 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                       );
    if (define->name != 
# 986 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 986 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           )
        xmlFree(define->name);
    if (define->ns != 
# 988 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 988 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         )
        xmlFree(define->ns);
    if (define->value != 
# 990 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 990 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            )
        xmlFree(define->value);
    if (define->contModel != 
# 992 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 992 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                )
        xmlRegFreeRegexp__internal_alias(define->contModel);
    xmlFree(define);
}
# 1006 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGStatesPtr
xmlRelaxNGNewStates(xmlRelaxNGValidCtxtPtr ctxt, int size)
{
    xmlRelaxNGStatesPtr ret;

    if ((ctxt != 
# 1011 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 1011 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) &&
        (ctxt->freeStates != 
# 1012 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 1012 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ) && (ctxt->freeStatesNr > 0)) {
        ctxt->freeStatesNr--;
        ret = ctxt->freeStates[ctxt->freeStatesNr];
        ret->nbState = 0;
        return (ret);
    }
    if (size < 16)
        size = 16;

    ret = (xmlRelaxNGStatesPtr) xmlMalloc(sizeof(xmlRelaxNGStates) +
                                          (size -
                                           1) *
                                          sizeof(xmlRelaxNGValidStatePtr));
    if (ret == 
# 1025 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 1025 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) {
        xmlRngVErrMemory(ctxt, "allocating states\n");
        return (
# 1027 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 1027 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }
    ret->nbState = 0;
    ret->maxState = size;
    ret->tabState = (xmlRelaxNGValidStatePtr *) xmlMalloc((size) *
                                                          sizeof
                                                          (xmlRelaxNGValidStatePtr));
    if (ret->tabState == 
# 1034 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 1034 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ) {
        xmlRngVErrMemory(ctxt, "allocating states\n");
        xmlFree(ret);
        return (
# 1037 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 1037 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }
    return (ret);
}
# 1053 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGAddStatesUniq(xmlRelaxNGValidCtxtPtr ctxt,
                        xmlRelaxNGStatesPtr states,
                        xmlRelaxNGValidStatePtr state)
{
    if (state == 
# 1058 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 1058 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) {
        return (-1);
    }
    if (states->nbState >= states->maxState) {
        xmlRelaxNGValidStatePtr *tmp;
        int size;

        size = states->maxState * 2;
        tmp = (xmlRelaxNGValidStatePtr *) xmlRealloc(states->tabState,
                                                     (size) *
                                                     sizeof
                                                     (xmlRelaxNGValidStatePtr));
        if (tmp == 
# 1070 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 1070 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) {
            xmlRngVErrMemory(ctxt, "adding states\n");
            return (-1);
        }
        states->tabState = tmp;
        states->maxState = size;
    }
    states->tabState[states->nbState++] = state;
    return (1);
}
# 1091 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGAddStates(xmlRelaxNGValidCtxtPtr ctxt,
                    xmlRelaxNGStatesPtr states,
                    xmlRelaxNGValidStatePtr state)
{
    int i;

    if (state == 
# 1098 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 1098 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) {
        return (-1);
    }
    if (states->nbState >= states->maxState) {
        xmlRelaxNGValidStatePtr *tmp;
        int size;

        size = states->maxState * 2;
        tmp = (xmlRelaxNGValidStatePtr *) xmlRealloc(states->tabState,
                                                     (size) *
                                                     sizeof
                                                     (xmlRelaxNGValidStatePtr));
        if (tmp == 
# 1110 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 1110 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) {
            xmlRngVErrMemory(ctxt, "adding states\n");
            return (-1);
        }
        states->tabState = tmp;
        states->maxState = size;
    }
    for (i = 0; i < states->nbState; i++) {
        if (xmlRelaxNGEqualValidState(ctxt, state, states->tabState[i])) {
            xmlRelaxNGFreeValidState(ctxt, state);
            return (0);
        }
    }
    states->tabState[states->nbState++] = state;
    return (1);
}
# 1134 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRelaxNGFreeStates(xmlRelaxNGValidCtxtPtr ctxt,
                     xmlRelaxNGStatesPtr states)
{
    if (states == 
# 1138 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 1138 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     )
        return;
    if ((ctxt != 
# 1140 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 1140 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) && (ctxt->freeStates == 
# 1140 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                              ((void *)0)
# 1140 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                  )) {
        ctxt->freeStatesMax = 40;
        ctxt->freeStatesNr = 0;
        ctxt->freeStates = (xmlRelaxNGStatesPtr *)
            xmlMalloc(ctxt->freeStatesMax * sizeof(xmlRelaxNGStatesPtr));
        if (ctxt->freeStates == 
# 1145 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 1145 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ) {
            xmlRngVErrMemory(ctxt, "storing states\n");
        }
    } else if ((ctxt != 
# 1148 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 1148 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           )
               && (ctxt->freeStatesNr >= ctxt->freeStatesMax)) {
        xmlRelaxNGStatesPtr *tmp;

        tmp = (xmlRelaxNGStatesPtr *) xmlRealloc(ctxt->freeStates,
                                                 2 * ctxt->freeStatesMax *
                                                 sizeof
                                                 (xmlRelaxNGStatesPtr));
        if (tmp == 
# 1156 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 1156 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) {
            xmlRngVErrMemory(ctxt, "storing states\n");
            xmlFree(states->tabState);
            xmlFree(states);
            return;
        }
        ctxt->freeStates = tmp;
        ctxt->freeStatesMax *= 2;
    }
    if ((ctxt == 
# 1165 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 1165 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) || (ctxt->freeStates == 
# 1165 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                              ((void *)0)
# 1165 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                  )) {
        xmlFree(states->tabState);
        xmlFree(states);
    } else {
        ctxt->freeStates[ctxt->freeStatesNr++] = states;
    }
}
# 1182 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGValidStatePtr
xmlRelaxNGNewValidState(xmlRelaxNGValidCtxtPtr ctxt, xmlNodePtr node)
{
    xmlRelaxNGValidStatePtr ret;
    xmlAttrPtr attr;
    xmlAttrPtr attrs[20];
    int nbAttrs = 0;
    xmlNodePtr root = 
# 1189 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 1189 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ;

    if (node == 
# 1191 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 1191 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) {
        root = xmlDocGetRootElement__internal_alias(ctxt->doc);
        if (root == 
# 1193 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 1193 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       )
            return (
# 1194 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 1194 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       );
    } else {
        attr = node->properties;
        while (attr != 
# 1197 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 1197 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) {
            if (nbAttrs < 20)
                attrs[nbAttrs++] = attr;
            else
                nbAttrs++;
            attr = attr->next;
        }
    }
    if ((ctxt->freeState != 
# 1205 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 1205 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) && (ctxt->freeState->nbState > 0)) {
        ctxt->freeState->nbState--;
        ret = ctxt->freeState->tabState[ctxt->freeState->nbState];
    } else {
        ret =
            (xmlRelaxNGValidStatePtr)
            xmlMalloc(sizeof(xmlRelaxNGValidState));
        if (ret == 
# 1212 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 1212 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) {
            xmlRngVErrMemory(ctxt, "allocating states\n");
            return (
# 1214 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 1214 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       );
        }
        memset(ret, 0, sizeof(xmlRelaxNGValidState));
    }
    ret->value = 
# 1218 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 1218 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ;
    ret->endvalue = 
# 1219 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 1219 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ;
    if (node == 
# 1220 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 1220 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) {
        ret->node = (xmlNodePtr) ctxt->doc;
        ret->seq = root;
    } else {
        ret->node = node;
        ret->seq = node->children;
    }
    ret->nbAttrs = 0;
    if (nbAttrs > 0) {
        if (ret->attrs == 
# 1229 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 1229 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ) {
            if (nbAttrs < 4)
                ret->maxAttrs = 4;
            else
                ret->maxAttrs = nbAttrs;
            ret->attrs = (xmlAttrPtr *) xmlMalloc(ret->maxAttrs *
                                                  sizeof(xmlAttrPtr));
            if (ret->attrs == 
# 1236 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 1236 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
                xmlRngVErrMemory(ctxt, "allocating states\n");
                return (ret);
            }
        } else if (ret->maxAttrs < nbAttrs) {
            xmlAttrPtr *tmp;

            tmp = (xmlAttrPtr *) xmlRealloc(ret->attrs, nbAttrs *
                                            sizeof(xmlAttrPtr));
            if (tmp == 
# 1245 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 1245 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) {
                xmlRngVErrMemory(ctxt, "allocating states\n");
                return (ret);
            }
            ret->attrs = tmp;
            ret->maxAttrs = nbAttrs;
        }
        ret->nbAttrs = nbAttrs;
        if (nbAttrs < 20) {
            memcpy(ret->attrs, attrs, sizeof(xmlAttrPtr) * nbAttrs);
        } else {
            attr = node->properties;
            nbAttrs = 0;
            while (attr != 
# 1258 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 1258 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) {
                ret->attrs[nbAttrs++] = attr;
                attr = attr->next;
            }
        }
    }
    ret->nbAttrLeft = ret->nbAttrs;
    return (ret);
}
# 1277 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGValidStatePtr
xmlRelaxNGCopyValidState(xmlRelaxNGValidCtxtPtr ctxt,
                         xmlRelaxNGValidStatePtr state)
{
    xmlRelaxNGValidStatePtr ret;
    unsigned int maxAttrs;
    xmlAttrPtr *attrs;

    if (state == 
# 1285 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 1285 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    )
        return (
# 1286 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 1286 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    if ((ctxt->freeState != 
# 1287 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 1287 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) && (ctxt->freeState->nbState > 0)) {
        ctxt->freeState->nbState--;
        ret = ctxt->freeState->tabState[ctxt->freeState->nbState];
    } else {
        ret =
            (xmlRelaxNGValidStatePtr)
            xmlMalloc(sizeof(xmlRelaxNGValidState));
        if (ret == 
# 1294 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 1294 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) {
            xmlRngVErrMemory(ctxt, "allocating states\n");
            return (
# 1296 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 1296 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       );
        }
        memset(ret, 0, sizeof(xmlRelaxNGValidState));
    }
    attrs = ret->attrs;
    maxAttrs = ret->maxAttrs;
    memcpy(ret, state, sizeof(xmlRelaxNGValidState));
    ret->attrs = attrs;
    ret->maxAttrs = maxAttrs;
    if (state->nbAttrs > 0) {
        if (ret->attrs == 
# 1306 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 1306 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ) {
            ret->maxAttrs = state->maxAttrs;
            ret->attrs = (xmlAttrPtr *) xmlMalloc(ret->maxAttrs *
                                                  sizeof(xmlAttrPtr));
            if (ret->attrs == 
# 1310 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 1310 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
                xmlRngVErrMemory(ctxt, "allocating states\n");
                ret->nbAttrs = 0;
                return (ret);
            }
        } else if (ret->maxAttrs < state->nbAttrs) {
            xmlAttrPtr *tmp;

            tmp = (xmlAttrPtr *) xmlRealloc(ret->attrs, state->maxAttrs *
                                            sizeof(xmlAttrPtr));
            if (tmp == 
# 1320 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 1320 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) {
                xmlRngVErrMemory(ctxt, "allocating states\n");
                ret->nbAttrs = 0;
                return (ret);
            }
            ret->maxAttrs = state->maxAttrs;
            ret->attrs = tmp;
        }
        memcpy(ret->attrs, state->attrs,
               state->nbAttrs * sizeof(xmlAttrPtr));
    }
    return (ret);
}
# 1344 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGEqualValidState(xmlRelaxNGValidCtxtPtr ctxt __attribute__((unused)),
                          xmlRelaxNGValidStatePtr state1,
                          xmlRelaxNGValidStatePtr state2)
{
    int i;

    if ((state1 == 
# 1351 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 1351 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) || (state2 == 
# 1351 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 1351 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                          ))
        return (0);
    if (state1 == state2)
        return (1);
    if (state1->node != state2->node)
        return (0);
    if (state1->seq != state2->seq)
        return (0);
    if (state1->nbAttrLeft != state2->nbAttrLeft)
        return (0);
    if (state1->nbAttrs != state2->nbAttrs)
        return (0);
    if (state1->endvalue != state2->endvalue)
        return (0);
    if ((state1->value != state2->value) &&
        (!xmlStrEqual__internal_alias(state1->value, state2->value)))
        return (0);
    for (i = 0; i < state1->nbAttrs; i++) {
        if (state1->attrs[i] != state2->attrs[i])
            return (0);
    }
    return (1);
}







static void
xmlRelaxNGFreeValidState(xmlRelaxNGValidCtxtPtr ctxt,
                         xmlRelaxNGValidStatePtr state)
{
    if (state == 
# 1385 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 1385 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    )
        return;

    if ((ctxt != 
# 1388 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 1388 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) && (ctxt->freeState == 
# 1388 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                             ((void *)0)
# 1388 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                 )) {
        ctxt->freeState = xmlRelaxNGNewStates(ctxt, 40);
    }
    if ((ctxt == 
# 1391 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 1391 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) || (ctxt->freeState == 
# 1391 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                             ((void *)0)
# 1391 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                 )) {
        if (state->attrs != 
# 1392 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 1392 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               )
            xmlFree(state->attrs);
        xmlFree(state);
    } else {
        xmlRelaxNGAddStatesUniq(ctxt, ctxt->freeState, state);
    }
}
# 1416 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
int
xmlRelaxParserSetFlag__internal_alias(xmlRelaxNGParserCtxtPtr ctxt, int flags)
{
    if (ctxt == 
# 1419 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 1419 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) return(-1);
    if (flags & XML_RELAXNGP_FREE_DOC) {
        ctxt->crng |= XML_RELAXNGP_FREE_DOC;
 flags -= XML_RELAXNGP_FREE_DOC;
    }
    if (flags & XML_RELAXNGP_CRNG) {
        ctxt->crng |= XML_RELAXNGP_CRNG;
 flags -= XML_RELAXNGP_CRNG;
    }
    if (flags != 0) return(-1);
    return(0);
}






static xmlDocPtr xmlRelaxNGCleanupDoc(xmlRelaxNGParserCtxtPtr ctxt,
                                      xmlDocPtr doc);
# 1449 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGIncludePush(xmlRelaxNGParserCtxtPtr ctxt,
                      xmlRelaxNGIncludePtr value)
{
    if (ctxt->incTab == 
# 1453 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 1453 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) {
        ctxt->incMax = 4;
        ctxt->incNr = 0;
        ctxt->incTab =
            (xmlRelaxNGIncludePtr *) xmlMalloc(ctxt->incMax *
                                               sizeof(ctxt->incTab[0]));
        if (ctxt->incTab == 
# 1459 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 1459 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) {
            xmlRngPErrMemory(ctxt, "allocating include\n");
            return (0);
        }
    }
    if (ctxt->incNr >= ctxt->incMax) {
        ctxt->incMax *= 2;
        ctxt->incTab =
            (xmlRelaxNGIncludePtr *) xmlRealloc(ctxt->incTab,
                                                ctxt->incMax *
                                                sizeof(ctxt->incTab[0]));
        if (ctxt->incTab == 
# 1470 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 1470 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) {
            xmlRngPErrMemory(ctxt, "allocating include\n");
            return (0);
        }
    }
    ctxt->incTab[ctxt->incNr] = value;
    ctxt->inc = value;
    return (ctxt->incNr++);
}
# 1488 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGIncludePtr
xmlRelaxNGIncludePop(xmlRelaxNGParserCtxtPtr ctxt)
{
    xmlRelaxNGIncludePtr ret;

    if (ctxt->incNr <= 0)
        return (
# 1494 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 1494 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    ctxt->incNr--;
    if (ctxt->incNr > 0)
        ctxt->inc = ctxt->incTab[ctxt->incNr - 1];
    else
        ctxt->inc = 
# 1499 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 1499 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ;
    ret = ctxt->incTab[ctxt->incNr];
    ctxt->incTab[ctxt->incNr] = 
# 1501 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 1501 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ;
    return (ret);
}
# 1516 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGRemoveRedefine(xmlRelaxNGParserCtxtPtr ctxt,
                         const xmlChar * URL __attribute__((unused)),
                         xmlNodePtr target, const xmlChar * name)
{
    int found = 0;
    xmlNodePtr tmp, tmp2;
    xmlChar *name2;
# 1534 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
    tmp = target;
    while (tmp != 
# 1535 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 1535 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        tmp2 = tmp->next;
        if ((name == 
# 1537 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                    ((void *)0)
# 1537 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                        ) && (((tmp != 
# 1537 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 1537 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) && (tmp->ns != 
# 1537 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 1537 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) && (tmp->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(tmp->name, (const xmlChar *) "start")) && (xmlStrEqual__internal_alias(tmp->ns->href, xmlRelaxNGNs))))) {
            found = 1;
            xmlUnlinkNode__internal_alias(tmp);
            xmlFreeNode__internal_alias(tmp);
        } else if ((name != 
# 1541 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 1541 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) && (((tmp != 
# 1541 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 1541 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     ) && (tmp->ns != 
# 1541 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 1541 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     ) && (tmp->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(tmp->name, (const xmlChar *) "define")) && (xmlStrEqual__internal_alias(tmp->ns->href, xmlRelaxNGNs))))) {
            name2 = xmlGetProp__internal_alias(tmp, (xmlChar *) "name");
            xmlRelaxNGNormExtSpace(name2);
            if (name2 != 
# 1544 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 1544 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ) {
                if (xmlStrEqual__internal_alias(name, name2)) {
                    found = 1;
                    xmlUnlinkNode__internal_alias(tmp);
                    xmlFreeNode__internal_alias(tmp);
                }
                xmlFree(name2);
            }
        } else if (((tmp != 
# 1552 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 1552 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) && (tmp->ns != 
# 1552 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 1552 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) && (tmp->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(tmp->name, (const xmlChar *) "include")) && (xmlStrEqual__internal_alias(tmp->ns->href, xmlRelaxNGNs)))) {
            xmlChar *href = 
# 1553 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 1553 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ;
            xmlRelaxNGDocumentPtr inc = tmp->psvi;

            if ((inc != 
# 1556 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 1556 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) && (inc->doc != 
# 1556 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                             ((void *)0)
# 1556 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                 ) &&
                (inc->doc->children != 
# 1557 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 1557 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                          )) {

                if (xmlStrEqual__internal_alias
                    (inc->doc->children->name, (xmlChar *) "grammar")) {



                    if (xmlRelaxNGRemoveRedefine(ctxt, href,
                                                 xmlDocGetRootElement__internal_alias(inc->doc)->children,
                                                 name) == 1) {
                        found = 1;
                    }




                }
            }
        }
        tmp = tmp2;
    }
    return (found);
}
# 1594 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGIncludePtr
xmlRelaxNGLoadInclude(xmlRelaxNGParserCtxtPtr ctxt, const xmlChar * URL,
                      xmlNodePtr node, const xmlChar * ns)
{
    xmlRelaxNGIncludePtr ret = 
# 1598 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 1598 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ;
    xmlDocPtr doc;
    int i;
    xmlNodePtr root, cur;
# 1611 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
    for (i = 0; i < ctxt->incNr; i++) {
        if (xmlStrEqual__internal_alias(ctxt->incTab[i]->href, URL)) {
            xmlRngPErr(ctxt, 
# 1613 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 1613 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                , XML_RNGP_INCLUDE_RECURSE,
                       "Detected an Include recursion for %s\n", URL,
                       
# 1615 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 1615 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          );
            return (
# 1616 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 1616 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       );
        }
    }




    doc = xmlReadFile__internal_alias((const char *) URL,
# 1623 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                        ((void *)0)
# 1623 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                            ,0);
    if (doc == 
# 1624 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 1624 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) {
        xmlRngPErr(ctxt, node, XML_RNGP_PARSE_ERROR,
                   "xmlRelaxNG: could not load %s\n", URL, 
# 1626 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                          ((void *)0)
# 1626 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                              );
        return (
# 1627 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 1627 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }







    ret = (xmlRelaxNGIncludePtr) xmlMalloc(sizeof(xmlRelaxNGInclude));
    if (ret == 
# 1637 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 1637 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) {
        xmlRngPErrMemory(ctxt, "allocating include\n");
        xmlFreeDoc__internal_alias(doc);
        return (
# 1640 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 1640 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }
    memset(ret, 0, sizeof(xmlRelaxNGInclude));
    ret->doc = doc;
    ret->href = xmlStrdup__internal_alias(URL);
    ret->next = ctxt->includes;
    ctxt->includes = ret;




    if (ns != 
# 1651 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
             ((void *)0)
# 1651 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                 ) {
        root = xmlDocGetRootElement__internal_alias(doc);
        if (root != 
# 1653 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 1653 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) {
            if (xmlHasProp__internal_alias(root, (xmlChar *) "ns") == 
# 1654 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                  ((void *)0)
# 1654 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                      ) {
                xmlSetProp__internal_alias(root, (xmlChar *) "ns", ns);
            }
        }
    }




    xmlRelaxNGIncludePush(ctxt, ret);
# 1673 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
    doc = xmlRelaxNGCleanupDoc(ctxt, doc);
    if (doc == 
# 1674 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 1674 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) {
        ctxt->inc = 
# 1675 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 1675 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ;
        return (
# 1676 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 1676 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }




    xmlRelaxNGIncludePop(ctxt);







    root = xmlDocGetRootElement__internal_alias(doc);
    if (root == 
# 1691 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 1691 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) {
        xmlRngPErr(ctxt, node, XML_RNGP_EMPTY,
                   "xmlRelaxNG: included document is empty %s\n", URL,
                   
# 1694 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 1694 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      );
        return (
# 1695 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 1695 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }
    if (!((root != 
# 1697 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
        ((void *)0)
# 1697 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
        ) && (root->ns != 
# 1697 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
        ((void *)0)
# 1697 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
        ) && (root->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(root->name, (const xmlChar *) "grammar")) && (xmlStrEqual__internal_alias(root->ns->href, xmlRelaxNGNs)))) {
        xmlRngPErr(ctxt, node, XML_RNGP_GRAMMAR_MISSING,
                   "xmlRelaxNG: included document %s root is not a grammar\n",
                   URL, 
# 1700 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 1700 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           );
        return (
# 1701 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 1701 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }




    cur = node->children;
    while (cur != 
# 1708 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 1708 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        if (((cur != 
# 1709 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
           ((void *)0)
# 1709 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
           ) && (cur->ns != 
# 1709 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
           ((void *)0)
# 1709 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
           ) && (cur->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(cur->name, (const xmlChar *) "start")) && (xmlStrEqual__internal_alias(cur->ns->href, xmlRelaxNGNs)))) {
            int found = 0;

            found =
                xmlRelaxNGRemoveRedefine(ctxt, URL, root->children, 
# 1713 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                   ((void *)0)
# 1713 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                       );
            if (!found) {
                xmlRngPErr(ctxt, node, XML_RNGP_START_MISSING,
                           "xmlRelaxNG: include %s has a start but not the included grammar\n",
                           URL, 
# 1717 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 1717 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   );
            }
        } else if (((cur != 
# 1719 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 1719 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) && (cur->ns != 
# 1719 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 1719 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) && (cur->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(cur->name, (const xmlChar *) "define")) && (xmlStrEqual__internal_alias(cur->ns->href, xmlRelaxNGNs)))) {
            xmlChar *name;

            name = xmlGetProp__internal_alias(cur, (xmlChar *) "name");
            if (name == 
# 1723 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 1723 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) {
                xmlRngPErr(ctxt, node, XML_RNGP_NAME_MISSING,
                           "xmlRelaxNG: include %s has define without name\n",
                           URL, 
# 1726 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 1726 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   );
            } else {
                int found;

                xmlRelaxNGNormExtSpace(name);
                found = xmlRelaxNGRemoveRedefine(ctxt, URL,
                                                 root->children, name);
                if (!found) {
                    xmlRngPErr(ctxt, node, XML_RNGP_DEFINE_MISSING,
                               "xmlRelaxNG: include %s has a define %s but not the included grammar\n",
                               URL, name);
                }
                xmlFree(name);
            }
        }
        cur = cur->next;
    }


    return (ret);
}
# 1760 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGValidErrorPush(xmlRelaxNGValidCtxtPtr ctxt,
                         xmlRelaxNGValidErr err, const xmlChar * arg1,
                         const xmlChar * arg2, int dup)
{
    xmlRelaxNGValidErrorPtr cur;





    if (ctxt->errTab == 
# 1771 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 1771 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) {
        ctxt->errMax = 8;
        ctxt->errNr = 0;
        ctxt->errTab =
            (xmlRelaxNGValidErrorPtr) xmlMalloc(ctxt->errMax *
                                                sizeof
                                                (xmlRelaxNGValidError));
        if (ctxt->errTab == 
# 1778 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 1778 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) {
            xmlRngVErrMemory(ctxt, "pushing error\n");
            return (0);
        }
        ctxt->err = 
# 1782 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 1782 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ;
    }
    if (ctxt->errNr >= ctxt->errMax) {
        ctxt->errMax *= 2;
        ctxt->errTab =
            (xmlRelaxNGValidErrorPtr) xmlRealloc(ctxt->errTab,
                                                 ctxt->errMax *
                                                 sizeof
                                                 (xmlRelaxNGValidError));
        if (ctxt->errTab == 
# 1791 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 1791 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) {
            xmlRngVErrMemory(ctxt, "pushing error\n");
            return (0);
        }
        ctxt->err = &ctxt->errTab[ctxt->errNr - 1];
    }
    if ((ctxt->err != 
# 1797 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 1797 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ) && (ctxt->state != 
# 1797 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                              ((void *)0)
# 1797 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                  ) &&
        (ctxt->err->node == ctxt->state->node) && (ctxt->err->err == err))
        return (ctxt->errNr);
    cur = &ctxt->errTab[ctxt->errNr];
    cur->err = err;
    if (dup) {
        cur->arg1 = xmlStrdup__internal_alias(arg1);
        cur->arg2 = xmlStrdup__internal_alias(arg2);
        cur->flags = 1;
    } else {
        cur->arg1 = arg1;
        cur->arg2 = arg2;
        cur->flags = 0;
    }
    if (ctxt->state != 
# 1811 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 1811 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) {
        cur->node = ctxt->state->node;
        cur->seq = ctxt->state->seq;
    } else {
        cur->node = 
# 1815 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 1815 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ;
        cur->seq = 
# 1816 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 1816 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ;
    }
    ctxt->err = cur;
    return (ctxt->errNr++);
}







static void
xmlRelaxNGValidErrorPop(xmlRelaxNGValidCtxtPtr ctxt)
{
    xmlRelaxNGValidErrorPtr cur;

    if (ctxt->errNr <= 0) {
        ctxt->err = 
# 1834 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 1834 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ;
        return;
    }
    ctxt->errNr--;
    if (ctxt->errNr > 0)
        ctxt->err = &ctxt->errTab[ctxt->errNr - 1];
    else
        ctxt->err = 
# 1841 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 1841 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ;
    cur = &ctxt->errTab[ctxt->errNr];
    if (cur->flags & 1) {
        if (cur->arg1 != 
# 1844 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 1844 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            )
            xmlFree((xmlChar *) cur->arg1);
        cur->arg1 = 
# 1846 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 1846 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ;
        if (cur->arg2 != 
# 1847 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 1847 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            )
            xmlFree((xmlChar *) cur->arg2);
        cur->arg2 = 
# 1849 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 1849 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ;
        cur->flags = 0;
    }
}
# 1863 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGDocumentPush(xmlRelaxNGParserCtxtPtr ctxt,
                       xmlRelaxNGDocumentPtr value)
{
    if (ctxt->docTab == 
# 1867 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 1867 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) {
        ctxt->docMax = 4;
        ctxt->docNr = 0;
        ctxt->docTab =
            (xmlRelaxNGDocumentPtr *) xmlMalloc(ctxt->docMax *
                                                sizeof(ctxt->docTab[0]));
        if (ctxt->docTab == 
# 1873 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 1873 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) {
            xmlRngPErrMemory(ctxt, "adding document\n");
            return (0);
        }
    }
    if (ctxt->docNr >= ctxt->docMax) {
        ctxt->docMax *= 2;
        ctxt->docTab =
            (xmlRelaxNGDocumentPtr *) xmlRealloc(ctxt->docTab,
                                                 ctxt->docMax *
                                                 sizeof(ctxt->docTab[0]));
        if (ctxt->docTab == 
# 1884 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 1884 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) {
            xmlRngPErrMemory(ctxt, "adding document\n");
            return (0);
        }
    }
    ctxt->docTab[ctxt->docNr] = value;
    ctxt->doc = value;
    return (ctxt->docNr++);
}
# 1902 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGDocumentPtr
xmlRelaxNGDocumentPop(xmlRelaxNGParserCtxtPtr ctxt)
{
    xmlRelaxNGDocumentPtr ret;

    if (ctxt->docNr <= 0)
        return (
# 1908 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 1908 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    ctxt->docNr--;
    if (ctxt->docNr > 0)
        ctxt->doc = ctxt->docTab[ctxt->docNr - 1];
    else
        ctxt->doc = 
# 1913 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 1913 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ;
    ret = ctxt->docTab[ctxt->docNr];
    ctxt->docTab[ctxt->docNr] = 
# 1915 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 1915 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ;
    return (ret);
}
# 1931 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGDocumentPtr
xmlRelaxNGLoadExternalRef(xmlRelaxNGParserCtxtPtr ctxt,
                          const xmlChar * URL, const xmlChar * ns)
{
    xmlRelaxNGDocumentPtr ret = 
# 1935 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 1935 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ;
    xmlDocPtr doc;
    xmlNodePtr root;
    int i;




    for (i = 0; i < ctxt->docNr; i++) {
        if (xmlStrEqual__internal_alias(ctxt->docTab[i]->href, URL)) {
            xmlRngPErr(ctxt, 
# 1945 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 1945 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                , XML_RNGP_EXTERNALREF_RECURSE,
                       "Detected an externalRef recursion for %s\n", URL,
                       
# 1947 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 1947 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          );
            return (
# 1948 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 1948 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       );
        }
    }




    doc = xmlReadFile__internal_alias((const char *) URL,
# 1955 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                        ((void *)0)
# 1955 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                            ,0);
    if (doc == 
# 1956 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 1956 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) {
        xmlRngPErr(ctxt, 
# 1957 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 1957 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            , XML_RNGP_PARSE_ERROR,
                   "xmlRelaxNG: could not load %s\n", URL, 
# 1958 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                          ((void *)0)
# 1958 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                              );
        return (
# 1959 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 1959 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }




    ret = (xmlRelaxNGDocumentPtr) xmlMalloc(sizeof(xmlRelaxNGDocument));
    if (ret == 
# 1966 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 1966 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) {
        xmlRngPErr(ctxt, (xmlNodePtr) doc, XML_ERR_NO_MEMORY,
                   "xmlRelaxNG: allocate memory for doc %s\n", URL, 
# 1968 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                   ((void *)0)
# 1968 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                       );
        xmlFreeDoc__internal_alias(doc);
        return (
# 1970 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 1970 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }
    memset(ret, 0, sizeof(xmlRelaxNGDocument));
    ret->doc = doc;
    ret->href = xmlStrdup__internal_alias(URL);
    ret->next = ctxt->documents;
    ret->externalRef = 1;
    ctxt->documents = ret;




    if (ns != 
# 1982 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
             ((void *)0)
# 1982 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                 ) {
        root = xmlDocGetRootElement__internal_alias(doc);
        if (root != 
# 1984 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 1984 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) {
            if (xmlHasProp__internal_alias(root, (xmlChar *) "ns") == 
# 1985 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                  ((void *)0)
# 1985 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                      ) {
                xmlSetProp__internal_alias(root, (xmlChar *) "ns", ns);
            }
        }
    }




    xmlRelaxNGDocumentPush(ctxt, ret);




    doc = xmlRelaxNGCleanupDoc(ctxt, doc);
    if (doc == 
# 2000 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 2000 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) {
        ctxt->doc = 
# 2001 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 2001 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ;
        return (
# 2002 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 2002 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }

    xmlRelaxNGDocumentPop(ctxt);

    return (ret);
}
# 2022 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static const char *
xmlRelaxNGDefName(xmlRelaxNGDefinePtr def)
{
    if (def == 
# 2025 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 2025 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )
        return ("none");
    switch (def->type) {
        case XML_RELAXNG_EMPTY:
            return ("empty");
        case XML_RELAXNG_NOT_ALLOWED:
            return ("notAllowed");
        case XML_RELAXNG_EXCEPT:
            return ("except");
        case XML_RELAXNG_TEXT:
            return ("text");
        case XML_RELAXNG_ELEMENT:
            return ("element");
        case XML_RELAXNG_DATATYPE:
            return ("datatype");
        case XML_RELAXNG_VALUE:
            return ("value");
        case XML_RELAXNG_LIST:
            return ("list");
        case XML_RELAXNG_ATTRIBUTE:
            return ("attribute");
        case XML_RELAXNG_DEF:
            return ("def");
        case XML_RELAXNG_REF:
            return ("ref");
        case XML_RELAXNG_EXTERNALREF:
            return ("externalRef");
        case XML_RELAXNG_PARENTREF:
            return ("parentRef");
        case XML_RELAXNG_OPTIONAL:
            return ("optional");
        case XML_RELAXNG_ZEROORMORE:
            return ("zeroOrMore");
        case XML_RELAXNG_ONEORMORE:
            return ("oneOrMore");
        case XML_RELAXNG_CHOICE:
            return ("choice");
        case XML_RELAXNG_GROUP:
            return ("group");
        case XML_RELAXNG_INTERLEAVE:
            return ("interleave");
        case XML_RELAXNG_START:
            return ("start");
        case XML_RELAXNG_NOOP:
            return ("noop");
        case XML_RELAXNG_PARAM:
            return ("param");
    }
    return ("unknown");
}
# 2086 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlChar *
xmlRelaxNGGetErrorString(xmlRelaxNGValidErr err, const xmlChar * arg1,
                         const xmlChar * arg2)
{
    char msg[1000];

    if (arg1 == 
# 2092 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 2092 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   )
        arg1 = (xmlChar *) "";
    if (arg2 == 
# 2094 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 2094 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   )
        arg2 = (xmlChar *) "";

    msg[0] = 0;
    switch (err) {
        case XML_RELAXNG_OK:
            return (
# 2100 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 2100 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       );
        case XML_RELAXNG_ERR_MEMORY:
            return (xmlCharStrdup__internal_alias("out of memory\n"));
        case XML_RELAXNG_ERR_TYPE:
            snprintf(msg, 1000, "failed to validate type %s\n", arg1);
            break;
        case XML_RELAXNG_ERR_TYPEVAL:
            snprintf(msg, 1000, "Type %s doesn't allow value '%s'\n", arg1,
                     arg2);
            break;
        case XML_RELAXNG_ERR_DUPID:
            snprintf(msg, 1000, "ID %s redefined\n", arg1);
            break;
        case XML_RELAXNG_ERR_TYPECMP:
            snprintf(msg, 1000, "failed to compare type %s\n", arg1);
            break;
        case XML_RELAXNG_ERR_NOSTATE:
            return (xmlCharStrdup__internal_alias("Internal error: no state\n"));
        case XML_RELAXNG_ERR_NODEFINE:
            return (xmlCharStrdup__internal_alias("Internal error: no define\n"));
        case XML_RELAXNG_ERR_INTERNAL:
            snprintf(msg, 1000, "Internal error: %s\n", arg1);
            break;
        case XML_RELAXNG_ERR_LISTEXTRA:
            snprintf(msg, 1000, "Extra data in list: %s\n", arg1);
            break;
        case XML_RELAXNG_ERR_INTERNODATA:
            return (xmlCharStrdup__internal_alias
                    ("Internal: interleave block has no data\n"));
        case XML_RELAXNG_ERR_INTERSEQ:
            return (xmlCharStrdup__internal_alias("Invalid sequence in interleave\n"));
        case XML_RELAXNG_ERR_INTEREXTRA:
            snprintf(msg, 1000, "Extra element %s in interleave\n", arg1);
            break;
        case XML_RELAXNG_ERR_ELEMNAME:
            snprintf(msg, 1000, "Expecting element %s, got %s\n", arg1,
                     arg2);
            break;
        case XML_RELAXNG_ERR_ELEMNONS:
            snprintf(msg, 1000, "Expecting a namespace for element %s\n",
                     arg1);
            break;
        case XML_RELAXNG_ERR_ELEMWRONGNS:
            snprintf(msg, 1000,
                     "Element %s has wrong namespace: expecting %s\n", arg1,
                     arg2);
            break;
        case XML_RELAXNG_ERR_ELEMWRONG:
            snprintf(msg, 1000, "Did not expect element %s there\n", arg1);
            break;
        case XML_RELAXNG_ERR_TEXTWRONG:
            snprintf(msg, 1000,
                     "Did not expect text in element %s content\n", arg1);
            break;
        case XML_RELAXNG_ERR_ELEMEXTRANS:
            snprintf(msg, 1000, "Expecting no namespace for element %s\n",
                     arg1);
            break;
        case XML_RELAXNG_ERR_ELEMNOTEMPTY:
            snprintf(msg, 1000, "Expecting element %s to be empty\n", arg1);
            break;
        case XML_RELAXNG_ERR_NOELEM:
            snprintf(msg, 1000, "Expecting an element %s, got nothing\n",
                     arg1);
            break;
        case XML_RELAXNG_ERR_NOTELEM:
            return (xmlCharStrdup__internal_alias("Expecting an element got text\n"));
        case XML_RELAXNG_ERR_ATTRVALID:
            snprintf(msg, 1000, "Element %s failed to validate attributes\n",
                     arg1);
            break;
        case XML_RELAXNG_ERR_CONTENTVALID:
            snprintf(msg, 1000, "Element %s failed to validate content\n",
                     arg1);
            break;
        case XML_RELAXNG_ERR_EXTRACONTENT:
            snprintf(msg, 1000, "Element %s has extra content: %s\n",
                     arg1, arg2);
            break;
        case XML_RELAXNG_ERR_INVALIDATTR:
            snprintf(msg, 1000, "Invalid attribute %s for element %s\n",
                     arg1, arg2);
            break;
        case XML_RELAXNG_ERR_LACKDATA:
            snprintf(msg, 1000, "Datatype element %s contains no data\n",
                     arg1);
            break;
        case XML_RELAXNG_ERR_DATAELEM:
            snprintf(msg, 1000, "Datatype element %s has child elements\n",
                     arg1);
            break;
        case XML_RELAXNG_ERR_VALELEM:
            snprintf(msg, 1000, "Value element %s has child elements\n",
                     arg1);
            break;
        case XML_RELAXNG_ERR_LISTELEM:
            snprintf(msg, 1000, "List element %s has child elements\n",
                     arg1);
            break;
        case XML_RELAXNG_ERR_DATATYPE:
            snprintf(msg, 1000, "Error validating datatype %s\n", arg1);
            break;
        case XML_RELAXNG_ERR_VALUE:
            snprintf(msg, 1000, "Error validating value %s\n", arg1);
            break;
        case XML_RELAXNG_ERR_LIST:
            return (xmlCharStrdup__internal_alias("Error validating list\n"));
        case XML_RELAXNG_ERR_NOGRAMMAR:
            return (xmlCharStrdup__internal_alias("No top grammar defined\n"));
        case XML_RELAXNG_ERR_EXTRADATA:
            return (xmlCharStrdup__internal_alias("Extra data in the document\n"));
        default:
            return (xmlCharStrdup__internal_alias("Unknown error !\n"));
    }
    if (msg[0] == 0) {
        snprintf(msg, 1000, "Unknown error code %d\n", err);
    }
    msg[1000 - 1] = 0;
    return (xmlStrdup__internal_alias((xmlChar *) msg));
}
# 2232 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRelaxNGShowValidError(xmlRelaxNGValidCtxtPtr ctxt,
                         xmlRelaxNGValidErr err, xmlNodePtr node,
                         xmlNodePtr child, const xmlChar * arg1,
                         const xmlChar * arg2)
{
    xmlChar *msg;

    if (ctxt->flags & 8)
        return;




    msg = xmlRelaxNGGetErrorString(err, arg1, arg2);
    if (msg == 
# 2247 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 2247 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )
        return;

    if (ctxt->errNo == XML_RELAXNG_OK)
        ctxt->errNo = err;
    xmlRngVErr(ctxt, (child == 
# 2252 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0) 
# 2252 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ? node : child), err,
               (const char *) msg, arg1, arg2);
    xmlFree(msg);
}
# 2264 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRelaxNGPopErrors(xmlRelaxNGValidCtxtPtr ctxt, int level)
{
    int i;
    xmlRelaxNGValidErrorPtr err;





    for (i = level; i < ctxt->errNr; i++) {
        err = &ctxt->errTab[i];
        if (err->flags & 1) {
            if (err->arg1 != 
# 2277 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 2277 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                )
                xmlFree((xmlChar *) err->arg1);
            err->arg1 = 
# 2279 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 2279 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ;
            if (err->arg2 != 
# 2280 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 2280 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                )
                xmlFree((xmlChar *) err->arg2);
            err->arg2 = 
# 2282 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 2282 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ;
            err->flags = 0;
        }
    }
    ctxt->errNr = level;
    if (ctxt->errNr <= 0)
        ctxt->err = 
# 2288 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 2288 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ;
}







static void
xmlRelaxNGDumpValidError(xmlRelaxNGValidCtxtPtr ctxt)
{
    int i, j, k;
    xmlRelaxNGValidErrorPtr err, dup;





    for (i = 0, k = 0; i < ctxt->errNr; i++) {
        err = &ctxt->errTab[i];
        if (k < 5) {
            for (j = 0; j < i; j++) {
                dup = &ctxt->errTab[j];
                if ((err->err == dup->err) && (err->node == dup->node) &&
                    (xmlStrEqual__internal_alias(err->arg1, dup->arg1)) &&
                    (xmlStrEqual__internal_alias(err->arg2, dup->arg2))) {
                    goto skip;
                }
            }
            xmlRelaxNGShowValidError(ctxt, err->err, err->node, err->seq,
                                     err->arg1, err->arg2);
            k++;
        }
      skip:
        if (err->flags & 1) {
            if (err->arg1 != 
# 2324 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 2324 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                )
                xmlFree((xmlChar *) err->arg1);
            err->arg1 = 
# 2326 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 2326 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ;
            if (err->arg2 != 
# 2327 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 2327 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                )
                xmlFree((xmlChar *) err->arg2);
            err->arg2 = 
# 2329 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 2329 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ;
            err->flags = 0;
        }
    }
    ctxt->errNr = 0;
}
# 2347 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRelaxNGAddValidError(xmlRelaxNGValidCtxtPtr ctxt,
                        xmlRelaxNGValidErr err, const xmlChar * arg1,
                        const xmlChar * arg2, int dup)
{
    if (ctxt == 
# 2352 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 2352 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   )
        return;
    if (ctxt->flags & 8)
        return;







    if (((ctxt->flags & 1) == 0) ||
  (ctxt->flags & 2)) {
        xmlNodePtr node, seq;





        if (ctxt->errNr != 0)
            xmlRelaxNGDumpValidError(ctxt);
        if (ctxt->state != 
# 2373 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 2373 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) {
            node = ctxt->state->node;
            seq = ctxt->state->seq;
        } else {
            node = seq = 
# 2377 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 2377 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ;
        }
        if ((node == 
# 2379 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                    ((void *)0)
# 2379 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                        ) && (seq == 
# 2379 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 2379 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                         )) {
            node = ctxt->pnode;
        }
        xmlRelaxNGShowValidError(ctxt, err, node, seq, arg1, arg2);
    }



    else {
        xmlRelaxNGValidErrorPush(ctxt, err, arg1, arg2, dup);
    }
}







static xmlChar *xmlRelaxNGNormalize(xmlRelaxNGValidCtxtPtr ctxt,
                                    const xmlChar * str);
# 2411 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGSchemaTypeHave(void *data __attribute__((unused)), const xmlChar * type)
{
    xmlSchemaTypePtr typ;

    if (type == 
# 2416 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 2416 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   )
        return (-1);
    typ = xmlSchemaGetPredefinedType__internal_alias(type,
                                     (xmlChar *)
                                     "http://www.w3.org/2001/XMLSchema");
    if (typ == 
# 2421 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 2421 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )
        return (0);
    return (1);
}
# 2438 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGSchemaTypeCheck(void *data __attribute__((unused)),
                          const xmlChar * type,
                          const xmlChar * value,
                          void **result, xmlNodePtr node)
{
    xmlSchemaTypePtr typ;
    int ret;

    if ((type == 
# 2447 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 2447 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) || (value == 
# 2447 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                   ((void *)0)
# 2447 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                       ))
        return (-1);
    typ = xmlSchemaGetPredefinedType__internal_alias(type,
                                     (xmlChar *)
                                     "http://www.w3.org/2001/XMLSchema");
    if (typ == 
# 2452 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 2452 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )
        return (-1);
    ret = xmlSchemaValPredefTypeNode__internal_alias(typ, value,
                                     (xmlSchemaValPtr *) result, node);
    if (ret == 2)
        return (2);
    if (ret == 0)
        return (1);
    if (ret > 0)
        return (0);
    return (-1);
}
# 2478 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGSchemaFacetCheck(void *data __attribute__((unused)),
                           const xmlChar * type, const xmlChar * facetname,
                           const xmlChar * val, const xmlChar * strval,
                           void *value)
{
    xmlSchemaFacetPtr facet;
    xmlSchemaTypePtr typ;
    int ret;

    if ((type == 
# 2488 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 2488 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) || (strval == 
# 2488 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 2488 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        ))
        return (-1);
    typ = xmlSchemaGetPredefinedType__internal_alias(type,
                                     (xmlChar *)
                                     "http://www.w3.org/2001/XMLSchema");
    if (typ == 
# 2493 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 2493 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )
        return (-1);

    facet = xmlSchemaNewFacet__internal_alias();
    if (facet == 
# 2497 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 2497 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    )
        return (-1);

    if (xmlStrEqual__internal_alias(facetname, (xmlChar *) "minInclusive")) {
        facet->type = XML_SCHEMA_FACET_MININCLUSIVE;
    } else if (xmlStrEqual__internal_alias(facetname, (xmlChar *) "minExclusive")) {
        facet->type = XML_SCHEMA_FACET_MINEXCLUSIVE;
    } else if (xmlStrEqual__internal_alias(facetname, (xmlChar *) "maxInclusive")) {
        facet->type = XML_SCHEMA_FACET_MAXINCLUSIVE;
    } else if (xmlStrEqual__internal_alias(facetname, (xmlChar *) "maxExclusive")) {
        facet->type = XML_SCHEMA_FACET_MAXEXCLUSIVE;
    } else if (xmlStrEqual__internal_alias(facetname, (xmlChar *) "totalDigits")) {
        facet->type = XML_SCHEMA_FACET_TOTALDIGITS;
    } else if (xmlStrEqual__internal_alias(facetname, (xmlChar *) "fractionDigits")) {
        facet->type = XML_SCHEMA_FACET_FRACTIONDIGITS;
    } else if (xmlStrEqual__internal_alias(facetname, (xmlChar *) "pattern")) {
        facet->type = XML_SCHEMA_FACET_PATTERN;
    } else if (xmlStrEqual__internal_alias(facetname, (xmlChar *) "enumeration")) {
        facet->type = XML_SCHEMA_FACET_ENUMERATION;
    } else if (xmlStrEqual__internal_alias(facetname, (xmlChar *) "whiteSpace")) {
        facet->type = XML_SCHEMA_FACET_WHITESPACE;
    } else if (xmlStrEqual__internal_alias(facetname, (xmlChar *) "length")) {
        facet->type = XML_SCHEMA_FACET_LENGTH;
    } else if (xmlStrEqual__internal_alias(facetname, (xmlChar *) "maxLength")) {
        facet->type = XML_SCHEMA_FACET_MAXLENGTH;
    } else if (xmlStrEqual__internal_alias(facetname, (xmlChar *) "minLength")) {
        facet->type = XML_SCHEMA_FACET_MINLENGTH;
    } else {
        xmlSchemaFreeFacet__internal_alias(facet);
        return (-1);
    }
    facet->value = val;
    ret = xmlSchemaCheckFacet__internal_alias(facet, typ, 
# 2529 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                         ((void *)0)
# 2529 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                             , type);
    if (ret != 0) {
        xmlSchemaFreeFacet__internal_alias(facet);
        return (-1);
    }
    ret = xmlSchemaValidateFacet__internal_alias(typ, facet, strval, value);
    xmlSchemaFreeFacet__internal_alias(facet);
    if (ret != 0)
        return (-1);
    return (0);
}
# 2550 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRelaxNGSchemaFreeValue(void *data __attribute__((unused)), void *value)
{
    xmlSchemaFreeValue__internal_alias(value);
}
# 2568 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGSchemaTypeCompare(void *data __attribute__((unused)),
                            const xmlChar * type,
                            const xmlChar * value1,
                            xmlNodePtr ctxt1,
                            void *comp1,
                            const xmlChar * value2, xmlNodePtr ctxt2)
{
    int ret;
    xmlSchemaTypePtr typ;
    xmlSchemaValPtr res1 = 
# 2578 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 2578 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              , res2 = 
# 2578 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                       ((void *)0)
# 2578 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                           ;

    if ((type == 
# 2580 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 2580 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) || (value1 == 
# 2580 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 2580 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        ) || (value2 == 
# 2580 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                        ((void *)0)
# 2580 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                            ))
        return (-1);
    typ = xmlSchemaGetPredefinedType__internal_alias(type,
                                     (xmlChar *)
                                     "http://www.w3.org/2001/XMLSchema");
    if (typ == 
# 2585 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 2585 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )
        return (-1);
    if (comp1 == 
# 2587 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 2587 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) {
        ret = xmlSchemaValPredefTypeNode__internal_alias(typ, value1, &res1, ctxt1);
        if (ret != 0)
            return (-1);
        if (res1 == 
# 2591 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 2591 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       )
            return (-1);
    } else {
        res1 = (xmlSchemaValPtr) comp1;
    }
    ret = xmlSchemaValPredefTypeNode__internal_alias(typ, value2, &res2, ctxt2);
    if (ret != 0) {
 if ((comp1 == 
# 2598 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 2598 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) && (res1 != 
# 2598 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 2598 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    ))
     xmlSchemaFreeValue__internal_alias(res1);
        return (-1);
    }
    if (res1 == 
# 2602 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 2602 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) {
        return (-1);
    }
    ret = xmlSchemaCompareValues__internal_alias(res1, res2);
    if (res1 != (xmlSchemaValPtr) comp1)
        xmlSchemaFreeValue__internal_alias(res1);
    xmlSchemaFreeValue__internal_alias(res2);
    if (ret == -2)
        return (-1);
    if (ret == 0)
        return (1);
    return (0);
}
# 2626 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGDefaultTypeHave(void *data __attribute__((unused)),
                          const xmlChar * type)
{
    if (type == 
# 2630 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 2630 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   )
        return (-1);
    if (xmlStrEqual__internal_alias(type, (xmlChar *) "string"))
        return (1);
    if (xmlStrEqual__internal_alias(type, (xmlChar *) "token"))
        return (1);
    return (0);
}
# 2651 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGDefaultTypeCheck(void *data __attribute__((unused)),
                           const xmlChar * type __attribute__((unused)),
                           const xmlChar * value __attribute__((unused)),
                           void **result __attribute__((unused)),
                           xmlNodePtr node __attribute__((unused)))
{
    if (value == 
# 2658 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 2658 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    )
        return (-1);
    if (xmlStrEqual__internal_alias(type, (xmlChar *) "string"))
        return (1);
    if (xmlStrEqual__internal_alias(type, (xmlChar *) "token")) {
        return (1);
    }

    return (0);
}
# 2681 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGDefaultTypeCompare(void *data __attribute__((unused)),
                             const xmlChar * type,
                             const xmlChar * value1,
                             xmlNodePtr ctxt1 __attribute__((unused)),
                             void *comp1 __attribute__((unused)),
                             const xmlChar * value2,
                             xmlNodePtr ctxt2 __attribute__((unused)))
{
    int ret = -1;

    if (xmlStrEqual__internal_alias(type, (xmlChar *) "string")) {
        ret = xmlStrEqual__internal_alias(value1, value2);
    } else if (xmlStrEqual__internal_alias(type, (xmlChar *) "token")) {
        if (!xmlStrEqual__internal_alias(value1, value2)) {
            xmlChar *nval, *nvalue;





            nval = xmlRelaxNGNormalize(
# 2702 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 2702 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                          , value1);
            nvalue = xmlRelaxNGNormalize(
# 2703 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                        ((void *)0)
# 2703 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                            , value2);

            if ((nval == 
# 2705 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 2705 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ) || (nvalue == 
# 2705 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                            ((void *)0)
# 2705 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                ))
                ret = -1;
            else if (xmlStrEqual__internal_alias(nval, nvalue))
                ret = 1;
            else
                ret = 0;
            if (nval != 
# 2711 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 2711 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           )
                xmlFree(nval);
            if (nvalue != 
# 2713 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 2713 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             )
                xmlFree(nvalue);
        } else
            ret = 1;
    }
    return (ret);
}

static int xmlRelaxNGTypeInitialized = 0;
static xmlHashTablePtr xmlRelaxNGRegisteredTypes = 
# 2722 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                  ((void *)0)
# 2722 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                      ;
# 2731 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRelaxNGFreeTypeLibrary(xmlRelaxNGTypeLibraryPtr lib,
                          const xmlChar * namespace __attribute__((unused)))
{
    if (lib == 
# 2735 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 2735 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )
        return;
    if (lib->namespace != 
# 2737 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 2737 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             )
        xmlFree((xmlChar *) lib->namespace);
    xmlFree(lib);
}
# 2754 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGRegisterTypeLibrary(const xmlChar * namespace, void *data,
                              xmlRelaxNGTypeHave have,
                              xmlRelaxNGTypeCheck check,
                              xmlRelaxNGTypeCompare comp,
                              xmlRelaxNGFacetCheck facet,
                              xmlRelaxNGTypeFree freef)
{
    xmlRelaxNGTypeLibraryPtr lib;
    int ret;

    if ((xmlRelaxNGRegisteredTypes == 
# 2765 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 2765 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                         ) || (namespace == 
# 2765 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                            ((void *)0)
# 2765 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                ) ||
        (check == 
# 2766 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 2766 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) || (comp == 
# 2766 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                   ((void *)0)
# 2766 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                       ))
        return (-1);
    if (xmlHashLookup__internal_alias(xmlRelaxNGRegisteredTypes, namespace) != 
# 2768 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                              ((void *)0)
# 2768 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                  ) {
        (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
                        "Relax-NG types library '%s' already registered\n",
                        namespace);
        return (-1);
    }
    lib =
        (xmlRelaxNGTypeLibraryPtr)
        xmlMalloc(sizeof(xmlRelaxNGTypeLibrary));
    if (lib == 
# 2777 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 2777 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) {
        xmlRngVErrMemory(
# 2778 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 2778 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            , "adding types library\n");
        return (-1);
    }
    memset(lib, 0, sizeof(xmlRelaxNGTypeLibrary));
    lib->namespace = xmlStrdup__internal_alias(namespace);
    lib->data = data;
    lib->have = have;
    lib->comp = comp;
    lib->check = check;
    lib->facet = facet;
    lib->freef = freef;
    ret = xmlHashAddEntry__internal_alias(xmlRelaxNGRegisteredTypes, namespace, lib);
    if (ret < 0) {
        (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
                        "Relax-NG types library failed to register '%s'\n",
                        namespace);
        xmlRelaxNGFreeTypeLibrary(lib, namespace);
        return (-1);
    }
    return (0);
}
# 2807 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
int
xmlRelaxNGInitTypes__internal_alias(void)
{
    if (xmlRelaxNGTypeInitialized != 0)
        return (0);
    xmlRelaxNGRegisteredTypes = xmlHashCreate__internal_alias(10);
    if (xmlRelaxNGRegisteredTypes == 
# 2813 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 2813 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        ) {
        (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())),
                        "Failed to allocate sh table for Relax-NG types\n");
        return (-1);
    }
    xmlRelaxNGRegisterTypeLibrary((xmlChar *)
                                  "http://www.w3.org/2001/XMLSchema-datatypes",
                                  
# 2820 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 2820 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     , xmlRelaxNGSchemaTypeHave,
                                  xmlRelaxNGSchemaTypeCheck,
                                  xmlRelaxNGSchemaTypeCompare,
                                  xmlRelaxNGSchemaFacetCheck,
                                  xmlRelaxNGSchemaFreeValue);
    xmlRelaxNGRegisterTypeLibrary(xmlRelaxNGNs, 
# 2825 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                               ((void *)0)
# 2825 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                   ,
                                  xmlRelaxNGDefaultTypeHave,
                                  xmlRelaxNGDefaultTypeCheck,
                                  xmlRelaxNGDefaultTypeCompare, 
# 2828 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                               ((void *)0)
# 2828 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                   ,
                                  
# 2829 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 2829 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     );
    xmlRelaxNGTypeInitialized = 1;
    return (0);
}






void
xmlRelaxNGCleanupTypes__internal_alias(void)
{
    xmlSchemaCleanupTypes__internal_alias();
    if (xmlRelaxNGTypeInitialized == 0)
        return;
    xmlHashFree__internal_alias(xmlRelaxNGRegisteredTypes, (xmlHashDeallocator)
                xmlRelaxNGFreeTypeLibrary);
    xmlRelaxNGTypeInitialized = 0;
}
# 2860 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
void xmlAutomataSetFlags(xmlAutomataPtr am, int flags);


static int xmlRelaxNGTryCompile(xmlRelaxNGParserCtxtPtr ctxt,
                                xmlRelaxNGDefinePtr def);
# 2874 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGIsCompileable(xmlRelaxNGDefinePtr def)
{
    int ret = -1;

    if (def == 
# 2879 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 2879 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) {
        return (-1);
    }
    if ((def->type != XML_RELAXNG_ELEMENT) &&
        (def->dflags & (1 << 6)))
        return (1);
    if ((def->type != XML_RELAXNG_ELEMENT) &&
        (def->dflags & (1 << 7)))
        return (0);
    switch (def->type) {
        case XML_RELAXNG_NOOP:
            ret = xmlRelaxNGIsCompileable(def->content);
            break;
        case XML_RELAXNG_TEXT:
        case XML_RELAXNG_EMPTY:
            ret = 1;
            break;
        case XML_RELAXNG_ELEMENT:



            if (((def->dflags & (1 << 7)) == 0) &&
                ((def->dflags & (1 << 6)) == 0)) {
                xmlRelaxNGDefinePtr list;

                list = def->content;
                while (list != 
# 2905 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 2905 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                    ret = xmlRelaxNGIsCompileable(list);
                    if (ret != 1)
                        break;
                    list = list->next;
                }




                if (ret == 0) {
      def->dflags &= ~(1 << 6);
                    def->dflags |= (1 << 7);
  }
                if ((ret == 1) && !(def->dflags &= (1 << 7)))
                    def->dflags |= (1 << 6);
# 2936 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
            }




            if ((def->nameClass != 
# 2941 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 2941 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ) || (def->name == 
# 2941 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                         ((void *)0)
# 2941 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                             ))
                ret = 0;
            else
                ret = 1;
            return (ret);
        case XML_RELAXNG_REF:
        case XML_RELAXNG_EXTERNALREF:
        case XML_RELAXNG_PARENTREF:
            if (def->depth == -20) {
                return (1);
            } else {
                xmlRelaxNGDefinePtr list;

                def->depth = -20;
                list = def->content;
                while (list != 
# 2956 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 2956 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                    ret = xmlRelaxNGIsCompileable(list);
                    if (ret != 1)
                        break;
                    list = list->next;
                }
            }
            break;
        case XML_RELAXNG_START:
        case XML_RELAXNG_OPTIONAL:
        case XML_RELAXNG_ZEROORMORE:
        case XML_RELAXNG_ONEORMORE:
        case XML_RELAXNG_CHOICE:
        case XML_RELAXNG_GROUP:
        case XML_RELAXNG_DEF:{
                xmlRelaxNGDefinePtr list;

                list = def->content;
                while (list != 
# 2974 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 2974 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                    ret = xmlRelaxNGIsCompileable(list);
                    if (ret != 1)
                        break;
                    list = list->next;
                }
                break;
            }
        case XML_RELAXNG_EXCEPT:
        case XML_RELAXNG_ATTRIBUTE:
        case XML_RELAXNG_INTERLEAVE:
        case XML_RELAXNG_DATATYPE:
        case XML_RELAXNG_LIST:
        case XML_RELAXNG_PARAM:
        case XML_RELAXNG_VALUE:
        case XML_RELAXNG_NOT_ALLOWED:
            ret = 0;
            break;
    }
    if (ret == 0)
        def->dflags |= (1 << 7);
    if (ret == 1)
        def->dflags |= (1 << 6);
# 3012 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
    return (ret);
}
# 3025 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGCompile(xmlRelaxNGParserCtxtPtr ctxt, xmlRelaxNGDefinePtr def)
{
    int ret = 0;
    xmlRelaxNGDefinePtr list;

    if ((ctxt == 
# 3031 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 3031 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) || (def == 
# 3031 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 3031 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     ))
        return (-1);

    switch (def->type) {
        case XML_RELAXNG_START:
            if ((xmlRelaxNGIsCompileable(def) == 1) && (def->depth != -25)) {
                xmlAutomataPtr oldam = ctxt->am;
                xmlAutomataStatePtr oldstate = ctxt->state;

                def->depth = -25;

                list = def->content;
                ctxt->am = xmlNewAutomata__internal_alias();
                if (ctxt->am == 
# 3044 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 3044 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   )
                    return (-1);
# 3055 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                xmlAutomataSetFlags(ctxt->am, 1);

                ctxt->state = xmlAutomataGetInitState__internal_alias(ctxt->am);
                while (list != 
# 3058 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 3058 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                    xmlRelaxNGCompile(ctxt, list);
                    list = list->next;
                }
                xmlAutomataSetFinalState__internal_alias(ctxt->am, ctxt->state);
                if (xmlAutomataIsDeterminist__internal_alias(ctxt->am))
                    def->contModel = xmlAutomataCompile__internal_alias(ctxt->am);

                xmlFreeAutomata__internal_alias(ctxt->am);
                ctxt->state = oldstate;
                ctxt->am = oldam;
            }
            break;
        case XML_RELAXNG_ELEMENT:
            if ((ctxt->am != 
# 3072 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 3072 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ) && (def->name != 
# 3072 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                   ((void *)0)
# 3072 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                       )) {
                ctxt->state = xmlAutomataNewTransition2__internal_alias(ctxt->am,
                                                        ctxt->state, 
# 3074 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                    ((void *)0)
# 3074 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                        ,
                                                        def->name, def->ns,
                                                        def);
            }
            if ((def->dflags & (1 << 6)) && (def->depth != -25)) {
                xmlAutomataPtr oldam = ctxt->am;
                xmlAutomataStatePtr oldstate = ctxt->state;

                def->depth = -25;

                list = def->content;
                ctxt->am = xmlNewAutomata__internal_alias();
                if (ctxt->am == 
# 3086 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 3086 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   )
                    return (-1);
                xmlAutomataSetFlags(ctxt->am, 1);
                ctxt->state = xmlAutomataGetInitState__internal_alias(ctxt->am);
                while (list != 
# 3090 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 3090 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                    xmlRelaxNGCompile(ctxt, list);
                    list = list->next;
                }
                xmlAutomataSetFinalState__internal_alias(ctxt->am, ctxt->state);
                def->contModel = xmlAutomataCompile__internal_alias(ctxt->am);
                if (!xmlRegexpIsDeterminist__internal_alias(def->contModel)) {
# 3105 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    xmlRegFreeRegexp__internal_alias(def->contModel);
                    def->contModel = 
# 3106 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 3106 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        ;
                }
                xmlFreeAutomata__internal_alias(ctxt->am);
                ctxt->state = oldstate;
                ctxt->am = oldam;
            } else {
                xmlAutomataPtr oldam = ctxt->am;






                ret = xmlRelaxNGTryCompile(ctxt, def);
                ctxt->am = oldam;
            }
            break;
        case XML_RELAXNG_NOOP:
            ret = xmlRelaxNGCompile(ctxt, def->content);
            break;
        case XML_RELAXNG_OPTIONAL:{
                xmlAutomataStatePtr oldstate = ctxt->state;

                list = def->content;
                while (list != 
# 3130 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 3130 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                    xmlRelaxNGCompile(ctxt, list);
                    list = list->next;
                }
                xmlAutomataNewEpsilon__internal_alias(ctxt->am, oldstate, ctxt->state);
                break;
            }
        case XML_RELAXNG_ZEROORMORE:{
                xmlAutomataStatePtr oldstate;

                ctxt->state =
                    xmlAutomataNewEpsilon__internal_alias(ctxt->am, ctxt->state, 
# 3141 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                ((void *)0)
# 3141 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                    );
                oldstate = ctxt->state;
                list = def->content;
                while (list != 
# 3144 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 3144 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                    xmlRelaxNGCompile(ctxt, list);
                    list = list->next;
                }
                xmlAutomataNewEpsilon__internal_alias(ctxt->am, ctxt->state, oldstate);
                ctxt->state =
                    xmlAutomataNewEpsilon__internal_alias(ctxt->am, oldstate, 
# 3150 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                             ((void *)0)
# 3150 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                 );
                break;
            }
        case XML_RELAXNG_ONEORMORE:{
                xmlAutomataStatePtr oldstate;

                list = def->content;
                while (list != 
# 3157 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 3157 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                    xmlRelaxNGCompile(ctxt, list);
                    list = list->next;
                }
                oldstate = ctxt->state;
                list = def->content;
                while (list != 
# 3163 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 3163 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                    xmlRelaxNGCompile(ctxt, list);
                    list = list->next;
                }
                xmlAutomataNewEpsilon__internal_alias(ctxt->am, ctxt->state, oldstate);
                ctxt->state =
                    xmlAutomataNewEpsilon__internal_alias(ctxt->am, oldstate, 
# 3169 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                             ((void *)0)
# 3169 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                 );
                break;
            }
        case XML_RELAXNG_CHOICE:{
                xmlAutomataStatePtr target = 
# 3173 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                            ((void *)0)
# 3173 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                ;
                xmlAutomataStatePtr oldstate = ctxt->state;

                list = def->content;
                while (list != 
# 3177 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 3177 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                    ctxt->state = oldstate;
                    ret = xmlRelaxNGCompile(ctxt, list);
                    if (ret != 0)
                        break;
                    if (target == 
# 3182 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 3182 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     )
                        target = ctxt->state;
                    else {
                        xmlAutomataNewEpsilon__internal_alias(ctxt->am, ctxt->state,
                                              target);
                    }
                    list = list->next;
                }
                ctxt->state = target;

                break;
            }
        case XML_RELAXNG_REF:
        case XML_RELAXNG_EXTERNALREF:
        case XML_RELAXNG_PARENTREF:
        case XML_RELAXNG_GROUP:
        case XML_RELAXNG_DEF:
            list = def->content;
            while (list != 
# 3200 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 3200 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) {
                ret = xmlRelaxNGCompile(ctxt, list);
                if (ret != 0)
                    break;
                list = list->next;
            }
            break;
        case XML_RELAXNG_TEXT:{
                xmlAutomataStatePtr oldstate;

                ctxt->state =
                    xmlAutomataNewEpsilon__internal_alias(ctxt->am, ctxt->state, 
# 3211 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                ((void *)0)
# 3211 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                    );
                oldstate = ctxt->state;
                xmlRelaxNGCompile(ctxt, def->content);
                xmlAutomataNewTransition__internal_alias(ctxt->am, ctxt->state,
                                         ctxt->state, (xmlChar *) "#text",
                                         
# 3216 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                        ((void *)0)
# 3216 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                            );
                ctxt->state =
                    xmlAutomataNewEpsilon__internal_alias(ctxt->am, oldstate, 
# 3218 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                             ((void *)0)
# 3218 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                 );
                break;
            }
        case XML_RELAXNG_EMPTY:
            ctxt->state =
                xmlAutomataNewEpsilon__internal_alias(ctxt->am, ctxt->state, 
# 3223 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                            ((void *)0)
# 3223 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                );
            break;
        case XML_RELAXNG_EXCEPT:
        case XML_RELAXNG_ATTRIBUTE:
        case XML_RELAXNG_INTERLEAVE:
        case XML_RELAXNG_NOT_ALLOWED:
        case XML_RELAXNG_DATATYPE:
        case XML_RELAXNG_LIST:
        case XML_RELAXNG_PARAM:
        case XML_RELAXNG_VALUE:

            fprintf(
# 3234 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   stderr
# 3234 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         , "RNG internal error trying to compile %s\n",
                    xmlRelaxNGDefName(def));
            break;
    }
    return (ret);
}
# 3251 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGTryCompile(xmlRelaxNGParserCtxtPtr ctxt, xmlRelaxNGDefinePtr def)
{
    int ret = 0;
    xmlRelaxNGDefinePtr list;

    if ((ctxt == 
# 3257 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 3257 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) || (def == 
# 3257 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 3257 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     ))
        return (-1);

    if ((def->type == XML_RELAXNG_START) ||
        (def->type == XML_RELAXNG_ELEMENT)) {
        ret = xmlRelaxNGIsCompileable(def);
        if ((def->dflags & (1 << 6)) && (def->depth != -25)) {
            ctxt->am = 
# 3264 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 3264 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ;
            ret = xmlRelaxNGCompile(ctxt, def);
# 3284 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
            return (ret);
        }
    }
    switch (def->type) {
        case XML_RELAXNG_NOOP:
            ret = xmlRelaxNGTryCompile(ctxt, def->content);
            break;
        case XML_RELAXNG_TEXT:
        case XML_RELAXNG_DATATYPE:
        case XML_RELAXNG_LIST:
        case XML_RELAXNG_PARAM:
        case XML_RELAXNG_VALUE:
        case XML_RELAXNG_EMPTY:
        case XML_RELAXNG_ELEMENT:
            ret = 0;
            break;
        case XML_RELAXNG_OPTIONAL:
        case XML_RELAXNG_ZEROORMORE:
        case XML_RELAXNG_ONEORMORE:
        case XML_RELAXNG_CHOICE:
        case XML_RELAXNG_GROUP:
        case XML_RELAXNG_DEF:
        case XML_RELAXNG_START:
        case XML_RELAXNG_REF:
        case XML_RELAXNG_EXTERNALREF:
        case XML_RELAXNG_PARENTREF:
            list = def->content;
            while (list != 
# 3311 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 3311 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) {
                ret = xmlRelaxNGTryCompile(ctxt, list);
                if (ret != 0)
                    break;
                list = list->next;
            }
            break;
        case XML_RELAXNG_EXCEPT:
        case XML_RELAXNG_ATTRIBUTE:
        case XML_RELAXNG_INTERLEAVE:
        case XML_RELAXNG_NOT_ALLOWED:
            ret = 0;
            break;
    }
    return (ret);
}







static xmlRelaxNGDefinePtr xmlRelaxNGParseAttribute(xmlRelaxNGParserCtxtPtr
                                                    ctxt, xmlNodePtr node);
static xmlRelaxNGDefinePtr xmlRelaxNGParseElement(xmlRelaxNGParserCtxtPtr
                                                  ctxt, xmlNodePtr node);
static xmlRelaxNGDefinePtr xmlRelaxNGParsePatterns(xmlRelaxNGParserCtxtPtr
                                                   ctxt, xmlNodePtr nodes,
                                                   int group);
static xmlRelaxNGDefinePtr xmlRelaxNGParsePattern(xmlRelaxNGParserCtxtPtr
                                                  ctxt, xmlNodePtr node);
static xmlRelaxNGPtr xmlRelaxNGParseDocument(xmlRelaxNGParserCtxtPtr ctxt,
                                             xmlNodePtr node);
static int xmlRelaxNGParseGrammarContent(xmlRelaxNGParserCtxtPtr ctxt,
                                         xmlNodePtr nodes);
static xmlRelaxNGDefinePtr xmlRelaxNGParseNameClass(xmlRelaxNGParserCtxtPtr
                                                    ctxt, xmlNodePtr node,
                                                    xmlRelaxNGDefinePtr
                                                    def);
static xmlRelaxNGGrammarPtr xmlRelaxNGParseGrammar(xmlRelaxNGParserCtxtPtr
                                                   ctxt, xmlNodePtr nodes);
static int xmlRelaxNGElementMatch(xmlRelaxNGValidCtxtPtr ctxt,
                                  xmlRelaxNGDefinePtr define,
                                  xmlNodePtr elem);
# 3368 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGIsNullable(xmlRelaxNGDefinePtr define)
{
    int ret;

    if (define == 
# 3373 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 3373 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     )
        return (-1);

    if (define->dflags & (1 << 0))
        return (1);
    if (define->dflags & (1 << 1))
        return (0);
    switch (define->type) {
        case XML_RELAXNG_EMPTY:
        case XML_RELAXNG_TEXT:
            ret = 1;
            break;
        case XML_RELAXNG_NOOP:
        case XML_RELAXNG_DEF:
        case XML_RELAXNG_REF:
        case XML_RELAXNG_EXTERNALREF:
        case XML_RELAXNG_PARENTREF:
        case XML_RELAXNG_ONEORMORE:
            ret = xmlRelaxNGIsNullable(define->content);
            break;
        case XML_RELAXNG_EXCEPT:
        case XML_RELAXNG_NOT_ALLOWED:
        case XML_RELAXNG_ELEMENT:
        case XML_RELAXNG_DATATYPE:
        case XML_RELAXNG_PARAM:
        case XML_RELAXNG_VALUE:
        case XML_RELAXNG_LIST:
        case XML_RELAXNG_ATTRIBUTE:
            ret = 0;
            break;
        case XML_RELAXNG_CHOICE:{
                xmlRelaxNGDefinePtr list = define->content;

                while (list != 
# 3406 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 3406 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                    ret = xmlRelaxNGIsNullable(list);
                    if (ret != 0)
                        goto done;
                    list = list->next;
                }
                ret = 0;
                break;
            }
        case XML_RELAXNG_START:
        case XML_RELAXNG_INTERLEAVE:
        case XML_RELAXNG_GROUP:{
                xmlRelaxNGDefinePtr list = define->content;

                while (list != 
# 3420 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 3420 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                    ret = xmlRelaxNGIsNullable(list);
                    if (ret != 1)
                        goto done;
                    list = list->next;
                }
                return (1);
            }
        default:
            return (-1);
    }
  done:
    if (ret == 0)
        define->dflags |= (1 << 1);
    if (ret == 1)
        define->dflags |= (1 << 0);
    return (ret);
}
# 3447 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGIsBlank(xmlChar * str)
{
    if (str == 
# 3450 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 3450 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )
        return (1);
    while (*str != 0) {
        if (!((((*str) == 0x20) || ((0x9 <= (*str)) && ((*str) <= 0xa)) || ((*str) == 0xd))))
            return (0);
        str++;
    }
    return (1);
}
# 3469 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlChar *
xmlRelaxNGGetDataTypeLibrary(xmlRelaxNGParserCtxtPtr ctxt __attribute__((unused)),
                             xmlNodePtr node)
{
    xmlChar *ret, *escape;

    if (node == 
# 3475 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 3475 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   )
        return(
# 3476 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 3476 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  );

    if ((((node != 
# 3478 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
        ((void *)0)
# 3478 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
        ) && (node->ns != 
# 3478 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
        ((void *)0)
# 3478 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
        ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "data")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) || (((node != 
# 3478 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 3478 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ) && (node->ns != 
# 3478 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 3478 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "value")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs))))) {
        ret = xmlGetProp__internal_alias(node, (xmlChar *) "datatypeLibrary");
        if (ret != 
# 3480 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 3480 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) {
            if (ret[0] == 0) {
                xmlFree(ret);
                return (
# 3483 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 3483 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           );
            }
            escape = xmlURIEscapeStr__internal_alias(ret, (xmlChar *) ":/#?");
            if (escape == 
# 3486 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 3486 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ) {
                return (ret);
            }
            xmlFree(ret);
            return (escape);
        }
    }
    node = node->parent;
    while ((node != 
# 3494 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 3494 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) && (node->type == XML_ELEMENT_NODE)) {
        ret = xmlGetProp__internal_alias(node, (xmlChar *) "datatypeLibrary");
        if (ret != 
# 3496 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 3496 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) {
            if (ret[0] == 0) {
                xmlFree(ret);
                return (
# 3499 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 3499 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           );
            }
            escape = xmlURIEscapeStr__internal_alias(ret, (xmlChar *) ":/#?");
            if (escape == 
# 3502 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 3502 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ) {
                return (ret);
            }
            xmlFree(ret);
            return (escape);
        }
        node = node->parent;
    }
    return (
# 3510 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
           ((void *)0)
# 3510 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
               );
}
# 3522 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGDefinePtr
xmlRelaxNGParseValue(xmlRelaxNGParserCtxtPtr ctxt, xmlNodePtr node)
{
    xmlRelaxNGDefinePtr def = 
# 3525 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 3525 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ;
    xmlRelaxNGTypeLibraryPtr lib = 
# 3526 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 3526 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ;
    xmlChar *type;
    xmlChar *library;
    int success = 0;

    def = xmlRelaxNGNewDefine(ctxt, node);
    if (def == 
# 3532 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 3532 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )
        return (
# 3533 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 3533 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    def->type = XML_RELAXNG_VALUE;

    type = xmlGetProp__internal_alias(node, (xmlChar *) "type");
    if (type != 
# 3537 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 3537 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) {
        xmlRelaxNGNormExtSpace(type);
        if (xmlValidateNCName__internal_alias(type, 0)) {
            xmlRngPErr(ctxt, node, XML_RNGP_TYPE_VALUE,
                       "value type '%s' is not an NCName\n", type, 
# 3541 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                  ((void *)0)
# 3541 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                      );
        }
        library = xmlRelaxNGGetDataTypeLibrary(ctxt, node);
        if (library == 
# 3544 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 3544 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          )
            library =
                xmlStrdup__internal_alias((xmlChar *) "http://relaxng.org/ns/structure/1.0");

        def->name = type;
        def->ns = library;

        lib = (xmlRelaxNGTypeLibraryPtr)
            xmlHashLookup__internal_alias(xmlRelaxNGRegisteredTypes, library);
        if (lib == 
# 3553 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 3553 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) {
            xmlRngPErr(ctxt, node, XML_RNGP_UNKNOWN_TYPE_LIB,
                       "Use of unregistered type library '%s'\n", library,
                       
# 3556 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 3556 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          );
            def->data = 
# 3557 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 3557 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ;
        } else {
            def->data = lib;
            if (lib->have == 
# 3560 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 3560 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ) {
                xmlRngPErr(ctxt, node, XML_RNGP_ERROR_TYPE_LIB,
                           "Internal error with type library '%s': no 'have'\n",
                           library, 
# 3563 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                   ((void *)0)
# 3563 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                       );
            } else {
                success = lib->have(lib->data, def->name);
                if (success != 1) {
                    xmlRngPErr(ctxt, node, XML_RNGP_TYPE_NOT_FOUND,
                               "Error type '%s' is not exported by type library '%s'\n",
                               def->name, library);
                }
            }
        }
    }
    if (node->children == 
# 3574 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 3574 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ) {
        def->value = xmlStrdup__internal_alias((xmlChar *) "");
    } else if (((node->children->type != XML_TEXT_NODE) &&
                (node->children->type != XML_CDATA_SECTION_NODE)) ||
               (node->children->next != 
# 3578 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                       ((void *)0)
# 3578 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                           )) {
        xmlRngPErr(ctxt, node, XML_RNGP_TEXT_EXPECTED,
                   "Expecting a single text value for <value>content\n",
                   
# 3581 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 3581 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      , 
# 3581 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 3581 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            );
    } else if (def != 
# 3582 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 3582 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ) {
        def->value = xmlNodeGetContent__internal_alias(node);
        if (def->value == 
# 3584 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 3584 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ) {
            xmlRngPErr(ctxt, node, XML_RNGP_VALUE_NO_CONTENT,
                       "Element <value> has no content\n", 
# 3586 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                          ((void *)0)
# 3586 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                              , 
# 3586 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                ((void *)0)
# 3586 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                    );
        } else if ((lib != 
# 3587 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 3587 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) && (lib->check != 
# 3587 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                  ((void *)0)
# 3587 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                      ) && (success == 1)) {
            void *val = 
# 3588 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 3588 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ;

            success =
                lib->check(lib->data, def->name, def->value, &val, node);
            if (success != 1) {
                xmlRngPErr(ctxt, node, XML_RNGP_INVALID_VALUE,
                           "Value '%s' is not acceptable for type '%s'\n",
                           def->value, def->name);
            } else {
                if (val != 
# 3597 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 3597 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              )
                    def->attrs = val;
            }
        }
    }
    return (def);
}
# 3614 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGDefinePtr
xmlRelaxNGParseData(xmlRelaxNGParserCtxtPtr ctxt, xmlNodePtr node)
{
    xmlRelaxNGDefinePtr def = 
# 3617 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 3617 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 , except;
    xmlRelaxNGDefinePtr param, lastparam = 
# 3618 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                          ((void *)0)
# 3618 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                              ;
    xmlRelaxNGTypeLibraryPtr lib;
    xmlChar *type;
    xmlChar *library;
    xmlNodePtr content;
    int tmp;

    type = xmlGetProp__internal_alias(node, (xmlChar *) "type");
    if (type == 
# 3626 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 3626 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) {
        xmlRngPErr(ctxt, node, XML_RNGP_TYPE_MISSING, "data has no type\n", 
# 3627 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                           ((void *)0)
# 3627 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                               ,
                   
# 3628 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 3628 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      );
        return (
# 3629 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 3629 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }
    xmlRelaxNGNormExtSpace(type);
    if (xmlValidateNCName__internal_alias(type, 0)) {
        xmlRngPErr(ctxt, node, XML_RNGP_TYPE_VALUE,
                   "data type '%s' is not an NCName\n", type, 
# 3634 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                             ((void *)0)
# 3634 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                 );
    }
    library = xmlRelaxNGGetDataTypeLibrary(ctxt, node);
    if (library == 
# 3637 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 3637 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      )
        library =
            xmlStrdup__internal_alias((xmlChar *) "http://relaxng.org/ns/structure/1.0");

    def = xmlRelaxNGNewDefine(ctxt, node);
    if (def == 
# 3642 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 3642 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) {
        xmlFree(type);
        return (
# 3644 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 3644 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }
    def->type = XML_RELAXNG_DATATYPE;
    def->name = type;
    def->ns = library;

    lib = (xmlRelaxNGTypeLibraryPtr)
        xmlHashLookup__internal_alias(xmlRelaxNGRegisteredTypes, library);
    if (lib == 
# 3652 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 3652 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) {
        xmlRngPErr(ctxt, node, XML_RNGP_UNKNOWN_TYPE_LIB,
                   "Use of unregistered type library '%s'\n", library,
                   
# 3655 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 3655 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      );
        def->data = 
# 3656 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 3656 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ;
    } else {
        def->data = lib;
        if (lib->have == 
# 3659 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 3659 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ) {
            xmlRngPErr(ctxt, node, XML_RNGP_ERROR_TYPE_LIB,
                       "Internal error with type library '%s': no 'have'\n",
                       library, 
# 3662 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 3662 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   );
        } else {
            tmp = lib->have(lib->data, def->name);
            if (tmp != 1) {
                xmlRngPErr(ctxt, node, XML_RNGP_TYPE_NOT_FOUND,
                           "Error type '%s' is not exported by type library '%s'\n",
                           def->name, library);
            } else
                if ((xmlStrEqual__internal_alias
                     (library,
                      (xmlChar *)
                      "http://www.w3.org/2001/XMLSchema-datatypes"))
                    && ((xmlStrEqual__internal_alias(def->name, (xmlChar *) "IDREF"))
                        || (xmlStrEqual__internal_alias(def->name, (xmlChar *) "IDREFS")))) {
                ctxt->idref = 1;
            }
        }
    }
    content = node->children;




    while (content != 
# 3685 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 3685 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ) {
        if (!xmlStrEqual__internal_alias(content->name, (xmlChar *) "param"))
            break;
        if (xmlStrEqual__internal_alias(library,
                        (xmlChar *) "http://relaxng.org/ns/structure/1.0")) {
            xmlRngPErr(ctxt, node, XML_RNGP_PARAM_FORBIDDEN,
                       "Type library '%s' does not allow type parameters\n",
                       library, 
# 3692 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 3692 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   );
            content = content->next;
            while ((content != 
# 3694 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 3694 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) &&
                   (xmlStrEqual__internal_alias(content->name, (xmlChar *) "param")))
                content = content->next;
        } else {
            param = xmlRelaxNGNewDefine(ctxt, node);
            if (param != 
# 3699 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 3699 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ) {
                param->type = XML_RELAXNG_PARAM;
                param->name = xmlGetProp__internal_alias(content, (xmlChar *) "name");
                if (param->name == 
# 3702 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 3702 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ) {
                    xmlRngPErr(ctxt, node, XML_RNGP_PARAM_NAME_MISSING,
                               "param has no name\n", 
# 3704 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                     ((void *)0)
# 3704 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                         , 
# 3704 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                           ((void *)0)
# 3704 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                               );
                }
                param->value = xmlNodeGetContent__internal_alias(content);
                if (lastparam == 
# 3707 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 3707 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    ) {
                    def->attrs = lastparam = param;
                } else {
                    lastparam->next = param;
                    lastparam = param;
                }
                if (lib != 
# 3713 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 3713 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) {
                }
            }
            content = content->next;
        }
    }



    if ((content != 
# 3722 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 3722 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       )
        && (xmlStrEqual__internal_alias(content->name, (xmlChar *) "except"))) {
        xmlNodePtr child;
        xmlRelaxNGDefinePtr tmp2, last = 
# 3725 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                        ((void *)0)
# 3725 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                            ;

        except = xmlRelaxNGNewDefine(ctxt, node);
        if (except == 
# 3728 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 3728 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ) {
            return (def);
        }
        except->type = XML_RELAXNG_EXCEPT;
        child = content->children;
 def->content = except;
        if (child == 
# 3734 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                    ((void *)0)
# 3734 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                        ) {
            xmlRngPErr(ctxt, content, XML_RNGP_EXCEPT_NO_CONTENT,
                       "except has no content\n", 
# 3736 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                 ((void *)0)
# 3736 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                     , 
# 3736 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                       ((void *)0)
# 3736 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                           );
        }
        while (child != 
# 3738 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 3738 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) {
            tmp2 = xmlRelaxNGParsePattern(ctxt, child);
            if (tmp2 != 
# 3740 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 3740 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) {
                if (last == 
# 3741 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 3741 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) {
                    except->content = last = tmp2;
                } else {
                    last->next = tmp2;
                    last = tmp2;
                }
            }
            child = child->next;
        }
        content = content->next;
    }



    if (content != 
# 3755 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 3755 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) {
        xmlRngPErr(ctxt, content, XML_RNGP_DATA_CONTENT,
                   "Element data has unexpected content %s\n",
                   content->name, 
# 3758 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 3758 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     );
    }

    return (def);
}

static const xmlChar *invalidName = (xmlChar *) "\1";
# 3779 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGCompareNameClasses(xmlRelaxNGDefinePtr def1,
                             xmlRelaxNGDefinePtr def2)
{
    int ret = 1;
    xmlNode node;
    xmlNs ns;
    xmlRelaxNGValidCtxt ctxt;

    memset(&ctxt, 0, sizeof(xmlRelaxNGValidCtxt));

    ctxt.flags = 1 | 8;

    if ((def1->type == XML_RELAXNG_ELEMENT) ||
        (def1->type == XML_RELAXNG_ATTRIBUTE)) {
        if (def2->type == XML_RELAXNG_TEXT)
            return (1);
        if (def1->name != 
# 3796 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 3796 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ) {
            node.name = def1->name;
        } else {
            node.name = invalidName;
        }
        if (def1->ns != 
# 3801 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 3801 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) {
            if (def1->ns[0] == 0) {
                node.ns = 
# 3803 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 3803 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ;
            } else {
         node.ns = &ns;
                ns.href = def1->ns;
            }
        } else {
            node.ns = 
# 3809 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 3809 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ;
        }
        if (xmlRelaxNGElementMatch(&ctxt, def2, &node)) {
            if (def1->nameClass != 
# 3812 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 3812 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ) {
                ret = xmlRelaxNGCompareNameClasses(def1->nameClass, def2);
            } else {
                ret = 0;
            }
        } else {
            ret = 1;
        }
    } else if (def1->type == XML_RELAXNG_TEXT) {
        if (def2->type == XML_RELAXNG_TEXT)
            return (0);
        return (1);
    } else if (def1->type == XML_RELAXNG_EXCEPT) {
        (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())), "Unimplemented block at %s:%d\n", "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c", 3825); ret = 0;
    } else {
        (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())), "Unimplemented block at %s:%d\n", "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c", 3827); ret = 0;
    }
    if (ret == 0)
        return (ret);
    if ((def2->type == XML_RELAXNG_ELEMENT) ||
        (def2->type == XML_RELAXNG_ATTRIBUTE)) {
        if (def2->name != 
# 3833 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 3833 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ) {
            node.name = def2->name;
        } else {
            node.name = invalidName;
        }
        node.ns = &ns;
        if (def2->ns != 
# 3839 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 3839 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) {
            if (def2->ns[0] == 0) {
                node.ns = 
# 3841 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 3841 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ;
            } else {
                ns.href = def2->ns;
            }
        } else {
            ns.href = invalidName;
        }
        if (xmlRelaxNGElementMatch(&ctxt, def1, &node)) {
            if (def2->nameClass != 
# 3849 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 3849 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ) {
                ret = xmlRelaxNGCompareNameClasses(def2->nameClass, def1);
            } else {
                ret = 0;
            }
        } else {
            ret = 1;
        }
    } else {
        (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())), "Unimplemented block at %s:%d\n", "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c", 3858); ret = 0;
    }

    return (ret);
}
# 3876 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGCompareElemDefLists(xmlRelaxNGParserCtxtPtr ctxt
                              __attribute__((unused)), xmlRelaxNGDefinePtr * def1,
                              xmlRelaxNGDefinePtr * def2)
{
    xmlRelaxNGDefinePtr *basedef2 = def2;

    if ((def1 == 
# 3883 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 3883 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) || (def2 == 
# 3883 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 3883 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ))
        return (1);
    if ((*def1 == 
# 3885 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 3885 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) || (*def2 == 
# 3885 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 3885 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        ))
        return (1);
    while (*def1 != 
# 3887 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 3887 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) {
        while ((*def2) != 
# 3888 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 3888 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ) {
            if (xmlRelaxNGCompareNameClasses(*def1, *def2) == 0)
                return (0);
            def2++;
        }
        def2 = basedef2;
        def1++;
    }
    return (1);
}
# 3908 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGGenerateAttributes(xmlRelaxNGParserCtxtPtr ctxt,
                             xmlRelaxNGDefinePtr def)
{
    xmlRelaxNGDefinePtr parent, cur, tmp;





    if (ctxt->nbErrors != 0)
        return (-1);

    parent = 
# 3921 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
            ((void *)0)
# 3921 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                ;
    cur = def;
    while (cur != 
# 3923 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 3923 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        if ((cur->type == XML_RELAXNG_ELEMENT) ||
            (cur->type == XML_RELAXNG_TEXT) ||
            (cur->type == XML_RELAXNG_DATATYPE) ||
            (cur->type == XML_RELAXNG_PARAM) ||
            (cur->type == XML_RELAXNG_LIST) ||
            (cur->type == XML_RELAXNG_VALUE) ||
            (cur->type == XML_RELAXNG_EMPTY))
            return (0);
        if ((cur->type == XML_RELAXNG_CHOICE) ||
            (cur->type == XML_RELAXNG_INTERLEAVE) ||
            (cur->type == XML_RELAXNG_GROUP) ||
            (cur->type == XML_RELAXNG_ONEORMORE) ||
            (cur->type == XML_RELAXNG_ZEROORMORE) ||
            (cur->type == XML_RELAXNG_OPTIONAL) ||
            (cur->type == XML_RELAXNG_PARENTREF) ||
            (cur->type == XML_RELAXNG_EXTERNALREF) ||
            (cur->type == XML_RELAXNG_REF) ||
            (cur->type == XML_RELAXNG_DEF)) {
            if (cur->content != 
# 3942 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 3942 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ) {
                parent = cur;
                cur = cur->content;
                tmp = cur;
                while (tmp != 
# 3946 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 3946 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
                    tmp->parent = parent;
                    tmp = tmp->next;
                }
                continue;
            }
        }
        if (cur == def)
            break;
        if (cur->next != 
# 3955 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 3955 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ) {
            cur = cur->next;
            continue;
        }
        do {
            cur = cur->parent;
            if (cur == 
# 3961 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 3961 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          )
                break;
            if (cur == def)
                return (1);
            if (cur->next != 
# 3965 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 3965 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ) {
                cur = cur->next;
                break;
            }
        } while (cur != 
# 3969 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 3969 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           );
    }
    return (1);
}
# 3984 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGDefinePtr *
xmlRelaxNGGetElements(xmlRelaxNGParserCtxtPtr ctxt,
                      xmlRelaxNGDefinePtr def, int eora)
{
    xmlRelaxNGDefinePtr *ret = 
# 3988 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 3988 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  , parent, cur, tmp;
    int len = 0;
    int max = 0;





    if (ctxt->nbErrors != 0)
        return (
# 3997 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 3997 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );

    parent = 
# 3999 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
            ((void *)0)
# 3999 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                ;
    cur = def;
    while (cur != 
# 4001 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 4001 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        if (((eora == 0) && ((cur->type == XML_RELAXNG_ELEMENT) ||
                             (cur->type == XML_RELAXNG_TEXT))) ||
            ((eora == 1) && (cur->type == XML_RELAXNG_ATTRIBUTE))) {
            if (ret == 
# 4005 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 4005 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) {
                max = 10;
                ret = (xmlRelaxNGDefinePtr *)
                    xmlMalloc((max + 1) * sizeof(xmlRelaxNGDefinePtr));
                if (ret == 
# 4009 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 4009 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) {
                    xmlRngPErrMemory(ctxt, "getting element list\n");
                    return (
# 4011 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 4011 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               );
                }
            } else if (max <= len) {
         xmlRelaxNGDefinePtr *temp;

                max *= 2;
                temp = xmlRealloc(ret,
                               (max + 1) * sizeof(xmlRelaxNGDefinePtr));
                if (temp == 
# 4019 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 4019 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) {
                    xmlRngPErrMemory(ctxt, "getting element list\n");
      xmlFree(ret);
                    return (
# 4022 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 4022 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               );
                }
  ret = temp;
            }
            ret[len++] = cur;
            ret[len] = 
# 4027 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 4027 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ;
        } else if ((cur->type == XML_RELAXNG_CHOICE) ||
                   (cur->type == XML_RELAXNG_INTERLEAVE) ||
                   (cur->type == XML_RELAXNG_GROUP) ||
                   (cur->type == XML_RELAXNG_ONEORMORE) ||
                   (cur->type == XML_RELAXNG_ZEROORMORE) ||
                   (cur->type == XML_RELAXNG_OPTIONAL) ||
                   (cur->type == XML_RELAXNG_PARENTREF) ||
                   (cur->type == XML_RELAXNG_REF) ||
                   (cur->type == XML_RELAXNG_DEF) ||
     (cur->type == XML_RELAXNG_EXTERNALREF)) {




            if (cur->content != 
# 4042 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 4042 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ) {
                parent = cur;
                cur = cur->content;
                tmp = cur;
                while (tmp != 
# 4046 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 4046 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
                    tmp->parent = parent;
                    tmp = tmp->next;
                }
                continue;
            }
        }
        if (cur == def)
            break;
        if (cur->next != 
# 4055 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 4055 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ) {
            cur = cur->next;
            continue;
        }
        do {
            cur = cur->parent;
            if (cur == 
# 4061 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 4061 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          )
                break;
            if (cur == def)
                return (ret);
            if (cur->next != 
# 4065 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 4065 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ) {
                cur = cur->next;
                break;
            }
        } while (cur != 
# 4069 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 4069 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           );
    }
    return (ret);
}
# 4081 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRelaxNGCheckChoiceDeterminism(xmlRelaxNGParserCtxtPtr ctxt,
                                 xmlRelaxNGDefinePtr def)
{
    xmlRelaxNGDefinePtr **list;
    xmlRelaxNGDefinePtr cur;
    int nbchild = 0, i, j, ret;
    int is_nullable = 0;
    int is_indeterminist = 0;
    xmlHashTablePtr triage = 
# 4090 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 4090 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ;
    int is_triable = 1;

    if ((def == 
# 4093 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 4093 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) || (def->type != XML_RELAXNG_CHOICE))
        return;

    if (def->dflags & (1 << 5))
        return;





    if (ctxt->nbErrors != 0)
        return;

    is_nullable = xmlRelaxNGIsNullable(def);

    cur = def->content;
    while (cur != 
# 4109 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 4109 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        nbchild++;
        cur = cur->next;
    }

    list = (xmlRelaxNGDefinePtr **) xmlMalloc(nbchild *
                                              sizeof(xmlRelaxNGDefinePtr
                                                     *));
    if (list == 
# 4117 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 4117 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) {
        xmlRngPErrMemory(ctxt, "building choice\n");
        return;
    }
    i = 0;



    if (is_nullable == 0) {
        triage = xmlHashCreate__internal_alias(10);
    } else {
        is_triable = 0;
    }
    cur = def->content;
    while (cur != 
# 4131 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 4131 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        list[i] = xmlRelaxNGGetElements(ctxt, cur, 0);
        if ((list[i] == 
# 4133 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 4133 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) || (list[i][0] == 
# 4133 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                               ((void *)0)
# 4133 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                   )) {
            is_triable = 0;
        } else if (is_triable == 1) {
            xmlRelaxNGDefinePtr *tmp;
            int res;

            tmp = list[i];
            while ((*tmp != 
# 4140 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 4140 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) && (is_triable == 1)) {
                if ((*tmp)->type == XML_RELAXNG_TEXT) {
                    res = xmlHashAddEntry2__internal_alias(triage,
                                           (xmlChar *) "#text", 
# 4143 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                            ((void *)0)
# 4143 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                ,
                                           (void *) cur);
                    if (res != 0)
                        is_triable = -1;
                } else if (((*tmp)->type == XML_RELAXNG_ELEMENT) &&
                           ((*tmp)->name != 
# 4148 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                           ((void *)0)
# 4148 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                               )) {
                    if (((*tmp)->ns == 
# 4149 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 4149 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                          ) || ((*tmp)->ns[0] == 0))
                        res = xmlHashAddEntry2__internal_alias(triage,
                                               (*tmp)->name, 
# 4151 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                            ((void *)0)
# 4151 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                ,
                                               (void *) cur);
                    else
                        res = xmlHashAddEntry2__internal_alias(triage,
                                               (*tmp)->name, (*tmp)->ns,
                                               (void *) cur);
                    if (res != 0)
                        is_triable = -1;
                } else if ((*tmp)->type == XML_RELAXNG_ELEMENT) {
                    if (((*tmp)->ns == 
# 4160 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 4160 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                          ) || ((*tmp)->ns[0] == 0))
                        res = xmlHashAddEntry2__internal_alias(triage,
                                               (xmlChar *) "#any", 
# 4162 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                               ((void *)0)
# 4162 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                   ,
                                               (void *) cur);
                    else
                        res = xmlHashAddEntry2__internal_alias(triage,
                                               (xmlChar *) "#any", (*tmp)->ns,
                                               (void *) cur);
                    if (res != 0)
                        is_triable = -1;
                } else {
                    is_triable = -1;
                }
                tmp++;
            }
        }
        i++;
        cur = cur->next;
    }

    for (i = 0; i < nbchild; i++) {
        if (list[i] == 
# 4181 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 4181 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          )
            continue;
        for (j = 0; j < i; j++) {
            if (list[j] == 
# 4184 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 4184 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              )
                continue;
            ret = xmlRelaxNGCompareElemDefLists(ctxt, list[i], list[j]);
            if (ret == 0) {
                is_indeterminist = 1;
            }
        }
    }
    for (i = 0; i < nbchild; i++) {
        if (list[i] != 
# 4193 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 4193 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          )
            xmlFree(list[i]);
    }

    xmlFree(list);
    if (is_indeterminist) {
        def->dflags |= (1 << 2);
    }
    if (is_triable == 1) {
        def->dflags |= (1 << 4);
        def->data = triage;
    } else if (triage != 
# 4204 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 4204 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ) {
        xmlHashFree__internal_alias(triage, 
# 4205 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 4205 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               );
    }
    def->dflags |= (1 << 5);
}
# 4217 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRelaxNGCheckGroupAttrs(xmlRelaxNGParserCtxtPtr ctxt,
                          xmlRelaxNGDefinePtr def)
{
    xmlRelaxNGDefinePtr **list;
    xmlRelaxNGDefinePtr cur;
    int nbchild = 0, i, j, ret;

    if ((def == 
# 4225 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 4225 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) ||
        ((def->type != XML_RELAXNG_GROUP) &&
         (def->type != XML_RELAXNG_ELEMENT)))
        return;

    if (def->dflags & (1 << 5))
        return;





    if (ctxt->nbErrors != 0)
        return;

    cur = def->attrs;
    while (cur != 
# 4241 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 4241 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        nbchild++;
        cur = cur->next;
    }
    cur = def->content;
    while (cur != 
# 4246 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 4246 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        nbchild++;
        cur = cur->next;
    }

    list = (xmlRelaxNGDefinePtr **) xmlMalloc(nbchild *
                                              sizeof(xmlRelaxNGDefinePtr
                                                     *));
    if (list == 
# 4254 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 4254 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) {
        xmlRngPErrMemory(ctxt, "building group\n");
        return;
    }
    i = 0;
    cur = def->attrs;
    while (cur != 
# 4260 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 4260 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        list[i] = xmlRelaxNGGetElements(ctxt, cur, 1);
        i++;
        cur = cur->next;
    }
    cur = def->content;
    while (cur != 
# 4266 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 4266 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        list[i] = xmlRelaxNGGetElements(ctxt, cur, 1);
        i++;
        cur = cur->next;
    }

    for (i = 0; i < nbchild; i++) {
        if (list[i] == 
# 4273 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 4273 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          )
            continue;
        for (j = 0; j < i; j++) {
            if (list[j] == 
# 4276 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 4276 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              )
                continue;
            ret = xmlRelaxNGCompareElemDefLists(ctxt, list[i], list[j]);
            if (ret == 0) {
                xmlRngPErr(ctxt, def->node, XML_RNGP_GROUP_ATTR_CONFLICT,
                           "Attributes conflicts in group\n", 
# 4281 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                             ((void *)0)
# 4281 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                 , 
# 4281 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                   ((void *)0)
# 4281 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                       );
            }
        }
    }
    for (i = 0; i < nbchild; i++) {
        if (list[i] != 
# 4286 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 4286 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          )
            xmlFree(list[i]);
    }

    xmlFree(list);
    def->dflags |= (1 << 5);
}
# 4309 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRelaxNGComputeInterleaves(xmlRelaxNGDefinePtr def,
                             xmlRelaxNGParserCtxtPtr ctxt,
                             xmlChar * name __attribute__((unused)))
{
    xmlRelaxNGDefinePtr cur, *tmp;

    xmlRelaxNGPartitionPtr partitions = 
# 4316 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                       ((void *)0)
# 4316 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                           ;
    xmlRelaxNGInterleaveGroupPtr *groups = 
# 4317 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                          ((void *)0)
# 4317 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                              ;
    xmlRelaxNGInterleaveGroupPtr group;
    int i, j, ret, res;
    int nbgroups = 0;
    int nbchild = 0;
    int is_mixed = 0;
    int is_determinist = 1;





    if (ctxt->nbErrors != 0)
        return;





    cur = def->content;
    while (cur != 
# 4337 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 4337 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        nbchild++;
        cur = cur->next;
    }




    groups = (xmlRelaxNGInterleaveGroupPtr *)
        xmlMalloc(nbchild * sizeof(xmlRelaxNGInterleaveGroupPtr));
    if (groups == 
# 4347 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 4347 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     )
        goto error;
    cur = def->content;
    while (cur != 
# 4350 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 4350 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        groups[nbgroups] = (xmlRelaxNGInterleaveGroupPtr)
            xmlMalloc(sizeof(xmlRelaxNGInterleaveGroup));
        if (groups[nbgroups] == 
# 4353 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 4353 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   )
            goto error;
        if (cur->type == XML_RELAXNG_TEXT)
            is_mixed++;
        groups[nbgroups]->rule = cur;
        groups[nbgroups]->defs = xmlRelaxNGGetElements(ctxt, cur, 0);
        groups[nbgroups]->attrs = xmlRelaxNGGetElements(ctxt, cur, 1);
        nbgroups++;
        cur = cur->next;
    }







    partitions = (xmlRelaxNGPartitionPtr)
        xmlMalloc(sizeof(xmlRelaxNGPartition));
    if (partitions == 
# 4372 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 4372 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         )
        goto error;
    memset(partitions, 0, sizeof(xmlRelaxNGPartition));
    partitions->nbgroups = nbgroups;
    partitions->triage = xmlHashCreate__internal_alias(nbgroups);
    for (i = 0; i < nbgroups; i++) {
        group = groups[i];
        for (j = i + 1; j < nbgroups; j++) {
            if (groups[j] == 
# 4380 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 4380 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                )
                continue;

            ret = xmlRelaxNGCompareElemDefLists(ctxt, group->defs,
                                                groups[j]->defs);
            if (ret == 0) {
                xmlRngPErr(ctxt, def->node, XML_RNGP_ELEM_TEXT_CONFLICT,
                           "Element or text conflicts in interleave\n",
                           
# 4388 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 4388 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              , 
# 4388 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 4388 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
            ret = xmlRelaxNGCompareElemDefLists(ctxt, group->attrs,
                                                groups[j]->attrs);
            if (ret == 0) {
                xmlRngPErr(ctxt, def->node, XML_RNGP_ATTR_CONFLICT,
                           "Attributes conflicts in interleave\n", 
# 4394 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                  ((void *)0)
# 4394 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                      ,
                           
# 4395 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 4395 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              );
            }
        }
        tmp = group->defs;
        if ((tmp != 
# 4399 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 4399 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) && (*tmp != 
# 4399 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 4399 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                         )) {
            while (*tmp != 
# 4400 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 4400 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) {
                if ((*tmp)->type == XML_RELAXNG_TEXT) {
                    res = xmlHashAddEntry2__internal_alias(partitions->triage,
                                           (xmlChar *) "#text", 
# 4403 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                            ((void *)0)
# 4403 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                ,
                                           (void *) (long) (i + 1));
                    if (res != 0)
                        is_determinist = -1;
                } else if (((*tmp)->type == XML_RELAXNG_ELEMENT) &&
                           ((*tmp)->name != 
# 4408 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                           ((void *)0)
# 4408 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                               )) {
                    if (((*tmp)->ns == 
# 4409 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 4409 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                          ) || ((*tmp)->ns[0] == 0))
                        res = xmlHashAddEntry2__internal_alias(partitions->triage,
                                               (*tmp)->name, 
# 4411 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                            ((void *)0)
# 4411 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                ,
                                               (void *) (long) (i + 1));
                    else
                        res = xmlHashAddEntry2__internal_alias(partitions->triage,
                                               (*tmp)->name, (*tmp)->ns,
                                               (void *) (long) (i + 1));
                    if (res != 0)
                        is_determinist = -1;
                } else if ((*tmp)->type == XML_RELAXNG_ELEMENT) {
                    if (((*tmp)->ns == 
# 4420 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 4420 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                          ) || ((*tmp)->ns[0] == 0))
                        res = xmlHashAddEntry2__internal_alias(partitions->triage,
                                               (xmlChar *) "#any", 
# 4422 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                               ((void *)0)
# 4422 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                   ,
                                               (void *) (long) (i + 1));
                    else
                        res = xmlHashAddEntry2__internal_alias(partitions->triage,
                                               (xmlChar *) "#any", (*tmp)->ns,
                                               (void *) (long) (i + 1));
                    if ((*tmp)->nameClass != 
# 4428 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                            ((void *)0)
# 4428 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                )
                        is_determinist = 2;
                    if (res != 0)
                        is_determinist = -1;
                } else {
                    is_determinist = -1;
                }
                tmp++;
            }
        } else {
            is_determinist = 0;
        }
    }
    partitions->groups = groups;




    def->data = partitions;
    if (is_mixed != 0)
        def->dflags |= (1 << 3);
    if (is_determinist == 1)
        partitions->flags = 1;
    if (is_determinist == 2)
        partitions->flags = 1 | 2;
    return;

  error:
    xmlRngPErrMemory(ctxt, "in interleave computation\n");
    if (groups != 
# 4457 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 4457 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        for (i = 0; i < nbgroups; i++)
            if (groups[i] != 
# 4459 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 4459 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ) {
                if (groups[i]->defs != 
# 4460 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 4460 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                          )
                    xmlFree(groups[i]->defs);
                xmlFree(groups[i]);
            }
        xmlFree(groups);
    }
    xmlRelaxNGFreePartition(partitions);
}
# 4478 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGDefinePtr
xmlRelaxNGParseInterleave(xmlRelaxNGParserCtxtPtr ctxt, xmlNodePtr node)
{
    xmlRelaxNGDefinePtr def = 
# 4481 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 4481 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ;
    xmlRelaxNGDefinePtr last = 
# 4482 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 4482 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  , cur;
    xmlNodePtr child;

    def = xmlRelaxNGNewDefine(ctxt, node);
    if (def == 
# 4486 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4486 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) {
        return (
# 4487 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 4487 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }
    def->type = XML_RELAXNG_INTERLEAVE;

    if (ctxt->interleaves == 
# 4491 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 4491 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                )
        ctxt->interleaves = xmlHashCreate__internal_alias(10);
    if (ctxt->interleaves == 
# 4493 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 4493 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ) {
        xmlRngPErrMemory(ctxt, "create interleaves\n");
    } else {
        char name[32];

        snprintf(name, 32, "interleave%d", ctxt->nbInterleaves++);
        if (xmlHashAddEntry__internal_alias(ctxt->interleaves, (xmlChar *) name, def) < 0) {
            xmlRngPErr(ctxt, node, XML_RNGP_INTERLEAVE_ADD,
                       "Failed to add %s to hash table\n",
         (const xmlChar *) name, 
# 4502 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 4502 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
        }
    }
    child = node->children;
    if (child == 
# 4506 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 4506 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) {
        xmlRngPErr(ctxt, node, XML_RNGP_INTERLEAVE_NO_CONTENT,
                   "Element interleave is empty\n", 
# 4508 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                   ((void *)0)
# 4508 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                       , 
# 4508 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                         ((void *)0)
# 4508 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                             );
    }
    while (child != 
# 4510 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 4510 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) {
        if (((child != 
# 4511 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
           ((void *)0)
# 4511 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
           ) && (child->ns != 
# 4511 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
           ((void *)0)
# 4511 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
           ) && (child->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(child->name, (const xmlChar *) "element")) && (xmlStrEqual__internal_alias(child->ns->href, xmlRelaxNGNs)))) {
            cur = xmlRelaxNGParseElement(ctxt, child);
        } else {
            cur = xmlRelaxNGParsePattern(ctxt, child);
        }
        if (cur != 
# 4516 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 4516 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) {
            cur->parent = def;
            if (last == 
# 4518 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 4518 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) {
                def->content = last = cur;
            } else {
                last->next = cur;
                last = cur;
            }
        }
        child = child->next;
    }

    return (def);
}
# 4540 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGParseInclude(xmlRelaxNGParserCtxtPtr ctxt, xmlNodePtr node)
{
    xmlRelaxNGIncludePtr incl;
    xmlNodePtr root;
    int ret = 0, tmp;

    incl = node->psvi;
    if (incl == 
# 4548 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 4548 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) {
        xmlRngPErr(ctxt, node, XML_RNGP_INCLUDE_EMPTY,
                   "Include node has no data\n", 
# 4550 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                ((void *)0)
# 4550 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                    , 
# 4550 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                      ((void *)0)
# 4550 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                          );
        return (-1);
    }
    root = xmlDocGetRootElement__internal_alias(incl->doc);
    if (root == 
# 4554 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 4554 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) {
        xmlRngPErr(ctxt, node, XML_RNGP_EMPTY, "Include document is empty\n",
                   
# 4556 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 4556 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      , 
# 4556 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 4556 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            );
        return (-1);
    }
    if (!xmlStrEqual__internal_alias(root->name, (xmlChar *) "grammar")) {
        xmlRngPErr(ctxt, node, XML_RNGP_GRAMMAR_MISSING,
                   "Include document root is not a grammar\n", 
# 4561 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                              ((void *)0)
# 4561 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                  , 
# 4561 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                    ((void *)0)
# 4561 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                        );
        return (-1);
    }




    if (root->children != 
# 4568 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 4568 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ) {
        tmp = xmlRelaxNGParseGrammarContent(ctxt, root->children);
        if (tmp != 0)
            ret = -1;
    }
    if (node->children != 
# 4573 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 4573 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ) {
        tmp = xmlRelaxNGParseGrammarContent(ctxt, node->children);
        if (tmp != 0)
            ret = -1;
    }
    return (ret);
}
# 4590 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGParseDefine(xmlRelaxNGParserCtxtPtr ctxt, xmlNodePtr node)
{
    xmlChar *name;
    int ret = 0, tmp;
    xmlRelaxNGDefinePtr def;
    const xmlChar *olddefine;

    name = xmlGetProp__internal_alias(node, (xmlChar *) "name");
    if (name == 
# 4599 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 4599 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) {
        xmlRngPErr(ctxt, node, XML_RNGP_DEFINE_NAME_MISSING,
                   "define has no name\n", 
# 4601 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                          ((void *)0)
# 4601 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                              , 
# 4601 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                ((void *)0)
# 4601 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                    );
    } else {
        xmlRelaxNGNormExtSpace(name);
        if (xmlValidateNCName__internal_alias(name, 0)) {
            xmlRngPErr(ctxt, node, XML_RNGP_INVALID_DEFINE_NAME,
                       "define name '%s' is not an NCName\n", name, 
# 4606 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                   ((void *)0)
# 4606 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                       );
        }
        def = xmlRelaxNGNewDefine(ctxt, node);
        if (def == 
# 4609 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 4609 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) {
            xmlFree(name);
            return (-1);
        }
        def->type = XML_RELAXNG_DEF;
        def->name = name;
        if (node->children == 
# 4615 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 4615 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
            xmlRngPErr(ctxt, node, XML_RNGP_DEFINE_EMPTY,
                       "define has no children\n", 
# 4617 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                  ((void *)0)
# 4617 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                      , 
# 4617 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                        ((void *)0)
# 4617 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                            );
        } else {
            olddefine = ctxt->define;
            ctxt->define = name;
            def->content =
                xmlRelaxNGParsePatterns(ctxt, node->children, 0);
            ctxt->define = olddefine;
        }
        if (ctxt->grammar->defs == 
# 4625 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 4625 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      )
            ctxt->grammar->defs = xmlHashCreate__internal_alias(10);
        if (ctxt->grammar->defs == 
# 4627 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 4627 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ) {
            xmlRngPErr(ctxt, node, XML_RNGP_DEFINE_CREATE_FAILED,
                       "Could not create definition hash\n", 
# 4629 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                            ((void *)0)
# 4629 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                , 
# 4629 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                  ((void *)0)
# 4629 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                      );
            ret = -1;
        } else {
            tmp = xmlHashAddEntry__internal_alias(ctxt->grammar->defs, name, def);
            if (tmp < 0) {
                xmlRelaxNGDefinePtr prev;

                prev = xmlHashLookup__internal_alias(ctxt->grammar->defs, name);
                if (prev == 
# 4637 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 4637 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) {
                    xmlRngPErr(ctxt, node, XML_RNGP_DEFINE_CREATE_FAILED,
                               "Internal error on define aggregation of %s\n",
                               name, 
# 4640 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 4640 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        );
                    ret = -1;
                } else {
                    while (prev->nextHash != 
# 4643 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                            ((void *)0)
# 4643 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                )
                        prev = prev->nextHash;
                    prev->nextHash = def;
                }
            }
        }
    }
    return (ret);
}
# 4661 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRelaxNGParseImportRef(void *payload, void *data, xmlChar *name) {
    xmlRelaxNGParserCtxtPtr ctxt = (xmlRelaxNGParserCtxtPtr) data;
    xmlRelaxNGDefinePtr def = (xmlRelaxNGDefinePtr) payload;
    int tmp;

    def->dflags |= (1 << 8);

    tmp = xmlHashAddEntry__internal_alias(ctxt->grammar->refs, name, def);
    if (tmp < 0) {
        xmlRelaxNGDefinePtr prev;

        prev = (xmlRelaxNGDefinePtr)
            xmlHashLookup__internal_alias(ctxt->grammar->refs, def->name);
        if (prev == 
# 4675 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 4675 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) {
            if (def->name != 
# 4676 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 4676 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ) {
                xmlRngPErr(ctxt, 
# 4677 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 4677 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    , XML_RNGP_REF_CREATE_FAILED,
                           "Error refs definitions '%s'\n",
                           def->name, 
# 4679 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 4679 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                         );
            } else {
                xmlRngPErr(ctxt, 
# 4681 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 4681 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    , XML_RNGP_REF_CREATE_FAILED,
                           "Error refs definitions\n",
                           
# 4683 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 4683 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              , 
# 4683 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 4683 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
        } else {
            def->nextHash = prev->nextHash;
            prev->nextHash = def;
        }
    }
}
# 4701 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGParseImportRefs(xmlRelaxNGParserCtxtPtr ctxt,
                          xmlRelaxNGGrammarPtr grammar) {
    if ((ctxt == 
# 4704 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 4704 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) || (grammar == 
# 4704 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 4704 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                         ) || (ctxt->grammar == 
# 4704 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                ((void *)0)
# 4704 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                    ))
        return(-1);
    if (grammar->refs == 
# 4706 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 4706 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            )
        return(0);
    if (ctxt->grammar->refs == 
# 4708 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 4708 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  )
        ctxt->grammar->refs = xmlHashCreate__internal_alias(10);
    if (ctxt->grammar->refs == 
# 4710 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 4710 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
        xmlRngPErr(ctxt, 
# 4711 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 4711 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            , XML_RNGP_REF_CREATE_FAILED,
                   "Could not create references hash\n", 
# 4712 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                        ((void *)0)
# 4712 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                            , 
# 4712 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                              ((void *)0)
# 4712 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                  );
        return(-1);
    }
    xmlHashScan__internal_alias(grammar->refs, xmlRelaxNGParseImportRef, ctxt);
    return(0);
}
# 4728 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGDefinePtr
xmlRelaxNGProcessExternalRef(xmlRelaxNGParserCtxtPtr ctxt, xmlNodePtr node)
{
    xmlRelaxNGDocumentPtr docu;
    xmlNodePtr root, tmp;
    xmlChar *ns;
    int newNs = 0, oldflags;
    xmlRelaxNGDefinePtr def;

    docu = node->psvi;
    if (docu != 
# 4738 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 4738 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) {
        def = xmlRelaxNGNewDefine(ctxt, node);
        if (def == 
# 4740 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 4740 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      )
            return (
# 4741 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 4741 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       );
        def->type = XML_RELAXNG_EXTERNALREF;

        if (docu->content == 
# 4744 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 4744 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ) {



            root = xmlDocGetRootElement__internal_alias(docu->doc);
            if (root == 
# 4749 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 4749 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) {
                xmlRngPErr(ctxt, node, XML_RNGP_EXTERNALREF_EMTPY,
                           "xmlRelaxNGParse: %s is empty\n", ctxt->URL,
                           
# 4752 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 4752 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              );
                return (
# 4753 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 4753 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           );
            }



            ns = xmlGetProp__internal_alias(root, (xmlChar *) "ns");
            if (ns == 
# 4759 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 4759 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ) {
                tmp = node;
                while ((tmp != 
# 4761 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 4761 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) && (tmp->type == XML_ELEMENT_NODE)) {
                    ns = xmlGetProp__internal_alias(tmp, (xmlChar *) "ns");
                    if (ns != 
# 4763 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 4763 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
                        break;
                    }
                    tmp = tmp->parent;
                }
                if (ns != 
# 4768 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 4768 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ) {
                    xmlSetProp__internal_alias(root, (xmlChar *) "ns", ns);
                    newNs = 1;
                    xmlFree(ns);
                }
            } else {
                xmlFree(ns);
            }




            oldflags = ctxt->flags;
            ctxt->flags |= (1 << 7);
            docu->schema = xmlRelaxNGParseDocument(ctxt, root);
            ctxt->flags = oldflags;
            if ((docu->schema != 
# 4784 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 4784 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    ) &&
                (docu->schema->topgrammar != 
# 4785 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                            ((void *)0)
# 4785 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                )) {
                docu->content = docu->schema->topgrammar->start;
                if (docu->schema->topgrammar->refs)
                    xmlRelaxNGParseImportRefs(ctxt, docu->schema->topgrammar);
            }




            if (newNs == 1) {
                xmlUnsetProp__internal_alias(root, (xmlChar *) "ns");
            }
        }
        def->content = docu->content;
    } else {
        def = 
# 4800 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
             ((void *)0)
# 4800 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                 ;
    }
    return (def);
}
# 4815 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGDefinePtr
xmlRelaxNGParsePattern(xmlRelaxNGParserCtxtPtr ctxt, xmlNodePtr node)
{
    xmlRelaxNGDefinePtr def = 
# 4818 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 4818 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ;

    if (node == 
# 4820 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 4820 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) {
        return (
# 4821 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 4821 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }
    if (((node != 
# 4823 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 4823 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       ) && (node->ns != 
# 4823 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 4823 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "element")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        def = xmlRelaxNGParseElement(ctxt, node);
    } else if (((node != 
# 4825 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4825 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->ns != 
# 4825 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4825 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "attribute")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        def = xmlRelaxNGParseAttribute(ctxt, node);
    } else if (((node != 
# 4827 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4827 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->ns != 
# 4827 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4827 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "empty")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        def = xmlRelaxNGNewDefine(ctxt, node);
        if (def == 
# 4829 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 4829 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      )
            return (
# 4830 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 4830 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       );
        def->type = XML_RELAXNG_EMPTY;
        if (node->children != 
# 4832 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 4832 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
            xmlRngPErr(ctxt, node, XML_RNGP_EMPTY_NOT_EMPTY,
                       "empty: had a child node\n", 
# 4834 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                   ((void *)0)
# 4834 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                       , 
# 4834 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                         ((void *)0)
# 4834 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                             );
        }
    } else if (((node != 
# 4836 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4836 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->ns != 
# 4836 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4836 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "text")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        def = xmlRelaxNGNewDefine(ctxt, node);
        if (def == 
# 4838 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 4838 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      )
            return (
# 4839 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 4839 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       );
        def->type = XML_RELAXNG_TEXT;
        if (node->children != 
# 4841 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 4841 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
            xmlRngPErr(ctxt, node, XML_RNGP_TEXT_HAS_CHILD,
                       "text: had a child node\n", 
# 4843 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                  ((void *)0)
# 4843 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                      , 
# 4843 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                        ((void *)0)
# 4843 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                            );
        }
    } else if (((node != 
# 4845 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4845 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->ns != 
# 4845 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4845 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "zeroOrMore")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        def = xmlRelaxNGNewDefine(ctxt, node);
        if (def == 
# 4847 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 4847 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      )
            return (
# 4848 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 4848 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       );
        def->type = XML_RELAXNG_ZEROORMORE;
        if (node->children == 
# 4850 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 4850 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
            xmlRngPErr(ctxt, node, XML_RNGP_EMPTY_CONSTRUCT,
                       "Element %s is empty\n", node->name, 
# 4852 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                           ((void *)0)
# 4852 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                               );
        } else {
            def->content =
                xmlRelaxNGParsePatterns(ctxt, node->children, 1);
        }
    } else if (((node != 
# 4857 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4857 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->ns != 
# 4857 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4857 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "oneOrMore")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        def = xmlRelaxNGNewDefine(ctxt, node);
        if (def == 
# 4859 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 4859 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      )
            return (
# 4860 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 4860 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       );
        def->type = XML_RELAXNG_ONEORMORE;
        if (node->children == 
# 4862 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 4862 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
            xmlRngPErr(ctxt, node, XML_RNGP_EMPTY_CONSTRUCT,
                       "Element %s is empty\n", node->name, 
# 4864 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                           ((void *)0)
# 4864 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                               );
        } else {
            def->content =
                xmlRelaxNGParsePatterns(ctxt, node->children, 1);
        }
    } else if (((node != 
# 4869 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4869 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->ns != 
# 4869 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4869 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "optional")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        def = xmlRelaxNGNewDefine(ctxt, node);
        if (def == 
# 4871 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 4871 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      )
            return (
# 4872 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 4872 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       );
        def->type = XML_RELAXNG_OPTIONAL;
        if (node->children == 
# 4874 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 4874 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
            xmlRngPErr(ctxt, node, XML_RNGP_EMPTY_CONSTRUCT,
                       "Element %s is empty\n", node->name, 
# 4876 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                           ((void *)0)
# 4876 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                               );
        } else {
            def->content =
                xmlRelaxNGParsePatterns(ctxt, node->children, 1);
        }
    } else if (((node != 
# 4881 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4881 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->ns != 
# 4881 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4881 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "choice")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        def = xmlRelaxNGNewDefine(ctxt, node);
        if (def == 
# 4883 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 4883 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      )
            return (
# 4884 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 4884 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       );
        def->type = XML_RELAXNG_CHOICE;
        if (node->children == 
# 4886 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 4886 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
            xmlRngPErr(ctxt, node, XML_RNGP_EMPTY_CONSTRUCT,
                       "Element %s is empty\n", node->name, 
# 4888 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                           ((void *)0)
# 4888 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                               );
        } else {
            def->content =
                xmlRelaxNGParsePatterns(ctxt, node->children, 0);
        }
    } else if (((node != 
# 4893 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4893 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->ns != 
# 4893 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4893 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "group")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        def = xmlRelaxNGNewDefine(ctxt, node);
        if (def == 
# 4895 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 4895 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      )
            return (
# 4896 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 4896 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       );
        def->type = XML_RELAXNG_GROUP;
        if (node->children == 
# 4898 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 4898 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
            xmlRngPErr(ctxt, node, XML_RNGP_EMPTY_CONSTRUCT,
                       "Element %s is empty\n", node->name, 
# 4900 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                           ((void *)0)
# 4900 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                               );
        } else {
            def->content =
                xmlRelaxNGParsePatterns(ctxt, node->children, 0);
        }
    } else if (((node != 
# 4905 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4905 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->ns != 
# 4905 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4905 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "ref")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        def = xmlRelaxNGNewDefine(ctxt, node);
        if (def == 
# 4907 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 4907 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      )
            return (
# 4908 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 4908 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       );
        def->type = XML_RELAXNG_REF;
        def->name = xmlGetProp__internal_alias(node, (xmlChar *) "name");
        if (def->name == 
# 4911 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 4911 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ) {
            xmlRngPErr(ctxt, node, XML_RNGP_REF_NO_NAME, "ref has no name\n",
                       
# 4913 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 4913 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          , 
# 4913 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 4913 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                );
        } else {
            xmlRelaxNGNormExtSpace(def->name);
            if (xmlValidateNCName__internal_alias(def->name, 0)) {
                xmlRngPErr(ctxt, node, XML_RNGP_REF_NAME_INVALID,
                           "ref name '%s' is not an NCName\n", def->name,
                           
# 4919 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 4919 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              );
            }
        }
        if (node->children != 
# 4922 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 4922 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
            xmlRngPErr(ctxt, node, XML_RNGP_REF_NOT_EMPTY, "ref is not empty\n",
                       
# 4924 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 4924 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          , 
# 4924 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 4924 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                );
        }
        if (ctxt->grammar->refs == 
# 4926 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 4926 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      )
            ctxt->grammar->refs = xmlHashCreate__internal_alias(10);
        if (ctxt->grammar->refs == 
# 4928 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 4928 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ) {
            xmlRngPErr(ctxt, node, XML_RNGP_REF_CREATE_FAILED,
                       "Could not create references hash\n", 
# 4930 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                            ((void *)0)
# 4930 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                , 
# 4930 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                  ((void *)0)
# 4930 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                      );
            def = 
# 4931 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 4931 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ;
        } else {
            int tmp;

            tmp = xmlHashAddEntry__internal_alias(ctxt->grammar->refs, def->name, def);
            if (tmp < 0) {
                xmlRelaxNGDefinePtr prev;

                prev = (xmlRelaxNGDefinePtr)
                    xmlHashLookup__internal_alias(ctxt->grammar->refs, def->name);
                if (prev == 
# 4941 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 4941 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) {
                    if (def->name != 
# 4942 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 4942 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        ) {
          xmlRngPErr(ctxt, node, XML_RNGP_REF_CREATE_FAILED,
       "Error refs definitions '%s'\n",
       def->name, 
# 4945 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 4945 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     );
                    } else {
          xmlRngPErr(ctxt, node, XML_RNGP_REF_CREATE_FAILED,
       "Error refs definitions\n",
       
# 4949 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
      ((void *)0)
# 4949 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
          , 
# 4949 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
            ((void *)0)
# 4949 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                );
                    }
                    def = 
# 4951 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 4951 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ;
                } else {
                    def->nextHash = prev->nextHash;
                    prev->nextHash = def;
                }
            }
        }
    } else if (((node != 
# 4958 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4958 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->ns != 
# 4958 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4958 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "data")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        def = xmlRelaxNGParseData(ctxt, node);
    } else if (((node != 
# 4960 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4960 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->ns != 
# 4960 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4960 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "value")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        def = xmlRelaxNGParseValue(ctxt, node);
    } else if (((node != 
# 4962 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4962 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->ns != 
# 4962 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4962 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "list")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        def = xmlRelaxNGNewDefine(ctxt, node);
        if (def == 
# 4964 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 4964 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      )
            return (
# 4965 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 4965 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       );
        def->type = XML_RELAXNG_LIST;
        if (node->children == 
# 4967 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 4967 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
            xmlRngPErr(ctxt, node, XML_RNGP_EMPTY_CONSTRUCT,
                       "Element %s is empty\n", node->name, 
# 4969 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                           ((void *)0)
# 4969 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                               );
        } else {
            def->content =
                xmlRelaxNGParsePatterns(ctxt, node->children, 0);
        }
    } else if (((node != 
# 4974 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4974 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->ns != 
# 4974 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4974 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "interleave")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        def = xmlRelaxNGParseInterleave(ctxt, node);
    } else if (((node != 
# 4976 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4976 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->ns != 
# 4976 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4976 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "externalRef")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        def = xmlRelaxNGProcessExternalRef(ctxt, node);
    } else if (((node != 
# 4978 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4978 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->ns != 
# 4978 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4978 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "notAllowed")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        def = xmlRelaxNGNewDefine(ctxt, node);
        if (def == 
# 4980 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 4980 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      )
            return (
# 4981 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 4981 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       );
        def->type = XML_RELAXNG_NOT_ALLOWED;
        if (node->children != 
# 4983 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 4983 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
            xmlRngPErr(ctxt, node, XML_RNGP_NOTALLOWED_NOT_EMPTY,
                       "xmlRelaxNGParse: notAllowed element is not empty\n",
                       
# 4986 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 4986 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          , 
# 4986 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 4986 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                );
        }
    } else if (((node != 
# 4988 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4988 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->ns != 
# 4988 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 4988 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "grammar")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        xmlRelaxNGGrammarPtr grammar, old;
        xmlRelaxNGGrammarPtr oldparent;






        oldparent = ctxt->parentgrammar;
        old = ctxt->grammar;
        ctxt->parentgrammar = old;
        grammar = xmlRelaxNGParseGrammar(ctxt, node->children);
        if (old != 
# 5001 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 5001 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) {
            ctxt->grammar = old;
            ctxt->parentgrammar = oldparent;






        }
        if (grammar != 
# 5011 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 5011 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          )
            def = grammar->start;
        else
            def = 
# 5014 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 5014 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ;
    } else if (((node != 
# 5015 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 5015 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->ns != 
# 5015 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 5015 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "parentRef")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        if (ctxt->parentgrammar == 
# 5016 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 5016 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ) {
            xmlRngPErr(ctxt, node, XML_RNGP_PARENTREF_NO_PARENT,
                       "Use of parentRef without a parent grammar\n", 
# 5018 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                     ((void *)0)
# 5018 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                         ,
                       
# 5019 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 5019 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          );
            return (
# 5020 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 5020 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       );
        }
        def = xmlRelaxNGNewDefine(ctxt, node);
        if (def == 
# 5023 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 5023 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      )
            return (
# 5024 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 5024 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       );
        def->type = XML_RELAXNG_PARENTREF;
        def->name = xmlGetProp__internal_alias(node, (xmlChar *) "name");
        if (def->name == 
# 5027 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 5027 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ) {
            xmlRngPErr(ctxt, node, XML_RNGP_PARENTREF_NO_NAME,
                       "parentRef has no name\n", 
# 5029 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                 ((void *)0)
# 5029 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                     , 
# 5029 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                       ((void *)0)
# 5029 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                           );
        } else {
            xmlRelaxNGNormExtSpace(def->name);
            if (xmlValidateNCName__internal_alias(def->name, 0)) {
                xmlRngPErr(ctxt, node, XML_RNGP_PARENTREF_NAME_INVALID,
                           "parentRef name '%s' is not an NCName\n",
                           def->name, 
# 5035 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 5035 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                         );
            }
        }
        if (node->children != 
# 5038 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 5038 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
            xmlRngPErr(ctxt, node, XML_RNGP_PARENTREF_NOT_EMPTY,
                       "parentRef is not empty\n", 
# 5040 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                  ((void *)0)
# 5040 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                      , 
# 5040 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                        ((void *)0)
# 5040 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                            );
        }
        if (ctxt->parentgrammar->refs == 
# 5042 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                        ((void *)0)
# 5042 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                            )
            ctxt->parentgrammar->refs = xmlHashCreate__internal_alias(10);
        if (ctxt->parentgrammar->refs == 
# 5044 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                        ((void *)0)
# 5044 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                            ) {
            xmlRngPErr(ctxt, node, XML_RNGP_PARENTREF_CREATE_FAILED,
                       "Could not create references hash\n", 
# 5046 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                            ((void *)0)
# 5046 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                , 
# 5046 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                  ((void *)0)
# 5046 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                      );
            def = 
# 5047 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 5047 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ;
        } else if (def->name != 
# 5048 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 5048 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ) {
            int tmp;

            tmp =
                xmlHashAddEntry__internal_alias(ctxt->parentgrammar->refs, def->name, def);
            if (tmp < 0) {
                xmlRelaxNGDefinePtr prev;

                prev = (xmlRelaxNGDefinePtr)
                    xmlHashLookup__internal_alias(ctxt->parentgrammar->refs, def->name);
                if (prev == 
# 5058 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 5058 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) {
                    xmlRngPErr(ctxt, node, XML_RNGP_PARENTREF_CREATE_FAILED,
                               "Internal error parentRef definitions '%s'\n",
                               def->name, 
# 5061 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                         ((void *)0)
# 5061 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                             );
                    def = 
# 5062 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 5062 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ;
                } else {
                    def->nextHash = prev->nextHash;
                    prev->nextHash = def;
                }
            }
        }
    } else if (((node != 
# 5069 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 5069 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->ns != 
# 5069 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 5069 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "mixed")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        if (node->children == 
# 5070 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 5070 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
            xmlRngPErr(ctxt, node, XML_RNGP_EMPTY_CONSTRUCT, "Mixed is empty\n",
                       
# 5072 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 5072 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          , 
# 5072 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 5072 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                );
            def = 
# 5073 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 5073 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ;
        } else {
            def = xmlRelaxNGParseInterleave(ctxt, node);
            if (def != 
# 5076 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 5076 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) {
                xmlRelaxNGDefinePtr tmp;

                if ((def->content != 
# 5079 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 5079 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        ) && (def->content->next != 
# 5079 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                    ((void *)0)
# 5079 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                        )) {
                    tmp = xmlRelaxNGNewDefine(ctxt, node);
                    if (tmp != 
# 5081 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 5081 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                        tmp->type = XML_RELAXNG_GROUP;
                        tmp->content = def->content;
                        def->content = tmp;
                    }
                }

                tmp = xmlRelaxNGNewDefine(ctxt, node);
                if (tmp == 
# 5089 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 5089 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              )
                    return (def);
                tmp->type = XML_RELAXNG_TEXT;
                tmp->next = def->content;
                def->content = tmp;
            }
        }
    } else {
        xmlRngPErr(ctxt, node, XML_RNGP_UNKNOWN_CONSTRUCT,
                   "Unexpected node %s is not a pattern\n", node->name,
                   
# 5099 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 5099 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      );
        def = 
# 5100 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
             ((void *)0)
# 5100 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                 ;
    }
    return (def);
}
# 5114 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGDefinePtr
xmlRelaxNGParseAttribute(xmlRelaxNGParserCtxtPtr ctxt, xmlNodePtr node)
{
    xmlRelaxNGDefinePtr ret, cur;
    xmlNodePtr child;
    int old_flags;

    ret = xmlRelaxNGNewDefine(ctxt, node);
    if (ret == 
# 5122 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 5122 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )
        return (
# 5123 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 5123 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    ret->type = XML_RELAXNG_ATTRIBUTE;
    ret->parent = ctxt->def;
    child = node->children;
    if (child == 
# 5127 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 5127 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) {
        xmlRngPErr(ctxt, node, XML_RNGP_ATTRIBUTE_EMPTY,
                   "xmlRelaxNGParseattribute: attribute has no children\n",
                   
# 5130 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 5130 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      , 
# 5130 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 5130 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            );
        return (ret);
    }
    old_flags = ctxt->flags;
    ctxt->flags |= (1 << 0);
    cur = xmlRelaxNGParseNameClass(ctxt, child, ret);
    if (cur != 
# 5136 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 5136 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )
        child = child->next;

    if (child != 
# 5139 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 5139 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) {
        cur = xmlRelaxNGParsePattern(ctxt, child);
        if (cur != 
# 5141 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 5141 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) {
            switch (cur->type) {
                case XML_RELAXNG_EMPTY:
                case XML_RELAXNG_NOT_ALLOWED:
                case XML_RELAXNG_TEXT:
                case XML_RELAXNG_ELEMENT:
                case XML_RELAXNG_DATATYPE:
                case XML_RELAXNG_VALUE:
                case XML_RELAXNG_LIST:
                case XML_RELAXNG_REF:
                case XML_RELAXNG_PARENTREF:
                case XML_RELAXNG_EXTERNALREF:
                case XML_RELAXNG_DEF:
                case XML_RELAXNG_ONEORMORE:
                case XML_RELAXNG_ZEROORMORE:
                case XML_RELAXNG_OPTIONAL:
                case XML_RELAXNG_CHOICE:
                case XML_RELAXNG_GROUP:
                case XML_RELAXNG_INTERLEAVE:
                case XML_RELAXNG_ATTRIBUTE:
                    ret->content = cur;
                    cur->parent = ret;
                    break;
                case XML_RELAXNG_START:
                case XML_RELAXNG_PARAM:
                case XML_RELAXNG_EXCEPT:
                    xmlRngPErr(ctxt, node, XML_RNGP_ATTRIBUTE_CONTENT,
                               "attribute has invalid content\n", 
# 5168 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                 ((void *)0)
# 5168 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                     ,
                               
# 5169 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 5169 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  );
                    break;
                case XML_RELAXNG_NOOP:
                    xmlRngPErr(ctxt, node, XML_RNGP_ATTRIBUTE_NOOP,
                               "RNG Internal error, noop found in attribute\n",
                               
# 5174 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 5174 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  , 
# 5174 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 5174 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        );
                    break;
            }
        }
        child = child->next;
    }
    if (child != 
# 5180 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 5180 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) {
        xmlRngPErr(ctxt, node, XML_RNGP_ATTRIBUTE_CHILDREN,
                   "attribute has multiple children\n", 
# 5182 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                       ((void *)0)
# 5182 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                           , 
# 5182 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                             ((void *)0)
# 5182 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                 );
    }
    ctxt->flags = old_flags;
    return (ret);
}
# 5198 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGDefinePtr
xmlRelaxNGParseExceptNameClass(xmlRelaxNGParserCtxtPtr ctxt,
                               xmlNodePtr node, int attr)
{
    xmlRelaxNGDefinePtr ret, cur, last = 
# 5202 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                        ((void *)0)
# 5202 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                            ;
    xmlNodePtr child;

    if (!((node != 
# 5205 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
        ((void *)0)
# 5205 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
        ) && (node->ns != 
# 5205 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
        ((void *)0)
# 5205 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
        ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "except")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        xmlRngPErr(ctxt, node, XML_RNGP_EXCEPT_MISSING,
                   "Expecting an except node\n", 
# 5207 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                ((void *)0)
# 5207 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                    , 
# 5207 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                      ((void *)0)
# 5207 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                          );
        return (
# 5208 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 5208 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }
    if (node->next != 
# 5210 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 5210 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ) {
        xmlRngPErr(ctxt, node, XML_RNGP_EXCEPT_MULTIPLE,
                   "exceptNameClass allows only a single except node\n",
                   
# 5213 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 5213 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      , 
# 5213 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 5213 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            );
    }
    if (node->children == 
# 5215 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 5215 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ) {
        xmlRngPErr(ctxt, node, XML_RNGP_EXCEPT_EMPTY, "except has no content\n",
                   
# 5217 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 5217 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      , 
# 5217 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 5217 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            );
        return (
# 5218 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 5218 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }

    ret = xmlRelaxNGNewDefine(ctxt, node);
    if (ret == 
# 5222 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 5222 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )
        return (
# 5223 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 5223 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    ret->type = XML_RELAXNG_EXCEPT;
    child = node->children;
    while (child != 
# 5226 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 5226 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) {
        cur = xmlRelaxNGNewDefine(ctxt, child);
        if (cur == 
# 5228 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 5228 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      )
            break;
        if (attr)
            cur->type = XML_RELAXNG_ATTRIBUTE;
        else
            cur->type = XML_RELAXNG_ELEMENT;

        if (xmlRelaxNGParseNameClass(ctxt, child, cur) != 
# 5235 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                         ((void *)0)
# 5235 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                             ) {
            if (last == 
# 5236 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 5236 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) {
                ret->content = cur;
            } else {
                last->next = cur;
            }
            last = cur;
        }
        child = child->next;
    }

    return (ret);
}
# 5259 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGDefinePtr
xmlRelaxNGParseNameClass(xmlRelaxNGParserCtxtPtr ctxt, xmlNodePtr node,
                         xmlRelaxNGDefinePtr def)
{
    xmlRelaxNGDefinePtr ret, tmp;
    xmlChar *val;

    ret = def;
    if ((((node != 
# 5267 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
        ((void *)0)
# 5267 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
        ) && (node->ns != 
# 5267 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
        ((void *)0)
# 5267 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
        ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "name")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) || (((node != 
# 5267 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 5267 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ) && (node->ns != 
# 5267 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 5267 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "anyName")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) ||
        (((node != 
# 5268 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
        ((void *)0)
# 5268 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
        ) && (node->ns != 
# 5268 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
        ((void *)0)
# 5268 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
        ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "nsName")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs))))) {
        if ((def->type != XML_RELAXNG_ELEMENT) &&
            (def->type != XML_RELAXNG_ATTRIBUTE)) {
            ret = xmlRelaxNGNewDefine(ctxt, node);
            if (ret == 
# 5272 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 5272 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          )
                return (
# 5273 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 5273 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           );
            ret->parent = def;
            if (ctxt->flags & (1 << 0))
                ret->type = XML_RELAXNG_ATTRIBUTE;
            else
                ret->type = XML_RELAXNG_ELEMENT;
        }
    }
    if (((node != 
# 5281 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 5281 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       ) && (node->ns != 
# 5281 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 5281 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "name")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        val = xmlNodeGetContent__internal_alias(node);
        xmlRelaxNGNormExtSpace(val);
        if (xmlValidateNCName__internal_alias(val, 0)) {
     if (node->parent != 
# 5285 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 5285 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            )
  xmlRngPErr(ctxt, node, XML_RNGP_ELEMENT_NAME,
      "Element %s name '%s' is not an NCName\n",
      node->parent->name, val);
     else
  xmlRngPErr(ctxt, node, XML_RNGP_ELEMENT_NAME,
      "name '%s' is not an NCName\n",
      val, 
# 5292 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
          ((void *)0)
# 5292 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              );
        }
        ret->name = val;
        val = xmlGetProp__internal_alias(node, (xmlChar *) "ns");
        ret->ns = val;
        if ((ctxt->flags & (1 << 0)) &&
            (val != 
# 5298 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 5298 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) &&
            (xmlStrEqual__internal_alias(val, (xmlChar *) "http://www.w3.org/2000/xmlns"))) {
     xmlRngPErr(ctxt, node, XML_RNGP_XML_NS,
                        "Attribute with namespace '%s' is not allowed\n",
                        val, 
# 5302 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 5302 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                );
        }
        if ((ctxt->flags & (1 << 0)) &&
            (val != 
# 5305 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 5305 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) &&
            (val[0] == 0) && (xmlStrEqual__internal_alias(ret->name, (xmlChar *) "xmlns"))) {
     xmlRngPErr(ctxt, node, XML_RNGP_XMLNS_NAME,
                       "Attribute with QName 'xmlns' is not allowed\n",
                       val, 
# 5309 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 5309 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               );
        }
    } else if (((node != 
# 5311 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 5311 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->ns != 
# 5311 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 5311 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "anyName")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        ret->name = 
# 5312 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 5312 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ;
        ret->ns = 
# 5313 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 5313 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ;
        if (node->children != 
# 5314 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 5314 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
            ret->nameClass =
                xmlRelaxNGParseExceptNameClass(ctxt, node->children,
                                               (def->type ==
                                                XML_RELAXNG_ATTRIBUTE));
        }
    } else if (((node != 
# 5320 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 5320 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->ns != 
# 5320 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 5320 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "nsName")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        ret->name = 
# 5321 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 5321 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ;
        ret->ns = xmlGetProp__internal_alias(node, (xmlChar *) "ns");
        if (ret->ns == 
# 5323 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 5323 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) {
            xmlRngPErr(ctxt, node, XML_RNGP_NSNAME_NO_NS,
                       "nsName has no ns attribute\n", 
# 5325 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                      ((void *)0)
# 5325 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                          , 
# 5325 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                            ((void *)0)
# 5325 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                );
        }
        if ((ctxt->flags & (1 << 0)) &&
            (ret->ns != 
# 5328 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 5328 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) &&
            (xmlStrEqual__internal_alias
             (ret->ns, (xmlChar *) "http://www.w3.org/2000/xmlns"))) {
            xmlRngPErr(ctxt, node, XML_RNGP_XML_NS,
                       "Attribute with namespace '%s' is not allowed\n",
                       ret->ns, 
# 5333 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 5333 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   );
        }
        if (node->children != 
# 5335 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 5335 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
            ret->nameClass =
                xmlRelaxNGParseExceptNameClass(ctxt, node->children,
                                               (def->type ==
                                                XML_RELAXNG_ATTRIBUTE));
        }
    } else if (((node != 
# 5341 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 5341 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->ns != 
# 5341 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 5341 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "choice")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        xmlNodePtr child;
        xmlRelaxNGDefinePtr last = 
# 5343 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 5343 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ;

        ret = xmlRelaxNGNewDefine(ctxt, node);
        if (ret == 
# 5346 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 5346 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      )
            return (
# 5347 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 5347 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       );
        ret->parent = def;
        ret->type = XML_RELAXNG_CHOICE;

        if (node->children == 
# 5351 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 5351 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
            xmlRngPErr(ctxt, node, XML_RNGP_CHOICE_EMPTY,
                       "Element choice is empty\n", 
# 5353 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                   ((void *)0)
# 5353 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                       , 
# 5353 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                         ((void *)0)
# 5353 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                             );
        } else {

            child = node->children;
            while (child != 
# 5357 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 5357 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) {
                tmp = xmlRelaxNGParseNameClass(ctxt, child, ret);
                if (tmp != 
# 5359 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 5359 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) {
                    if (last == 
# 5360 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 5360 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ) {
                        last = ret->nameClass = tmp;
                    } else {
                        last->next = tmp;
                        last = tmp;
                    }
                }
                child = child->next;
            }
        }
    } else {
        xmlRngPErr(ctxt, node, XML_RNGP_CHOICE_CONTENT,
                   "expecting name, anyName, nsName or choice : got %s\n",
                   (node == 
# 5373 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0) 
# 5373 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ? (const xmlChar *) "nothing" : node->name),
     
# 5374 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
    ((void *)0)
# 5374 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
        );
        return (
# 5375 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 5375 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }
    if (ret != def) {
        if (def->nameClass == 
# 5378 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 5378 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
            def->nameClass = ret;
        } else {
            tmp = def->nameClass;
            while (tmp->next != 
# 5382 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 5382 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ) {
                tmp = tmp->next;
            }
            tmp->next = ret;
        }
    }
    return (ret);
}
# 5400 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGDefinePtr
xmlRelaxNGParseElement(xmlRelaxNGParserCtxtPtr ctxt, xmlNodePtr node)
{
    xmlRelaxNGDefinePtr ret, cur, last;
    xmlNodePtr child;
    const xmlChar *olddefine;

    ret = xmlRelaxNGNewDefine(ctxt, node);
    if (ret == 
# 5408 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 5408 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )
        return (
# 5409 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 5409 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    ret->type = XML_RELAXNG_ELEMENT;
    ret->parent = ctxt->def;
    child = node->children;
    if (child == 
# 5413 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 5413 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) {
        xmlRngPErr(ctxt, node, XML_RNGP_ELEMENT_EMPTY,
                   "xmlRelaxNGParseElement: element has no children\n",
                   
# 5416 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 5416 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      , 
# 5416 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 5416 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            );
        return (ret);
    }
    cur = xmlRelaxNGParseNameClass(ctxt, child, ret);
    if (cur != 
# 5420 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 5420 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )
        child = child->next;

    if (child == 
# 5423 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 5423 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) {
        xmlRngPErr(ctxt, node, XML_RNGP_ELEMENT_NO_CONTENT,
                   "xmlRelaxNGParseElement: element has no content\n",
                   
# 5426 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 5426 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      , 
# 5426 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 5426 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            );
        return (ret);
    }
    olddefine = ctxt->define;
    ctxt->define = 
# 5430 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 5430 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ;
    last = 
# 5431 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
          ((void *)0)
# 5431 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ;
    while (child != 
# 5432 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 5432 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) {
        cur = xmlRelaxNGParsePattern(ctxt, child);
        if (cur != 
# 5434 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 5434 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) {
            cur->parent = ret;
            switch (cur->type) {
                case XML_RELAXNG_EMPTY:
                case XML_RELAXNG_NOT_ALLOWED:
                case XML_RELAXNG_TEXT:
                case XML_RELAXNG_ELEMENT:
                case XML_RELAXNG_DATATYPE:
                case XML_RELAXNG_VALUE:
                case XML_RELAXNG_LIST:
                case XML_RELAXNG_REF:
                case XML_RELAXNG_PARENTREF:
                case XML_RELAXNG_EXTERNALREF:
                case XML_RELAXNG_DEF:
                case XML_RELAXNG_ZEROORMORE:
                case XML_RELAXNG_ONEORMORE:
                case XML_RELAXNG_OPTIONAL:
                case XML_RELAXNG_CHOICE:
                case XML_RELAXNG_GROUP:
                case XML_RELAXNG_INTERLEAVE:
                    if (last == 
# 5454 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 5454 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ) {
                        ret->content = last = cur;
                    } else {
                        if ((last->type == XML_RELAXNG_ELEMENT) &&
                            (ret->content == last)) {
                            ret->content = xmlRelaxNGNewDefine(ctxt, node);
                            if (ret->content != 
# 5460 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                               ((void *)0)
# 5460 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                   ) {
                                ret->content->type = XML_RELAXNG_GROUP;
                                ret->content->content = last;
                            } else {
                                ret->content = last;
                            }
                        }
                        last->next = cur;
                        last = cur;
                    }
                    break;
                case XML_RELAXNG_ATTRIBUTE:
                    cur->next = ret->attrs;
                    ret->attrs = cur;
                    break;
                case XML_RELAXNG_START:
                    xmlRngPErr(ctxt, node, XML_RNGP_ELEMENT_CONTENT,
                               "RNG Internal error, start found in element\n",
                               
# 5478 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 5478 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  , 
# 5478 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 5478 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        );
                    break;
                case XML_RELAXNG_PARAM:
                    xmlRngPErr(ctxt, node, XML_RNGP_ELEMENT_CONTENT,
                               "RNG Internal error, param found in element\n",
                               
# 5483 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 5483 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  , 
# 5483 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 5483 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        );
                    break;
                case XML_RELAXNG_EXCEPT:
                    xmlRngPErr(ctxt, node, XML_RNGP_ELEMENT_CONTENT,
                               "RNG Internal error, except found in element\n",
                               
# 5488 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 5488 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  , 
# 5488 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 5488 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        );
                    break;
                case XML_RELAXNG_NOOP:
                    xmlRngPErr(ctxt, node, XML_RNGP_ELEMENT_CONTENT,
                               "RNG Internal error, noop found in element\n",
                               
# 5493 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 5493 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  , 
# 5493 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 5493 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        );
                    break;
            }
        }
        child = child->next;
    }
    ctxt->define = olddefine;
    return (ret);
}
# 5513 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGDefinePtr
xmlRelaxNGParsePatterns(xmlRelaxNGParserCtxtPtr ctxt, xmlNodePtr nodes,
                        int group)
{
    xmlRelaxNGDefinePtr def = 
# 5517 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 5517 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 , last = 
# 5517 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                          ((void *)0)
# 5517 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                              , cur, parent;

    parent = ctxt->def;
    while (nodes != 
# 5520 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 5520 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) {
        if (((nodes != 
# 5521 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
           ((void *)0)
# 5521 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
           ) && (nodes->ns != 
# 5521 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
           ((void *)0)
# 5521 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
           ) && (nodes->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(nodes->name, (const xmlChar *) "element")) && (xmlStrEqual__internal_alias(nodes->ns->href, xmlRelaxNGNs)))) {
            cur = xmlRelaxNGParseElement(ctxt, nodes);
            if (def == 
# 5523 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 5523 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) {
                def = last = cur;
            } else {
                if ((group == 1) && (def->type == XML_RELAXNG_ELEMENT) &&
                    (def == last)) {
                    def = xmlRelaxNGNewDefine(ctxt, nodes);
                    def->type = XML_RELAXNG_GROUP;
                    def->content = last;
                }
                last->next = cur;
                last = cur;
            }
            cur->parent = parent;
        } else {
            cur = xmlRelaxNGParsePattern(ctxt, nodes);
            if (cur != 
# 5538 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 5538 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) {
                if (def == 
# 5539 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 5539 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) {
                    def = last = cur;
                } else {
                    last->next = cur;
                    last = cur;
                }
            }
        }
        nodes = nodes->next;
    }
    return (def);
}
# 5561 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGParseStart(xmlRelaxNGParserCtxtPtr ctxt, xmlNodePtr nodes)
{
    int ret = 0;
    xmlRelaxNGDefinePtr def = 
# 5565 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 5565 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 , last;

    if (nodes == 
# 5567 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 5567 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) {
        xmlRngPErr(ctxt, nodes, XML_RNGP_START_EMPTY, "start has no children\n",
                   
# 5569 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 5569 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      , 
# 5569 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 5569 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            );
        return (-1);
    }
    if (((nodes != 
# 5572 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 5572 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       ) && (nodes->ns != 
# 5572 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 5572 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       ) && (nodes->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(nodes->name, (const xmlChar *) "empty")) && (xmlStrEqual__internal_alias(nodes->ns->href, xmlRelaxNGNs)))) {
        def = xmlRelaxNGNewDefine(ctxt, nodes);
        if (def == 
# 5574 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 5574 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      )
            return (-1);
        def->type = XML_RELAXNG_EMPTY;
        if (nodes->children != 
# 5577 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 5577 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
            xmlRngPErr(ctxt, nodes, XML_RNGP_EMPTY_CONTENT,
                       "element empty is not empty\n", 
# 5579 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                      ((void *)0)
# 5579 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                          , 
# 5579 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                            ((void *)0)
# 5579 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                );
        }
    } else if (((nodes != 
# 5581 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 5581 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (nodes->ns != 
# 5581 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 5581 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ) && (nodes->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(nodes->name, (const xmlChar *) "notAllowed")) && (xmlStrEqual__internal_alias(nodes->ns->href, xmlRelaxNGNs)))) {
        def = xmlRelaxNGNewDefine(ctxt, nodes);
        if (def == 
# 5583 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 5583 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      )
            return (-1);
        def->type = XML_RELAXNG_NOT_ALLOWED;
        if (nodes->children != 
# 5586 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 5586 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
            xmlRngPErr(ctxt, nodes, XML_RNGP_NOTALLOWED_NOT_EMPTY,
                       "element notAllowed is not empty\n", 
# 5588 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                           ((void *)0)
# 5588 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                               , 
# 5588 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                 ((void *)0)
# 5588 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                     );
        }
    } else {
        def = xmlRelaxNGParsePatterns(ctxt, nodes, 1);
    }
    if (ctxt->grammar->start != 
# 5593 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 5593 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ) {
        last = ctxt->grammar->start;
        while (last->next != 
# 5595 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 5595 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                )
            last = last->next;
        last->next = def;
    } else {
        ctxt->grammar->start = def;
    }
    nodes = nodes->next;
    if (nodes != 
# 5602 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 5602 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) {
        xmlRngPErr(ctxt, nodes, XML_RNGP_START_CONTENT,
                   "start more than one children\n", 
# 5604 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                    ((void *)0)
# 5604 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                        , 
# 5604 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                          ((void *)0)
# 5604 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                              );
        return (-1);
    }
    return (ret);
}
# 5619 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGParseGrammarContent(xmlRelaxNGParserCtxtPtr ctxt,
                              xmlNodePtr nodes)
{
    int ret = 0, tmp;

    if (nodes == 
# 5625 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 5625 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) {
        xmlRngPErr(ctxt, nodes, XML_RNGP_GRAMMAR_EMPTY,
                   "grammar has no children\n", 
# 5627 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                               ((void *)0)
# 5627 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                   , 
# 5627 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                     ((void *)0)
# 5627 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                         );
        return (-1);
    }
    while (nodes != 
# 5630 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 5630 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) {
        if (((nodes != 
# 5631 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
           ((void *)0)
# 5631 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
           ) && (nodes->ns != 
# 5631 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
           ((void *)0)
# 5631 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
           ) && (nodes->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(nodes->name, (const xmlChar *) "start")) && (xmlStrEqual__internal_alias(nodes->ns->href, xmlRelaxNGNs)))) {
            if (nodes->children == 
# 5632 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 5632 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ) {
                xmlRngPErr(ctxt, nodes, XML_RNGP_START_EMPTY,
                           "start has no children\n", 
# 5634 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                     ((void *)0)
# 5634 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                         , 
# 5634 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                           ((void *)0)
# 5634 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                               );
            } else {
                tmp = xmlRelaxNGParseStart(ctxt, nodes->children);
                if (tmp != 0)
                    ret = -1;
            }
        } else if (((nodes != 
# 5640 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 5640 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) && (nodes->ns != 
# 5640 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 5640 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) && (nodes->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(nodes->name, (const xmlChar *) "define")) && (xmlStrEqual__internal_alias(nodes->ns->href, xmlRelaxNGNs)))) {
            tmp = xmlRelaxNGParseDefine(ctxt, nodes);
            if (tmp != 0)
                ret = -1;
        } else if (((nodes != 
# 5644 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 5644 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) && (nodes->ns != 
# 5644 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 5644 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) && (nodes->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(nodes->name, (const xmlChar *) "include")) && (xmlStrEqual__internal_alias(nodes->ns->href, xmlRelaxNGNs)))) {
            tmp = xmlRelaxNGParseInclude(ctxt, nodes);
            if (tmp != 0)
                ret = -1;
        } else {
            xmlRngPErr(ctxt, nodes, XML_RNGP_GRAMMAR_CONTENT,
                       "grammar has unexpected child %s\n", nodes->name,
                       
# 5651 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 5651 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          );
            ret = -1;
        }
        nodes = nodes->next;
    }
    return (ret);
}
# 5668 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRelaxNGCheckReference(xmlRelaxNGDefinePtr ref,
                         xmlRelaxNGParserCtxtPtr ctxt,
                         const xmlChar * name)
{
    xmlRelaxNGGrammarPtr grammar;
    xmlRelaxNGDefinePtr def, cur;




    if (ref->dflags & (1 << 8))
        return;

    grammar = ctxt->grammar;
    if (grammar == 
# 5683 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 5683 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) {
        xmlRngPErr(ctxt, ref->node, XML_ERR_INTERNAL_ERROR,
                   "Internal error: no grammar in CheckReference %s\n",
                   name, 
# 5686 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 5686 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            );
        return;
    }
    if (ref->content != 
# 5689 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 5689 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) {
        xmlRngPErr(ctxt, ref->node, XML_ERR_INTERNAL_ERROR,
                   "Internal error: reference has content in CheckReference %s\n",
                   name, 
# 5692 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 5692 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            );
        return;
    }
    if (grammar->defs != 
# 5695 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 5695 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ) {
        def = xmlHashLookup__internal_alias(grammar->defs, name);
        if (def != 
# 5697 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 5697 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) {
            cur = ref;
            while (cur != 
# 5699 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 5699 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ) {
                cur->content = def;
                cur = cur->nextHash;
            }
        } else {
            xmlRngPErr(ctxt, ref->node, XML_RNGP_REF_NO_DEF,
                       "Reference %s has no matching definition\n", name,
                       
# 5706 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 5706 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          );
        }
    } else {
        xmlRngPErr(ctxt, ref->node, XML_RNGP_REF_NO_DEF,
                   "Reference %s has no matching definition\n", name,
                   
# 5711 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 5711 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      );
    }
}
# 5724 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRelaxNGCheckCombine(xmlRelaxNGDefinePtr define,
                       xmlRelaxNGParserCtxtPtr ctxt, const xmlChar * name)
{
    xmlChar *combine;
    int choiceOrInterleave = -1;
    int missing = 0;
    xmlRelaxNGDefinePtr cur, last, tmp, tmp2;

    if (define->nextHash == 
# 5733 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 5733 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               )
        return;
    cur = define;
    while (cur != 
# 5736 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 5736 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        combine = xmlGetProp__internal_alias(cur->node, (xmlChar *) "combine");
        if (combine != 
# 5738 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 5738 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) {
            if (xmlStrEqual__internal_alias(combine, (xmlChar *) "choice")) {
                if (choiceOrInterleave == -1)
                    choiceOrInterleave = 1;
                else if (choiceOrInterleave == 0) {
                    xmlRngPErr(ctxt, define->node, XML_RNGP_DEF_CHOICE_AND_INTERLEAVE,
                               "Defines for %s use both 'choice' and 'interleave'\n",
                               name, 
# 5745 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 5745 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        );
                }
            } else if (xmlStrEqual__internal_alias(combine, (xmlChar *) "interleave")) {
                if (choiceOrInterleave == -1)
                    choiceOrInterleave = 0;
                else if (choiceOrInterleave == 1) {
                    xmlRngPErr(ctxt, define->node, XML_RNGP_DEF_CHOICE_AND_INTERLEAVE,
                               "Defines for %s use both 'choice' and 'interleave'\n",
                               name, 
# 5753 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 5753 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        );
                }
            } else {
                xmlRngPErr(ctxt, define->node, XML_RNGP_UNKNOWN_COMBINE,
                           "Defines for %s use unknown combine value '%s''\n",
                           name, combine);
            }
            xmlFree(combine);
        } else {
            if (missing == 0)
                missing = 1;
            else {
                xmlRngPErr(ctxt, define->node, XML_RNGP_NEED_COMBINE,
                           "Some defines for %s needs the combine attribute\n",
                           name, 
# 5767 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 5767 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
        }

        cur = cur->nextHash;
    }





    if (choiceOrInterleave == -1)
        choiceOrInterleave = 0;
    cur = xmlRelaxNGNewDefine(ctxt, define->node);
    if (cur == 
# 5781 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 5781 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )
        return;
    if (choiceOrInterleave == 0)
        cur->type = XML_RELAXNG_INTERLEAVE;
    else
        cur->type = XML_RELAXNG_CHOICE;
    tmp = define;
    last = 
# 5788 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
          ((void *)0)
# 5788 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
              ;
    while (tmp != 
# 5789 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 5789 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        if (tmp->content != 
# 5790 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 5790 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) {
            if (tmp->content->next != 
# 5791 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 5791 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                         ) {



                tmp2 = xmlRelaxNGNewDefine(ctxt, tmp->content->node);
                if (tmp2 == 
# 5796 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 5796 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               )
                    break;
                tmp2->type = XML_RELAXNG_GROUP;
                tmp2->content = tmp->content;
            } else {
                tmp2 = tmp->content;
            }
            if (last == 
# 5803 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 5803 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) {
                cur->content = tmp2;
            } else {
                last->next = tmp2;
            }
            last = tmp2;
        }
        tmp->content = cur;
        tmp = tmp->nextHash;
    }
    define->content = cur;
    if (choiceOrInterleave == 0) {
        if (ctxt->interleaves == 
# 5815 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 5815 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    )
            ctxt->interleaves = xmlHashCreate__internal_alias(10);
        if (ctxt->interleaves == 
# 5817 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 5817 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    ) {
            xmlRngPErr(ctxt, define->node, XML_RNGP_INTERLEAVE_CREATE_FAILED,
                       "Failed to create interleaves hash table\n", 
# 5819 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                   ((void *)0)
# 5819 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                       ,
                       
# 5820 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 5820 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          );
        } else {
            char tmpname[32];

            snprintf(tmpname, 32, "interleave%d", ctxt->nbInterleaves++);
            if (xmlHashAddEntry__internal_alias(ctxt->interleaves, (xmlChar *) tmpname, cur) <
                0) {
                xmlRngPErr(ctxt, define->node, XML_RNGP_INTERLEAVE_CREATE_FAILED,
                           "Failed to add %s to hash table\n",
      (const xmlChar *) tmpname, 
# 5829 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 5829 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
        }
    }
}
# 5843 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRelaxNGCombineStart(xmlRelaxNGParserCtxtPtr ctxt,
                       xmlRelaxNGGrammarPtr grammar)
{
    xmlRelaxNGDefinePtr starts;
    xmlChar *combine;
    int choiceOrInterleave = -1;
    int missing = 0;
    xmlRelaxNGDefinePtr cur;

    starts = grammar->start;
    if ((starts == 
# 5854 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 5854 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) || (starts->next == 
# 5854 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                            ((void *)0)
# 5854 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                ))
        return;
    cur = starts;
    while (cur != 
# 5857 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 5857 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        if ((cur->node == 
# 5858 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 5858 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ) || (cur->node->parent == 
# 5858 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                        ((void *)0)
# 5858 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                            ) ||
            (!xmlStrEqual__internal_alias(cur->node->parent->name, (xmlChar *) "start"))) {
            combine = 
# 5860 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 5860 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ;
            xmlRngPErr(ctxt, cur->node, XML_RNGP_START_MISSING,
                       "Internal error: start element not found\n", 
# 5862 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                   ((void *)0)
# 5862 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                       ,
                       
# 5863 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 5863 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          );
        } else {
            combine = xmlGetProp__internal_alias(cur->node->parent, (xmlChar *) "combine");
        }

        if (combine != 
# 5868 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 5868 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) {
            if (xmlStrEqual__internal_alias(combine, (xmlChar *) "choice")) {
                if (choiceOrInterleave == -1)
                    choiceOrInterleave = 1;
                else if (choiceOrInterleave == 0) {
                    xmlRngPErr(ctxt, cur->node, XML_RNGP_START_CHOICE_AND_INTERLEAVE,
                               "<start> use both 'choice' and 'interleave'\n",
                               
# 5875 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 5875 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  , 
# 5875 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 5875 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        );
                }
            } else if (xmlStrEqual__internal_alias(combine, (xmlChar *) "interleave")) {
                if (choiceOrInterleave == -1)
                    choiceOrInterleave = 0;
                else if (choiceOrInterleave == 1) {
                    xmlRngPErr(ctxt, cur->node, XML_RNGP_START_CHOICE_AND_INTERLEAVE,
                               "<start> use both 'choice' and 'interleave'\n",
                               
# 5883 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 5883 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  , 
# 5883 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 5883 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        );
                }
            } else {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_UNKNOWN_COMBINE,
                           "<start> uses unknown combine value '%s''\n",
                           combine, 
# 5888 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                   ((void *)0)
# 5888 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                       );
            }
            xmlFree(combine);
        } else {
            if (missing == 0)
                missing = 1;
            else {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_NEED_COMBINE,
                           "Some <start> element miss the combine attribute\n",
                           
# 5897 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 5897 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              , 
# 5897 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 5897 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
        }

        cur = cur->next;
    }





    if (choiceOrInterleave == -1)
        choiceOrInterleave = 0;
    cur = xmlRelaxNGNewDefine(ctxt, starts->node);
    if (cur == 
# 5911 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 5911 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )
        return;
    if (choiceOrInterleave == 0)
        cur->type = XML_RELAXNG_INTERLEAVE;
    else
        cur->type = XML_RELAXNG_CHOICE;
    cur->content = grammar->start;
    grammar->start = cur;
    if (choiceOrInterleave == 0) {
        if (ctxt->interleaves == 
# 5920 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 5920 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    )
            ctxt->interleaves = xmlHashCreate__internal_alias(10);
        if (ctxt->interleaves == 
# 5922 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 5922 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    ) {
            xmlRngPErr(ctxt, cur->node, XML_RNGP_INTERLEAVE_CREATE_FAILED,
                       "Failed to create interleaves hash table\n", 
# 5924 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                   ((void *)0)
# 5924 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                       ,
                       
# 5925 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 5925 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          );
        } else {
            char tmpname[32];

            snprintf(tmpname, 32, "interleave%d", ctxt->nbInterleaves++);
            if (xmlHashAddEntry__internal_alias(ctxt->interleaves, (xmlChar *) tmpname, cur) <
                0) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_INTERLEAVE_CREATE_FAILED,
                           "Failed to add %s to hash table\n",
      (const xmlChar *) tmpname, 
# 5934 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 5934 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
        }
    }
}
# 5950 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGCheckCycles(xmlRelaxNGParserCtxtPtr ctxt,
                      xmlRelaxNGDefinePtr cur, int depth)
{
    int ret = 0;

    while ((ret == 0) && (cur != 
# 5956 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 5956 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    )) {
        if ((cur->type == XML_RELAXNG_REF) ||
            (cur->type == XML_RELAXNG_PARENTREF)) {
            if (cur->depth == -1) {
                cur->depth = depth;
                ret = xmlRelaxNGCheckCycles(ctxt, cur->content, depth);
                cur->depth = -2;
            } else if (depth == cur->depth) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_REF_CYCLE,
                           "Detected a cycle in %s references\n",
                           cur->name, 
# 5966 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 5966 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                         );
                return (-1);
            }
        } else if (cur->type == XML_RELAXNG_ELEMENT) {
            ret = xmlRelaxNGCheckCycles(ctxt, cur->content, depth + 1);
        } else {
            ret = xmlRelaxNGCheckCycles(ctxt, cur->content, depth);
        }
        cur = cur->next;
    }
    return (ret);
}
# 5990 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGDefinePtr
xmlRelaxNGTryUnlink(xmlRelaxNGParserCtxtPtr ctxt __attribute__((unused)),
                    xmlRelaxNGDefinePtr cur,
                    xmlRelaxNGDefinePtr parent, xmlRelaxNGDefinePtr prev)
{
    if (prev != 
# 5995 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 5995 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) {
        prev->next = cur->next;
    } else {
        if (parent != 
# 5998 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 5998 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ) {
            if (parent->content == cur)
                parent->content = cur->next;
            else if (parent->attrs == cur)
                parent->attrs = cur->next;
            else if (parent->nameClass == cur)
                parent->nameClass = cur->next;
        } else {
            cur->type = XML_RELAXNG_NOOP;
            prev = cur;
        }
    }
    return (prev);
}
# 6020 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRelaxNGSimplify(xmlRelaxNGParserCtxtPtr ctxt,
                   xmlRelaxNGDefinePtr cur, xmlRelaxNGDefinePtr parent)
{
    xmlRelaxNGDefinePtr prev = 
# 6024 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 6024 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ;

    while (cur != 
# 6026 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 6026 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        if ((cur->type == XML_RELAXNG_REF) ||
            (cur->type == XML_RELAXNG_PARENTREF)) {
            if (cur->depth != -3) {
                cur->depth = -3;
                xmlRelaxNGSimplify(ctxt, cur->content, cur);
            }
        } else if (cur->type == XML_RELAXNG_NOT_ALLOWED) {
            cur->parent = parent;
            if ((parent != 
# 6035 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6035 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) &&
                ((parent->type == XML_RELAXNG_ATTRIBUTE) ||
                 (parent->type == XML_RELAXNG_LIST) ||
                 (parent->type == XML_RELAXNG_GROUP) ||
                 (parent->type == XML_RELAXNG_INTERLEAVE) ||
                 (parent->type == XML_RELAXNG_ONEORMORE) ||
                 (parent->type == XML_RELAXNG_ZEROORMORE))) {
                parent->type = XML_RELAXNG_NOT_ALLOWED;
                break;
            }
            if ((parent != 
# 6045 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6045 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) && (parent->type == XML_RELAXNG_CHOICE)) {
                prev = xmlRelaxNGTryUnlink(ctxt, cur, parent, prev);
            } else
                prev = cur;
        } else if (cur->type == XML_RELAXNG_EMPTY) {
            cur->parent = parent;
            if ((parent != 
# 6051 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6051 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) &&
                ((parent->type == XML_RELAXNG_ONEORMORE) ||
                 (parent->type == XML_RELAXNG_ZEROORMORE))) {
                parent->type = XML_RELAXNG_EMPTY;
                break;
            }
            if ((parent != 
# 6057 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6057 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) &&
                ((parent->type == XML_RELAXNG_GROUP) ||
                 (parent->type == XML_RELAXNG_INTERLEAVE))) {
                prev = xmlRelaxNGTryUnlink(ctxt, cur, parent, prev);
            } else
                prev = cur;
        } else {
            cur->parent = parent;
            if (cur->content != 
# 6065 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 6065 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   )
                xmlRelaxNGSimplify(ctxt, cur->content, cur);
            if ((cur->type != XML_RELAXNG_VALUE) && (cur->attrs != 
# 6067 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                  ((void *)0)
# 6067 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                      ))
                xmlRelaxNGSimplify(ctxt, cur->attrs, cur);
            if (cur->nameClass != 
# 6069 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 6069 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     )
                xmlRelaxNGSimplify(ctxt, cur->nameClass, cur);




            if (cur->type == XML_RELAXNG_ELEMENT) {
                int attronly;
                xmlRelaxNGDefinePtr tmp, pre;

                while (cur->content != 
# 6079 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 6079 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                          ) {
                    attronly =
                        xmlRelaxNGGenerateAttributes(ctxt, cur->content);
                    if (attronly == 1) {



                        tmp = cur->content;
                        cur->content = tmp->next;
                        tmp->next = cur->attrs;
                        cur->attrs = tmp;
                    } else {



                        break;
                    }
                }
                pre = cur->content;
                while ((pre != 
# 6098 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 6098 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) && (pre->next != 
# 6098 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                     ((void *)0)
# 6098 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                         )) {
                    tmp = pre->next;
                    attronly = xmlRelaxNGGenerateAttributes(ctxt, tmp);
                    if (attronly == 1) {



                        pre->next = tmp->next;
                        tmp->next = cur->attrs;
                        cur->attrs = tmp;
                    } else {
                        pre = tmp;
                    }
                }
            }



            if ((cur->type == XML_RELAXNG_GROUP) ||
                (cur->type == XML_RELAXNG_INTERLEAVE)) {
                if (cur->content == 
# 6118 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                   ((void *)0)
# 6118 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                       )
                    cur->type = XML_RELAXNG_EMPTY;
                else if (cur->content->next == 
# 6120 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                              ((void *)0)
# 6120 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                  ) {
                    if ((parent == 
# 6121 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 6121 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ) && (prev == 
# 6121 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                    ((void *)0)
# 6121 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                        )) {
                        cur->type = XML_RELAXNG_NOOP;
                    } else if (prev == 
# 6123 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 6123 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                          ) {
                        parent->content = cur->content;
                        cur->content->next = cur->next;
                        cur = cur->content;
                    } else {
                        cur->content->next = cur->next;
                        prev->next = cur->content;
                        cur = cur->content;
                    }
                }
            }



            if ((cur->type == XML_RELAXNG_EXCEPT) &&
                (cur->content != 
# 6138 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 6138 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    ) &&
                (cur->content->type == XML_RELAXNG_NOT_ALLOWED)) {
                prev = xmlRelaxNGTryUnlink(ctxt, cur, parent, prev);
            } else if (cur->type == XML_RELAXNG_NOT_ALLOWED) {
                if ((parent != 
# 6142 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 6142 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) &&
                    ((parent->type == XML_RELAXNG_ATTRIBUTE) ||
                     (parent->type == XML_RELAXNG_LIST) ||
                     (parent->type == XML_RELAXNG_GROUP) ||
                     (parent->type == XML_RELAXNG_INTERLEAVE) ||
                     (parent->type == XML_RELAXNG_ONEORMORE) ||
                     (parent->type == XML_RELAXNG_ZEROORMORE))) {
                    parent->type = XML_RELAXNG_NOT_ALLOWED;
                    break;
                }
                if ((parent != 
# 6152 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 6152 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) &&
                    (parent->type == XML_RELAXNG_CHOICE)) {
                    prev = xmlRelaxNGTryUnlink(ctxt, cur, parent, prev);
                } else
                    prev = cur;
            } else if (cur->type == XML_RELAXNG_EMPTY) {
                if ((parent != 
# 6158 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 6158 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) &&
                    ((parent->type == XML_RELAXNG_ONEORMORE) ||
                     (parent->type == XML_RELAXNG_ZEROORMORE))) {
                    parent->type = XML_RELAXNG_EMPTY;
                    break;
                }
                if ((parent != 
# 6164 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 6164 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) &&
                    ((parent->type == XML_RELAXNG_GROUP) ||
                     (parent->type == XML_RELAXNG_INTERLEAVE) ||
                     (parent->type == XML_RELAXNG_CHOICE))) {
                    prev = xmlRelaxNGTryUnlink(ctxt, cur, parent, prev);
                } else
                    prev = cur;
            } else {
                prev = cur;
            }
        }
        cur = cur->next;
    }
}
# 6188 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGContentType
xmlRelaxNGGroupContentType(xmlRelaxNGContentType ct1,
                           xmlRelaxNGContentType ct2)
{
    if ((ct1 == XML_RELAXNG_CONTENT_ERROR) ||
        (ct2 == XML_RELAXNG_CONTENT_ERROR))
        return (XML_RELAXNG_CONTENT_ERROR);
    if (ct1 == XML_RELAXNG_CONTENT_EMPTY)
        return (ct2);
    if (ct2 == XML_RELAXNG_CONTENT_EMPTY)
        return (ct1);
    if ((ct1 == XML_RELAXNG_CONTENT_COMPLEX) &&
        (ct2 == XML_RELAXNG_CONTENT_COMPLEX))
        return (XML_RELAXNG_CONTENT_COMPLEX);
    return (XML_RELAXNG_CONTENT_ERROR);
}
# 6214 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGContentType
xmlRelaxNGMaxContentType(xmlRelaxNGContentType ct1,
                         xmlRelaxNGContentType ct2)
{
    if ((ct1 == XML_RELAXNG_CONTENT_ERROR) ||
        (ct2 == XML_RELAXNG_CONTENT_ERROR))
        return (XML_RELAXNG_CONTENT_ERROR);
    if ((ct1 == XML_RELAXNG_CONTENT_SIMPLE) ||
        (ct2 == XML_RELAXNG_CONTENT_SIMPLE))
        return (XML_RELAXNG_CONTENT_SIMPLE);
    if ((ct1 == XML_RELAXNG_CONTENT_COMPLEX) ||
        (ct2 == XML_RELAXNG_CONTENT_COMPLEX))
        return (XML_RELAXNG_CONTENT_COMPLEX);
    return (XML_RELAXNG_CONTENT_EMPTY);
}
# 6241 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGContentType
xmlRelaxNGCheckRules(xmlRelaxNGParserCtxtPtr ctxt,
                     xmlRelaxNGDefinePtr cur, int flags,
                     xmlRelaxNGType ptype)
{
    int nflags;
    xmlRelaxNGContentType ret, tmp, val = XML_RELAXNG_CONTENT_EMPTY;

    while (cur != 
# 6249 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 6249 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        ret = XML_RELAXNG_CONTENT_EMPTY;
        if ((cur->type == XML_RELAXNG_REF) ||
            (cur->type == XML_RELAXNG_PARENTREF)) {
# 6265 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
            if (flags & (1 << 3)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_DATA_EXCEPT_REF,
                           "Found forbidden pattern data/except//ref\n",
                           
# 6268 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6268 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              , 
# 6268 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 6268 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
            if (cur->content == 
# 6270 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 6270 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ) {
                if (cur->type == XML_RELAXNG_PARENTREF)
                    xmlRngPErr(ctxt, cur->node, XML_RNGP_REF_NO_DEF,
                               "Internal found no define for parent refs\n",
                               
# 6274 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 6274 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  , 
# 6274 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 6274 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        );
                else
                    xmlRngPErr(ctxt, cur->node, XML_RNGP_REF_NO_DEF,
                               "Internal found no define for ref %s\n",
                               (cur->name ? cur->name: (xmlChar *) "null"), 
# 6278 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                        ((void *)0)
# 6278 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                            );
            }
            if (cur->depth > -4) {
                cur->depth = -4;
                ret = xmlRelaxNGCheckRules(ctxt, cur->content,
                                           flags, cur->type);
                cur->depth = ret - 15;
            } else if (cur->depth == -4) {
                ret = XML_RELAXNG_CONTENT_COMPLEX;
            } else {
                ret = (xmlRelaxNGContentType) (cur->depth + 15);
            }
        } else if (cur->type == XML_RELAXNG_ELEMENT) {



            xmlRelaxNGCheckGroupAttrs(ctxt, cur);
            if (flags & (1 << 3)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_DATA_EXCEPT_ELEM,
                           "Found forbidden pattern data/except//element(ref)\n",
                           
# 6298 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6298 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              , 
# 6298 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 6298 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
            if (flags & (1 << 2)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_LIST_ELEM,
                           "Found forbidden pattern list//element(ref)\n",
                           
# 6303 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6303 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              , 
# 6303 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 6303 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
            if (flags & (1 << 0)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_ATTR_ELEM,
                           "Found forbidden pattern attribute//element(ref)\n",
                           
# 6308 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6308 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              , 
# 6308 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 6308 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
            if (flags & (1 << 0)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_ATTR_ELEM,
                           "Found forbidden pattern attribute//element(ref)\n",
                           
# 6313 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6313 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              , 
# 6313 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 6313 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }




            nflags = 0;
            ret =
                xmlRelaxNGCheckRules(ctxt, cur->attrs, nflags, cur->type);
            if (ret != XML_RELAXNG_CONTENT_EMPTY) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_ELEM_CONTENT_EMPTY,
                           "Element %s attributes have a content type error\n",
                           cur->name, 
# 6325 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 6325 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                         );
            }
            ret =
                xmlRelaxNGCheckRules(ctxt, cur->content, nflags,
                                     cur->type);
            if (ret == XML_RELAXNG_CONTENT_ERROR) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_ELEM_CONTENT_ERROR,
                           "Element %s has a content type error\n",
                           cur->name, 
# 6333 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 6333 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                         );
            } else {
                ret = XML_RELAXNG_CONTENT_COMPLEX;
            }
        } else if (cur->type == XML_RELAXNG_ATTRIBUTE) {
            if (flags & (1 << 0)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_ATTR_ATTR,
                           "Found forbidden pattern attribute//attribute\n",
                           
# 6341 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6341 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              , 
# 6341 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 6341 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
            if (flags & (1 << 2)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_LIST_ATTR,
                           "Found forbidden pattern list//attribute\n",
                           
# 6346 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6346 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              , 
# 6346 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 6346 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
            if (flags & (1 << 5)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_ONEMORE_GROUP_ATTR,
                           "Found forbidden pattern oneOrMore//group//attribute\n",
                           
# 6351 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6351 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              , 
# 6351 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 6351 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
            if (flags & (1 << 6)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_ONEMORE_INTERLEAVE_ATTR,
                           "Found forbidden pattern oneOrMore//interleave//attribute\n",
                           
# 6356 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6356 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              , 
# 6356 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 6356 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
            if (flags & (1 << 3)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_DATA_EXCEPT_ATTR,
                           "Found forbidden pattern data/except//attribute\n",
                           
# 6361 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6361 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              , 
# 6361 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 6361 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
            if (flags & (1 << 4)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_START_ATTR,
                           "Found forbidden pattern start//attribute\n",
                           
# 6366 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6366 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              , 
# 6366 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 6366 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
            if ((!(flags & (1 << 1)))
                && (cur->name == 
# 6369 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 6369 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    )) {
                if (cur->ns == 
# 6370 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 6370 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                    xmlRngPErr(ctxt, cur->node, XML_RNGP_ANYNAME_ATTR_ANCESTOR,
                               "Found anyName attribute without oneOrMore ancestor\n",
                               
# 6373 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 6373 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  , 
# 6373 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 6373 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        );
                } else {
                    xmlRngPErr(ctxt, cur->node, XML_RNGP_NSNAME_ATTR_ANCESTOR,
                               "Found nsName attribute without oneOrMore ancestor\n",
                               
# 6377 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 6377 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  , 
# 6377 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 6377 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        );
                }
            }
            nflags = flags | (1 << 0);
            xmlRelaxNGCheckRules(ctxt, cur->content, nflags, cur->type);
            ret = XML_RELAXNG_CONTENT_EMPTY;
        } else if ((cur->type == XML_RELAXNG_ONEORMORE) ||
                   (cur->type == XML_RELAXNG_ZEROORMORE)) {
            if (flags & (1 << 3)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_DATA_EXCEPT_ONEMORE,
                           "Found forbidden pattern data/except//oneOrMore\n",
                           
# 6388 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6388 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              , 
# 6388 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 6388 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
            if (flags & (1 << 4)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_START_ONEMORE,
                           "Found forbidden pattern start//oneOrMore\n",
                           
# 6393 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6393 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              , 
# 6393 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 6393 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
            nflags = flags | (1 << 1);
            ret =
                xmlRelaxNGCheckRules(ctxt, cur->content, nflags,
                                     cur->type);
            ret = xmlRelaxNGGroupContentType(ret, ret);
        } else if (cur->type == XML_RELAXNG_LIST) {
            if (flags & (1 << 2)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_LIST_LIST,
                           "Found forbidden pattern list//list\n", 
# 6403 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                  ((void *)0)
# 6403 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                      ,
                           
# 6404 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6404 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              );
            }
            if (flags & (1 << 3)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_DATA_EXCEPT_LIST,
                           "Found forbidden pattern data/except//list\n",
                           
# 6409 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6409 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              , 
# 6409 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 6409 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
            if (flags & (1 << 4)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_START_LIST,
                           "Found forbidden pattern start//list\n", 
# 6413 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                   ((void *)0)
# 6413 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                       ,
                           
# 6414 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6414 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              );
            }
            nflags = flags | (1 << 2);
            ret =
                xmlRelaxNGCheckRules(ctxt, cur->content, nflags,
                                     cur->type);
        } else if (cur->type == XML_RELAXNG_GROUP) {
            if (flags & (1 << 3)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_DATA_EXCEPT_GROUP,
                           "Found forbidden pattern data/except//group\n",
                           
# 6424 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6424 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              , 
# 6424 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 6424 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
            if (flags & (1 << 4)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_START_GROUP,
                           "Found forbidden pattern start//group\n", 
# 6428 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                    ((void *)0)
# 6428 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                        ,
                           
# 6429 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6429 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              );
            }
            if (flags & (1 << 1))
                nflags = flags | (1 << 5);
            else
                nflags = flags;
            ret =
                xmlRelaxNGCheckRules(ctxt, cur->content, nflags,
                                     cur->type);



            xmlRelaxNGCheckGroupAttrs(ctxt, cur);
        } else if (cur->type == XML_RELAXNG_INTERLEAVE) {
            if (flags & (1 << 2)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_LIST_INTERLEAVE,
                           "Found forbidden pattern list//interleave\n",
                           
# 6446 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6446 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              , 
# 6446 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 6446 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
            if (flags & (1 << 3)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_DATA_EXCEPT_INTERLEAVE,
                           "Found forbidden pattern data/except//interleave\n",
                           
# 6451 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6451 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              , 
# 6451 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 6451 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
            if (flags & (1 << 4)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_DATA_EXCEPT_INTERLEAVE,
                           "Found forbidden pattern start//interleave\n",
                           
# 6456 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6456 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              , 
# 6456 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 6456 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
            if (flags & (1 << 1))
                nflags = flags | (1 << 6);
            else
                nflags = flags;
            ret =
                xmlRelaxNGCheckRules(ctxt, cur->content, nflags,
                                     cur->type);
        } else if (cur->type == XML_RELAXNG_EXCEPT) {
            if ((cur->parent != 
# 6466 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 6466 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ) &&
                (cur->parent->type == XML_RELAXNG_DATATYPE))
                nflags = flags | (1 << 3);
            else
                nflags = flags;
            ret =
                xmlRelaxNGCheckRules(ctxt, cur->content, nflags,
                                     cur->type);
        } else if (cur->type == XML_RELAXNG_DATATYPE) {
            if (flags & (1 << 4)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_START_DATA,
                           "Found forbidden pattern start//data\n", 
# 6477 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                   ((void *)0)
# 6477 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                       ,
                           
# 6478 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6478 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              );
            }
            xmlRelaxNGCheckRules(ctxt, cur->content, flags, cur->type);
            ret = XML_RELAXNG_CONTENT_SIMPLE;
        } else if (cur->type == XML_RELAXNG_VALUE) {
            if (flags & (1 << 4)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_START_VALUE,
                           "Found forbidden pattern start//value\n", 
# 6485 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                    ((void *)0)
# 6485 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                        ,
                           
# 6486 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6486 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              );
            }
            xmlRelaxNGCheckRules(ctxt, cur->content, flags, cur->type);
            ret = XML_RELAXNG_CONTENT_SIMPLE;
        } else if (cur->type == XML_RELAXNG_TEXT) {
            if (flags & (1 << 2)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_LIST_TEXT,
                           "Found forbidden pattern list//text\n", 
# 6493 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                  ((void *)0)
# 6493 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                      ,
                           
# 6494 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6494 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              );
            }
            if (flags & (1 << 3)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_DATA_EXCEPT_TEXT,
                           "Found forbidden pattern data/except//text\n",
                           
# 6499 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6499 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              , 
# 6499 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 6499 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
            if (flags & (1 << 4)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_START_TEXT,
                           "Found forbidden pattern start//text\n", 
# 6503 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                   ((void *)0)
# 6503 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                       ,
                           
# 6504 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6504 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              );
            }
            ret = XML_RELAXNG_CONTENT_COMPLEX;
        } else if (cur->type == XML_RELAXNG_EMPTY) {
            if (flags & (1 << 3)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_DATA_EXCEPT_EMPTY,
                           "Found forbidden pattern data/except//empty\n",
                           
# 6511 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6511 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              , 
# 6511 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 6511 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    );
            }
            if (flags & (1 << 4)) {
                xmlRngPErr(ctxt, cur->node, XML_RNGP_PAT_START_EMPTY,
                           "Found forbidden pattern start//empty\n", 
# 6515 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                    ((void *)0)
# 6515 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                        ,
                           
# 6516 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6516 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              );
            }
            ret = XML_RELAXNG_CONTENT_EMPTY;
        } else if (cur->type == XML_RELAXNG_CHOICE) {
            xmlRelaxNGCheckChoiceDeterminism(ctxt, cur);
            ret =
                xmlRelaxNGCheckRules(ctxt, cur->content, flags, cur->type);
        } else {
            ret =
                xmlRelaxNGCheckRules(ctxt, cur->content, flags, cur->type);
        }
        cur = cur->next;
        if (ptype == XML_RELAXNG_GROUP) {
            val = xmlRelaxNGGroupContentType(val, ret);
        } else if (ptype == XML_RELAXNG_INTERLEAVE) {




            tmp = xmlRelaxNGGroupContentType(val, ret);
            if (tmp != XML_RELAXNG_CONTENT_ERROR)
                tmp = xmlRelaxNGMaxContentType(val, ret);
        } else if (ptype == XML_RELAXNG_CHOICE) {
            val = xmlRelaxNGMaxContentType(val, ret);
        } else if (ptype == XML_RELAXNG_LIST) {
            val = XML_RELAXNG_CONTENT_SIMPLE;
        } else if (ptype == XML_RELAXNG_EXCEPT) {
            if (ret == XML_RELAXNG_CONTENT_ERROR)
                val = XML_RELAXNG_CONTENT_ERROR;
            else
                val = XML_RELAXNG_CONTENT_SIMPLE;
        } else {
            val = xmlRelaxNGGroupContentType(val, ret);
        }

    }
    return (val);
}
# 6565 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGGrammarPtr
xmlRelaxNGParseGrammar(xmlRelaxNGParserCtxtPtr ctxt, xmlNodePtr nodes)
{
    xmlRelaxNGGrammarPtr ret, tmp, old;





    ret = xmlRelaxNGNewGrammar(ctxt);
    if (ret == 
# 6575 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 6575 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )
        return (
# 6576 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 6576 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );




    ret->parent = ctxt->grammar;
    if (ctxt->grammar != 
# 6582 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 6582 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ) {
        tmp = ctxt->grammar->children;
        if (tmp == 
# 6584 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 6584 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) {
            ctxt->grammar->children = ret;
        } else {
            while (tmp->next != 
# 6587 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 6587 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   )
                tmp = tmp->next;
            tmp->next = ret;
        }
    }

    old = ctxt->grammar;
    ctxt->grammar = ret;
    xmlRelaxNGParseGrammarContent(ctxt, nodes);
    ctxt->grammar = ret;
    if (ctxt->grammar == 
# 6597 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 6597 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ) {
        xmlRngPErr(ctxt, nodes, XML_RNGP_GRAMMAR_CONTENT,
                   "Failed to parse <grammar> content\n", 
# 6599 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                         ((void *)0)
# 6599 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                             , 
# 6599 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                               ((void *)0)
# 6599 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                   );
    } else if (ctxt->grammar->start == 
# 6600 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 6600 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                          ) {
        xmlRngPErr(ctxt, nodes, XML_RNGP_GRAMMAR_NO_START,
                   "Element <grammar> has no <start>\n", 
# 6602 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                        ((void *)0)
# 6602 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                            , 
# 6602 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                              ((void *)0)
# 6602 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                  );
    }




    xmlRelaxNGCombineStart(ctxt, ret);
    if (ret->defs != 
# 6609 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                    ((void *)0)
# 6609 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                        ) {
        xmlHashScan__internal_alias(ret->defs, (xmlHashScanner) xmlRelaxNGCheckCombine,
                    ctxt);
    }




    if (ret->refs != 
# 6617 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                    ((void *)0)
# 6617 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                        ) {
        xmlHashScan__internal_alias(ret->refs, (xmlHashScanner) xmlRelaxNGCheckReference,
                    ctxt);
    }




    ctxt->grammar = old;
    return (ret);
}
# 6640 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRelaxNGPtr
xmlRelaxNGParseDocument(xmlRelaxNGParserCtxtPtr ctxt, xmlNodePtr node)
{
    xmlRelaxNGPtr schema = 
# 6643 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6643 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ;
    const xmlChar *olddefine;
    xmlRelaxNGGrammarPtr old;

    if ((ctxt == 
# 6647 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 6647 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) || (node == 
# 6647 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 6647 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ))
        return (
# 6648 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 6648 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );

    schema = xmlRelaxNGNewRelaxNG(ctxt);
    if (schema == 
# 6651 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 6651 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     )
        return (
# 6652 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 6652 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );

    olddefine = ctxt->define;
    ctxt->define = 
# 6655 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 6655 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ;
    if (((node != 
# 6656 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 6656 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       ) && (node->ns != 
# 6656 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 6656 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       ) && (node->type == XML_ELEMENT_NODE) && (xmlStrEqual__internal_alias(node->name, (const xmlChar *) "grammar")) && (xmlStrEqual__internal_alias(node->ns->href, xmlRelaxNGNs)))) {
        schema->topgrammar = xmlRelaxNGParseGrammar(ctxt, node->children);
    } else {
        xmlRelaxNGGrammarPtr tmp, ret;

        schema->topgrammar = ret = xmlRelaxNGNewGrammar(ctxt);
        if (schema->topgrammar == 
# 6662 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 6662 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     ) {
            return (schema);
        }



        ret->parent = ctxt->grammar;
        if (ctxt->grammar != 
# 6669 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 6669 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ) {
            tmp = ctxt->grammar->children;
            if (tmp == 
# 6671 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 6671 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) {
                ctxt->grammar->children = ret;
            } else {
                while (tmp->next != 
# 6674 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                   ((void *)0)
# 6674 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                       )
                    tmp = tmp->next;
                tmp->next = ret;
            }
        }
        old = ctxt->grammar;
        ctxt->grammar = ret;
        xmlRelaxNGParseStart(ctxt, node);
        if (old != 
# 6682 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 6682 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      )
            ctxt->grammar = old;
    }
    ctxt->define = olddefine;
    if (schema->topgrammar->start != 
# 6686 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 6686 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        ) {
        xmlRelaxNGCheckCycles(ctxt, schema->topgrammar->start, 0);
        if ((ctxt->flags & (1 << 7)) == 0) {
            xmlRelaxNGSimplify(ctxt, schema->topgrammar->start, 
# 6689 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                               ((void *)0)
# 6689 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                   );
            while ((schema->topgrammar->start != 
# 6690 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                ((void *)0)
# 6690 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                    ) &&
                   (schema->topgrammar->start->type == XML_RELAXNG_NOOP) &&
                   (schema->topgrammar->start->next != 
# 6692 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                      ((void *)0)
# 6692 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                          ))
                schema->topgrammar->start =
                    schema->topgrammar->start->content;
            xmlRelaxNGCheckRules(ctxt, schema->topgrammar->start,
                                 (1 << 4), XML_RELAXNG_NOOP);
        }
    }






    return (schema);
}
# 6723 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
xmlRelaxNGParserCtxtPtr
xmlRelaxNGNewParserCtxt__internal_alias(const char *URL)
{
    xmlRelaxNGParserCtxtPtr ret;

    if (URL == 
# 6728 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 6728 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )
        return (
# 6729 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 6729 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );

    ret =
        (xmlRelaxNGParserCtxtPtr) xmlMalloc(sizeof(xmlRelaxNGParserCtxt));
    if (ret == 
# 6733 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 6733 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) {
        xmlRngPErrMemory(
# 6734 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 6734 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            , "building parser\n");
        return (
# 6735 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 6735 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }
    memset(ret, 0, sizeof(xmlRelaxNGParserCtxt));
    ret->URL = xmlStrdup__internal_alias((const xmlChar *) URL);
    ret->error = (*(__xmlGenericError__internal_alias()));
    ret->userData = (*(__xmlGenericErrorContext__internal_alias()));
    return (ret);
}
# 6754 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
xmlRelaxNGParserCtxtPtr
xmlRelaxNGNewMemParserCtxt__internal_alias(const char *buffer, int size)
{
    xmlRelaxNGParserCtxtPtr ret;

    if ((buffer == 
# 6759 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 6759 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) || (size <= 0))
        return (
# 6760 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 6760 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );

    ret =
        (xmlRelaxNGParserCtxtPtr) xmlMalloc(sizeof(xmlRelaxNGParserCtxt));
    if (ret == 
# 6764 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 6764 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) {
        xmlRngPErrMemory(
# 6765 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 6765 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            , "building parser\n");
        return (
# 6766 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 6766 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }
    memset(ret, 0, sizeof(xmlRelaxNGParserCtxt));
    ret->buffer = buffer;
    ret->size = size;
    ret->error = (*(__xmlGenericError__internal_alias()));
    ret->userData = (*(__xmlGenericErrorContext__internal_alias()));
    return (ret);
}
# 6786 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
xmlRelaxNGParserCtxtPtr
xmlRelaxNGNewDocParserCtxt__internal_alias(xmlDocPtr doc)
{
    xmlRelaxNGParserCtxtPtr ret;
    xmlDocPtr copy;

    if (doc == 
# 6792 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 6792 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )
        return (
# 6793 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 6793 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    copy = xmlCopyDoc__internal_alias(doc, 1);
    if (copy == 
# 6795 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 6795 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   )
        return (
# 6796 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 6796 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );

    ret =
        (xmlRelaxNGParserCtxtPtr) xmlMalloc(sizeof(xmlRelaxNGParserCtxt));
    if (ret == 
# 6800 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 6800 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) {
        xmlRngPErrMemory(
# 6801 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 6801 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            , "building parser\n");
        return (
# 6802 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 6802 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }
    memset(ret, 0, sizeof(xmlRelaxNGParserCtxt));
    ret->document = copy;
    ret->freedoc = 1;
    ret->userData = (*(__xmlGenericErrorContext__internal_alias()));
    return (ret);
}







void
xmlRelaxNGFreeParserCtxt__internal_alias(xmlRelaxNGParserCtxtPtr ctxt)
{
    if (ctxt == 
# 6820 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 6820 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   )
        return;
    if (ctxt->URL != 
# 6822 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                    ((void *)0)
# 6822 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                        )
        xmlFree(ctxt->URL);
    if (ctxt->doc != 
# 6824 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                    ((void *)0)
# 6824 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                        )
        xmlRelaxNGFreeDocument(ctxt->doc);
    if (ctxt->interleaves != 
# 6826 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 6826 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                )
        xmlHashFree__internal_alias(ctxt->interleaves, 
# 6827 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 6827 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                          );
    if (ctxt->documents != 
# 6828 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6828 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              )
        xmlRelaxNGFreeDocumentList(ctxt->documents);
    if (ctxt->includes != 
# 6830 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 6830 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             )
        xmlRelaxNGFreeIncludeList(ctxt->includes);
    if (ctxt->docTab != 
# 6832 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 6832 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           )
        xmlFree(ctxt->docTab);
    if (ctxt->incTab != 
# 6834 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 6834 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           )
        xmlFree(ctxt->incTab);
    if (ctxt->defTab != 
# 6836 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 6836 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) {
        int i;

        for (i = 0; i < ctxt->defNr; i++)
            xmlRelaxNGFreeDefine(ctxt->defTab[i]);
        xmlFree(ctxt->defTab);
    }
    if ((ctxt->document != 
# 6843 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6843 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) && (ctxt->freedoc))
        xmlFreeDoc__internal_alias(ctxt->document);
    xmlFree(ctxt);
}
# 6855 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRelaxNGNormExtSpace(xmlChar * value)
{
    xmlChar *start = value;
    xmlChar *cur = value;

    if (value == 
# 6861 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 6861 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    )
        return;

    while ((((*cur) == 0x20) || ((0x9 <= (*cur)) && ((*cur) <= 0xa)) || ((*cur) == 0xd)))
        cur++;
    if (cur == start) {
        do {
            while ((*cur != 0) && (!(((*cur) == 0x20) || ((0x9 <= (*cur)) && ((*cur) <= 0xa)) || ((*cur) == 0xd))))
                cur++;
            if (*cur == 0)
                return;
            start = cur;
            while ((((*cur) == 0x20) || ((0x9 <= (*cur)) && ((*cur) <= 0xa)) || ((*cur) == 0xd)))
                cur++;
            if (*cur == 0) {
                *start = 0;
                return;
            }
        } while (1);
    } else {
        do {
            while ((*cur != 0) && (!(((*cur) == 0x20) || ((0x9 <= (*cur)) && ((*cur) <= 0xa)) || ((*cur) == 0xd))))
                *start++ = *cur++;
            if (*cur == 0) {
                *start = 0;
                return;
            }

            while ((((*cur) == 0x20) || ((0x9 <= (*cur)) && ((*cur) <= 0xa)) || ((*cur) == 0xd)))
                cur++;
            if (*cur == 0) {
                *start = 0;
                return;
            }
            *start++ = *cur++;
        } while (1);
    }
}
# 6907 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRelaxNGCleanupAttributes(xmlRelaxNGParserCtxtPtr ctxt, xmlNodePtr node)
{
    xmlAttrPtr cur, next;

    cur = node->properties;
    while (cur != 
# 6913 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 6913 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        next = cur->next;
        if ((cur->ns == 
# 6915 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 6915 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) ||
            (xmlStrEqual__internal_alias(cur->ns->href, xmlRelaxNGNs))) {
            if (xmlStrEqual__internal_alias(cur->name, (xmlChar *) "name")) {
                if ((!xmlStrEqual__internal_alias(node->name, (xmlChar *) "element")) &&
                    (!xmlStrEqual__internal_alias(node->name, (xmlChar *) "attribute")) &&
                    (!xmlStrEqual__internal_alias(node->name, (xmlChar *) "ref")) &&
                    (!xmlStrEqual__internal_alias(node->name, (xmlChar *) "parentRef")) &&
                    (!xmlStrEqual__internal_alias(node->name, (xmlChar *) "param")) &&
                    (!xmlStrEqual__internal_alias(node->name, (xmlChar *) "define"))) {
                    xmlRngPErr(ctxt, node, XML_RNGP_FORBIDDEN_ATTRIBUTE,
                               "Attribute %s is not allowed on %s\n",
                               cur->name, node->name);
                }
            } else if (xmlStrEqual__internal_alias(cur->name, (xmlChar *) "type")) {
                if ((!xmlStrEqual__internal_alias(node->name, (xmlChar *) "value")) &&
                    (!xmlStrEqual__internal_alias(node->name, (xmlChar *) "data"))) {
                    xmlRngPErr(ctxt, node, XML_RNGP_FORBIDDEN_ATTRIBUTE,
                               "Attribute %s is not allowed on %s\n",
                               cur->name, node->name);
                }
            } else if (xmlStrEqual__internal_alias(cur->name, (xmlChar *) "href")) {
                if ((!xmlStrEqual__internal_alias(node->name, (xmlChar *) "externalRef")) &&
                    (!xmlStrEqual__internal_alias(node->name, (xmlChar *) "include"))) {
                    xmlRngPErr(ctxt, node, XML_RNGP_FORBIDDEN_ATTRIBUTE,
                               "Attribute %s is not allowed on %s\n",
                               cur->name, node->name);
                }
            } else if (xmlStrEqual__internal_alias(cur->name, (xmlChar *) "combine")) {
                if ((!xmlStrEqual__internal_alias(node->name, (xmlChar *) "start")) &&
                    (!xmlStrEqual__internal_alias(node->name, (xmlChar *) "define"))) {
                    xmlRngPErr(ctxt, node, XML_RNGP_FORBIDDEN_ATTRIBUTE,
                               "Attribute %s is not allowed on %s\n",
                               cur->name, node->name);
                }
            } else if (xmlStrEqual__internal_alias(cur->name, (xmlChar *) "datatypeLibrary")) {
                xmlChar *val;
                xmlURIPtr uri;

                val = xmlNodeListGetString__internal_alias(node->doc, cur->children, 1);
                if (val != 
# 6954 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 6954 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) {
                    if (val[0] != 0) {
                        uri = xmlParseURI__internal_alias((const char *) val);
                        if (uri == 
# 6957 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 6957 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ) {
                            xmlRngPErr(ctxt, node, XML_RNGP_INVALID_URI,
                                       "Attribute %s contains invalid URI %s\n",
                                       cur->name, val);
                        } else {
                            if (uri->scheme == 
# 6962 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                              ((void *)0)
# 6962 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                  ) {
                                xmlRngPErr(ctxt, node, XML_RNGP_URI_NOT_ABSOLUTE,
                                           "Attribute %s URI %s is not absolute\n",
                                           cur->name, val);
                            }
                            if (uri->fragment != 
# 6967 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                ((void *)0)
# 6967 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                    ) {
                                xmlRngPErr(ctxt, node, XML_RNGP_URI_FRAGMENT,
                                           "Attribute %s URI %s has a fragment ID\n",
                                           cur->name, val);
                            }
                            xmlFreeURI__internal_alias(uri);
                        }
                    }
                    xmlFree(val);
                }
            } else if (!xmlStrEqual__internal_alias(cur->name, (xmlChar *) "ns")) {
                xmlRngPErr(ctxt, node, XML_RNGP_UNKNOWN_ATTRIBUTE,
                           "Unknown attribute %s on %s\n", cur->name,
                           node->name);
            }
        }
        cur = next;
    }
}
# 6995 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRelaxNGCleanupTree(xmlRelaxNGParserCtxtPtr ctxt, xmlNodePtr root)
{
    xmlNodePtr cur, delete;

    delete = 
# 7000 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
            ((void *)0)
# 7000 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                ;
    cur = root;
    while (cur != 
# 7002 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 7002 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        if (delete != 
# 7003 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 7003 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ) {
            xmlUnlinkNode__internal_alias(delete);
            xmlFreeNode__internal_alias(delete);
            delete = 
# 7006 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                    ((void *)0)
# 7006 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                        ;
        }
        if (cur->type == XML_ELEMENT_NODE) {



            if ((cur->ns == 
# 7012 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 7012 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) ||
                (!xmlStrEqual__internal_alias(cur->ns->href, xmlRelaxNGNs))) {
                if ((cur->parent != 
# 7014 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                   ((void *)0)
# 7014 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                       ) &&
                    (cur->parent->type == XML_ELEMENT_NODE) &&
                    ((xmlStrEqual__internal_alias(cur->parent->name, (xmlChar *) "name")) ||
                     (xmlStrEqual__internal_alias(cur->parent->name, (xmlChar *) "value")) ||
                     (xmlStrEqual__internal_alias(cur->parent->name, (xmlChar *) "param")))) {
                    xmlRngPErr(ctxt, cur, XML_RNGP_FOREIGN_ELEMENT,
                               "element %s doesn't allow foreign elements\n",
                               cur->parent->name, 
# 7021 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                 ((void *)0)
# 7021 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                     );
                }
                delete = cur;
                goto skip_children;
            } else {
                xmlRelaxNGCleanupAttributes(ctxt, cur);
                if (xmlStrEqual__internal_alias(cur->name, (xmlChar *) "externalRef")) {
                    xmlChar *href, *ns, *base, *URL;
                    xmlRelaxNGDocumentPtr docu;
                    xmlNodePtr tmp;
      xmlURIPtr uri;

                    ns = xmlGetProp__internal_alias(cur, (xmlChar *) "ns");
                    if (ns == 
# 7034 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 7034 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
                        tmp = cur->parent;
                        while ((tmp != 
# 7036 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 7036 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                          ) &&
                               (tmp->type == XML_ELEMENT_NODE)) {
                            ns = xmlGetProp__internal_alias(tmp, (xmlChar *) "ns");
                            if (ns != 
# 7039 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 7039 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                         )
                                break;
                            tmp = tmp->parent;
                        }
                    }
                    href = xmlGetProp__internal_alias(cur, (xmlChar *) "href");
                    if (href == 
# 7045 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 7045 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ) {
                        xmlRngPErr(ctxt, cur, XML_RNGP_MISSING_HREF,
                                   "xmlRelaxNGParse: externalRef has no href attribute\n",
                                   
# 7048 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 7048 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      , 
# 7048 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                        ((void *)0)
# 7048 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                            );
                        if (ns != 
# 7049 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 7049 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     )
                            xmlFree(ns);
                        delete = cur;
                        goto skip_children;
                    }
      uri = xmlParseURI__internal_alias((const char *) href);
      if (uri == 
# 7055 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 7055 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) {
                        xmlRngPErr(ctxt, cur, XML_RNGP_HREF_ERROR,
                                   "Incorrect URI for externalRef %s\n",
                                   href, 
# 7058 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                        ((void *)0)
# 7058 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                            );
                        if (ns != 
# 7059 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 7059 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     )
                            xmlFree(ns);
                        if (href != 
# 7061 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                   ((void *)0)
# 7061 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                       )
                            xmlFree(href);
                        delete = cur;
                        goto skip_children;
      }
      if (uri->fragment != 
# 7066 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 7066 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) {
                        xmlRngPErr(ctxt, cur, XML_RNGP_HREF_ERROR,
          "Fragment forbidden in URI for externalRef %s\n",
                                   href, 
# 7069 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                        ((void *)0)
# 7069 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                            );
                        if (ns != 
# 7070 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 7070 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     )
                            xmlFree(ns);
          xmlFreeURI__internal_alias(uri);
                        if (href != 
# 7073 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                   ((void *)0)
# 7073 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                       )
                            xmlFree(href);
                        delete = cur;
                        goto skip_children;
      }
      xmlFreeURI__internal_alias(uri);
                    base = xmlNodeGetBase__internal_alias(cur->doc, cur);
                    URL = xmlBuildURI__internal_alias(href, base);
                    if (URL == 
# 7081 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 7081 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                        xmlRngPErr(ctxt, cur, XML_RNGP_HREF_ERROR,
                                   "Failed to compute URL for externalRef %s\n",
                                   href, 
# 7084 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                        ((void *)0)
# 7084 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                            );
                        if (ns != 
# 7085 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 7085 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     )
                            xmlFree(ns);
                        if (href != 
# 7087 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                   ((void *)0)
# 7087 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                       )
                            xmlFree(href);
                        if (base != 
# 7089 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                   ((void *)0)
# 7089 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                       )
                            xmlFree(base);
                        delete = cur;
                        goto skip_children;
                    }
                    if (href != 
# 7094 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 7094 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   )
                        xmlFree(href);
                    if (base != 
# 7096 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 7096 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   )
                        xmlFree(base);
                    docu = xmlRelaxNGLoadExternalRef(ctxt, URL, ns);
                    if (docu == 
# 7099 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 7099 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ) {
                        xmlRngPErr(ctxt, cur, XML_RNGP_EXTERNAL_REF_FAILURE,
                                   "Failed to load externalRef %s\n", URL,
                                   
# 7102 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 7102 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      );
                        if (ns != 
# 7103 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 7103 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     )
                            xmlFree(ns);
                        xmlFree(URL);
                        delete = cur;
                        goto skip_children;
                    }
                    if (ns != 
# 7109 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 7109 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 )
                        xmlFree(ns);
                    xmlFree(URL);
                    cur->psvi = docu;
                } else if (xmlStrEqual__internal_alias(cur->name, (xmlChar *) "include")) {
                    xmlChar *href, *ns, *base, *URL;
                    xmlRelaxNGIncludePtr incl;
                    xmlNodePtr tmp;

                    href = xmlGetProp__internal_alias(cur, (xmlChar *) "href");
                    if (href == 
# 7119 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 7119 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ) {
                        xmlRngPErr(ctxt, cur, XML_RNGP_MISSING_HREF,
                                   "xmlRelaxNGParse: include has no href attribute\n",
                                   
# 7122 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 7122 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      , 
# 7122 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                        ((void *)0)
# 7122 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                            );
                        delete = cur;
                        goto skip_children;
                    }
                    base = xmlNodeGetBase__internal_alias(cur->doc, cur);
                    URL = xmlBuildURI__internal_alias(href, base);
                    if (URL == 
# 7128 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 7128 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                        xmlRngPErr(ctxt, cur, XML_RNGP_HREF_ERROR,
                                   "Failed to compute URL for include %s\n",
                                   href, 
# 7131 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                        ((void *)0)
# 7131 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                            );
                        if (href != 
# 7132 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                   ((void *)0)
# 7132 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                       )
                            xmlFree(href);
                        if (base != 
# 7134 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                   ((void *)0)
# 7134 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                       )
                            xmlFree(base);
                        delete = cur;
                        goto skip_children;
                    }
                    if (href != 
# 7139 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 7139 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   )
                        xmlFree(href);
                    if (base != 
# 7141 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 7141 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   )
                        xmlFree(base);
                    ns = xmlGetProp__internal_alias(cur, (xmlChar *) "ns");
                    if (ns == 
# 7144 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 7144 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
                        tmp = cur->parent;
                        while ((tmp != 
# 7146 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 7146 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                          ) &&
                               (tmp->type == XML_ELEMENT_NODE)) {
                            ns = xmlGetProp__internal_alias(tmp, (xmlChar *) "ns");
                            if (ns != 
# 7149 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 7149 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                         )
                                break;
                            tmp = tmp->parent;
                        }
                    }
                    incl = xmlRelaxNGLoadInclude(ctxt, URL, cur, ns);
                    if (ns != 
# 7155 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 7155 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 )
                        xmlFree(ns);
                    if (incl == 
# 7157 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 7157 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ) {
                        xmlRngPErr(ctxt, cur, XML_RNGP_INCLUDE_FAILURE,
                                   "Failed to load include %s\n", URL,
                                   
# 7160 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 7160 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      );
                        xmlFree(URL);
                        delete = cur;
                        goto skip_children;
                    }
                    xmlFree(URL);
                    cur->psvi = incl;
                } else if ((xmlStrEqual__internal_alias(cur->name, (xmlChar *) "element")) ||
                           (xmlStrEqual__internal_alias(cur->name, (xmlChar *) "attribute")))
                {
                    xmlChar *name, *ns;
                    xmlNodePtr text = 
# 7171 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 7171 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                         ;





                    name = xmlGetProp__internal_alias(cur, (xmlChar *) "name");
                    if (name != 
# 7178 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 7178 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ) {
                        if (cur->children == 
# 7179 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                            ((void *)0)
# 7179 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                ) {
                            text =
                                xmlNewChild__internal_alias(cur, cur->ns, (xmlChar *) "name",
                                            name);
                        } else {
                            xmlNodePtr node;

                            node = xmlNewDocNode__internal_alias(cur->doc, cur->ns,
                            (xmlChar *) "name", 
# 7187 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                            ((void *)0)
# 7187 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                );
                            if (node != 
# 7188 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                       ((void *)0)
# 7188 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                           ) {
                                xmlAddPrevSibling__internal_alias(cur->children, node);
                                text = xmlNewText__internal_alias(name);
                                xmlAddChild__internal_alias(node, text);
                                text = node;
                            }
                        }
                        if (text == 
# 7195 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                   ((void *)0)
# 7195 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                       ) {
                            xmlRngPErr(ctxt, cur, XML_RNGP_CREATE_FAILURE,
                                       "Failed to create a name %s element\n",
                                       name, 
# 7198 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                            ((void *)0)
# 7198 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                );
                        }
                        xmlUnsetProp__internal_alias(cur, (xmlChar *) "name");
                        xmlFree(name);
                        ns = xmlGetProp__internal_alias(cur, (xmlChar *) "ns");
                        if (ns != 
# 7203 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 7203 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     ) {
                            if (text != 
# 7204 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                       ((void *)0)
# 7204 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                           ) {
                                xmlSetProp__internal_alias(text, (xmlChar *) "ns", ns);

                            }
                            xmlFree(ns);
                        } else if (xmlStrEqual__internal_alias(cur->name,
                                               (xmlChar *) "attribute")) {
                            xmlSetProp__internal_alias(text, (xmlChar *) "ns", (xmlChar *) "");
                        }
                    }
                } else if ((xmlStrEqual__internal_alias(cur->name, (xmlChar *) "name")) ||
                           (xmlStrEqual__internal_alias(cur->name, (xmlChar *) "nsName")) ||
                           (xmlStrEqual__internal_alias(cur->name, (xmlChar *) "value"))) {




                    if (xmlHasProp__internal_alias(cur, (xmlChar *) "ns") == 
# 7221 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                         ((void *)0)
# 7221 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                             ) {
                        xmlNodePtr node;
                        xmlChar *ns = 
# 7223 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 7223 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                         ;

                        node = cur->parent;
                        while ((node != 
# 7226 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                       ((void *)0)
# 7226 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                           ) &&
                               (node->type == XML_ELEMENT_NODE)) {
                            ns = xmlGetProp__internal_alias(node, (xmlChar *) "ns");
                            if (ns != 
# 7229 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 7229 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                         ) {
                                break;
                            }
                            node = node->parent;
                        }
                        if (ns == 
# 7234 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 7234 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     ) {
                            xmlSetProp__internal_alias(cur, (xmlChar *) "ns", (xmlChar *) "");
                        } else {
                            xmlSetProp__internal_alias(cur, (xmlChar *) "ns", ns);
                            xmlFree(ns);
                        }
                    }
                    if (xmlStrEqual__internal_alias(cur->name, (xmlChar *) "name")) {
                        xmlChar *name, *local, *prefix;




                        name = xmlNodeGetContent__internal_alias(cur);
                        if (name != 
# 7248 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                   ((void *)0)
# 7248 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                       ) {
                            local = xmlSplitQName2__internal_alias(name, &prefix);
                            if (local != 
# 7250 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                        ((void *)0)
# 7250 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                            ) {
                                xmlNsPtr ns;

                                ns = xmlSearchNs__internal_alias(cur->doc, cur, prefix);
                                if (ns == 
# 7254 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                         ((void *)0)
# 7254 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                             ) {
                                    xmlRngPErr(ctxt, cur,
                                               XML_RNGP_PREFIX_UNDEFINED,
                                               "xmlRelaxNGParse: no namespace for prefix %s\n",
                                               prefix, 
# 7258 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                      ((void *)0)
# 7258 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                          );
                                } else {
                                    xmlSetProp__internal_alias(cur, (xmlChar *) "ns",
                                               ns->href);
                                    xmlNodeSetContent__internal_alias(cur, local);
                                }
                                xmlFree(local);
                                xmlFree(prefix);
                            }
                            xmlFree(name);
                        }
                    }



                    if (xmlStrEqual__internal_alias(cur->name, (xmlChar *) "nsName")) {
                        if (ctxt->flags & (1 << 9)) {
                            xmlRngPErr(ctxt, cur,
                                       XML_RNGP_PAT_NSNAME_EXCEPT_NSNAME,
                                       "Found nsName/except//nsName forbidden construct\n",
                                       
# 7278 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 7278 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                          , 
# 7278 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                            ((void *)0)
# 7278 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                );
                        }
                    }
                } else if ((xmlStrEqual__internal_alias(cur->name, (xmlChar *) "except")) &&
                           (cur != root)) {
                    int oldflags = ctxt->flags;




                    if ((cur->parent != 
# 7288 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                       ((void *)0)
# 7288 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                           ) &&
                        (xmlStrEqual__internal_alias
                         (cur->parent->name, (xmlChar *) "anyName"))) {
                        ctxt->flags |= (1 << 8);
                        xmlRelaxNGCleanupTree(ctxt, cur);
                        ctxt->flags = oldflags;
                        goto skip_children;
                    } else if ((cur->parent != 
# 7295 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                              ((void *)0)
# 7295 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                  ) &&
                               (xmlStrEqual__internal_alias
                                (cur->parent->name, (xmlChar *) "nsName"))) {
                        ctxt->flags |= (1 << 9);
                        xmlRelaxNGCleanupTree(ctxt, cur);
                        ctxt->flags = oldflags;
                        goto skip_children;
                    }
                } else if (xmlStrEqual__internal_alias(cur->name, (xmlChar *) "anyName")) {



                    if (ctxt->flags & (1 << 8)) {
                        xmlRngPErr(ctxt, cur,
                                   XML_RNGP_PAT_ANYNAME_EXCEPT_ANYNAME,
                                   "Found anyName/except//anyName forbidden construct\n",
                                   
# 7311 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 7311 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      , 
# 7311 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                        ((void *)0)
# 7311 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                            );
                    } else if (ctxt->flags & (1 << 9)) {
                        xmlRngPErr(ctxt, cur,
                                   XML_RNGP_PAT_NSNAME_EXCEPT_ANYNAME,
                                   "Found nsName/except//anyName forbidden construct\n",
                                   
# 7316 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 7316 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      , 
# 7316 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                        ((void *)0)
# 7316 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                            );
                    }
                }




                if (xmlStrEqual__internal_alias(cur->name, (xmlChar *) "div")) {
                    xmlChar *ns;
                    xmlNodePtr child, ins, tmp;





                    ns = xmlGetProp__internal_alias(cur, (xmlChar *) "ns");

                    child = cur->children;
                    ins = cur;
                    while (child != 
# 7335 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                   ((void *)0)
# 7335 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                       ) {
                        if (ns != 
# 7336 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 7336 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     ) {
                            if (!xmlHasProp__internal_alias(child, (xmlChar *) "ns")) {
                                xmlSetProp__internal_alias(child, (xmlChar *) "ns", ns);
                            }
                        }
                        tmp = child->next;
                        xmlUnlinkNode__internal_alias(child);
                        ins = xmlAddNextSibling__internal_alias(ins, child);
                        child = tmp;
                    }
                    if (ns != 
# 7346 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 7346 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 )
                        xmlFree(ns);







      if (cur->nsDef != 
# 7355 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 7355 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) {
   xmlNsPtr parDef = (xmlNsPtr)&cur->parent->nsDef;
   while (parDef->next != 
# 7357 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 7357 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             )
       parDef = parDef->next;
   parDef->next = cur->nsDef;
   cur->nsDef = 
# 7360 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 7360 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ;
      }
                    delete = cur;
                    goto skip_children;
                }
            }
        }



        else if ((cur->type == XML_TEXT_NODE) ||
                 (cur->type == XML_CDATA_SECTION_NODE)) {
            if ((xmlRelaxNGIsBlank((cur)->content))) {
                if (cur->parent->type == XML_ELEMENT_NODE) {
                    if ((!xmlStrEqual__internal_alias(cur->parent->name, (xmlChar *) "value"))
                        &&
                        (!xmlStrEqual__internal_alias
                         (cur->parent->name, (xmlChar *) "param")))
                        delete = cur;
                } else {
                    delete = cur;
                    goto skip_children;
                }
            }
        } else {
            delete = cur;
            goto skip_children;
        }




        if (cur->children != 
# 7392 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 7392 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ) {
            if ((cur->children->type != XML_ENTITY_DECL) &&
                (cur->children->type != XML_ENTITY_REF_NODE) &&
                (cur->children->type != XML_ENTITY_NODE)) {
                cur = cur->children;
                continue;
            }
        }
      skip_children:
        if (cur->next != 
# 7401 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 7401 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ) {
            cur = cur->next;
            continue;
        }

        do {
            cur = cur->parent;
            if (cur == 
# 7408 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 7408 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          )
                break;
            if (cur == root) {
                cur = 
# 7411 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 7411 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ;
                break;
            }
            if (cur->next != 
# 7414 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 7414 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ) {
                cur = cur->next;
                break;
            }
        } while (cur != 
# 7418 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 7418 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           );
    }
    if (delete != 
# 7420 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 7420 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        xmlUnlinkNode__internal_alias(delete);
        xmlFreeNode__internal_alias(delete);
        delete = 
# 7423 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 7423 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ;
    }
}
# 7437 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlDocPtr
xmlRelaxNGCleanupDoc(xmlRelaxNGParserCtxtPtr ctxt, xmlDocPtr doc)
{
    xmlNodePtr root;




    root = xmlDocGetRootElement__internal_alias(doc);
    if (root == 
# 7446 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 7446 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) {
        xmlRngPErr(ctxt, (xmlNodePtr) doc, XML_RNGP_EMPTY, "xmlRelaxNGParse: %s is empty\n",
                   ctxt->URL, 
# 7448 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 7448 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 );
        return (
# 7449 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 7449 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }
    xmlRelaxNGCleanupTree(ctxt, root);
    return (doc);
}
# 7465 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
xmlRelaxNGPtr
xmlRelaxNGParse__internal_alias(xmlRelaxNGParserCtxtPtr ctxt)
{
    xmlRelaxNGPtr ret = 
# 7468 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 7468 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ;
    xmlDocPtr doc;
    xmlNodePtr root;

    xmlRelaxNGInitTypes__internal_alias();

    if (ctxt == 
# 7474 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 7474 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   )
        return (
# 7475 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 7475 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );




    if (ctxt->URL != 
# 7480 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                    ((void *)0)
# 7480 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                        ) {
        doc = xmlReadFile__internal_alias((const char *) ctxt->URL,
# 7481 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                  ((void *)0)
# 7481 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                      ,0);
        if (doc == 
# 7482 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 7482 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) {
            xmlRngPErr(ctxt, 
# 7483 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 7483 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                , XML_RNGP_PARSE_ERROR,
                       "xmlRelaxNGParse: could not load %s\n", ctxt->URL,
                       
# 7485 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 7485 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          );
            return (
# 7486 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 7486 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       );
        }
    } else if (ctxt->buffer != 
# 7488 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 7488 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
        doc = xmlReadMemory__internal_alias(ctxt->buffer, ctxt->size,
# 7489 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                    ((void *)0)
# 7489 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                        ,
# 7489 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                         ((void *)0)
# 7489 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                             ,0);
        if (doc == 
# 7490 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 7490 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) {
            xmlRngPErr(ctxt, 
# 7491 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 7491 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                , XML_RNGP_PARSE_ERROR,
                       "xmlRelaxNGParse: could not parse schemas\n", 
# 7492 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                    ((void *)0)
# 7492 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                        ,
                       
# 7493 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 7493 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          );
            return (
# 7494 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 7494 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       );
        }
        doc->URL = xmlStrdup__internal_alias((xmlChar *) "in_memory_buffer");
        ctxt->URL = xmlStrdup__internal_alias((xmlChar *) "in_memory_buffer");
    } else if (ctxt->document != 
# 7498 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 7498 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    ) {
        doc = ctxt->document;
    } else {
        xmlRngPErr(ctxt, 
# 7501 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 7501 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            , XML_RNGP_EMPTY,
                   "xmlRelaxNGParse: nothing to parse\n", 
# 7502 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                         ((void *)0)
# 7502 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                             , 
# 7502 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                               ((void *)0)
# 7502 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                   );
        return (
# 7503 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 7503 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }
    ctxt->document = doc;




    doc = xmlRelaxNGCleanupDoc(ctxt, doc);
    if (doc == 
# 7511 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 7511 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) {
        xmlFreeDoc__internal_alias(ctxt->document);
        ctxt->document = 
# 7513 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 7513 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ;
        return (
# 7514 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 7514 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }




    root = xmlDocGetRootElement__internal_alias(doc);
    if (root == 
# 7521 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 7521 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) {
        xmlRngPErr(ctxt, (xmlNodePtr) doc,
            XML_RNGP_EMPTY, "xmlRelaxNGParse: %s is empty\n",
                   (ctxt->URL ? ctxt->URL : (xmlChar *) "schemas"), 
# 7524 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                ((void *)0)
# 7524 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                    );

        xmlFreeDoc__internal_alias(ctxt->document);
        ctxt->document = 
# 7527 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 7527 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ;
        return (
# 7528 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 7528 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }
    ret = xmlRelaxNGParseDocument(ctxt, root);
    if (ret == 
# 7531 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 7531 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) {
        xmlFreeDoc__internal_alias(ctxt->document);
        ctxt->document = 
# 7533 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 7533 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ;
        return (
# 7534 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 7534 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }







    if (ctxt->interleaves != 
# 7543 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 7543 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ) {
        xmlHashScan__internal_alias(ctxt->interleaves,
                    (xmlHashScanner) xmlRelaxNGComputeInterleaves, ctxt);
    }




    if (ctxt->nbErrors > 0) {
        xmlRelaxNGFree__internal_alias(ret);
        ctxt->document = 
# 7553 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 7553 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ;
        xmlFreeDoc__internal_alias(doc);
        return (
# 7555 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 7555 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }




    if ((ret->topgrammar != 
# 7561 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 7561 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) && (ret->topgrammar->start != 
# 7561 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                               ((void *)0)
# 7561 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                   )) {
        if (ret->topgrammar->start->type != XML_RELAXNG_START) {
            xmlRelaxNGDefinePtr def;

            def = xmlRelaxNGNewDefine(ctxt, 
# 7565 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                           ((void *)0)
# 7565 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                               );
            if (def != 
# 7566 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 7566 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) {
                def->type = XML_RELAXNG_START;
                def->content = ret->topgrammar->start;
                ret->topgrammar->start = def;
            }
        }
        xmlRelaxNGTryCompile(ctxt, ret->topgrammar->start);
    }




    ret->doc = doc;
    ctxt->document = 
# 7579 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                    ((void *)0)
# 7579 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                        ;
    ret->documents = ctxt->documents;
    ctxt->documents = 
# 7581 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 7581 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ;

    ret->includes = ctxt->includes;
    ctxt->includes = 
# 7584 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                    ((void *)0)
# 7584 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                        ;
    ret->defNr = ctxt->defNr;
    ret->defTab = ctxt->defTab;
    ctxt->defTab = 
# 7587 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 7587 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ;
    if (ctxt->idref == 1)
        ret->idref = 1;

    return (ret);
}
# 7603 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
void
xmlRelaxNGSetParserErrors__internal_alias(xmlRelaxNGParserCtxtPtr ctxt,
                          xmlRelaxNGValidityErrorFunc err,
                          xmlRelaxNGValidityWarningFunc warn, void *ctx)
{
    if (ctxt == 
# 7608 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 7608 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   )
        return;
    ctxt->error = err;
    ctxt->warning = warn;
    ctxt->serror = 
# 7612 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 7612 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ;
    ctxt->userData = ctx;
}
# 7627 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
int
xmlRelaxNGGetParserErrors__internal_alias(xmlRelaxNGParserCtxtPtr ctxt,
                          xmlRelaxNGValidityErrorFunc * err,
                          xmlRelaxNGValidityWarningFunc * warn, void **ctx)
{
    if (ctxt == 
# 7632 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 7632 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   )
        return (-1);
    if (err != 
# 7634 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 7634 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )
        *err = ctxt->error;
    if (warn != 
# 7636 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 7636 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   )
        *warn = ctxt->warning;
    if (ctx != 
# 7638 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 7638 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )
        *ctx = ctxt->userData;
    return (0);
}
# 7651 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
void
xmlRelaxNGSetParserStructuredErrors__internal_alias(xmlRelaxNGParserCtxtPtr ctxt,
        xmlStructuredErrorFunc serror,
        void *ctx)
{
    if (ctxt == 
# 7656 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 7656 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   )
        return;
    ctxt->serror = serror;
    ctxt->error = 
# 7659 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 7659 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ;
    ctxt->warning = 
# 7660 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 7660 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ;
    ctxt->userData = ctx;
}
# 7671 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void xmlRelaxNGDumpDefine(FILE * output,
                                 xmlRelaxNGDefinePtr define);
# 7681 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRelaxNGDumpDefines(FILE * output, xmlRelaxNGDefinePtr defines)
{
    while (defines != 
# 7684 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 7684 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ) {
        xmlRelaxNGDumpDefine(output, defines);
        defines = defines->next;
    }
}
# 7697 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRelaxNGDumpDefine(FILE * output, xmlRelaxNGDefinePtr define)
{
    if (define == 
# 7700 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 7700 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     )
        return;
    switch (define->type) {
        case XML_RELAXNG_EMPTY:
            fprintf(output, "<empty/>\n");
            break;
        case XML_RELAXNG_NOT_ALLOWED:
            fprintf(output, "<notAllowed/>\n");
            break;
        case XML_RELAXNG_TEXT:
            fprintf(output, "<text/>\n");
            break;
        case XML_RELAXNG_ELEMENT:
            fprintf(output, "<element>\n");
            if (define->name != 
# 7714 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 7714 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ) {
                fprintf(output, "<name");
                if (define->ns != 
# 7716 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 7716 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     )
                    fprintf(output, " ns=\"%s\"", define->ns);
                fprintf(output, ">%s</name>\n", define->name);
            }
            xmlRelaxNGDumpDefines(output, define->attrs);
            xmlRelaxNGDumpDefines(output, define->content);
            fprintf(output, "</element>\n");
            break;
        case XML_RELAXNG_LIST:
            fprintf(output, "<list>\n");
            xmlRelaxNGDumpDefines(output, define->content);
            fprintf(output, "</list>\n");
            break;
        case XML_RELAXNG_ONEORMORE:
            fprintf(output, "<oneOrMore>\n");
            xmlRelaxNGDumpDefines(output, define->content);
            fprintf(output, "</oneOrMore>\n");
            break;
        case XML_RELAXNG_ZEROORMORE:
            fprintf(output, "<zeroOrMore>\n");
            xmlRelaxNGDumpDefines(output, define->content);
            fprintf(output, "</zeroOrMore>\n");
            break;
        case XML_RELAXNG_CHOICE:
            fprintf(output, "<choice>\n");
            xmlRelaxNGDumpDefines(output, define->content);
            fprintf(output, "</choice>\n");
            break;
        case XML_RELAXNG_GROUP:
            fprintf(output, "<group>\n");
            xmlRelaxNGDumpDefines(output, define->content);
            fprintf(output, "</group>\n");
            break;
        case XML_RELAXNG_INTERLEAVE:
            fprintf(output, "<interleave>\n");
            xmlRelaxNGDumpDefines(output, define->content);
            fprintf(output, "</interleave>\n");
            break;
        case XML_RELAXNG_OPTIONAL:
            fprintf(output, "<optional>\n");
            xmlRelaxNGDumpDefines(output, define->content);
            fprintf(output, "</optional>\n");
            break;
        case XML_RELAXNG_ATTRIBUTE:
            fprintf(output, "<attribute>\n");
            xmlRelaxNGDumpDefines(output, define->content);
            fprintf(output, "</attribute>\n");
            break;
        case XML_RELAXNG_DEF:
            fprintf(output, "<define");
            if (define->name != 
# 7766 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 7766 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   )
                fprintf(output, " name=\"%s\"", define->name);
            fprintf(output, ">\n");
            xmlRelaxNGDumpDefines(output, define->content);
            fprintf(output, "</define>\n");
            break;
        case XML_RELAXNG_REF:
            fprintf(output, "<ref");
            if (define->name != 
# 7774 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 7774 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   )
                fprintf(output, " name=\"%s\"", define->name);
            fprintf(output, ">\n");
            xmlRelaxNGDumpDefines(output, define->content);
            fprintf(output, "</ref>\n");
            break;
        case XML_RELAXNG_PARENTREF:
            fprintf(output, "<parentRef");
            if (define->name != 
# 7782 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 7782 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   )
                fprintf(output, " name=\"%s\"", define->name);
            fprintf(output, ">\n");
            xmlRelaxNGDumpDefines(output, define->content);
            fprintf(output, "</parentRef>\n");
            break;
        case XML_RELAXNG_EXTERNALREF:
            fprintf(output, "<externalRef>");
            xmlRelaxNGDumpDefines(output, define->content);
            fprintf(output, "</externalRef>\n");
            break;
        case XML_RELAXNG_DATATYPE:
        case XML_RELAXNG_VALUE:
            (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())), "Unimplemented block at %s:%d\n", "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c", 7795); break;
        case XML_RELAXNG_START:
        case XML_RELAXNG_EXCEPT:
        case XML_RELAXNG_PARAM:
            (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())), "Unimplemented block at %s:%d\n", "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c", 7799); break;
        case XML_RELAXNG_NOOP:
            xmlRelaxNGDumpDefines(output, define->content);
            break;
    }
}
# 7814 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRelaxNGDumpGrammar(FILE * output, xmlRelaxNGGrammarPtr grammar, int top)
{
    if (grammar == 
# 7817 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 7817 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      )
        return;

    fprintf(output, "<grammar");
    if (top)
        fprintf(output, " xmlns=\"http://relaxng.org/ns/structure/1.0\"");
    switch (grammar->combine) {
        case XML_RELAXNG_COMBINE_UNDEFINED:
            break;
        case XML_RELAXNG_COMBINE_CHOICE:
            fprintf(output, " combine=\"choice\"");
            break;
        case XML_RELAXNG_COMBINE_INTERLEAVE:
            fprintf(output, " combine=\"interleave\"");
            break;
        default:
            fprintf(output, " <!-- invalid combine value -->");
    }
    fprintf(output, ">\n");
    if (grammar->start == 
# 7836 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 7836 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ) {
        fprintf(output, " <!-- grammar had no start -->");
    } else {
        fprintf(output, "<start>\n");
        xmlRelaxNGDumpDefine(output, grammar->start);
        fprintf(output, "</start>\n");
    }

    fprintf(output, "</grammar>\n");
}
# 7854 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
void
xmlRelaxNGDump__internal_alias(FILE * output, xmlRelaxNGPtr schema)
{
    if (output == 
# 7857 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 7857 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     )
        return;
    if (schema == 
# 7859 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 7859 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        fprintf(output, "RelaxNG empty or failed to compile\n");
        return;
    }
    fprintf(output, "RelaxNG: ");
    if (schema->doc == 
# 7864 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 7864 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) {
        fprintf(output, "no document\n");
    } else if (schema->doc->URL != 
# 7866 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 7866 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ) {
        fprintf(output, "%s\n", schema->doc->URL);
    } else {
        fprintf(output, "\n");
    }
    if (schema->topgrammar == 
# 7871 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 7871 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
        fprintf(output, "RelaxNG has no top grammar\n");
        return;
    }
    xmlRelaxNGDumpGrammar(output, schema->topgrammar, 1);
}
# 7885 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
void
xmlRelaxNGDumpTree__internal_alias(FILE * output, xmlRelaxNGPtr schema)
{
    if (output == 
# 7888 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 7888 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     )
        return;
    if (schema == 
# 7890 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 7890 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        fprintf(output, "RelaxNG empty or failed to compile\n");
        return;
    }
    if (schema->doc == 
# 7894 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 7894 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) {
        fprintf(output, "no document\n");
    } else {
        xmlDocDump__internal_alias(output, schema->doc);
    }
}







static int xmlRelaxNGValidateDefinition(xmlRelaxNGValidCtxtPtr ctxt,
                                        xmlRelaxNGDefinePtr define);
# 7919 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRelaxNGValidateCompiledCallback(xmlRegExecCtxtPtr exec __attribute__((unused)),
                                   const xmlChar * token,
                                   void *transdata, void *inputdata)
{
    xmlRelaxNGValidCtxtPtr ctxt = (xmlRelaxNGValidCtxtPtr) inputdata;
    xmlRelaxNGDefinePtr define = (xmlRelaxNGDefinePtr) transdata;
    int ret;





    if (ctxt == 
# 7932 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 7932 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) {
        fprintf(
# 7933 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               stderr
# 7933 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     , "callback on %s missing context\n", token);
        return;
    }
    if (define == 
# 7936 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 7936 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        if (token[0] == '#')
            return;
        fprintf(
# 7939 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               stderr
# 7939 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     , "callback on %s missing define\n", token);
        if ((ctxt != 
# 7940 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                    ((void *)0)
# 7940 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                        ) && (ctxt->errNo == XML_RELAXNG_OK))
            ctxt->errNo = XML_RELAXNG_ERR_INTERNAL;
        return;
    }
    if ((ctxt == 
# 7944 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 7944 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) || (define == 
# 7944 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 7944 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        )) {
        fprintf(
# 7945 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               stderr
# 7945 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     , "callback on %s missing info\n", token);
        if ((ctxt != 
# 7946 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                    ((void *)0)
# 7946 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                        ) && (ctxt->errNo == XML_RELAXNG_OK))
            ctxt->errNo = XML_RELAXNG_ERR_INTERNAL;
        return;
    } else if (define->type != XML_RELAXNG_ELEMENT) {
        fprintf(
# 7950 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               stderr
# 7950 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     , "callback on %s define is not element\n", token);
        if (ctxt->errNo == XML_RELAXNG_OK)
            ctxt->errNo = XML_RELAXNG_ERR_INTERNAL;
        return;
    }
    ret = xmlRelaxNGValidateDefinition(ctxt, define);
    if (ret != 0)
        ctxt->perr = ret;
}
# 7970 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGValidateCompiledContent(xmlRelaxNGValidCtxtPtr ctxt,
                                  xmlRegexpPtr regexp, xmlNodePtr content)
{
    xmlRegExecCtxtPtr exec;
    xmlNodePtr cur;
    int ret = 0;
    int oldperr;

    if ((ctxt == 
# 7979 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 7979 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) || (regexp == 
# 7979 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 7979 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        ))
        return (-1);
    oldperr = ctxt->perr;
    exec = xmlRegNewExecCtxt__internal_alias(regexp,
                             xmlRelaxNGValidateCompiledCallback, ctxt);
    ctxt->perr = 0;
    cur = content;
    while (cur != 
# 7986 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 7986 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        ctxt->state->seq = cur;
        switch (cur->type) {
            case XML_TEXT_NODE:
            case XML_CDATA_SECTION_NODE:
                if (xmlIsBlankNode__internal_alias(cur))
                    break;
                ret = xmlRegExecPushString__internal_alias(exec, (xmlChar *) "#text", ctxt);
                if (ret < 0) {
                    xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_TEXTWRONG, cur->parent->name, 
# 7995 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 7995 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   , 0);
                                                 ;
                }
                break;
            case XML_ELEMENT_NODE:
                if (cur->ns != 
# 8000 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 8000 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                    ret = xmlRegExecPushString2__internal_alias(exec, cur->name,
                                                cur->ns->href, ctxt);
                } else {
                    ret = xmlRegExecPushString__internal_alias(exec, cur->name, ctxt);
                }
                if (ret < 0) {
                    xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_ELEMWRONG, cur->name, 
# 8007 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 8007 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   , 0);;
                }
                break;
            default:
                break;
        }
        if (ret < 0)
            break;



        cur = cur->next;
    }
    ret = xmlRegExecPushString__internal_alias(exec, 
# 8020 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 8020 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        , 
# 8020 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                          ((void *)0)
# 8020 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                              );
    if (ret == 1) {
        ret = 0;
        ctxt->state->seq = 
# 8023 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 8023 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ;
    } else if (ret == 0) {



        xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_NOELEM, (xmlChar *) "", 
# 8028 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 8028 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       , 0);;
        ret = -1;
        if ((ctxt->flags & 1) == 0)
            xmlRelaxNGDumpValidError(ctxt);
    } else {
        ret = -1;
    }
    xmlRegFreeExecCtxt__internal_alias(exec);




    if ((ret == 0) && (ctxt->perr != 0)) {
        ret = ctxt->perr;
    }
    ctxt->perr = oldperr;
    return (ret);
}






static int xmlRelaxNGValidateAttributeList(xmlRelaxNGValidCtxtPtr ctxt,
                                           xmlRelaxNGDefinePtr defines);
static int xmlRelaxNGValidateElementEnd(xmlRelaxNGValidCtxtPtr ctxt,
                                        int dolog);
static void xmlRelaxNGLogBestError(xmlRelaxNGValidCtxtPtr ctxt);
# 8067 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGElemPush(xmlRelaxNGValidCtxtPtr ctxt, xmlRegExecCtxtPtr exec)
{
    if (ctxt->elemTab == 
# 8070 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 8070 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ) {
        ctxt->elemMax = 10;
        ctxt->elemTab = (xmlRegExecCtxtPtr *) xmlMalloc(ctxt->elemMax *
                                                        sizeof
                                                        (xmlRegExecCtxtPtr));
        if (ctxt->elemTab == 
# 8075 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 8075 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ) {
            xmlRngVErrMemory(ctxt, "validating\n");
            return (-1);
        }
    }
    if (ctxt->elemNr >= ctxt->elemMax) {
        ctxt->elemMax *= 2;
        ctxt->elemTab = (xmlRegExecCtxtPtr *) xmlRealloc(ctxt->elemTab,
                                                         ctxt->elemMax *
                                                         sizeof
                                                         (xmlRegExecCtxtPtr));
        if (ctxt->elemTab == 
# 8086 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 8086 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ) {
            xmlRngVErrMemory(ctxt, "validating\n");
            return (-1);
        }
    }
    ctxt->elemTab[ctxt->elemNr++] = exec;
    ctxt->elem = exec;
    return (0);
}
# 8104 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlRegExecCtxtPtr
xmlRelaxNGElemPop(xmlRelaxNGValidCtxtPtr ctxt)
{
    xmlRegExecCtxtPtr ret;

    if (ctxt->elemNr <= 0)
        return (
# 8110 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 8110 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    ctxt->elemNr--;
    ret = ctxt->elemTab[ctxt->elemNr];
    ctxt->elemTab[ctxt->elemNr] = 
# 8113 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 8113 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     ;
    if (ctxt->elemNr > 0)
        ctxt->elem = ctxt->elemTab[ctxt->elemNr - 1];
    else
        ctxt->elem = 
# 8117 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                    ((void *)0)
# 8117 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                        ;
    return (ret);
}
# 8131 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRelaxNGValidateProgressiveCallback(xmlRegExecCtxtPtr exec
                                      __attribute__((unused)),
                                      const xmlChar * token,
                                      void *transdata, void *inputdata)
{
    xmlRelaxNGValidCtxtPtr ctxt = (xmlRelaxNGValidCtxtPtr) inputdata;
    xmlRelaxNGDefinePtr define = (xmlRelaxNGDefinePtr) transdata;
    xmlRelaxNGValidStatePtr state, oldstate;
    xmlNodePtr node;
    int ret = 0, oldflags;





    if (ctxt == 
# 8147 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 8147 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) {
        fprintf(
# 8148 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               stderr
# 8148 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     , "callback on %s missing context\n", token);
        return;
    }
    node = ctxt->pnode;
    ctxt->pstate = 1;
    if (define == 
# 8153 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 8153 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        if (token[0] == '#')
            return;
        fprintf(
# 8156 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               stderr
# 8156 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     , "callback on %s missing define\n", token);
        if ((ctxt != 
# 8157 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                    ((void *)0)
# 8157 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                        ) && (ctxt->errNo == XML_RELAXNG_OK))
            ctxt->errNo = XML_RELAXNG_ERR_INTERNAL;
        ctxt->pstate = -1;
        return;
    }
    if ((ctxt == 
# 8162 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 8162 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) || (define == 
# 8162 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 8162 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        )) {
        fprintf(
# 8163 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               stderr
# 8163 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     , "callback on %s missing info\n", token);
        if ((ctxt != 
# 8164 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                    ((void *)0)
# 8164 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                        ) && (ctxt->errNo == XML_RELAXNG_OK))
            ctxt->errNo = XML_RELAXNG_ERR_INTERNAL;
        ctxt->pstate = -1;
        return;
    } else if (define->type != XML_RELAXNG_ELEMENT) {
        fprintf(
# 8169 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               stderr
# 8169 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     , "callback on %s define is not element\n", token);
        if (ctxt->errNo == XML_RELAXNG_OK)
            ctxt->errNo = XML_RELAXNG_ERR_INTERNAL;
        ctxt->pstate = -1;
        return;
    }
    if (node->type != XML_ELEMENT_NODE) {
        xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_NOTELEM, 
# 8176 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 8176 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       , 
# 8176 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 8176 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       , 0);;
        if ((ctxt->flags & 1) == 0)
            xmlRelaxNGDumpValidError(ctxt);
        ctxt->pstate = -1;
        return;
    }
    if (define->contModel == 
# 8182 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 8182 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ) {
# 8191 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
        ctxt->pstate = 0;
        ctxt->pdef = define;
        return;
    }
    exec = xmlRegNewExecCtxt__internal_alias(define->contModel,
                             xmlRelaxNGValidateProgressiveCallback, ctxt);
    if (exec == 
# 8197 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 8197 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) {
        ctxt->pstate = -1;
        return;
    }
    xmlRelaxNGElemPush(ctxt, exec);




    state = xmlRelaxNGNewValidState(ctxt, node);
    if (state == 
# 8207 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 8207 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) {
        ctxt->pstate = -1;
        return;
    }
    oldstate = ctxt->state;
    ctxt->state = state;
    if (define->attrs != 
# 8213 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 8213 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ) {
        ret = xmlRelaxNGValidateAttributeList(ctxt, define->attrs);
        if (ret != 0) {
            ctxt->pstate = -1;
            xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_ATTRVALID, node->name, 
# 8217 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
           ((void *)0)
# 8217 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
           , 0);;
        }
    }
    if (ctxt->state != 
# 8220 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 8220 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) {
        ctxt->state->seq = 
# 8221 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 8221 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ;
        ret = xmlRelaxNGValidateElementEnd(ctxt, 1);
        if (ret != 0) {
            ctxt->pstate = -1;
        }
        xmlRelaxNGFreeValidState(ctxt, ctxt->state);
    } else if (ctxt->states != 
# 8227 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 8227 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
        int tmp = -1, i;

        oldflags = ctxt->flags;

        for (i = 0; i < ctxt->states->nbState; i++) {
            state = ctxt->states->tabState[i];
            ctxt->state = state;
            ctxt->state->seq = 
# 8235 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 8235 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ;

            if (xmlRelaxNGValidateElementEnd(ctxt, 0) == 0) {
                tmp = 0;
                break;
            }
        }
        if (tmp != 0) {



            ctxt->flags |= 1;
            xmlRelaxNGLogBestError(ctxt);
        }
        for (i = 0; i < ctxt->states->nbState; i++) {
            xmlRelaxNGFreeValidState(ctxt, ctxt->states->tabState[i]);
        }
        xmlRelaxNGFreeStates(ctxt, ctxt->states);
        ctxt->states = 
# 8253 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 8253 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ;
        if ((ret == 0) && (tmp == -1))
            ctxt->pstate = -1;
        ctxt->flags = oldflags;
    }
    if (ctxt->pstate == -1) {
        if ((ctxt->flags & 1) == 0) {
            xmlRelaxNGDumpValidError(ctxt);
        }
    }
    ctxt->state = oldstate;
}
# 8277 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
int
xmlRelaxNGValidatePushElement__internal_alias(xmlRelaxNGValidCtxtPtr ctxt,
                              xmlDocPtr doc __attribute__((unused)),
                              xmlNodePtr elem)
{
    int ret = 1;

    if ((ctxt == 
# 8284 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 8284 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) || (elem == 
# 8284 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 8284 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ))
        return (-1);




    if (ctxt->elem == 0) {
        xmlRelaxNGPtr schema;
        xmlRelaxNGGrammarPtr grammar;
        xmlRegExecCtxtPtr exec;
        xmlRelaxNGDefinePtr define;

        schema = ctxt->schema;
        if (schema == 
# 8297 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 8297 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ) {
            xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_NOGRAMMAR, 
# 8298 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
           ((void *)0)
# 8298 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
           , 
# 8298 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
           ((void *)0)
# 8298 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
           , 0);;
            return (-1);
        }
        grammar = schema->topgrammar;
        if ((grammar == 
# 8302 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 8302 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) || (grammar->start == 
# 8302 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                   ((void *)0)
# 8302 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                       )) {
            xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_NOGRAMMAR, 
# 8303 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
           ((void *)0)
# 8303 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
           , 
# 8303 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
           ((void *)0)
# 8303 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
           , 0);;
            return (-1);
        }
        define = grammar->start;
        if (define->contModel == 
# 8307 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 8307 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    ) {
            ctxt->pdef = define;
            return (0);
        }
        exec = xmlRegNewExecCtxt__internal_alias(define->contModel,
                                 xmlRelaxNGValidateProgressiveCallback,
                                 ctxt);
        if (exec == 
# 8314 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 8314 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) {
            return (-1);
        }
        xmlRelaxNGElemPush(ctxt, exec);
    }
    ctxt->pnode = elem;
    ctxt->pstate = 0;
    if (elem->ns != 
# 8321 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 8321 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) {
        ret =
            xmlRegExecPushString2__internal_alias(ctxt->elem, elem->name, elem->ns->href,
                                  ctxt);
    } else {
        ret = xmlRegExecPushString__internal_alias(ctxt->elem, elem->name, ctxt);
    }
    if (ret < 0) {
        xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_ELEMWRONG, elem->name, 
# 8329 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 8329 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       , 0);;
    } else {
        if (ctxt->pstate == 0)
            ret = 0;
        else if (ctxt->pstate < 0)
            ret = -1;
        else
            ret = 1;
    }





    return (ret);
}
# 8356 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
int
xmlRelaxNGValidatePushCData__internal_alias(xmlRelaxNGValidCtxtPtr ctxt,
                            const xmlChar * data, int len __attribute__((unused)))
{
    int ret = 1;

    if ((ctxt == 
# 8362 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 8362 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) || (ctxt->elem == 
# 8362 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                        ((void *)0)
# 8362 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                            ) || (data == 
# 8362 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                          ((void *)0)
# 8362 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                              ))
        return (-1);





    while (*data != 0) {
        if (!(((*data) == 0x20) || ((0x9 <= (*data)) && ((*data) <= 0xa)) || ((*data) == 0xd)))
            break;
        data++;
    }
    if (*data == 0)
        return (1);

    ret = xmlRegExecPushString__internal_alias(ctxt->elem, (xmlChar *) "#text", ctxt);
    if (ret < 0) {
        xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_TEXTWRONG, (xmlChar *) " TODO ", 
# 8379 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 8379 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       , 0);;




        return (-1);
    }
    return (1);
}
# 8399 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
int
xmlRelaxNGValidatePopElement__internal_alias(xmlRelaxNGValidCtxtPtr ctxt,
                             xmlDocPtr doc __attribute__((unused)),
                             xmlNodePtr elem)
{
    int ret;
    xmlRegExecCtxtPtr exec;

    if ((ctxt == 
# 8407 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 8407 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) || (ctxt->elem == 
# 8407 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                        ((void *)0)
# 8407 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                            ) || (elem == 
# 8407 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                          ((void *)0)
# 8407 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                              ))
        return (-1);






    exec = xmlRelaxNGElemPop(ctxt);
    ret = xmlRegExecPushString__internal_alias(exec, 
# 8416 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 8416 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        , 
# 8416 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                          ((void *)0)
# 8416 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                              );
    if (ret == 0) {



        xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_NOELEM, (xmlChar *) "", 
# 8421 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 8421 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       , 0);;
        ret = -1;
    } else if (ret < 0) {
        ret = -1;
    } else {
        ret = 1;
    }
    xmlRegFreeExecCtxt__internal_alias(exec);





    return (ret);
}
# 8448 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
int
xmlRelaxNGValidateFullElement__internal_alias(xmlRelaxNGValidCtxtPtr ctxt,
                              xmlDocPtr doc __attribute__((unused)),
                              xmlNodePtr elem)
{
    int ret;
    xmlRelaxNGValidStatePtr state;

    if ((ctxt == 
# 8456 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 8456 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) || (ctxt->pdef == 
# 8456 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                        ((void *)0)
# 8456 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                            ) || (elem == 
# 8456 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                          ((void *)0)
# 8456 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                              ))
        return (-1);



    state = xmlRelaxNGNewValidState(ctxt, elem->parent);
    if (state == 
# 8462 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 8462 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) {
        return (-1);
    }
    state->seq = elem;
    ctxt->state = state;
    ctxt->errNo = XML_RELAXNG_OK;
    ret = xmlRelaxNGValidateDefinition(ctxt, ctxt->pdef);
    if ((ret != 0) || (ctxt->errNo != XML_RELAXNG_OK))
        ret = -1;
    else
        ret = 1;
    xmlRelaxNGFreeValidState(ctxt, ctxt->state);
    ctxt->state = 
# 8474 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 8474 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ;





    return (ret);
}






static int xmlRelaxNGValidateValue(xmlRelaxNGValidCtxtPtr ctxt,
                                   xmlRelaxNGDefinePtr define);
# 8500 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlNodePtr
xmlRelaxNGSkipIgnored(xmlRelaxNGValidCtxtPtr ctxt __attribute__((unused)),
                      xmlNodePtr node)
{



    while ((node != 
# 8507 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 8507 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) &&
           ((node->type == XML_COMMENT_NODE) ||
            (node->type == XML_PI_NODE) ||
     (node->type == XML_XINCLUDE_START) ||
     (node->type == XML_XINCLUDE_END) ||
            (((node->type == XML_TEXT_NODE) ||
              (node->type == XML_CDATA_SECTION_NODE)) &&
             ((ctxt->flags & 4) ||
              ((xmlRelaxNGIsBlank((node)->content))))))) {
        node = node->next;
    }
    return (node);
}
# 8531 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static xmlChar *
xmlRelaxNGNormalize(xmlRelaxNGValidCtxtPtr ctxt, const xmlChar * str)
{
    xmlChar *ret, *p;
    const xmlChar *tmp;
    int len;

    if (str == 
# 8538 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 8538 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )
        return (
# 8539 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 8539 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    tmp = str;
    while (*tmp != 0)
        tmp++;
    len = tmp - str;

    ret = (xmlChar *) xmlMallocAtomic((len + 1) * sizeof(xmlChar));
    if (ret == 
# 8546 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 8546 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) {
        xmlRngVErrMemory(ctxt, "validating\n");
        return (
# 8548 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 8548 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }
    p = ret;
    while ((((*str) == 0x20) || ((0x9 <= (*str)) && ((*str) <= 0xa)) || ((*str) == 0xd)))
        str++;
    while (*str != 0) {
        if ((((*str) == 0x20) || ((0x9 <= (*str)) && ((*str) <= 0xa)) || ((*str) == 0xd))) {
            while ((((*str) == 0x20) || ((0x9 <= (*str)) && ((*str) <= 0xa)) || ((*str) == 0xd)))
                str++;
            if (*str == 0)
                break;
            *p++ = ' ';
        } else
            *p++ = *str++;
    }
    *p = 0;
    return (ret);
}
# 8578 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGValidateDatatype(xmlRelaxNGValidCtxtPtr ctxt,
                           const xmlChar * value,
                           xmlRelaxNGDefinePtr define, xmlNodePtr node)
{
    int ret, tmp;
    xmlRelaxNGTypeLibraryPtr lib;
    void *result = 
# 8585 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 8585 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ;
    xmlRelaxNGDefinePtr cur;

    if ((define == 
# 8588 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 8588 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) || (define->data == 
# 8588 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                            ((void *)0)
# 8588 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                )) {
        return (-1);
    }
    lib = (xmlRelaxNGTypeLibraryPtr) define->data;
    if (lib->check != 
# 8592 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 8592 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ) {
        if ((define->attrs != 
# 8593 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 8593 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) &&
            (define->attrs->type == XML_RELAXNG_PARAM)) {
            ret =
                lib->check(lib->data, define->name, value, &result, node);
        } else {
            ret = lib->check(lib->data, define->name, value, 
# 8598 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                            ((void *)0)
# 8598 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                , node);
        }
    } else
        ret = -1;
    if (ret < 0) {
        xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_TYPE, define->name, 
# 8603 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 8603 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       , 0);;
        if ((result != 
# 8604 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 8604 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) && (lib != 
# 8604 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                       ((void *)0)
# 8604 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                           ) && (lib->freef != 
# 8604 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                               ((void *)0)
# 8604 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                   ))
            lib->freef(lib->data, result);
        return (-1);
    } else if (ret == 1) {
        ret = 0;
    } else if (ret == 2) {
        xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_DUPID, value, 
# 8610 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 8610 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       , 1);;
    } else {
        xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_TYPEVAL, define->name, value, 1);;
        ret = -1;
    }
    cur = define->attrs;
    while ((ret == 0) && (cur != 
# 8616 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 8616 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    ) && (cur->type == XML_RELAXNG_PARAM)) {
        if (lib->facet != 
# 8617 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 8617 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ) {
            tmp = lib->facet(lib->data, define->name, cur->name,
                             cur->value, value, result);
            if (tmp != 0)
                ret = -1;
        }
        cur = cur->next;
    }
    if ((ret == 0) && (define->content != 
# 8625 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                         ((void *)0)
# 8625 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                             )) {
        const xmlChar *oldvalue, *oldendvalue;

        oldvalue = ctxt->state->value;
        oldendvalue = ctxt->state->endvalue;
        ctxt->state->value = (xmlChar *) value;
        ctxt->state->endvalue = 
# 8631 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 8631 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ;
        ret = xmlRelaxNGValidateValue(ctxt, define->content);
        ctxt->state->value = (xmlChar *) oldvalue;
        ctxt->state->endvalue = (xmlChar *) oldendvalue;
    }
    if ((result != 
# 8636 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 8636 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) && (lib != 
# 8636 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                   ((void *)0)
# 8636 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                       ) && (lib->freef != 
# 8636 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                           ((void *)0)
# 8636 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                               ))
        lib->freef(lib->data, result);
    return (ret);
}
# 8649 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGNextValue(xmlRelaxNGValidCtxtPtr ctxt)
{
    xmlChar *cur;

    cur = ctxt->state->value;
    if ((cur == 
# 8655 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 8655 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) || (ctxt->state->endvalue == 
# 8655 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                  ((void *)0)
# 8655 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                      )) {
        ctxt->state->value = 
# 8656 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 8656 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ;
        ctxt->state->endvalue = 
# 8657 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 8657 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ;
        return (0);
    }
    while (*cur != 0)
        cur++;
    while ((cur != ctxt->state->endvalue) && (*cur == 0))
        cur++;
    if (cur == ctxt->state->endvalue)
        ctxt->state->value = 
# 8665 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 8665 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ;
    else
        ctxt->state->value = cur;
    return (0);
}
# 8680 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGValidateValueList(xmlRelaxNGValidCtxtPtr ctxt,
                            xmlRelaxNGDefinePtr defines)
{
    int ret = 0;

    while (defines != 
# 8686 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 8686 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ) {
        ret = xmlRelaxNGValidateValue(ctxt, defines);
        if (ret != 0)
            break;
        defines = defines->next;
    }
    return (ret);
}
# 8704 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGValidateValue(xmlRelaxNGValidCtxtPtr ctxt,
                        xmlRelaxNGDefinePtr define)
{
    int ret = 0, oldflags;
    xmlChar *value;

    value = ctxt->state->value;
    switch (define->type) {
        case XML_RELAXNG_EMPTY:{
                if ((value != 
# 8714 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 8714 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) && (value[0] != 0)) {
                    int idx = 0;

                    while ((((value[idx]) == 0x20) || ((0x9 <= (value[idx])) && ((value[idx]) <= 0xa)) || ((value[idx]) == 0xd)))
                        idx++;
                    if (value[idx] != 0)
                        ret = -1;
                }
                break;
            }
        case XML_RELAXNG_TEXT:
            break;
        case XML_RELAXNG_VALUE:{
                if (!xmlStrEqual__internal_alias(value, define->value)) {
                    if (define->name != 
# 8728 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                       ((void *)0)
# 8728 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                           ) {
                        xmlRelaxNGTypeLibraryPtr lib;

                        lib = (xmlRelaxNGTypeLibraryPtr) define->data;
                        if ((lib != 
# 8732 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                   ((void *)0)
# 8732 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                       ) && (lib->comp != 
# 8732 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                          ((void *)0)
# 8732 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                              )) {
                            ret = lib->comp(lib->data, define->name,
                                            define->value, define->node,
                                            (void *) define->attrs,
                                            value, ctxt->state->node);
                        } else
                            ret = -1;
                        if (ret < 0) {
                            xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_TYPECMP, define->name, 
# 8740 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 8740 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           , 0);
                                                    ;
                            return (-1);
                        } else if (ret == 1) {
                            ret = 0;
                        } else {
                            ret = -1;
                        }
                    } else {
                        xmlChar *nval, *nvalue;





                        nval = xmlRelaxNGNormalize(ctxt, define->value);
                        nvalue = xmlRelaxNGNormalize(ctxt, value);

                        if ((nval == 
# 8758 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 8758 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        ) || (nvalue == 
# 8758 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                        ((void *)0)
# 8758 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                            ) ||
                            (!xmlStrEqual__internal_alias(nval, nvalue)))
                            ret = -1;
                        if (nval != 
# 8761 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                   ((void *)0)
# 8761 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                       )
                            xmlFree(nval);
                        if (nvalue != 
# 8763 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 8763 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                         )
                            xmlFree(nvalue);
                    }
                }
                if (ret == 0)
                    xmlRelaxNGNextValue(ctxt);
                break;
            }
        case XML_RELAXNG_DATATYPE:{
                ret = xmlRelaxNGValidateDatatype(ctxt, value, define,
                                                 ctxt->state->seq);
                if (ret == 0)
                    xmlRelaxNGNextValue(ctxt);

                break;
            }
        case XML_RELAXNG_CHOICE:{
                xmlRelaxNGDefinePtr list = define->content;
                xmlChar *oldvalue;

                oldflags = ctxt->flags;
                ctxt->flags |= 1;

                oldvalue = ctxt->state->value;
                while (list != 
# 8787 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 8787 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                    ret = xmlRelaxNGValidateValue(ctxt, list);
                    if (ret == 0) {
                        break;
                    }
                    ctxt->state->value = oldvalue;
                    list = list->next;
                }
                ctxt->flags = oldflags;
                if (ret != 0) {
                    if ((ctxt->flags & 1) == 0)
                        xmlRelaxNGDumpValidError(ctxt);
                } else {
                    if (ctxt->errNr > 0)
                        xmlRelaxNGPopErrors(ctxt, 0);
                }
                break;
            }
        case XML_RELAXNG_LIST:{
                xmlRelaxNGDefinePtr list = define->content;
                xmlChar *oldvalue, *oldend, *val, *cur;





                oldvalue = ctxt->state->value;
                oldend = ctxt->state->endvalue;

                val = xmlStrdup__internal_alias(oldvalue);
                if (val == 
# 8817 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 8817 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) {
                    val = xmlStrdup__internal_alias((xmlChar *) "");
                }
                if (val == 
# 8820 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 8820 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) {
                    xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_NOSTATE, 
# 8821 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 8821 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   , 
# 8821 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 8821 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   , 0);;
                    return (-1);
                }
                cur = val;
                while (*cur != 0) {
                    if ((((*cur) == 0x20) || ((0x9 <= (*cur)) && ((*cur) <= 0xa)) || ((*cur) == 0xd))) {
                        *cur = 0;
                        cur++;



                        while ((((*cur) == 0x20) || ((0x9 <= (*cur)) && ((*cur) <= 0xa)) || ((*cur) == 0xd)))
                            *cur++ = 0;
                    } else
                        cur++;
                }






                ctxt->state->endvalue = cur;
                cur = val;
                while ((*cur == 0) && (cur != ctxt->state->endvalue))
                    cur++;

                ctxt->state->value = cur;

                while (list != 
# 8850 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 8850 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                    if (ctxt->state->value == ctxt->state->endvalue)
                        ctxt->state->value = 
# 8852 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                            ((void *)0)
# 8852 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                ;
                    ret = xmlRelaxNGValidateValue(ctxt, list);
                    if (ret != 0) {





                        break;
                    }



                    list = list->next;
                }

                if ((ret == 0) && (ctxt->state->value != 
# 8868 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                        ((void *)0)
# 8868 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                            ) &&
                    (ctxt->state->value != ctxt->state->endvalue)) {
                    xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_LISTEXTRA, ctxt->state->value, 
# 8870 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 8870 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   , 0);
                                                  ;
                    ret = -1;
                }
                xmlFree(val);
                ctxt->state->value = oldvalue;
                ctxt->state->endvalue = oldend;
                break;
            }
        case XML_RELAXNG_ONEORMORE:
            ret = xmlRelaxNGValidateValueList(ctxt, define->content);
            if (ret != 0) {
                break;
            }

        case XML_RELAXNG_ZEROORMORE:{
                xmlChar *cur, *temp;

                if ((ctxt->state->value == 
# 8888 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                          ((void *)0)
# 8888 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                              ) ||
                    (*ctxt->state->value == 0)) {
                    ret = 0;
                    break;
                }
                oldflags = ctxt->flags;
                ctxt->flags |= 1;
                cur = ctxt->state->value;
                temp = 
# 8896 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 8896 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ;
                while ((cur != 
# 8897 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 8897 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) && (cur != ctxt->state->endvalue) &&
                       (temp != cur)) {
                    temp = cur;
                    ret =
                        xmlRelaxNGValidateValueList(ctxt, define->content);
                    if (ret != 0) {
                        ctxt->state->value = temp;
                        ret = 0;
                        break;
                    }
                    cur = ctxt->state->value;
                }
                ctxt->flags = oldflags;
  if (ctxt->errNr > 0)
      xmlRelaxNGPopErrors(ctxt, 0);
                break;
            }
        case XML_RELAXNG_OPTIONAL:{
                xmlChar *temp;

                if ((ctxt->state->value == 
# 8917 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                          ((void *)0)
# 8917 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                              ) ||
                    (*ctxt->state->value == 0)) {
                    ret = 0;
                    break;
                }
                oldflags = ctxt->flags;
                ctxt->flags |= 1;
                temp = ctxt->state->value;
                ret = xmlRelaxNGValidateValue(ctxt, define->content);
                ctxt->flags = oldflags;
                if (ret != 0) {
                    ctxt->state->value = temp;
                    if (ctxt->errNr > 0)
                        xmlRelaxNGPopErrors(ctxt, 0);
                    ret = 0;
                    break;
                }
  if (ctxt->errNr > 0)
      xmlRelaxNGPopErrors(ctxt, 0);
                break;
            }
        case XML_RELAXNG_EXCEPT:{
                xmlRelaxNGDefinePtr list;

                list = define->content;
                while (list != 
# 8942 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 8942 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                    ret = xmlRelaxNGValidateValue(ctxt, list);
                    if (ret == 0) {
                        ret = -1;
                        break;
                    } else
                        ret = 0;
                    list = list->next;
                }
                break;
            }
        case XML_RELAXNG_DEF:
        case XML_RELAXNG_GROUP:{
                xmlRelaxNGDefinePtr list;

                list = define->content;
                while (list != 
# 8958 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 8958 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                    ret = xmlRelaxNGValidateValue(ctxt, list);
                    if (ret != 0) {
                        ret = -1;
                        break;
                    } else
                        ret = 0;
                    list = list->next;
                }
                break;
            }
        case XML_RELAXNG_REF:
        case XML_RELAXNG_PARENTREF:
     if (define->content == 
# 8971 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 8971 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) {
                xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_NODEFINE, 
# 8972 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 8972 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
               , 
# 8972 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 8972 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
               , 0);;
                ret = -1;
     } else {
                ret = xmlRelaxNGValidateValue(ctxt, define->content);
            }
            break;
        default:
            (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())), "Unimplemented block at %s:%d\n", "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c", 8979); ret = -1;
    }
    return (ret);
}
# 8993 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGValidateValueContent(xmlRelaxNGValidCtxtPtr ctxt,
                               xmlRelaxNGDefinePtr defines)
{
    int ret = 0;

    while (defines != 
# 8999 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 8999 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ) {
        ret = xmlRelaxNGValidateValue(ctxt, defines);
        if (ret != 0)
            break;
        defines = defines->next;
    }
    return (ret);
}
# 9018 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGAttributeMatch(xmlRelaxNGValidCtxtPtr ctxt,
                         xmlRelaxNGDefinePtr define, xmlAttrPtr prop)
{
    int ret;

    if (define->name != 
# 9024 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 9024 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) {
        if (!xmlStrEqual__internal_alias(define->name, prop->name))
            return (0);
    }
    if (define->ns != 
# 9028 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 9028 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ) {
        if (define->ns[0] == 0) {
            if (prop->ns != 
# 9030 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 9030 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               )
                return (0);
        } else {
            if ((prop->ns == 
# 9033 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 9033 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ) ||
                (!xmlStrEqual__internal_alias(define->ns, prop->ns->href)))
                return (0);
        }
    }
    if (define->nameClass == 
# 9038 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 9038 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                )
        return (1);
    define = define->nameClass;
    if (define->type == XML_RELAXNG_EXCEPT) {
        xmlRelaxNGDefinePtr list;

        list = define->content;
        while (list != 
# 9045 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 9045 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) {
            ret = xmlRelaxNGAttributeMatch(ctxt, list, prop);
            if (ret == 1)
                return (0);
            if (ret < 0)
                return (ret);
            list = list->next;
        }
    } else {
    (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())), "Unimplemented block at %s:%d\n", "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c", 9054);}
    return (1);
}
# 9067 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGValidateAttribute(xmlRelaxNGValidCtxtPtr ctxt,
                            xmlRelaxNGDefinePtr define)
{
    int ret = 0, i;
    xmlChar *value, *oldvalue;
    xmlAttrPtr prop = 
# 9073 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 9073 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         , tmp;
    xmlNodePtr oldseq;

    if (ctxt->state->nbAttrLeft <= 0)
        return (-1);
    if (define->name != 
# 9078 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 9078 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) {
        for (i = 0; i < ctxt->state->nbAttrs; i++) {
            tmp = ctxt->state->attrs[i];
            if ((tmp != 
# 9081 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 9081 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) && (xmlStrEqual__internal_alias(define->name, tmp->name))) {
                if ((((define->ns == 
# 9082 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 9082 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        ) || (define->ns[0] == 0)) &&
                     (tmp->ns == 
# 9083 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 9083 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    )) ||
                    ((tmp->ns != 
# 9084 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 9084 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    ) &&
                     (xmlStrEqual__internal_alias(define->ns, tmp->ns->href)))) {
                    prop = tmp;
                    break;
                }
            }
        }
        if (prop != 
# 9091 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 9091 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) {
            value = xmlNodeListGetString__internal_alias(prop->doc, prop->children, 1);
            oldvalue = ctxt->state->value;
            oldseq = ctxt->state->seq;
            ctxt->state->seq = (xmlNodePtr) prop;
            ctxt->state->value = value;
            ctxt->state->endvalue = 
# 9097 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                   ((void *)0)
# 9097 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                       ;
            ret = xmlRelaxNGValidateValueContent(ctxt, define->content);
            if (ctxt->state->value != 
# 9099 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 9099 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                         )
                value = ctxt->state->value;
            if (value != 
# 9101 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 9101 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            )
                xmlFree(value);
            ctxt->state->value = oldvalue;
            ctxt->state->seq = oldseq;
            if (ret == 0) {



                ctxt->state->attrs[i] = 
# 9109 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                       ((void *)0)
# 9109 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                           ;
                ctxt->state->nbAttrLeft--;
            }
        } else {
            ret = -1;
        }





    } else {
        for (i = 0; i < ctxt->state->nbAttrs; i++) {
            tmp = ctxt->state->attrs[i];
            if ((tmp != 
# 9123 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 9123 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) &&
                (xmlRelaxNGAttributeMatch(ctxt, define, tmp) == 1)) {
                prop = tmp;
                break;
            }
        }
        if (prop != 
# 9129 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 9129 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) {
            value = xmlNodeListGetString__internal_alias(prop->doc, prop->children, 1);
            oldvalue = ctxt->state->value;
            oldseq = ctxt->state->seq;
            ctxt->state->seq = (xmlNodePtr) prop;
            ctxt->state->value = value;
            ret = xmlRelaxNGValidateValueContent(ctxt, define->content);
            if (ctxt->state->value != 
# 9136 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 9136 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                         )
                value = ctxt->state->value;
            if (value != 
# 9138 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 9138 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            )
                xmlFree(value);
            ctxt->state->value = oldvalue;
            ctxt->state->seq = oldseq;
            if (ret == 0) {



                ctxt->state->attrs[i] = 
# 9146 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                       ((void *)0)
# 9146 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                           ;
                ctxt->state->nbAttrLeft--;
            }
        } else {
            ret = -1;
        }
# 9163 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
    }

    return (ret);
}
# 9177 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGValidateAttributeList(xmlRelaxNGValidCtxtPtr ctxt,
                                xmlRelaxNGDefinePtr defines)
{
    int ret = 0, res;
    int needmore = 0;
    xmlRelaxNGDefinePtr cur;

    cur = defines;
    while (cur != 
# 9186 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 9186 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        if (cur->type == XML_RELAXNG_ATTRIBUTE) {
            if (xmlRelaxNGValidateAttribute(ctxt, cur) != 0)
                ret = -1;
        } else
            needmore = 1;
        cur = cur->next;
    }
    if (!needmore)
        return (ret);
    cur = defines;
    while (cur != 
# 9197 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 9197 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        if (cur->type != XML_RELAXNG_ATTRIBUTE) {
            if ((ctxt->state != 
# 9199 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 9199 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ) || (ctxt->states != 
# 9199 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                         ((void *)0)
# 9199 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                             )) {
                res = xmlRelaxNGValidateDefinition(ctxt, cur);
                if (res < 0)
                    ret = -1;
            } else {
                xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_NOSTATE, 
# 9204 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 9204 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
               , 
# 9204 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 9204 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
               , 0);;
                return (-1);
            }
            if (res == -1)
                break;
        }
        cur = cur->next;
    }

    return (ret);
}
# 9225 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGNodeMatchesList(xmlNodePtr node, xmlRelaxNGDefinePtr * list)
{
    xmlRelaxNGDefinePtr cur;
    int i = 0, tmp;

    if ((node == 
# 9231 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 9231 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) || (list == 
# 9231 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 9231 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ))
        return (0);

    cur = list[i++];
    while (cur != 
# 9235 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 9235 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        if ((node->type == XML_ELEMENT_NODE) &&
            (cur->type == XML_RELAXNG_ELEMENT)) {
            tmp = xmlRelaxNGElementMatch(
# 9238 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                        ((void *)0)
# 9238 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                            , cur, node);
            if (tmp == 1)
                return (1);
        } else if (((node->type == XML_TEXT_NODE) ||
                    (node->type == XML_CDATA_SECTION_NODE)) &&
                   (cur->type == XML_RELAXNG_TEXT)) {
            return (1);
        }
        cur = list[i++];
    }
    return (0);
}
# 9260 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGValidateInterleave(xmlRelaxNGValidCtxtPtr ctxt,
                             xmlRelaxNGDefinePtr define)
{
    int ret = 0, i, nbgroups;
    int errNr = ctxt->errNr;
    int oldflags;

    xmlRelaxNGValidStatePtr oldstate;
    xmlRelaxNGPartitionPtr partitions;
    xmlRelaxNGInterleaveGroupPtr group = 
# 9270 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                        ((void *)0)
# 9270 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                            ;
    xmlNodePtr cur, start, last = 
# 9271 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 9271 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     , lastchg = 
# 9271 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                 ((void *)0)
# 9271 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                     , lastelem;
    xmlNodePtr *list = 
# 9272 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 9272 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          , *lasts = 
# 9272 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 9272 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                         ;

    if (define->data != 
# 9274 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 9274 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) {
        partitions = (xmlRelaxNGPartitionPtr) define->data;
        nbgroups = partitions->nbgroups;
    } else {
        xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_INTERNODATA, 
# 9278 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 9278 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       , 
# 9278 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 9278 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       , 0);;
        return (-1);
    }



    oldflags = ctxt->flags;
    if (define->dflags & (1 << 3)) {
        ctxt->flags |= 4;
        if (nbgroups == 2) {



            if (ctxt->state != 
# 9291 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 9291 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  )
                ctxt->state->seq = xmlRelaxNGSkipIgnored(ctxt,
                                                         ctxt->state->seq);
            if (partitions->groups[0]->rule->type == XML_RELAXNG_TEXT)
                ret = xmlRelaxNGValidateDefinition(ctxt,
                                                   partitions->groups[1]->
                                                   rule);
            else
                ret = xmlRelaxNGValidateDefinition(ctxt,
                                                   partitions->groups[0]->
                                                   rule);
            if (ret == 0) {
                if (ctxt->state != 
# 9303 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 9303 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      )
                    ctxt->state->seq = xmlRelaxNGSkipIgnored(ctxt,
                                                             ctxt->state->
                                                             seq);
            }
            ctxt->flags = oldflags;
            return (ret);
        }
    }





    list = (xmlNodePtr *) xmlMalloc(nbgroups * sizeof(xmlNodePtr));
    if (list == 
# 9318 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 9318 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   ) {
        xmlRngVErrMemory(ctxt, "validating\n");
        return (-1);
    }
    memset(list, 0, nbgroups * sizeof(xmlNodePtr));
    lasts = (xmlNodePtr *) xmlMalloc(nbgroups * sizeof(xmlNodePtr));
    if (lasts == 
# 9324 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 9324 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) {
        xmlRngVErrMemory(ctxt, "validating\n");
        return (-1);
    }
    memset(lasts, 0, nbgroups * sizeof(xmlNodePtr));





    cur = ctxt->state->seq;
    cur = xmlRelaxNGSkipIgnored(ctxt, cur);
    start = cur;
    while (cur != 
# 9337 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 9337 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        ctxt->state->seq = cur;
        if ((partitions->triage != 
# 9339 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 9339 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ) &&
            (partitions->flags & 1)) {
            void *tmp = 
# 9341 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 9341 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ;

            if ((cur->type == XML_TEXT_NODE) ||
                (cur->type == XML_CDATA_SECTION_NODE)) {
                tmp = xmlHashLookup2__internal_alias(partitions->triage, (xmlChar *) "#text",
                                     
# 9346 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 9346 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        );
            } else if (cur->type == XML_ELEMENT_NODE) {
                if (cur->ns != 
# 9348 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 9348 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                    tmp = xmlHashLookup2__internal_alias(partitions->triage, cur->name,
                                         cur->ns->href);
                    if (tmp == 
# 9351 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 9351 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  )
                        tmp = xmlHashLookup2__internal_alias(partitions->triage,
                                             (xmlChar *) "#any",
                                             cur->ns->href);
                } else
                    tmp =
                        xmlHashLookup2__internal_alias(partitions->triage, cur->name,
                                       
# 9358 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 9358 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                          );
                if (tmp == 
# 9359 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 9359 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              )
                    tmp =
                        xmlHashLookup2__internal_alias(partitions->triage, (xmlChar *) "#any",
                                       
# 9362 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 9362 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                          );
            }

            if (tmp == 
# 9365 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 9365 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) {
                i = nbgroups;
            } else {
                i = ((long) tmp) - 1;
                if (partitions->flags & 2) {
                    group = partitions->groups[i];
                    if (!xmlRelaxNGNodeMatchesList(cur, group->defs))
                        i = nbgroups;
                }
            }
        } else {
            for (i = 0; i < nbgroups; i++) {
                group = partitions->groups[i];
                if (group == 
# 9378 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 9378 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                )
                    continue;
                if (xmlRelaxNGNodeMatchesList(cur, group->defs))
                    break;
            }
        }



        if (i >= nbgroups) {
            break;
        }
        if (lasts[i] != 
# 9390 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 9390 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) {
            lasts[i]->next = cur;
            lasts[i] = cur;
        } else {
            list[i] = cur;
            lasts[i] = cur;
        }
        if (cur->next != 
# 9397 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 9397 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            )
            lastchg = cur->next;
        else
            lastchg = cur;
        cur = xmlRelaxNGSkipIgnored(ctxt, cur->next);
    }
    if (ret != 0) {
        xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_INTERSEQ, 
# 9404 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 9404 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       , 
# 9404 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 9404 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       , 0);;
        ret = -1;
        goto done;
    }
    lastelem = cur;
    oldstate = ctxt->state;
    for (i = 0; i < nbgroups; i++) {
        ctxt->state = xmlRelaxNGCopyValidState(ctxt, oldstate);
        group = partitions->groups[i];
        if (lasts[i] != 
# 9413 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 9413 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) {
            last = lasts[i]->next;
            lasts[i]->next = 
# 9415 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 9415 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ;
        }
        ctxt->state->seq = list[i];
        ret = xmlRelaxNGValidateDefinition(ctxt, group->rule);
        if (ret != 0)
            break;
        if (ctxt->state != 
# 9421 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 9421 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) {
            cur = ctxt->state->seq;
            cur = xmlRelaxNGSkipIgnored(ctxt, cur);
            xmlRelaxNGFreeValidState(ctxt, oldstate);
            oldstate = ctxt->state;
            ctxt->state = 
# 9426 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 9426 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ;
            if (cur != 
# 9427 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 9427 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) {
                xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_INTEREXTRA, cur->name, 
# 9428 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 9428 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
               , 0);;
                ret = -1;
                ctxt->state = oldstate;
                goto done;
            }
        } else if (ctxt->states != 
# 9433 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 9433 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ) {
            int j;
            int found = 0;
     int best = -1;
     int lowattr = -1;





            for (j = 0; j < ctxt->states->nbState; j++) {
                cur = ctxt->states->tabState[j]->seq;
                cur = xmlRelaxNGSkipIgnored(ctxt, cur);
                if (cur == 
# 9446 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 9446 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) {
      if (found == 0) {
          lowattr = ctxt->states->tabState[j]->nbAttrLeft;
   best = j;
      }
                    found = 1;
      if (ctxt->states->tabState[j]->nbAttrLeft <= lowattr) {

          lowattr = ctxt->states->tabState[j]->nbAttrLeft;
   best = j;
      }
                    if (lowattr == 0)
          break;
                } else if (found == 0) {
                    if (lowattr == -1) {
          lowattr = ctxt->states->tabState[j]->nbAttrLeft;
   best = j;
      } else
      if (ctxt->states->tabState[j]->nbAttrLeft <= lowattr) {

          lowattr = ctxt->states->tabState[j]->nbAttrLeft;
   best = j;
      }
  }
            }



            if (ctxt->states->nbState > 0) {
                xmlRelaxNGFreeValidState(ctxt, oldstate);
  if (best != -1) {
      oldstate = ctxt->states->tabState[best];
      ctxt->states->tabState[best] = 
# 9478 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 9478 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        ;
  } else {
      oldstate =
   ctxt->states->tabState[ctxt->states->nbState - 1];
                    ctxt->states->tabState[ctxt->states->nbState - 1] = 
# 9482 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                       ((void *)0)
# 9482 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                           ;
                    ctxt->states->nbState--;
  }
            }
            for (j = 0; j < ctxt->states->nbState ; j++) {
                xmlRelaxNGFreeValidState(ctxt, ctxt->states->tabState[j]);
            }
            xmlRelaxNGFreeStates(ctxt, ctxt->states);
            ctxt->states = 
# 9490 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 9490 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ;
            if (found == 0) {
                if (cur == 
# 9492 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 9492 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) {
      xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_INTEREXTRA, (const xmlChar *) "noname", 
# 9493 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
     ((void *)0)
# 9493 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
     , 0);
                                     ;
                } else {
                    xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_INTEREXTRA, cur->name, 
# 9496 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 9496 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   , 0);;
                }
                ret = -1;
                ctxt->state = oldstate;
                goto done;
            }
        } else {
            ret = -1;
            break;
        }
        if (lasts[i] != 
# 9506 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 9506 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) {
            lasts[i]->next = last;
        }
    }
    if (ctxt->state != 
# 9510 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 9510 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          )
        xmlRelaxNGFreeValidState(ctxt, ctxt->state);
    ctxt->state = oldstate;
    ctxt->state->seq = lastelem;
    if (ret != 0) {
        xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_INTERSEQ, 
# 9515 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 9515 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       , 
# 9515 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 9515 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       , 0);;
        ret = -1;
        goto done;
    }

  done:
    ctxt->flags = oldflags;



    cur = lastchg;
    while (cur != 
# 9526 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 9526 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        if ((cur == start) || (cur->prev == 
# 9527 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                           ((void *)0)
# 9527 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                               ))
            break;
        cur->prev->next = cur;
        cur = cur->prev;
    }
    if (ret == 0) {
        if (ctxt->errNr > errNr)
            xmlRelaxNGPopErrors(ctxt, errNr);
    }

    xmlFree(list);
    xmlFree(lasts);
    return (ret);
}
# 9551 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGValidateDefinitionList(xmlRelaxNGValidCtxtPtr ctxt,
                                 xmlRelaxNGDefinePtr defines)
{
    int ret = 0, res;


    if (defines == 
# 9558 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 9558 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) {
        xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_INTERNAL, (xmlChar *) "NULL definition list", 
# 9559 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 9559 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       , 0);
                                                   ;
        return (-1);
    }
    while (defines != 
# 9563 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 9563 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ) {
        if ((ctxt->state != 
# 9564 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 9564 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) || (ctxt->states != 
# 9564 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                     ((void *)0)
# 9564 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                         )) {
            res = xmlRelaxNGValidateDefinition(ctxt, defines);
            if (res < 0)
                ret = -1;
        } else {
            xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_NOSTATE, 
# 9569 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
           ((void *)0)
# 9569 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
           , 
# 9569 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
           ((void *)0)
# 9569 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
           , 0);;
            return (-1);
        }
        if (res == -1)
            break;
        defines = defines->next;
    }

    return (ret);
}
# 9590 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGElementMatch(xmlRelaxNGValidCtxtPtr ctxt,
                       xmlRelaxNGDefinePtr define, xmlNodePtr elem)
{
    int ret = 0, oldflags = 0;

    if (define->name != 
# 9596 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 9596 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) {
        if (!xmlStrEqual__internal_alias(elem->name, define->name)) {
            xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_ELEMNAME, define->name, elem->name, 0);;
            return (0);
        }
    }
    if ((define->ns != 
# 9602 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 9602 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) && (define->ns[0] != 0)) {
        if (elem->ns == 
# 9603 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 9603 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) {
            xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_ELEMNONS, elem->name, 
# 9604 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
           ((void *)0)
# 9604 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
           , 0);;
            return (0);
        } else if (!xmlStrEqual__internal_alias(elem->ns->href, define->ns)) {
            xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_ELEMWRONGNS, elem->name, define->ns, 0);
                                              ;
            return (0);
        }
    } else if ((elem->ns != 
# 9611 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 9611 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) && (define->ns != 
# 9611 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                   ((void *)0)
# 9611 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                       ) &&
               (define->name == 
# 9612 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 9612 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   )) {
        xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_ELEMEXTRANS, elem->name, 
# 9613 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 9613 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       , 0);;
        return (0);
    } else if ((elem->ns != 
# 9615 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 9615 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) && (define->name != 
# 9615 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                     ((void *)0)
# 9615 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                         )) {
        xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_ELEMEXTRANS, define->name, 
# 9616 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 9616 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       , 0);;
        return (0);
    }

    if (define->nameClass == 
# 9620 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 9620 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                )
        return (1);

    define = define->nameClass;
    if (define->type == XML_RELAXNG_EXCEPT) {
        xmlRelaxNGDefinePtr list;

        if (ctxt != 
# 9627 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 9627 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) {
            oldflags = ctxt->flags;
            ctxt->flags |= 1;
        }

        list = define->content;
        while (list != 
# 9633 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 9633 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) {
            ret = xmlRelaxNGElementMatch(ctxt, list, elem);
            if (ret == 1) {
                if (ctxt != 
# 9636 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 9636 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               )
                    ctxt->flags = oldflags;
                return (0);
            }
            if (ret < 0) {
                if (ctxt != 
# 9641 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 9641 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               )
                    ctxt->flags = oldflags;
                return (ret);
            }
            list = list->next;
        }
        ret = 1;
        if (ctxt != 
# 9648 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 9648 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) {
            ctxt->flags = oldflags;
        }
    } else if (define->type == XML_RELAXNG_CHOICE) {
        xmlRelaxNGDefinePtr list;

        if (ctxt != 
# 9654 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 9654 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) {
            oldflags = ctxt->flags;
            ctxt->flags |= 1;
        }

        list = define->nameClass;
        while (list != 
# 9660 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 9660 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) {
            ret = xmlRelaxNGElementMatch(ctxt, list, elem);
            if (ret == 1) {
                if (ctxt != 
# 9663 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 9663 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               )
                    ctxt->flags = oldflags;
                return (1);
            }
            if (ret < 0) {
                if (ctxt != 
# 9668 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 9668 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               )
                    ctxt->flags = oldflags;
                return (ret);
            }
            list = list->next;
        }
        if (ctxt != 
# 9674 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 9674 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) {
            if (ret != 0) {
                if ((ctxt->flags & 1) == 0)
                    xmlRelaxNGDumpValidError(ctxt);
            } else {
                if (ctxt->errNr > 0)
                    xmlRelaxNGPopErrors(ctxt, 0);
            }
        }
        ret = 0;
        if (ctxt != 
# 9684 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 9684 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) {
            ctxt->flags = oldflags;
        }
    } else {
        (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())), "Unimplemented block at %s:%d\n", "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c", 9688); ret = -1;
    }
    return (ret);
}
# 9704 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGBestState(xmlRelaxNGValidCtxtPtr ctxt)
{
    xmlRelaxNGValidStatePtr state;
    int i, tmp;
    int best = -1;
    int value = 1000000;

    if ((ctxt == 
# 9712 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 9712 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) || (ctxt->states == 
# 9712 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                          ((void *)0)
# 9712 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                              ) ||
        (ctxt->states->nbState <= 0))
        return (-1);

    for (i = 0; i < ctxt->states->nbState; i++) {
        state = ctxt->states->tabState[i];
        if (state == 
# 9718 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                    ((void *)0)
# 9718 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                        )
            continue;
        if (state->seq != 
# 9720 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 9720 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ) {
            if ((best == -1) || (value > 100000)) {
                value = 100000;
                best = i;
            }
        } else {
            tmp = state->nbAttrLeft;
            if ((best == -1) || (value > tmp)) {
                value = tmp;
                best = i;
            }
        }
    }
    return (best);
}
# 9743 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRelaxNGLogBestError(xmlRelaxNGValidCtxtPtr ctxt)
{
    int best;

    if ((ctxt == 
# 9748 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 9748 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) || (ctxt->states == 
# 9748 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                          ((void *)0)
# 9748 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                              ) ||
        (ctxt->states->nbState <= 0))
        return;

    best = xmlRelaxNGBestState(ctxt);
    if ((best >= 0) && (best < ctxt->states->nbState)) {
        ctxt->state = ctxt->states->tabState[best];

        xmlRelaxNGValidateElementEnd(ctxt, 1);
    }
}
# 9771 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGValidateElementEnd(xmlRelaxNGValidCtxtPtr ctxt, int dolog)
{
    int i;
    xmlRelaxNGValidStatePtr state;

    state = ctxt->state;
    if (state->seq != 
# 9778 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 9778 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ) {
        state->seq = xmlRelaxNGSkipIgnored(ctxt, state->seq);
        if (state->seq != 
# 9780 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 9780 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ) {
            if (dolog) {
                xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_EXTRACONTENT, state->node->name, state->seq->name, 0);
                                                               ;
            }
            return (-1);
        }
    }
    for (i = 0; i < state->nbAttrs; i++) {
        if (state->attrs[i] != 
# 9789 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 9789 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
            if (dolog) {
                xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_INVALIDATTR, state->attrs[i]->name, state->node->name, 0);
                                                                    ;
            }
            return (-1 - i);
        }
    }
    return (0);
}
# 9809 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGValidateState(xmlRelaxNGValidCtxtPtr ctxt,
                        xmlRelaxNGDefinePtr define)
{
    xmlNodePtr node;
    int ret = 0, i, tmp, oldflags, errNr;
    xmlRelaxNGValidStatePtr oldstate = 
# 9815 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 9815 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                          , state;

    if (define == 
# 9817 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 9817 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_NODEFINE, 
# 9818 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 9818 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       , 
# 9818 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 9818 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       , 0);;
        return (-1);
    }

    if (ctxt->state != 
# 9822 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 9822 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) {
        node = ctxt->state->seq;
    } else {
        node = 
# 9825 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 9825 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ;
    }
# 9839 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
    ctxt->depth++;
    switch (define->type) {
        case XML_RELAXNG_EMPTY:
            node = xmlRelaxNGSkipIgnored(ctxt, node);
            ret = 0;
            break;
        case XML_RELAXNG_NOT_ALLOWED:
            ret = -1;
            break;
        case XML_RELAXNG_TEXT:
            while ((node != 
# 9849 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 9849 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) &&
                   ((node->type == XML_TEXT_NODE) ||
                    (node->type == XML_COMMENT_NODE) ||
                    (node->type == XML_PI_NODE) ||
                    (node->type == XML_CDATA_SECTION_NODE)))
                node = node->next;
            ctxt->state->seq = node;
            break;
        case XML_RELAXNG_ELEMENT:
            errNr = ctxt->errNr;
            node = xmlRelaxNGSkipIgnored(ctxt, node);
            if (node == 
# 9860 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 9860 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) {
                xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_NOELEM, define->name, 
# 9861 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 9861 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
               , 0);;
                ret = -1;
                if ((ctxt->flags & 1) == 0)
                    xmlRelaxNGDumpValidError(ctxt);
                break;
            }
            if (node->type != XML_ELEMENT_NODE) {
                xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_NOTELEM, 
# 9868 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 9868 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
               , 
# 9868 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 9868 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
               , 0);;
                ret = -1;
                if ((ctxt->flags & 1) == 0)
                    xmlRelaxNGDumpValidError(ctxt);
                break;
            }




            if (node->psvi == define) {
                ctxt->state->seq = xmlRelaxNGSkipIgnored(ctxt, node->next);
                if (ctxt->errNr > errNr)
                    xmlRelaxNGPopErrors(ctxt, errNr);
                if (ctxt->errNr != 0) {
                    while ((ctxt->err != 
# 9883 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                        ((void *)0)
# 9883 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                            ) &&
                           (((ctxt->err->err == XML_RELAXNG_ERR_ELEMNAME)
                             && (xmlStrEqual__internal_alias(ctxt->err->arg2, node->name)))
                            ||
                            ((ctxt->err->err ==
                              XML_RELAXNG_ERR_ELEMEXTRANS)
                             && (xmlStrEqual__internal_alias(ctxt->err->arg1, node->name)))
                            || (ctxt->err->err == XML_RELAXNG_ERR_NOELEM)
                            || (ctxt->err->err ==
                                XML_RELAXNG_ERR_NOTELEM)))
                        xmlRelaxNGValidErrorPop(ctxt);
                }
                break;
            }

            ret = xmlRelaxNGElementMatch(ctxt, define, node);
            if (ret <= 0) {
                ret = -1;
                if ((ctxt->flags & 1) == 0)
                    xmlRelaxNGDumpValidError(ctxt);
                break;
            }
            ret = 0;
            if (ctxt->errNr != 0) {
                if (ctxt->errNr > errNr)
                    xmlRelaxNGPopErrors(ctxt, errNr);
                while ((ctxt->err != 
# 9909 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 9909 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        ) &&
                       (((ctxt->err->err == XML_RELAXNG_ERR_ELEMNAME) &&
                         (xmlStrEqual__internal_alias(ctxt->err->arg2, node->name))) ||
                        ((ctxt->err->err == XML_RELAXNG_ERR_ELEMEXTRANS) &&
                         (xmlStrEqual__internal_alias(ctxt->err->arg1, node->name))) ||
                        (ctxt->err->err == XML_RELAXNG_ERR_NOELEM) ||
                        (ctxt->err->err == XML_RELAXNG_ERR_NOTELEM)))
                    xmlRelaxNGValidErrorPop(ctxt);
            }
            errNr = ctxt->errNr;

            oldflags = ctxt->flags;
            if (ctxt->flags & 4) {
                ctxt->flags -= 4;
            }
            state = xmlRelaxNGNewValidState(ctxt, node);
            if (state == 
# 9925 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 9925 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ) {
                ret = -1;
                if ((ctxt->flags & 1) == 0)
                    xmlRelaxNGDumpValidError(ctxt);
                break;
            }

            oldstate = ctxt->state;
            ctxt->state = state;
            if (define->attrs != 
# 9934 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 9934 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    ) {
                tmp = xmlRelaxNGValidateAttributeList(ctxt, define->attrs);
                if (tmp != 0) {
                    ret = -1;
                    xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_ATTRVALID, node->name, 
# 9938 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 9938 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   , 0);;
                }
            }
            if (define->contModel != 
# 9941 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 9941 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        ) {
                xmlRelaxNGValidStatePtr nstate, tmpstate = ctxt->state;
                xmlRelaxNGStatesPtr tmpstates = ctxt->states;
                xmlNodePtr nseq;

                nstate = xmlRelaxNGNewValidState(ctxt, node);
                ctxt->state = nstate;
                ctxt->states = 
# 9948 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 9948 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ;

                tmp = xmlRelaxNGValidateCompiledContent(ctxt,
                                                        define->contModel,
                                                        ctxt->state->seq);
                nseq = ctxt->state->seq;
                ctxt->state = tmpstate;
                ctxt->states = tmpstates;
                xmlRelaxNGFreeValidState(ctxt, nstate);






                if (tmp != 0)
                    ret = -1;

                if (ctxt->states != 
# 9966 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                   ((void *)0)
# 9966 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                       ) {
                    tmp = -1;

                    for (i = 0; i < ctxt->states->nbState; i++) {
                        state = ctxt->states->tabState[i];
                        ctxt->state = state;
                        ctxt->state->seq = nseq;

                        if (xmlRelaxNGValidateElementEnd(ctxt, 0) == 0) {
                            tmp = 0;
                            break;
                        }
                    }
                    if (tmp != 0) {



                        ctxt->flags |= 1;
                        xmlRelaxNGLogBestError(ctxt);
                    }
                    for (i = 0; i < ctxt->states->nbState; i++) {
                        xmlRelaxNGFreeValidState(ctxt,
                                                 ctxt->states->
                                                 tabState[i]);
                    }
                    xmlRelaxNGFreeStates(ctxt, ctxt->states);
                    ctxt->flags = oldflags;
                    ctxt->states = 
# 9993 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 9993 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ;
                    if ((ret == 0) && (tmp == -1))
                        ret = -1;
                } else {
                    state = ctxt->state;
      if (ctxt->state != 
# 9998 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 9998 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            )
   ctxt->state->seq = nseq;
                    if (ret == 0)
                        ret = xmlRelaxNGValidateElementEnd(ctxt, 1);
                    xmlRelaxNGFreeValidState(ctxt, state);
                }
            } else {
                if (define->content != 
# 10005 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 10005 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                          ) {
                    tmp = xmlRelaxNGValidateDefinitionList(ctxt,
                                                           define->
                                                           content);
                    if (tmp != 0) {
                        ret = -1;
                        if (ctxt->state == 
# 10011 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                          ((void *)0)
# 10011 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                              ) {
                            ctxt->state = oldstate;
                            xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_CONTENTVALID, node->name, 
# 10013 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 10013 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           , 0);
                                                  ;
                            ctxt->state = 
# 10015 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                         ((void *)0)
# 10015 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                             ;
                        } else {
                            xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_CONTENTVALID, node->name, 
# 10017 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 10017 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           , 0);
                                                  ;
                        }

                    }
                }
                if (ctxt->states != 
# 10023 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                   ((void *)0)
# 10023 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                       ) {
                    tmp = -1;

                    for (i = 0; i < ctxt->states->nbState; i++) {
                        state = ctxt->states->tabState[i];
                        ctxt->state = state;

                        if (xmlRelaxNGValidateElementEnd(ctxt, 0) == 0) {
                            tmp = 0;
                            break;
                        }
                    }
                    if (tmp != 0) {



                        ctxt->flags |= 1;
                        xmlRelaxNGLogBestError(ctxt);
                    }
                    for (i = 0; i < ctxt->states->nbState; i++) {
                        xmlRelaxNGFreeValidState(ctxt,
                                                 ctxt->states->tabState[i]);
                        ctxt->states->tabState[i] = 
# 10045 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                   ((void *)0)
# 10045 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                       ;
                    }
                    xmlRelaxNGFreeStates(ctxt, ctxt->states);
                    ctxt->flags = oldflags;
                    ctxt->states = 
# 10049 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 10049 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ;
                    if ((ret == 0) && (tmp == -1))
                        ret = -1;
                } else {
                    state = ctxt->state;
                    if (ret == 0)
                        ret = xmlRelaxNGValidateElementEnd(ctxt, 1);
                    xmlRelaxNGFreeValidState(ctxt, state);
                }
            }
            if (ret == 0) {
                node->psvi = define;
            }
            ctxt->flags = oldflags;
            ctxt->state = oldstate;
            if (oldstate != 
# 10064 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 10064 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               )
                oldstate->seq = xmlRelaxNGSkipIgnored(ctxt, node->next);
            if (ret != 0) {
                if ((ctxt->flags & 1) == 0) {
                    xmlRelaxNGDumpValidError(ctxt);
                    ret = 0;




                }
            } else {
                if (ctxt->errNr > errNr)
                    xmlRelaxNGPopErrors(ctxt, errNr);
            }
# 10095 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
            break;
        case XML_RELAXNG_OPTIONAL:{
                errNr = ctxt->errNr;
                oldflags = ctxt->flags;
                ctxt->flags |= 1;
                oldstate = xmlRelaxNGCopyValidState(ctxt, ctxt->state);
                ret =
                    xmlRelaxNGValidateDefinitionList(ctxt,
                                                     define->content);
                if (ret != 0) {
                    if (ctxt->state != 
# 10105 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 10105 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                          )
                        xmlRelaxNGFreeValidState(ctxt, ctxt->state);
                    ctxt->state = oldstate;
                    ctxt->flags = oldflags;
                    ret = 0;
                    if (ctxt->errNr > errNr)
                        xmlRelaxNGPopErrors(ctxt, errNr);
                    break;
                }
                if (ctxt->states != 
# 10114 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                   ((void *)0)
# 10114 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                       ) {
                    xmlRelaxNGAddStates(ctxt, ctxt->states, oldstate);
                } else {
                    ctxt->states = xmlRelaxNGNewStates(ctxt, 1);
                    if (ctxt->states == 
# 10118 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                       ((void *)0)
# 10118 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                           ) {
                        xmlRelaxNGFreeValidState(ctxt, oldstate);
                        ctxt->flags = oldflags;
                        ret = -1;
                        if (ctxt->errNr > errNr)
                            xmlRelaxNGPopErrors(ctxt, errNr);
                        break;
                    }
                    xmlRelaxNGAddStates(ctxt, ctxt->states, oldstate);
                    xmlRelaxNGAddStates(ctxt, ctxt->states, ctxt->state);
                    ctxt->state = 
# 10128 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 10128 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     ;
                }
                ctxt->flags = oldflags;
                ret = 0;
                if (ctxt->errNr > errNr)
                    xmlRelaxNGPopErrors(ctxt, errNr);
                break;
            }
        case XML_RELAXNG_ONEORMORE:
            errNr = ctxt->errNr;
            ret = xmlRelaxNGValidateDefinitionList(ctxt, define->content);
            if (ret != 0) {
                break;
            }
            if (ctxt->errNr > errNr)
                xmlRelaxNGPopErrors(ctxt, errNr);

        case XML_RELAXNG_ZEROORMORE:{
                int progress;
                xmlRelaxNGStatesPtr states = 
# 10147 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                            ((void *)0)
# 10147 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                , res = 
# 10147 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                        ((void *)0)
# 10147 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                            ;
                int base, j;

                errNr = ctxt->errNr;
                res = xmlRelaxNGNewStates(ctxt, 1);
                if (res == 
# 10152 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 10152 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) {
                    ret = -1;
                    break;
                }



                if (ctxt->state != 
# 10159 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 10159 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ) {
                    xmlRelaxNGAddStates(ctxt, res,
                                        xmlRelaxNGCopyValidState(ctxt,
                                                                 ctxt->
                                                                 state));
                } else {
                    for (j = 0; j < ctxt->states->nbState; j++) {
                        xmlRelaxNGAddStates(ctxt, res,
                            xmlRelaxNGCopyValidState(ctxt,
                                            ctxt->states->tabState[j]));
                    }
                }
                oldflags = ctxt->flags;
                ctxt->flags |= 1;
                do {
                    progress = 0;
                    base = res->nbState;

                    if (ctxt->states != 
# 10177 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                       ((void *)0)
# 10177 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                           ) {
                        states = ctxt->states;
                        for (i = 0; i < states->nbState; i++) {
                            ctxt->state = states->tabState[i];
                            ctxt->states = 
# 10181 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                          ((void *)0)
# 10181 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                              ;
                            ret = xmlRelaxNGValidateDefinitionList(ctxt,
                                                                   define->
                                                                   content);
                            if (ret == 0) {
                                if (ctxt->state != 
# 10186 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                  ((void *)0)
# 10186 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                      ) {
                                    tmp = xmlRelaxNGAddStates(ctxt, res,
                                                              ctxt->state);
                                    ctxt->state = 
# 10189 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                 ((void *)0)
# 10189 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                     ;
                                    if (tmp == 1)
                                        progress = 1;
                                } else if (ctxt->states != 
# 10192 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                          ((void *)0)
# 10192 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                              ) {
                                    for (j = 0; j < ctxt->states->nbState;
                                         j++) {
                                        tmp =
                                            xmlRelaxNGAddStates(ctxt, res,
                                                   ctxt->states->tabState[j]);
                                        if (tmp == 1)
                                            progress = 1;
                                    }
                                    xmlRelaxNGFreeStates(ctxt,
                                                         ctxt->states);
                                    ctxt->states = 
# 10203 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                  ((void *)0)
# 10203 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                      ;
                                }
                            } else {
                                if (ctxt->state != 
# 10206 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                  ((void *)0)
# 10206 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                      ) {
                                    xmlRelaxNGFreeValidState(ctxt,
                                                             ctxt->state);
                                    ctxt->state = 
# 10209 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                 ((void *)0)
# 10209 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                     ;
                                }
                            }
                        }
                    } else {
                        ret = xmlRelaxNGValidateDefinitionList(ctxt,
                                                               define->
                                                               content);
                        if (ret != 0) {
                            xmlRelaxNGFreeValidState(ctxt, ctxt->state);
                            ctxt->state = 
# 10219 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                         ((void *)0)
# 10219 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                             ;
                        } else {
                            base = res->nbState;
                            if (ctxt->state != 
# 10222 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                              ((void *)0)
# 10222 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                  ) {
                                tmp = xmlRelaxNGAddStates(ctxt, res,
                                                          ctxt->state);
                                ctxt->state = 
# 10225 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                             ((void *)0)
# 10225 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                 ;
                                if (tmp == 1)
                                    progress = 1;
                            } else if (ctxt->states != 
# 10228 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                      ((void *)0)
# 10228 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                          ) {
                                for (j = 0; j < ctxt->states->nbState; j++) {
                                    tmp = xmlRelaxNGAddStates(ctxt, res,
                                               ctxt->states->tabState[j]);
                                    if (tmp == 1)
                                        progress = 1;
                                }
                                if (states == 
# 10235 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                             ((void *)0)
# 10235 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                 ) {
                                    states = ctxt->states;
                                } else {
                                    xmlRelaxNGFreeStates(ctxt,
                                                         ctxt->states);
                                }
                                ctxt->states = 
# 10241 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                              ((void *)0)
# 10241 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                  ;
                            }
                        }
                    }
                    if (progress) {




                        if (res->nbState - base == 1) {
                            ctxt->state = xmlRelaxNGCopyValidState(ctxt,
                                                                   res->
                                                                   tabState
                                                                   [base]);
                        } else {
                            if (states == 
# 10256 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                         ((void *)0)
# 10256 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                             ) {
                                xmlRelaxNGNewStates(ctxt,
                                                    res->nbState - base);
           states = ctxt->states;
    if (states == 
# 10260 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 10260 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
        progress = 0;
        break;
    }
                            }
                            states->nbState = 0;
                            for (i = base; i < res->nbState; i++)
                                xmlRelaxNGAddStates(ctxt, states,
                                                    xmlRelaxNGCopyValidState
                                                    (ctxt, res->tabState[i]));
                            ctxt->states = states;
                        }
                    }
                } while (progress == 1);
                if (states != 
# 10274 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 10274 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
                    xmlRelaxNGFreeStates(ctxt, states);
                }
                ctxt->states = res;
                ctxt->flags = oldflags;







                ret = 0;
                break;
            }
        case XML_RELAXNG_CHOICE:{
                xmlRelaxNGDefinePtr list = 
# 10290 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                          ((void *)0)
# 10290 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                              ;
                xmlRelaxNGStatesPtr states = 
# 10291 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                            ((void *)0)
# 10291 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                ;

                node = xmlRelaxNGSkipIgnored(ctxt, node);

                errNr = ctxt->errNr;
                if ((define->dflags & (1 << 4)) && (define->data != 
# 10296 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                     ((void *)0)
# 10296 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                         ) &&
      (node != 
# 10297 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 10297 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )) {





                    xmlHashTablePtr triage =
                        (xmlHashTablePtr) define->data;





                    if ((node->type == XML_TEXT_NODE) ||
                        (node->type == XML_CDATA_SECTION_NODE)) {
                        list =
                            xmlHashLookup2__internal_alias(triage, (xmlChar *) "#text", 
# 10313 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                    ((void *)0)
# 10313 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                        );
                    } else if (node->type == XML_ELEMENT_NODE) {
                        if (node->ns != 
# 10315 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                       ((void *)0)
# 10315 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                           ) {
                            list = xmlHashLookup2__internal_alias(triage, node->name,
                                                  node->ns->href);
                            if (list == 
# 10318 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                       ((void *)0)
# 10318 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                           )
                                list =
                                    xmlHashLookup2__internal_alias(triage, (xmlChar *) "#any",
                                                   node->ns->href);
                        } else
                            list =
                                xmlHashLookup2__internal_alias(triage, node->name, 
# 10324 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                                  ((void *)0)
# 10324 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                                      );
                        if (list == 
# 10325 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                   ((void *)0)
# 10325 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                       )
                            list =
                                xmlHashLookup2__internal_alias(triage, (xmlChar *) "#any",
                                               
# 10328 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                              ((void *)0)
# 10328 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                  );
                    }
                    if (list == 
# 10330 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 10330 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ) {
                        ret = -1;
   xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_ELEMWRONG, node->name, 
# 10332 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
  ((void *)0)
# 10332 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
  , 0);;
                        break;
                    }
                    ret = xmlRelaxNGValidateDefinition(ctxt, list);
                    if (ret == 0) {
                    }
                    break;
                }

                list = define->content;
                oldflags = ctxt->flags;
                ctxt->flags |= 1;

                while (list != 
# 10345 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 10345 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                    oldstate = xmlRelaxNGCopyValidState(ctxt, ctxt->state);
                    ret = xmlRelaxNGValidateDefinition(ctxt, list);
                    if (ret == 0) {
                        if (states == 
# 10349 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                     ((void *)0)
# 10349 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                         ) {
                            states = xmlRelaxNGNewStates(ctxt, 1);
                        }
                        if (ctxt->state != 
# 10352 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                          ((void *)0)
# 10352 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                              ) {
                            xmlRelaxNGAddStates(ctxt, states, ctxt->state);
                        } else if (ctxt->states != 
# 10354 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                  ((void *)0)
# 10354 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                      ) {
                            for (i = 0; i < ctxt->states->nbState; i++) {
                                xmlRelaxNGAddStates(ctxt, states,
                                                    ctxt->states->
                                                    tabState[i]);
                            }
                            xmlRelaxNGFreeStates(ctxt, ctxt->states);
                            ctxt->states = 
# 10361 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                          ((void *)0)
# 10361 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                              ;
                        }
                    } else {
                        xmlRelaxNGFreeValidState(ctxt, ctxt->state);
                    }
                    ctxt->state = oldstate;
                    list = list->next;
                }
                if (states != 
# 10369 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 10369 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ) {
                    xmlRelaxNGFreeValidState(ctxt, oldstate);
                    ctxt->states = states;
                    ctxt->state = 
# 10372 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 10372 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     ;
                    ret = 0;
                } else {
                    ctxt->states = 
# 10375 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 10375 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ;
                }
                ctxt->flags = oldflags;
                if (ret != 0) {
                    if ((ctxt->flags & 1) == 0) {
                        xmlRelaxNGDumpValidError(ctxt);
                    }
                } else {
                    if (ctxt->errNr > errNr)
                        xmlRelaxNGPopErrors(ctxt, errNr);
                }
                break;
            }
        case XML_RELAXNG_DEF:
        case XML_RELAXNG_GROUP:
            ret = xmlRelaxNGValidateDefinitionList(ctxt, define->content);
            break;
        case XML_RELAXNG_INTERLEAVE:
            ret = xmlRelaxNGValidateInterleave(ctxt, define);
            break;
        case XML_RELAXNG_ATTRIBUTE:
            ret = xmlRelaxNGValidateAttribute(ctxt, define);
            break;
        case XML_RELAXNG_START:
        case XML_RELAXNG_NOOP:
        case XML_RELAXNG_REF:
        case XML_RELAXNG_EXTERNALREF:
        case XML_RELAXNG_PARENTREF:
            ret = xmlRelaxNGValidateDefinition(ctxt, define->content);
            break;
        case XML_RELAXNG_DATATYPE:{
                xmlNodePtr child;
                xmlChar *content = 
# 10407 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 10407 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ;

                child = node;
                while (child != 
# 10410 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 10410 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ) {
                    if (child->type == XML_ELEMENT_NODE) {
                        xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_DATAELEM, node->parent->name, 
# 10412 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 10412 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       , 0);
                                                      ;
                        ret = -1;
                        break;
                    } else if ((child->type == XML_TEXT_NODE) ||
                               (child->type == XML_CDATA_SECTION_NODE)) {
                        content = xmlStrcat__internal_alias(content, child->content);
                    }

                    child = child->next;
                }
                if (ret == -1) {
                    if (content != 
# 10424 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 10424 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      )
                        xmlFree(content);
                    break;
                }
                if (content == 
# 10428 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 10428 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                    content = xmlStrdup__internal_alias((xmlChar *) "");
                    if (content == 
# 10430 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 10430 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ) {
                        xmlRngVErrMemory(ctxt, "validating\n");
                        ret = -1;
                        break;
                    }
                }
                ret = xmlRelaxNGValidateDatatype(ctxt, content, define,
                                                 ctxt->state->seq);
                if (ret == -1) {
                    xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_DATATYPE, define->name, 
# 10439 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 10439 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   , 0);;
                } else if (ret == 0) {
                    ctxt->state->seq = 
# 10441 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 10441 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                          ;
                }
                if (content != 
# 10443 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 10443 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  )
                    xmlFree(content);
                break;
            }
        case XML_RELAXNG_VALUE:{
                xmlChar *content = 
# 10448 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 10448 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ;
                xmlChar *oldvalue;
                xmlNodePtr child;

                child = node;
                while (child != 
# 10453 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 10453 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ) {
                    if (child->type == XML_ELEMENT_NODE) {
                        xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_VALELEM, node->parent->name, 
# 10455 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 10455 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       , 0);
                                                      ;
                        ret = -1;
                        break;
                    } else if ((child->type == XML_TEXT_NODE) ||
                               (child->type == XML_CDATA_SECTION_NODE)) {
                        content = xmlStrcat__internal_alias(content, child->content);
                    }

                    child = child->next;
                }
                if (ret == -1) {
                    if (content != 
# 10467 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 10467 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      )
                        xmlFree(content);
                    break;
                }
                if (content == 
# 10471 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 10471 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                    content = xmlStrdup__internal_alias((xmlChar *) "");
                    if (content == 
# 10473 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 10473 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ) {
                        xmlRngVErrMemory(ctxt, "validating\n");
                        ret = -1;
                        break;
                    }
                }
                oldvalue = ctxt->state->value;
                ctxt->state->value = content;
                ret = xmlRelaxNGValidateValue(ctxt, define);
                ctxt->state->value = oldvalue;
                if (ret == -1) {
                    xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_VALUE, define->name, 
# 10484 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 10484 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   , 0);;
                } else if (ret == 0) {
                    ctxt->state->seq = 
# 10486 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 10486 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                          ;
                }
                if (content != 
# 10488 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 10488 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  )
                    xmlFree(content);
                break;
            }
        case XML_RELAXNG_LIST:{
                xmlChar *content;
                xmlNodePtr child;
                xmlChar *oldvalue, *oldendvalue;
                int len;





                content = 
# 10502 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 10502 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ;
                child = node;
                while (child != 
# 10504 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 10504 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ) {
                    if (child->type == XML_ELEMENT_NODE) {
                        xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_LISTELEM, node->parent->name, 
# 10506 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 10506 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       , 0);
                                                      ;
                        ret = -1;
                        break;
                    } else if ((child->type == XML_TEXT_NODE) ||
                               (child->type == XML_CDATA_SECTION_NODE)) {
                        content = xmlStrcat__internal_alias(content, child->content);
                    }

                    child = child->next;
                }
                if (ret == -1) {
                    if (content != 
# 10518 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 10518 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      )
                        xmlFree(content);
                    break;
                }
                if (content == 
# 10522 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 10522 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                    content = xmlStrdup__internal_alias((xmlChar *) "");
                    if (content == 
# 10524 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 10524 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ) {
                        xmlRngVErrMemory(ctxt, "validating\n");
                        ret = -1;
                        break;
                    }
                }
                len = xmlStrlen__internal_alias(content);
                oldvalue = ctxt->state->value;
                oldendvalue = ctxt->state->endvalue;
                ctxt->state->value = content;
                ctxt->state->endvalue = content + len;
                ret = xmlRelaxNGValidateValue(ctxt, define);
                ctxt->state->value = oldvalue;
                ctxt->state->endvalue = oldendvalue;
                if (ret == -1) {
                    xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_LIST, 
# 10539 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 10539 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   , 
# 10539 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 10539 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   , 0);;
                } else if ((ret == 0) && (node != 
# 10540 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                 ((void *)0)
# 10540 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                     )) {
                    ctxt->state->seq = node->next;
                }
                if (content != 
# 10543 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 10543 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  )
                    xmlFree(content);
                break;
            }
        case XML_RELAXNG_EXCEPT:
        case XML_RELAXNG_PARAM:
            (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())), "Unimplemented block at %s:%d\n", "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c", 10549); ret = -1;
            break;
    }
    ctxt->depth--;
# 10565 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
    return (ret);
}
# 10577 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGValidateDefinition(xmlRelaxNGValidCtxtPtr ctxt,
                             xmlRelaxNGDefinePtr define)
{
    xmlRelaxNGStatesPtr states, res;
    int i, j, k, ret, oldflags;




    if ((ctxt->state != 
# 10587 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 10587 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) && (ctxt->states != 
# 10587 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                 ((void *)0)
# 10587 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                     )) {
        (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())), "Unimplemented block at %s:%d\n", "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c", 10588); xmlRelaxNGFreeValidState(ctxt, ctxt->state);
        ctxt->state = 
# 10589 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 10589 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ;
    }

    if ((ctxt->states == 
# 10592 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 10592 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ) || (ctxt->states->nbState == 1)) {
        if (ctxt->states != 
# 10593 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 10593 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) {
            ctxt->state = ctxt->states->tabState[0];
            xmlRelaxNGFreeStates(ctxt, ctxt->states);
            ctxt->states = 
# 10596 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 10596 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ;
        }
        ret = xmlRelaxNGValidateState(ctxt, define);
        if ((ctxt->state != 
# 10599 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 10599 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) && (ctxt->states != 
# 10599 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                     ((void *)0)
# 10599 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                         )) {
            (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())), "Unimplemented block at %s:%d\n", "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c", 10600); xmlRelaxNGFreeValidState(ctxt, ctxt->state);
            ctxt->state = 
# 10601 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 10601 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ;
        }
        if ((ctxt->states != 
# 10603 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 10603 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                ) && (ctxt->states->nbState == 1)) {
            ctxt->state = ctxt->states->tabState[0];
            xmlRelaxNGFreeStates(ctxt, ctxt->states);
            ctxt->states = 
# 10606 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 10606 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ;
        }
        return (ret);
    }

    states = ctxt->states;
    ctxt->states = 
# 10612 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 10612 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ;
    res = 
# 10613 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
         ((void *)0)
# 10613 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
             ;
    j = 0;
    oldflags = ctxt->flags;
    ctxt->flags |= 1;
    for (i = 0; i < states->nbState; i++) {
        ctxt->state = states->tabState[i];
        ctxt->states = 
# 10619 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 10619 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ;
        ret = xmlRelaxNGValidateState(ctxt, define);



        if ((ctxt->state != 
# 10624 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 10624 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) && (ctxt->states != 
# 10624 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                     ((void *)0)
# 10624 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                         )) {
            (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())), "Unimplemented block at %s:%d\n", "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c", 10625); xmlRelaxNGFreeValidState(ctxt, ctxt->state);
            ctxt->state = 
# 10626 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 10626 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ;
        }
        if (ret == 0) {
            if (ctxt->states == 
# 10629 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                               ((void *)0)
# 10629 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                   ) {
                if (res != 
# 10630 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 10630 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) {

                    xmlRelaxNGAddStates(ctxt, res, ctxt->state);
                    ctxt->state = 
# 10633 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 10633 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     ;
                } else {

                    states->tabState[j++] = ctxt->state;
                    ctxt->state = 
# 10637 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 10637 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     ;
                }
            } else {
                if (res == 
# 10640 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 10640 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) {

                    res = ctxt->states;
                    ctxt->states = 
# 10643 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 10643 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ;
                    for (k = 0; k < j; k++)
                        xmlRelaxNGAddStates(ctxt, res,
                                            states->tabState[k]);
                } else {

                    for (k = 0; k < ctxt->states->nbState; k++)
                        xmlRelaxNGAddStates(ctxt, res,
                                            ctxt->states->tabState[k]);
                    xmlRelaxNGFreeStates(ctxt, ctxt->states);
                    ctxt->states = 
# 10653 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                  ((void *)0)
# 10653 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                      ;
                }
            }
        } else {
            if (ctxt->state != 
# 10657 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 10657 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
                xmlRelaxNGFreeValidState(ctxt, ctxt->state);
                ctxt->state = 
# 10659 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                             ((void *)0)
# 10659 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                 ;
            } else if (ctxt->states != 
# 10660 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                      ((void *)0)
# 10660 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                          ) {
                for (k = 0; k < ctxt->states->nbState; k++)
                    xmlRelaxNGFreeValidState(ctxt,
                                             ctxt->states->tabState[k]);
                xmlRelaxNGFreeStates(ctxt, ctxt->states);
                ctxt->states = 
# 10665 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 10665 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ;
            }
        }
    }
    ctxt->flags = oldflags;
    if (res != 
# 10670 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 10670 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) {
        xmlRelaxNGFreeStates(ctxt, states);
        ctxt->states = res;
        ret = 0;
    } else if (j > 1) {
        states->nbState = j;
        ctxt->states = states;
        ret = 0;
    } else if (j == 1) {
        ctxt->state = states->tabState[0];
        xmlRelaxNGFreeStates(ctxt, states);
        ret = 0;
    } else {
        ret = -1;
        xmlRelaxNGFreeStates(ctxt, states);
        if (ctxt->states != 
# 10685 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 10685 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) {
            xmlRelaxNGFreeStates(ctxt, ctxt->states);
            ctxt->states = 
# 10687 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 10687 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ;
        }
    }
    if ((ctxt->state != 
# 10690 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 10690 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) && (ctxt->states != 
# 10690 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                 ((void *)0)
# 10690 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                     )) {
        (*(__xmlGenericError__internal_alias()))((*(__xmlGenericErrorContext__internal_alias())), "Unimplemented block at %s:%d\n", "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c", 10691); xmlRelaxNGFreeValidState(ctxt, ctxt->state);
        ctxt->state = 
# 10692 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 10692 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ;
    }
    return (ret);
}
# 10706 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static int
xmlRelaxNGValidateDocument(xmlRelaxNGValidCtxtPtr ctxt, xmlDocPtr doc)
{
    int ret;
    xmlRelaxNGPtr schema;
    xmlRelaxNGGrammarPtr grammar;
    xmlRelaxNGValidStatePtr state;
    xmlNodePtr node;

    if ((ctxt == 
# 10715 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 10715 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) || (ctxt->schema == 
# 10715 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                          ((void *)0)
# 10715 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                              ) || (doc == 
# 10715 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                                           ((void *)0)
# 10715 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                               ))
        return (-1);

    ctxt->errNo = XML_RELAXNG_OK;
    schema = ctxt->schema;
    grammar = schema->topgrammar;
    if (grammar == 
# 10721 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 10721 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ) {
        xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_NOGRAMMAR, 
# 10722 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 10722 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       , 
# 10722 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 10722 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
       , 0);;
        return (-1);
    }
    state = xmlRelaxNGNewValidState(ctxt, 
# 10725 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                         ((void *)0)
# 10725 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                             );
    ctxt->state = state;
    ret = xmlRelaxNGValidateDefinition(ctxt, grammar->start);
    if ((ctxt->state != 
# 10728 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 10728 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           ) && (state->seq != 
# 10728 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                               ((void *)0)
# 10728 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                                   )) {
        state = ctxt->state;
        node = state->seq;
        node = xmlRelaxNGSkipIgnored(ctxt, node);
        if (node != 
# 10732 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 10732 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ) {
            if (ret != -1) {
                xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_EXTRADATA, 
# 10734 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 10734 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
               , 
# 10734 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 10734 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
               , 0);;
                ret = -1;
            }
        }
    } else if (ctxt->states != 
# 10738 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                              ((void *)0)
# 10738 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                  ) {
        int i;
        int tmp = -1;

        for (i = 0; i < ctxt->states->nbState; i++) {
            state = ctxt->states->tabState[i];
            node = state->seq;
            node = xmlRelaxNGSkipIgnored(ctxt, node);
            if (node == 
# 10746 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 10746 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           )
                tmp = 0;
            xmlRelaxNGFreeValidState(ctxt, state);
        }
        if (tmp == -1) {
            if (ret != -1) {
                xmlRelaxNGAddValidError(ctxt, XML_RELAXNG_ERR_EXTRADATA, 
# 10752 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 10752 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
               , 
# 10752 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 10752 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
               , 0);;
                ret = -1;
            }
        }
    }
    if (ctxt->state != 
# 10757 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 10757 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) {
        xmlRelaxNGFreeValidState(ctxt, ctxt->state);
        ctxt->state = 
# 10759 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 10759 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ;
    }
    if (ret != 0)
        xmlRelaxNGDumpValidError(ctxt);
# 10772 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
    if (ctxt->idref == 1) {
        xmlValidCtxt vctxt;

        memset(&vctxt, 0, sizeof(xmlValidCtxt));
        vctxt.valid = 1;
        vctxt.error = ctxt->error;
        vctxt.warning = ctxt->warning;
        vctxt.userData = ctxt->userData;

        if (xmlValidateDocumentFinal__internal_alias(&vctxt, doc) != 1)
            ret = -1;
    }

    if ((ret == 0) && (ctxt->errNo != XML_RELAXNG_OK))
        ret = -1;

    return (ret);
}
# 10804 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
static void
xmlRelaxNGCleanPSVI(xmlNodePtr node) {
    xmlNodePtr cur;

    if ((node == 
# 10808 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 10808 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) ||
        ((node->type != XML_ELEMENT_NODE) &&
         (node->type != XML_DOCUMENT_NODE) &&
         (node->type != XML_HTML_DOCUMENT_NODE)))
 return;
    if (node->type == XML_ELEMENT_NODE)
        node->psvi = 
# 10814 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                    ((void *)0)
# 10814 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                        ;

    cur = node->children;
    while (cur != 
# 10817 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 10817 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
 if (cur->type == XML_ELEMENT_NODE) {
     cur->psvi = 
# 10819 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 10819 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ;
     if (cur->children != 
# 10820 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                         ((void *)0)
# 10820 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                             ) {
  cur = cur->children;
  continue;
     }
 }
 if (cur->next != 
# 10825 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 10825 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ) {
     cur = cur->next;
     continue;
 }
 do {
     cur = cur->parent;
     if (cur == 
# 10831 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 10831 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   )
  break;
     if (cur == node) {
  cur = 
# 10834 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
       ((void *)0)
# 10834 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
           ;
  break;
     }
     if (cur->next != 
# 10837 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 10837 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ) {
  cur = cur->next;
  break;
     }
 } while (cur != 
# 10841 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 10841 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    );
    }
    return;
}
# 10859 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
xmlRelaxNGValidCtxtPtr
xmlRelaxNGNewValidCtxt__internal_alias(xmlRelaxNGPtr schema)
{
    xmlRelaxNGValidCtxtPtr ret;

    ret = (xmlRelaxNGValidCtxtPtr) xmlMalloc(sizeof(xmlRelaxNGValidCtxt));
    if (ret == 
# 10865 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 10865 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ) {
        xmlRngVErrMemory(
# 10866 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 10866 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            , "building context\n");
        return (
# 10867 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 10867 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   );
    }
    memset(ret, 0, sizeof(xmlRelaxNGValidCtxt));
    ret->schema = schema;
    ret->error = (*(__xmlGenericError__internal_alias()));
    ret->userData = (*(__xmlGenericErrorContext__internal_alias()));
    ret->errNr = 0;
    ret->errMax = 0;
    ret->err = 
# 10875 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 10875 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  ;
    ret->errTab = 
# 10876 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 10876 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ;
    if (schema != 
# 10877 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 10877 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     )
 ret->idref = schema->idref;
    ret->states = 
# 10879 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 10879 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ;
    ret->freeState = 
# 10880 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                    ((void *)0)
# 10880 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                        ;
    ret->freeStates = 
# 10881 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                     ((void *)0)
# 10881 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                         ;
    ret->errNo = XML_RELAXNG_OK;
    return (ret);
}







void
xmlRelaxNGFreeValidCtxt__internal_alias(xmlRelaxNGValidCtxtPtr ctxt)
{
    int k;

    if (ctxt == 
# 10897 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 10897 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   )
        return;
    if (ctxt->states != 
# 10899 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 10899 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           )
        xmlRelaxNGFreeStates(
# 10900 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 10900 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                , ctxt->states);
    if (ctxt->freeState != 
# 10901 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                          ((void *)0)
# 10901 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                              ) {
        for (k = 0; k < ctxt->freeState->nbState; k++) {
            xmlRelaxNGFreeValidState(
# 10903 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                    ((void *)0)
# 10903 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                        , ctxt->freeState->tabState[k]);
        }
        xmlRelaxNGFreeStates(
# 10905 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                            ((void *)0)
# 10905 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                , ctxt->freeState);
    }
    if (ctxt->freeStates != 
# 10907 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                           ((void *)0)
# 10907 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                               ) {
        for (k = 0; k < ctxt->freeStatesNr; k++) {
            xmlRelaxNGFreeStates(
# 10909 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                ((void *)0)
# 10909 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                    , ctxt->freeStates[k]);
        }
        xmlFree(ctxt->freeStates);
    }
    if (ctxt->errTab != 
# 10913 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                       ((void *)0)
# 10913 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                           )
        xmlFree(ctxt->errTab);
    if (ctxt->elemTab != 
# 10915 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                        ((void *)0)
# 10915 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                            ) {
        xmlRegExecCtxtPtr exec;

        exec = xmlRelaxNGElemPop(ctxt);
        while (exec != 
# 10919 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                      ((void *)0)
# 10919 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                          ) {
            xmlRegFreeExecCtxt__internal_alias(exec);
            exec = xmlRelaxNGElemPop(ctxt);
        }
        xmlFree(ctxt->elemTab);
    }
    xmlFree(ctxt);
}
# 10937 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
void
xmlRelaxNGSetValidErrors__internal_alias(xmlRelaxNGValidCtxtPtr ctxt,
                         xmlRelaxNGValidityErrorFunc err,
                         xmlRelaxNGValidityWarningFunc warn, void *ctx)
{
    if (ctxt == 
# 10942 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 10942 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   )
        return;
    ctxt->error = err;
    ctxt->warning = warn;
    ctxt->userData = ctx;
    ctxt->serror = 
# 10947 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                  ((void *)0)
# 10947 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                      ;
}
# 10958 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
void
xmlRelaxNGSetValidStructuredErrors__internal_alias(xmlRelaxNGValidCtxtPtr ctxt,
                                   xmlStructuredErrorFunc serror, void *ctx)
{
    if (ctxt == 
# 10962 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 10962 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   )
        return;
    ctxt->serror = serror;
    ctxt->error = 
# 10965 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                 ((void *)0)
# 10965 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                     ;
    ctxt->warning = 
# 10966 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                   ((void *)0)
# 10966 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                       ;
    ctxt->userData = ctx;
}
# 10981 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
int
xmlRelaxNGGetValidErrors__internal_alias(xmlRelaxNGValidCtxtPtr ctxt,
                         xmlRelaxNGValidityErrorFunc * err,
                         xmlRelaxNGValidityWarningFunc * warn, void **ctx)
{
    if (ctxt == 
# 10986 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 10986 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   )
        return (-1);
    if (err != 
# 10988 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 10988 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )
        *err = ctxt->error;
    if (warn != 
# 10990 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
               ((void *)0)
# 10990 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                   )
        *warn = ctxt->warning;
    if (ctx != 
# 10992 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
              ((void *)0)
# 10992 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                  )
        *ctx = ctxt->userData;
    return (0);
}
# 11007 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
int
xmlRelaxNGValidateDoc__internal_alias(xmlRelaxNGValidCtxtPtr ctxt, xmlDocPtr doc)
{
    int ret;

    if ((ctxt == 
# 11012 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                ((void *)0)
# 11012 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                    ) || (doc == 
# 11012 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 3 4
                                 ((void *)0)
# 11012 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c"
                                     ))
        return (-1);

    ctxt->doc = doc;

    ret = xmlRelaxNGValidateDocument(ctxt, doc);



    xmlRelaxNGCleanPSVI((xmlNodePtr) doc);




    if (ret == -1)
        return (1);
    return (ret);
}


# 1 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 1
# 47 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
# 1 "./include/libxml/xmlerror.h" 1
# 48 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h" 2
# 8355 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGCleanupTypes) xmlRelaxNGCleanupTypes __attribute((alias("xmlRelaxNGCleanupTypes__internal_alias")));
# 8367 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGDump) xmlRelaxNGDump __attribute((alias("xmlRelaxNGDump__internal_alias")));
# 8379 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGDumpTree) xmlRelaxNGDumpTree __attribute((alias("xmlRelaxNGDumpTree__internal_alias")));
# 8391 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGFree) xmlRelaxNGFree __attribute((alias("xmlRelaxNGFree__internal_alias")));
# 8403 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGFreeParserCtxt) xmlRelaxNGFreeParserCtxt __attribute((alias("xmlRelaxNGFreeParserCtxt__internal_alias")));
# 8415 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGFreeValidCtxt) xmlRelaxNGFreeValidCtxt __attribute((alias("xmlRelaxNGFreeValidCtxt__internal_alias")));
# 8427 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGGetParserErrors) xmlRelaxNGGetParserErrors __attribute((alias("xmlRelaxNGGetParserErrors__internal_alias")));
# 8439 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGGetValidErrors) xmlRelaxNGGetValidErrors __attribute((alias("xmlRelaxNGGetValidErrors__internal_alias")));
# 8451 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGInitTypes) xmlRelaxNGInitTypes __attribute((alias("xmlRelaxNGInitTypes__internal_alias")));
# 8463 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGNewDocParserCtxt) xmlRelaxNGNewDocParserCtxt __attribute((alias("xmlRelaxNGNewDocParserCtxt__internal_alias")));
# 8475 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGNewMemParserCtxt) xmlRelaxNGNewMemParserCtxt __attribute((alias("xmlRelaxNGNewMemParserCtxt__internal_alias")));
# 8487 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGNewParserCtxt) xmlRelaxNGNewParserCtxt __attribute((alias("xmlRelaxNGNewParserCtxt__internal_alias")));
# 8499 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGNewValidCtxt) xmlRelaxNGNewValidCtxt __attribute((alias("xmlRelaxNGNewValidCtxt__internal_alias")));
# 8511 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGParse) xmlRelaxNGParse __attribute((alias("xmlRelaxNGParse__internal_alias")));
# 8523 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGSetParserErrors) xmlRelaxNGSetParserErrors __attribute((alias("xmlRelaxNGSetParserErrors__internal_alias")));
# 8535 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGSetParserStructuredErrors) xmlRelaxNGSetParserStructuredErrors __attribute((alias("xmlRelaxNGSetParserStructuredErrors__internal_alias")));
# 8547 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGSetValidErrors) xmlRelaxNGSetValidErrors __attribute((alias("xmlRelaxNGSetValidErrors__internal_alias")));
# 8559 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGSetValidStructuredErrors) xmlRelaxNGSetValidStructuredErrors __attribute((alias("xmlRelaxNGSetValidStructuredErrors__internal_alias")));
# 8571 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGValidateDoc) xmlRelaxNGValidateDoc __attribute((alias("xmlRelaxNGValidateDoc__internal_alias")));
# 8583 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGValidateFullElement) xmlRelaxNGValidateFullElement __attribute((alias("xmlRelaxNGValidateFullElement__internal_alias")));
# 8595 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGValidatePopElement) xmlRelaxNGValidatePopElement __attribute((alias("xmlRelaxNGValidatePopElement__internal_alias")));
# 8607 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGValidatePushCData) xmlRelaxNGValidatePushCData __attribute((alias("xmlRelaxNGValidatePushCData__internal_alias")));
# 8619 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxNGValidatePushElement) xmlRelaxNGValidatePushElement __attribute((alias("xmlRelaxNGValidatePushElement__internal_alias")));
# 8631 "/doner/libxml2/libxml2-4ea74a44/libxml2/elfgcchack.h"
extern __typeof (xmlRelaxParserSetFlag) xmlRelaxParserSetFlag __attribute((alias("xmlRelaxParserSetFlag__internal_alias")));
# 11033 "/doner/libxml2/libxml2-4ea74a44/libxml2/relaxng.c" 2
